<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Lua, Today</title><link>https://github.com/trending/lua?since=daily</link><description>The top repositories on GitHub for lua, measured daily</description><pubDate>Wed, 29 Jan 2020 01:06:34 GMT</pubDate><lastBuildDate>Wed, 29 Jan 2020 01:06:34 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>cmusatyalab/openface #1 in Lua, Today</title><link>https://github.com/cmusatyalab/openface</link><description>&lt;p&gt;&lt;i&gt;Face recognition with deep neural networks.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-openface-----" class="anchor" aria-hidden="true" href="#openface-----"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenFace â€¢ &lt;a href="http://travis-ci.org/cmusatyalab/openface" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7649857bc22a4061aea8a38706cc64b6bca51e45/68747470733a2f2f7472617669732d63692e6f72672f636d7573617479616c61622f6f70656e666163652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/cmusatyalab/openface.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/cmusatyalab/openface/releases"&gt;&lt;img src="https://camo.githubusercontent.com/009f288da0baa589849c22cdbc1185bfeaf924ab/687474703a2f2f696d672e736869656c64732e696f2f62616467652f72656c656173652d302e322e312d626c75652e7376673f7374796c653d666c6174" alt="Release" data-canonical-src="http://img.shields.io/badge/release-0.2.1-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/0257a158db7f15a3a2b76dfd75be916fda130867/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652d2d322d626c75652e7376673f7374796c653d666c6174" alt="License" data-canonical-src="http://img.shields.io/badge/license-Apache--2-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/cmusatyalab/openface" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Free and open source face recognition with
deep neural networks.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="http://cmusatyalab.github.io/openface/" rel="nofollow"&gt;http://cmusatyalab.github.io/openface/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://openface-api.readthedocs.org/en/latest/index.html" rel="nofollow"&gt;API Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Join the
&lt;a href="https://groups.google.com/forum/#!forum/cmu-openface" rel="nofollow"&gt;cmu-openface group&lt;/a&gt;
or the
&lt;a href="https://gitter.im/cmusatyalab/openface" rel="nofollow"&gt;gitter chat&lt;/a&gt;
for discussions and installation issues.&lt;/li&gt;
&lt;li&gt;Development discussions and bugs reports are on the
&lt;a href="https://github.com/cmusatyalab/openface/issues"&gt;issue tracker&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;This research was supported by the National Science Foundation (NSF)
under grant number CNS-1518865.  Additional support
was provided by the Intel Corporation, Google, Vodafone, NVIDIA, and the
Conklin Kistler family fund.  Any opinions, findings, conclusions or
recommendations expressed in this material are those of the authors
and should not be attributed to their employers or funding sources.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-whats-in-this-repository" class="anchor" aria-hidden="true" href="#whats-in-this-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's in this repository?&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/batch-represent"&gt;batch-represent&lt;/a&gt;: Generate representations from
a batch of images. &lt;a href="https://gist.github.com/bamos/f03037f5df7e05ad0cc8"&gt;Example directory structure.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/demos/web"&gt;demos/web&lt;/a&gt;: Real-time web demo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/demos/compare.py"&gt;demos/compare.py&lt;/a&gt;: Demo to compare two images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/demos/vis-outputs.lua"&gt;demos/vis-outputs.lua&lt;/a&gt;: Demo to
visualize the network's outputs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/demos/classifier.py"&gt;demos/classifier.py&lt;/a&gt;: Demo to train and use classifiers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/blob/master/demos/classifier_webcam.py"&gt;demos/classifier_webcam.py&lt;/a&gt;: Demo to use a trained classifier on a webcam stream.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/blob/master/evaluation"&gt;evaluation&lt;/a&gt;: LFW accuracy evaluation scripts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/openface"&gt;openface&lt;/a&gt;: Python library code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/models"&gt;models&lt;/a&gt;: Model directory for openface and 3rd party libraries.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/tests"&gt;tests&lt;/a&gt;: Tests for scripts and library code, including neural network training.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/training"&gt;training&lt;/a&gt;: Scripts to train new OpenFace neural network models.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cmusatyalab/openface/tree/master/util"&gt;util&lt;/a&gt;: Utility scripts.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-citations" class="anchor" aria-hidden="true" href="#citations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citations&lt;/h1&gt;
&lt;p&gt;Please cite OpenFace in your publications if it helps your research.
The following is a &lt;a href="http://www.bibtex.org/" rel="nofollow"&gt;BibTeX&lt;/a&gt; and plaintext reference for our
&lt;a href="http://reports-archive.adm.cs.cmu.edu/anon/anon/2016/CMU-CS-16-118.pdf" rel="nofollow"&gt;OpenFace tech report&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@techreport{amos2016openface,
  title={OpenFace: A general-purpose face recognition
    library with mobile applications},
  author={Amos, Brandon and Bartosz Ludwiczuk and Satyanarayanan, Mahadev},
  year={2016},
  institution={CMU-CS-16-118, CMU School of Computer Science},
}

B. Amos, B. Ludwiczuk, M. Satyanarayanan,
"Openface: A general-purpose face recognition library with mobile applications,"
CMU-CS-16-118, CMU School of Computer Science, Tech. Rep., 2016.
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-licensing" class="anchor" aria-hidden="true" href="#licensing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licensing&lt;/h1&gt;
&lt;p&gt;Unless otherwise stated, the source code and trained Torch and Python
model files are copyright Carnegie Mellon University and licensed
under the &lt;a href="./LICENSE"&gt;Apache 2.0 License&lt;/a&gt;.
Portions from the following third party sources have
been modified and are included in this repository.
These portions are noted in the source files and are
copyright their respective authors with
the licenses listed.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Project&lt;/th&gt;
&lt;th&gt;Modified&lt;/th&gt;
&lt;th&gt;License&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Atcold/torch-TripletEmbedding"&gt;Atcold/torch-TripletEmbedding&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;MIT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/facebook/fbnn"&gt;facebook/fbnn&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;BSD&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/davisking/dlib-models"&gt;dlib-models&lt;/a&gt; (68 face landmark detector)&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;CC0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>cmusatyalab</author><guid isPermaLink="false">https://github.com/cmusatyalab/openface</guid><pubDate>Wed, 29 Jan 2020 00:01:00 GMT</pubDate></item><item><title>Openarl/PathOfBuilding #2 in Lua, Today</title><link>https://github.com/Openarl/PathOfBuilding</link><description>&lt;p&gt;&lt;i&gt;Offline build planner for Path of Exile.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-path-of-building" class="anchor" aria-hidden="true" href="#path-of-building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Path of Building&lt;/h1&gt;
&lt;p&gt;Welcome to Path of Building, an offline build planner for Path of Exile!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Comprehensive offence + defence calculations:
&lt;ul&gt;
&lt;li&gt;Calculate your skill DPS, damage over time, life/mana/ES totals and much more!&lt;/li&gt;
&lt;li&gt;Can factor in auras, buffs, charges, curses, monster resistances and more, to estimate your effective DPS&lt;/li&gt;
&lt;li&gt;Also calculates life/mana reservations&lt;/li&gt;
&lt;li&gt;Shows a summary of character stats in the side bar, as well as a detailed calculations breakdown tab which can show you how the stats were derived&lt;/li&gt;
&lt;li&gt;Supports all skills and support gems, and most passives and item modifiers
&lt;ul&gt;
&lt;li&gt;Throughout the program, supported modifiers will show in blue and unsupported ones in red&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Full support for minions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Passive skill tree planner:
&lt;ul&gt;
&lt;li&gt;Support for jewels including most radius/conversion jewels&lt;/li&gt;
&lt;li&gt;Features alternate path tracing (mouse over a sequence of nodes while holding shift, then click to allocate them all)&lt;/li&gt;
&lt;li&gt;Fully intergrated with the offence/defence calculations; see exactly how each node will affect your character!&lt;/li&gt;
&lt;li&gt;Can import PathOfExile.com and PoEPlanner.com passive tree links; links shortened with PoEURL.com also work&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Skill planner:
&lt;ul&gt;
&lt;li&gt;Add any number of main or supporting skills to your build&lt;/li&gt;
&lt;li&gt;Supporting skills (auras, curses, buffs) can be toggled on and off&lt;/li&gt;
&lt;li&gt;Automatically applies Socketed Gem modifiers from the item a skill is socketed into&lt;/li&gt;
&lt;li&gt;Automatically applies support gems granted by items&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Item planner:
&lt;ul&gt;
&lt;li&gt;Add items from in game by copying and pasting them straight into the program!&lt;/li&gt;
&lt;li&gt;Automatically adds quality to non-corrupted items&lt;/li&gt;
&lt;li&gt;Fully intergrated with the offence/defence calculations; see exactly how much of an upgrade a given item is!&lt;/li&gt;
&lt;li&gt;Contains a searchable database of all uniques that are currently in game (and some that aren't yet!)
&lt;ul&gt;
&lt;li&gt;You can choose the modifier rolls when you add a unique to your build&lt;/li&gt;
&lt;li&gt;Includes all league-specific items and legacy variants&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Features an item crafting system:
&lt;ul&gt;
&lt;li&gt;You can select from any of the game's base item types&lt;/li&gt;
&lt;li&gt;You can select prefix/suffix modifiers from lists&lt;/li&gt;
&lt;li&gt;Custom modifiers can be added, with Master and Essence modifiers available&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Also contains a database of rare item templates:
&lt;ul&gt;
&lt;li&gt;Allows you to create rare items for your build to approximate the gear you will be using&lt;/li&gt;
&lt;li&gt;Choose which modifiers appear on each item, and the rolls for each modifier, to suit your needs&lt;/li&gt;
&lt;li&gt;Has templates that should cover the majority of builds (inb4 'why is there no coral amulet?')&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Other features:
&lt;ul&gt;
&lt;li&gt;You can import passive tree, items, and skills from existing characters&lt;/li&gt;
&lt;li&gt;Share builds with other users by generating a share code&lt;/li&gt;
&lt;li&gt;Automatic updating; most updates will only take a couple of seconds to apply&lt;/li&gt;
&lt;li&gt;Somewhat more open source than usual (look in %ProgramData%\Path of Building if you're interested)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-download" class="anchor" aria-hidden="true" href="#download"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download&lt;/h2&gt;
&lt;p&gt;Head over to the &lt;a href="https://github.com/Openarl/PathOfBuilding/releases"&gt;Releases&lt;/a&gt; page to download the installer.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-donate" class="anchor" aria-hidden="true" href="#donate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donate&lt;/h2&gt;
&lt;p&gt;If you'd like to help support the development of Path of Building, I have a &lt;a href="https://www.patreon.com/openarl" rel="nofollow"&gt;Patreon page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/19189971/18089779/f0fe23fa-6f04-11e6-8ed7-ff7d5b9f867a.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/19189971/18089779/f0fe23fa-6f04-11e6-8ed7-ff7d5b9f867a.png" alt="ss1" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/19189971/18089778/f0f923f0-6f04-11e6-89c2-b2c1410d3583.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/19189971/18089778/f0f923f0-6f04-11e6-89c2-b2c1410d3583.png" alt="ss2" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/19189971/18089780/f0ff234a-6f04-11e6-8c88-6193fe59a5c4.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/19189971/18089780/f0ff234a-6f04-11e6-8c88-6193fe59a5c4.png" alt="ss3" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-changelog" class="anchor" aria-hidden="true" href="#changelog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changelog&lt;/h2&gt;
&lt;p&gt;You can find the full version history &lt;a href="CHANGELOG.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Openarl</author><guid isPermaLink="false">https://github.com/Openarl/PathOfBuilding</guid><pubDate>Wed, 29 Jan 2020 00:02:00 GMT</pubDate></item><item><title>jcjohnson/neural-style #3 in Lua, Today</title><link>https://github.com/jcjohnson/neural-style</link><description>&lt;p&gt;&lt;i&gt;Torch implementation of neural style algorithm&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-neural-style" class="anchor" aria-hidden="true" href="#neural-style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;neural-style&lt;/h1&gt;
&lt;p&gt;This is a torch implementation of the paper &lt;a href="http://arxiv.org/abs/1508.06576" rel="nofollow"&gt;A Neural Algorithm of Artistic Style&lt;/a&gt;
by Leon A. Gatys, Alexander S. Ecker, and Matthias Bethge.&lt;/p&gt;
&lt;p&gt;The paper presents an algorithm for combining the content of one image with the style of another image using
convolutional neural networks. Here's an example that maps the artistic style of
&lt;a href="https://en.wikipedia.org/wiki/The_Starry_Night" rel="nofollow"&gt;The Starry Night&lt;/a&gt;
onto a night-time photograph of the Stanford campus:&lt;/p&gt;
&lt;div align="center"&gt;
 &lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/starry_night_google.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/starry_night_google.jpg" height="223px" style="max-width:100%;"&gt;&lt;/a&gt;
 &lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/hoovertowernight.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/hoovertowernight.jpg" height="223px" style="max-width:100%;"&gt;&lt;/a&gt;
 &lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/starry_stanford_bigger.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/starry_stanford_bigger.png" width="710px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Applying the style of different images to the same content image gives interesting results.
Here we reproduce Figure 2 from the paper, which renders a photograph of the Tubingen in Germany in a
variety of styles:&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/tubingen.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/tubingen.jpg" height="250px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_shipwreck.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_shipwreck.png" height="250px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_starry.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_starry.png" height="250px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_scream.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_scream.png" height="250px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_seated_nude.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_seated_nude.png" height="250px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_composition_vii.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_composition_vii.png" height="250px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Here are the results of applying the style of various pieces of artwork to this photograph of the
golden gate bridge:&lt;/p&gt;
&lt;div align="center" height="200px"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/frida_kahlo.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/frida_kahlo.jpg" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_kahlo.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_kahlo.png" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/escher_sphere.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/escher_sphere.jpg" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_escher.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_escher.png" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/woman-with-hat-matisse.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/woman-with-hat-matisse.jpg" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_matisse.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_matisse.png" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/the_scream.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/the_scream.jpg" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_scream.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_scream.png" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/starry_night_crop.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/starry_night_crop.png" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry.png" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/seated-nude.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/seated-nude.jpg" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_seated.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_seated.png" height="160px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-content--style-tradeoff" class="anchor" aria-hidden="true" href="#content--style-tradeoff"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Content / Style Tradeoff&lt;/h3&gt;
&lt;p&gt;The algorithm allows the user to trade-off the relative weight of the style and content reconstruction terms,
as shown in this example where we port the style of &lt;a href="http://www.wikiart.org/en/pablo-picasso/self-portrait-1907" rel="nofollow"&gt;Picasso's 1907 self-portrait&lt;/a&gt; onto Brad Pitt:&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/picasso_selfport1907.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/picasso_selfport1907.jpg" height="220px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/brad_pitt.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/inputs/brad_pitt.jpg" height="220px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/pitt_picasso_content_5_style_10.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/pitt_picasso_content_5_style_10.png" height="220px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/pitt_picasso_content_1_style_10.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/pitt_picasso_content_1_style_10.png" height="220px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/pitt_picasso_content_01_style_10.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/pitt_picasso_content_01_style_10.png" height="220px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/pitt_picasso_content_0025_style_10.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/pitt_picasso_content_0025_style_10.png" height="220px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-style-scale" class="anchor" aria-hidden="true" href="#style-scale"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Style Scale&lt;/h3&gt;
&lt;p&gt;By resizing the style image before extracting style features, we can control the types of artistic
features that are transfered from the style image; you can control this behavior with the &lt;code&gt;-style_scale&lt;/code&gt; flag.
Below we see three examples of rendering the Golden Gate Bridge in the style of The Starry Night.
From left to right, &lt;code&gt;-style_scale&lt;/code&gt; is 2.0, 1.0, and 0.5.&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scale2.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scale2.png" height="175px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scale1.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scale1.png" height="175px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scale05.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scale05.png" height="175px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-multiple-style-images" class="anchor" aria-hidden="true" href="#multiple-style-images"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiple Style Images&lt;/h3&gt;
&lt;p&gt;You can use more than one style image to blend multiple artistic styles.&lt;/p&gt;
&lt;p&gt;Clockwise from upper left: "The Starry Night" + "The Scream", "The Scream" + "Composition VII",
"Seated Nude" + "Composition VII", and "Seated Nude" + "The Starry Night"&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_starry_scream.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_starry_scream.png" height="250px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_scream_composition_vii.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_scream_composition_vii.png" height="250px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_starry_seated.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_starry_seated.png" height="250px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_seated_nude_composition_vii.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_seated_nude_composition_vii.png" height="250px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-style-interpolation" class="anchor" aria-hidden="true" href="#style-interpolation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Style Interpolation&lt;/h3&gt;
&lt;p&gt;When using multiple style images, you can control the degree to which they are blended:&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scream_3_7.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scream_3_7.png" height="175px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scream_5_5.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scream_5_5.png" height="175px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scream_7_3.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/golden_gate_starry_scream_7_3.png" height="175px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-transfer-style-but-not-color" class="anchor" aria-hidden="true" href="#transfer-style-but-not-color"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transfer style but not color&lt;/h3&gt;
&lt;p&gt;If you add the flag &lt;code&gt;-original_colors 1&lt;/code&gt; then the output image will retain the colors of the original image;
this is similar to &lt;a href="http://blog.deepart.io/2016/06/04/color-independent-style-transfer/" rel="nofollow"&gt;the recent blog post by deepart.io&lt;/a&gt;.&lt;/p&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_starry.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_starry.png" height="185px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_scream.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_scream.png" height="185px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_composition_vii.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/tubingen_composition_vii.png" height="185px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/original_color/tubingen_starry.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/original_color/tubingen_starry.png" height="185px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/original_color/tubingen_scream.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/original_color/tubingen_scream.png" height="185px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/original_color/tubingen_composition_vii.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/original_color/tubingen_composition_vii.png" height="185px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup:&lt;/h2&gt;
&lt;p&gt;Dependencies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/torch/torch7"&gt;torch7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szagoruyko/loadcaffe"&gt;loadcaffe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Optional dependencies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For CUDA backend:
&lt;ul&gt;
&lt;li&gt;CUDA 6.5+&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/torch/cunn"&gt;cunn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For cuDNN backend:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/soumith/cudnn.torch"&gt;cudnn.torch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For OpenCL backend:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hughperkins/cltorch"&gt;cltorch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hughperkins/clnn"&gt;clnn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After installing dependencies, you'll need to run the following script to download the VGG model:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sh models/download_models.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will download the original &lt;a href="https://gist.github.com/ksimonyan/3785162f95cd2d5fee77#file-readme-md"&gt;VGG-19 model&lt;/a&gt;.
Leon Gatys has graciously provided the modified version of the VGG-19 model that was used in their paper;
this will also be downloaded. By default the original VGG-19 model is used.&lt;/p&gt;
&lt;p&gt;If you have a smaller memory GPU then using NIN Imagenet model will be better and gives slightly worse yet comparable results. You can get the details on the model from &lt;a href="https://github.com/BVLC/caffe/wiki/Model-Zoo"&gt;BVLC Caffe ModelZoo&lt;/a&gt; and can download the files from &lt;a href="https://drive.google.com/folderview?id=0B0IedYUunOQINEFtUi1QNWVhVVU&amp;amp;usp=drive_web" rel="nofollow"&gt;NIN-Imagenet Download Link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can find detailed installation instructions for Ubuntu in the &lt;a href="INSTALL.md"&gt;installation guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Basic usage:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;th neural_style.lua -style_image &amp;lt;image.jpg&amp;gt; -content_image &amp;lt;image.jpg&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;OpenCL usage with NIN Model (This requires you download the NIN Imagenet model files as described above):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;th neural_style.lua -style_image examples/inputs/picasso_selfport1907.jpg -content_image examples/inputs/brad_pitt.jpg -output_image profile.png -model_file models/nin_imagenet_conv.caffemodel -proto_file models/train_val.prototxt -gpu 0 -backend clnn -num_iterations 1000 -seed 123 -content_layers relu0,relu3,relu7,relu12 -style_layers relu0,relu3,relu7,relu12 -content_weight 10 -style_weight 1000 -image_size 512 -optimizer adam
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/examples/outputs/pitt_picasso_nin_opencl.png"&gt;&lt;img src="/examples/outputs/pitt_picasso_nin_opencl.png" alt="OpenCL NIN Model Picasso Brad Pitt" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To use multiple style images, pass a comma-separated list like this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-style_image starry_night.jpg,the_scream.jpg&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that paths to images should not contain the &lt;code&gt;~&lt;/code&gt; character to represent your home directory; you should instead use a relative
path or a full absolute path.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Options&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-image_size&lt;/code&gt;: Maximum side length (in pixels) of of the generated image. Default is 512.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-style_blend_weights&lt;/code&gt;: The weight for blending the style of multiple style images, as a
comma-separated list, such as &lt;code&gt;-style_blend_weights 3,7&lt;/code&gt;. By default all style images
are equally weighted.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-gpu&lt;/code&gt;: Zero-indexed ID of the GPU to use; for CPU mode set &lt;code&gt;-gpu&lt;/code&gt; to -1.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Optimization options&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-content_weight&lt;/code&gt;: How much to weight the content reconstruction term. Default is 5e0.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-style_weight&lt;/code&gt;: How much to weight the style reconstruction term. Default is 1e2.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-tv_weight&lt;/code&gt;: Weight of total-variation (TV) regularization; this helps to smooth the image.
Default is 1e-3. Set to 0 to disable TV regularization.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-num_iterations&lt;/code&gt;: Default is 1000.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-init&lt;/code&gt;: Method for generating the generated image; one of &lt;code&gt;random&lt;/code&gt; or &lt;code&gt;image&lt;/code&gt;.
Default is &lt;code&gt;random&lt;/code&gt; which uses a noise initialization as in the paper; &lt;code&gt;image&lt;/code&gt;
initializes with the content image.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-optimizer&lt;/code&gt;: The optimization algorithm to use; either &lt;code&gt;lbfgs&lt;/code&gt; or &lt;code&gt;adam&lt;/code&gt;; default is &lt;code&gt;lbfgs&lt;/code&gt;.
L-BFGS tends to give better results, but uses more memory. Switching to ADAM will reduce memory usage;
when using ADAM you will probably need to play with other parameters to get good results, especially
the style weight, content weight, and learning rate; you may also want to normalize gradients when
using ADAM.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-learning_rate&lt;/code&gt;: Learning rate to use with the ADAM optimizer. Default is 1e1.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-normalize_gradients&lt;/code&gt;: If this flag is present, style and content gradients from each layer will be
L1 normalized. Idea from &lt;a href="https://github.com/andersbll/neural_artistic_style"&gt;andersbll/neural_artistic_style&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Output options&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-output_image&lt;/code&gt;: Name of the output image. Default is &lt;code&gt;out.png&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-print_iter&lt;/code&gt;: Print progress every &lt;code&gt;print_iter&lt;/code&gt; iterations. Set to 0 to disable printing.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-save_iter&lt;/code&gt;: Save the image every &lt;code&gt;save_iter&lt;/code&gt; iterations. Set to 0 to disable saving intermediate results.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Layer options&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-content_layers&lt;/code&gt;: Comma-separated list of layer names to use for content reconstruction.
Default is &lt;code&gt;relu4_2&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-style_layers&lt;/code&gt;: Comma-separated list of layer names to use for style reconstruction.
Default is &lt;code&gt;relu1_1,relu2_1,relu3_1,relu4_1,relu5_1&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Other options&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-style_scale&lt;/code&gt;: Scale at which to extract features from the style image. Default is 1.0.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-original_colors&lt;/code&gt;: If you set this to 1, then the output image will keep the colors of the content image.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-proto_file&lt;/code&gt;: Path to the &lt;code&gt;deploy.txt&lt;/code&gt; file for the VGG Caffe model.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-model_file&lt;/code&gt;: Path to the &lt;code&gt;.caffemodel&lt;/code&gt; file for the VGG Caffe model.
Default is the original VGG-19 model; you can also try the normalized VGG-19 model used in the paper.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-pooling&lt;/code&gt;: The type of pooling layers to use; one of &lt;code&gt;max&lt;/code&gt; or &lt;code&gt;avg&lt;/code&gt;. Default is &lt;code&gt;max&lt;/code&gt;.
The VGG-19 models uses max pooling layers, but the paper mentions that replacing these layers with average
pooling layers can improve the results. I haven't been able to get good results using average pooling, but
the option is here.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend&lt;/code&gt;: &lt;code&gt;nn&lt;/code&gt;, &lt;code&gt;cudnn&lt;/code&gt;, or &lt;code&gt;clnn&lt;/code&gt;. Default is &lt;code&gt;nn&lt;/code&gt;. &lt;code&gt;cudnn&lt;/code&gt; requires
&lt;a href="https://github.com/soumith/cudnn.torch"&gt;cudnn.torch&lt;/a&gt; and may reduce memory usage.
&lt;code&gt;clnn&lt;/code&gt; requires &lt;a href="https://github.com/hughperkins/cltorch"&gt;cltorch&lt;/a&gt; and &lt;a href="https://github.com/hughperkins/clnn"&gt;clnn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-cudnn_autotune&lt;/code&gt;: When using the cuDNN backend, pass this flag to use the built-in cuDNN autotuner to select
the best convolution algorithms for your architecture. This will make the first iteration a bit slower and can
take a bit more memory, but may significantly speed up the cuDNN backend.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-frequently-asked-questions" class="anchor" aria-hidden="true" href="#frequently-asked-questions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Frequently Asked Questions&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; Generated image has saturation artifacts:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/1310570/9694690/fa8e8782-5328-11e5-9c91-11f7b215ad19.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/1310570/9694690/fa8e8782-5328-11e5-9c91-11f7b215ad19.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; Update the &lt;code&gt;image&lt;/code&gt; packge to the latest version: &lt;code&gt;luarocks install image&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; Running without a GPU gives an error message complaining about &lt;code&gt;cutorch&lt;/code&gt; not found&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt;
Pass the flag &lt;code&gt;-gpu -1&lt;/code&gt; when running in CPU-only mode&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; The program runs out of memory and dies&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; Try reducing the image size: &lt;code&gt;-image_size 256&lt;/code&gt; (or lower). Note that different image sizes will likely
require non-default values for &lt;code&gt;-style_weight&lt;/code&gt; and &lt;code&gt;-content_weight&lt;/code&gt; for optimal results.
If you are running on a GPU, you can also try running with &lt;code&gt;-backend cudnn&lt;/code&gt; to reduce memory usage.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; Get the following error message:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;models/VGG_ILSVRC_19_layers_deploy.prototxt.cpu.lua:7: attempt to call method 'ceil' (a nil value)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; Update &lt;code&gt;nn&lt;/code&gt; package to the latest version: &lt;code&gt;luarocks install nn&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; Get an error message complaining about &lt;code&gt;paths.extname&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; Update &lt;code&gt;torch.paths&lt;/code&gt; package to the latest version: &lt;code&gt;luarocks install paths&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; NIN Imagenet model is not giving good results.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; Make sure the correct &lt;code&gt;-proto_file&lt;/code&gt; is selected. Also make sure the correct parameters for &lt;code&gt;-content_layers&lt;/code&gt; and &lt;code&gt;-style_layers&lt;/code&gt; are set. (See OpenCL usage example above.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; &lt;code&gt;-backend cudnn&lt;/code&gt; is slower than default NN backend&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; Add the flag &lt;code&gt;-cudnn_autotune&lt;/code&gt;; this will use the built-in cuDNN autotuner to select the best convolution algorithms.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-memory-usage" class="anchor" aria-hidden="true" href="#memory-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Memory Usage&lt;/h2&gt;
&lt;p&gt;By default, &lt;code&gt;neural-style&lt;/code&gt; uses the &lt;code&gt;nn&lt;/code&gt; backend for convolutions and L-BFGS for optimization.
These give good results, but can both use a lot of memory. You can reduce memory usage with the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Use cuDNN&lt;/strong&gt;: Add the flag &lt;code&gt;-backend cudnn&lt;/code&gt; to use the cuDNN backend. This will only work in GPU mode.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use ADAM&lt;/strong&gt;: Add the flag &lt;code&gt;-optimizer adam&lt;/code&gt; to use ADAM instead of L-BFGS. This should significantly
reduce memory usage, but may require tuning of other parameters for good results; in particular you should
play with the learning rate, content weight, style weight, and also consider using gradient normalization.
This should work in both CPU and GPU modes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reduce image size&lt;/strong&gt;: If the above tricks are not enough, you can reduce the size of the generated image;
pass the flag &lt;code&gt;-image_size 256&lt;/code&gt; to generate an image at half the default size.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With the default settings, &lt;code&gt;neural-style&lt;/code&gt; uses about 3.5GB of GPU memory on my system;
switching to ADAM and cuDNN reduces the GPU memory footprint to about 1GB.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-speed" class="anchor" aria-hidden="true" href="#speed"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Speed&lt;/h2&gt;
&lt;p&gt;Speed can vary a lot depending on the backend and the optimizer.
Here are some times for running 500 iterations with &lt;code&gt;-image_size=512&lt;/code&gt; on a Maxwell Titan X with different settings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-backend nn -optimizer lbfgs&lt;/code&gt;: 62 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend nn -optimizer adam&lt;/code&gt;: 49 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend cudnn -optimizer lbfgs&lt;/code&gt;: 79 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend cudnn -cudnn_autotune -optimizer lbfgs&lt;/code&gt;: 58 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend cudnn -cudnn_autotune -optimizer adam&lt;/code&gt;: 44 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend clnn -optimizer lbfgs&lt;/code&gt;: 169 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend clnn -optimizer adam&lt;/code&gt;: 106 seconds&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here are the same benchmarks on a Pascal Titan X with cuDNN 5.0 on CUDA 8.0 RC:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-backend nn -optimizer lbfgs&lt;/code&gt;: 43 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend nn -optimizer adam&lt;/code&gt;: 36 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend cudnn -optimizer lbfgs&lt;/code&gt;: 45 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend cudnn -cudnn_autotune -optimizer lbfgs&lt;/code&gt;: 30 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-backend cudnn -cudnn_autotune -optimizer adam&lt;/code&gt;: 22 seconds&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-multi-gpu-scaling" class="anchor" aria-hidden="true" href="#multi-gpu-scaling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multi-GPU scaling&lt;/h2&gt;
&lt;p&gt;You can use multiple GPUs to process images at higher resolutions; different layers of the network will be
computed on different GPUs. You can control which GPUs are used with the &lt;code&gt;-gpu&lt;/code&gt; flag, and you can control
how to split layers across GPUs using the &lt;code&gt;-multigpu_strategy&lt;/code&gt; flag.&lt;/p&gt;
&lt;p&gt;For example in a server with four GPUs, you can give the flag &lt;code&gt;-gpu 0,1,2,3&lt;/code&gt; to process on GPUs 0, 1, 2, and
3 in that order; by also giving the flag &lt;code&gt;-multigpu_strategy 3,6,12&lt;/code&gt; you indicate that the first two layers
should be computed on GPU 0, layers 3 to 5 should be computed on GPU 1, layers 6 to 11 should be computed on
GPU 2, and the remaining layers should be computed on GPU 3. You will need to tune the &lt;code&gt;-multigpu_strategy&lt;/code&gt;
for your setup in order to achieve maximal resolution.&lt;/p&gt;
&lt;p&gt;We can achieve very high quality results at high resolution by combining multi-GPU processing with multiscale
generation as described in the paper
&lt;a href="https://arxiv.org/abs/1611.07865" rel="nofollow"&gt;&lt;strong&gt;Controlling Perceptual Factors in Neural Style Transfer&lt;/strong&gt;&lt;/a&gt; by Leon A. Gatys,
Alexander S. Ecker, Matthias Bethge, Aaron Hertzmann and Eli Shechtman.&lt;/p&gt;
&lt;p&gt;Here is a 3620 x 1905 image generated on a server with four Pascal Titan X GPUs:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/starry_stanford_bigger.png"&gt;&lt;img src="https://raw.githubusercontent.com/jcjohnson/neural-style/master/examples/outputs/starry_stanford_bigger.png" height="400px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The script used to generate this image &lt;a href="examples/multigpu_scripts/starry_stanford.sh"&gt;can be found here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-implementation-details" class="anchor" aria-hidden="true" href="#implementation-details"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Implementation details&lt;/h2&gt;
&lt;p&gt;Images are initialized with white noise and optimized using L-BFGS.&lt;/p&gt;
&lt;p&gt;We perform style reconstructions using the &lt;code&gt;conv1_1&lt;/code&gt;, &lt;code&gt;conv2_1&lt;/code&gt;, &lt;code&gt;conv3_1&lt;/code&gt;, &lt;code&gt;conv4_1&lt;/code&gt;, and &lt;code&gt;conv5_1&lt;/code&gt; layers
and content reconstructions using the &lt;code&gt;conv4_2&lt;/code&gt; layer. As in the paper, the five style reconstruction losses have
equal weights.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citation&lt;/h2&gt;
&lt;p&gt;If you find this code useful for your research, please cite:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@misc{Johnson2015,
  author = {Johnson, Justin},
  title = {neural-style},
  year = {2015},
  publisher = {GitHub},
  journal = {GitHub repository},
  howpublished = {\url{https://github.com/jcjohnson/neural-style}},
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jcjohnson</author><guid isPermaLink="false">https://github.com/jcjohnson/neural-style</guid><pubDate>Wed, 29 Jan 2020 00:03:00 GMT</pubDate></item><item><title>vulnersCom/nmap-vulners #4 in Lua, Today</title><link>https://github.com/vulnersCom/nmap-vulners</link><description>&lt;p&gt;&lt;i&gt;NSE script based on Vulners.com API&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-nmap_vulners" class="anchor" aria-hidden="true" href="#nmap_vulners"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;nmap_vulners&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/vulnersCom/nmap-vulners/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/89b1d3c15516703d55b48682b9ae9e24a2f4630d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f76756c6e657273436f6d2f6e6d61702d76756c6e6572732e737667" alt="Current Release" title="Current Release" data-canonical-src="https://img.shields.io/github/release/vulnersCom/nmap-vulners.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/vulnersCom/nmap-vulners/releases"&gt;&lt;img src="https://camo.githubusercontent.com/8259cf894999639cf38ea47a12505602d957eaf9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f76756c6e657273436f6d2f6e6d61702d76756c6e6572732f746f74616c2e737667" alt="Downloads" title="Downloads" data-canonical-src="https://img.shields.io/github/downloads/vulnersCom/nmap-vulners/total.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://paypal.me/videns" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/43718ca06a547bf2e3df057872c14bb50a1f2ab6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f6e6174652d50617950616c2d677265656e2e737667" alt="PayPal" data-canonical-src="https://img.shields.io/badge/donate-PayPal-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;p&gt;NSE script using some well-known service to provide info on vulnerabilities.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="example.png"&gt;&lt;img src="example.png" alt="Result example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies:&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;nmap libraries:
    http
    json
    string
http-vulners-regex
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The only thing you should always keep in mind is that the script depends on having software versions at hand, so it only works with -sV flag.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NB:&lt;/strong&gt; Now it can actually be run without -sV flag if http-vulners-regex script is run as well.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;locate where your nmap scripts are located on your system
    for *nix system it might be  ~/.nmap/scripts/ or $NMAPDIR
    for Mac it might be /usr/local/Cellar/nmap/&amp;lt;version&amp;gt;/share/nmap/scripts/
    for Windows it might be C:\Program Files (x86)\Nmap\scripts
copy the provided script (vulners.nse) into that directory
run *nmap --script-updatedb* to update the nmap script DB 
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Use it as straightforward as you can:
    nmap -sV --script vulners [--script-args mincvss=&amp;lt;arg_val&amp;gt;] &amp;lt;target&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is KISS after all.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-http-vulners-regex" class="anchor" aria-hidden="true" href="#http-vulners-regex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;http-vulners-regex&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-description-1" class="anchor" aria-hidden="true" href="#description-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;p&gt;NSE script to scan HTTP responses and identify CPEs for the mentioned software. It can therefore boost the efficiency of the main vulners script.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="simple_regex_example.png"&gt;&lt;img src="simple_regex_example.png" alt="Result example" style="max-width:100%;"&gt;&lt;/a&gt;
Or with the paths:
&lt;a target="_blank" rel="noopener noreferrer" href="paths_regex_example.png"&gt;&lt;img src="paths_regex_example.png" alt="Result example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies-1" class="anchor" aria-hidden="true" href="#dependencies-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;nmap libraries:
    http
    json
    string
    stdnse
    shortport
    table
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-installation-1" class="anchor" aria-hidden="true" href="#installation-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;locate where nmap is located on your system
    for *nix system it might be  ~/.nmap/ or $NMAPDIR
    for Mac it might be /usr/local/Cellar/nmap/&amp;lt;version&amp;gt;/share/nmap/
    for Windows it might be C:\Program Files (x86)\Nmap\
copy the provided script (http-vulners-regex.nse) into &amp;lt;nmap_dir&amp;gt;/scripts/
copy the provided json with the regexes to &amp;lt;nmap_dir&amp;gt;/nselib/data/
copy the provided txt file with the default paths to &amp;lt;nmap_dir&amp;gt;/nselib/data/
    note that you can specify your own file via command line
run *nmap --script-updatedb* to update the nmap script DB 
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-usage-1" class="anchor" aria-hidden="true" href="#usage-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;As a usual NSE script:
    nmap --script http-vulners-regex.nse [--script-args paths={"/"}] &amp;lt;target&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>vulnersCom</author><guid isPermaLink="false">https://github.com/vulnersCom/nmap-vulners</guid><pubDate>Wed, 29 Jan 2020 00:04:00 GMT</pubDate></item><item><title>neovim/nvim-lsp #5 in Lua, Today</title><link>https://github.com/neovim/nvim-lsp</link><description>&lt;p&gt;&lt;i&gt;Nvim LSP client configurations&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-nvim-lsp" class="anchor" aria-hidden="true" href="#nvim-lsp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;nvim-lsp&lt;/h1&gt;
&lt;p&gt;Collection of common configurations for the &lt;a href="https://neovim.io/doc/user/lsp.html" rel="nofollow"&gt;Nvim LSP client&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is hoped that these configurations serve as a "source of truth", but they
are strictly &lt;em&gt;best effort&lt;/em&gt;. If something doesn't work, these configs are useful
as a starting point, which you can adjust to fit your environment.&lt;/p&gt;
&lt;p&gt;This is work-in-progress and &lt;strong&gt;requires &lt;a href="https://github.com/neovim/neovim/releases/tag/nightly"&gt;Nvim HEAD/nightly&lt;/a&gt;&lt;/strong&gt;.
Update Nvim and nvim-lsp before reporting an issue.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributions-are-welcome" class="anchor" aria-hidden="true" href="#contributions-are-welcome"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions are welcome!&lt;/h2&gt;
&lt;p&gt;There are many language servers in the world, and not enough time.
Help us create configs for &lt;em&gt;all the LSPs!&lt;/em&gt;&lt;/p&gt;
&lt;ol start="0"&gt;
&lt;li&gt;Read &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for instructions.
Ask questions in &lt;a href="https://gitter.im/neovim/neovim" rel="nofollow"&gt;Neovim Gitter&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Choose a language from &lt;a href="https://github.com/neoclide/coc.nvim/wiki/Language-servers"&gt;the coc.nvim wiki&lt;/a&gt; or
&lt;a href="https://github.com/emacs-lsp/lsp-mode#supported-languages"&gt;the emacs-lsp project&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Create a new file at &lt;code&gt;lua/nvim_lsp/SERVER_NAME.lua&lt;/code&gt;. See
&lt;a href="https://github.com/neovim/nvim-lsp/blob/master/lua/nvim_lsp/"&gt;existing configs&lt;/a&gt; for
examples (&lt;code&gt;lua/nvim_lsp/texlab.lua&lt;/code&gt; is an extensive example).&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Requires &lt;a href="https://github.com/neovim/neovim/releases/tag/nightly"&gt;Nvim HEAD/nightly&lt;/a&gt; (v0.5 prerelease).&lt;/li&gt;
&lt;li&gt;nvim-lsp is just a plugin. Install it like any other Vim plugin.
&lt;pre&gt;&lt;code&gt;:Plug 'neovim/nvim-lsp'
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Each config provides a &lt;code&gt;setup()&lt;/code&gt; function, to initialize the server with
reasonable defaults and some server-specific things like commands or different
diagnostics.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;require'nvim_lsp'.&amp;lt;config&amp;gt;.setup{name=â€¦, settings = {â€¦}, â€¦}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Find the &lt;a href="#configurations"&gt;config&lt;/a&gt; for your language, then paste the example
given there to your &lt;code&gt;init.vim&lt;/code&gt;. &lt;strong&gt;All examples are given in Lua,&lt;/strong&gt; see &lt;code&gt;:help :lua-heredoc&lt;/code&gt; to use Lua from your init.vim.&lt;/p&gt;
&lt;p&gt;Some configs may define additional server-specific functions, e.g. the &lt;code&gt;texlab&lt;/code&gt;
config provides &lt;code&gt;nvim_lsp.texlab.buf_build({bufnr})&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-example-using-the-defaults" class="anchor" aria-hidden="true" href="#example-using-the-defaults"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example: using the defaults&lt;/h3&gt;
&lt;p&gt;To use the defaults, just call &lt;code&gt;setup()&lt;/code&gt; with an empty &lt;code&gt;config&lt;/code&gt; parameter.
For the &lt;code&gt;gopls&lt;/code&gt; config, that would be:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;require'nvim_lsp'.gopls.setup{}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-example-override-some-defaults" class="anchor" aria-hidden="true" href="#example-override-some-defaults"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example: override some defaults&lt;/h3&gt;
&lt;p&gt;To set some config properties at &lt;code&gt;setup()&lt;/code&gt;, specify their keys. For example to
change how the "project root" is found, set the &lt;code&gt;root_dir&lt;/code&gt; key:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; nvim_lsp &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
nvim_lsp.&lt;span class="pl-smi"&gt;gopls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{
  root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; nvim_lsp.&lt;span class="pl-smi"&gt;util&lt;/span&gt;.&lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a href="#configurations"&gt;documentation&lt;/a&gt; for each config lists default values and
additional optional properties.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; nvim_lsp &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
nvim_lsp.&lt;span class="pl-smi"&gt;texlab&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{
  name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;texlab_fancy&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
  log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; vim.&lt;span class="pl-smi"&gt;lsp&lt;/span&gt;.&lt;span class="pl-smi"&gt;protocol&lt;/span&gt;.&lt;span class="pl-smi"&gt;MessageType&lt;/span&gt;.&lt;span class="pl-smi"&gt;Log&lt;/span&gt;;
  settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    latex &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      build &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        onSave &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
      }
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-example-custom-config" class="anchor" aria-hidden="true" href="#example-custom-config"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example: custom config&lt;/h3&gt;
&lt;p&gt;To configure a custom/private server, just require &lt;code&gt;nvim_lsp/skeleton&lt;/code&gt; and do
the same as we do if we were adding it to the repository itself.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Define the config: &lt;code&gt;configs.foo_lsp = { â€¦ }&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Call &lt;code&gt;setup()&lt;/code&gt;: &lt;code&gt;require'nvim_lsp'.foo_lsp.setup{}&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;local&lt;/span&gt; nvim_lsp &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;local&lt;/span&gt; configs &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp/skeleton&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Check if it's already defined for when I reload this file.&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; nvim_lsp.&lt;span class="pl-smi"&gt;foo_lsp&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
  configs.&lt;span class="pl-smi"&gt;foo_lsp&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    default_config &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/home/ashkan/works/3rd/lua-language-server/run.sh&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;};
      filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;lua&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;};
      root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;fname&lt;/span&gt;)
        &lt;span class="pl-k"&gt;return&lt;/span&gt; nvim_lsp.&lt;span class="pl-smi"&gt;util&lt;/span&gt;.&lt;span class="pl-c1"&gt;find_git_ancestor&lt;/span&gt;(fname) &lt;span class="pl-k"&gt;or&lt;/span&gt; vim.&lt;span class="pl-smi"&gt;loop&lt;/span&gt;.&lt;span class="pl-c1"&gt;os_homedir&lt;/span&gt;()
      &lt;span class="pl-k"&gt;end&lt;/span&gt;;
      log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; vim.&lt;span class="pl-smi"&gt;lsp&lt;/span&gt;.&lt;span class="pl-smi"&gt;protocol&lt;/span&gt;.&lt;span class="pl-smi"&gt;MessageType&lt;/span&gt;.&lt;span class="pl-smi"&gt;Warning&lt;/span&gt;;
      settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {};
    };
  }
&lt;span class="pl-k"&gt;end&lt;/span&gt;
nvim_lsp.&lt;span class="pl-smi"&gt;foo_lsp&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-installing-a-language-server" class="anchor" aria-hidden="true" href="#installing-a-language-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing a language server&lt;/h3&gt;
&lt;p&gt;Configs may provide an &lt;code&gt;install()&lt;/code&gt; function. Then you can use
&lt;code&gt;:LspInstall {name}&lt;/code&gt; to install the required language server.
For example, to install the Elm language server:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:LspInstall elmls
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use &lt;code&gt;:LspInstallInfo&lt;/code&gt; to see install info.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:LspInstallInfo
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-setup-function" class="anchor" aria-hidden="true" href="#setup-function"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;setup() function&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;setup()&lt;/code&gt; interface:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nvim_lsp.SERVER.setup{config}

  The `config` parameter has the same shape as that of
  |vim.lsp.start_client()|, with these additions and changes:

  {root_dir}
    Required for some servers, optional for others.
    Function of the form `function(filename, bufnr)`.
    Called on new candidate buffers being attached-to.
    Returns either a root_dir or nil.

    If a root_dir is returned, then this file will also be attached. You
    can optionally use {filetype} to help pre-filter by filetype.

    If a root_dir is returned which is unique from any previously returned
    root_dir, a new server will be spawned with that root_dir.

    If nil is returned, the buffer is skipped.

    See |nvim_lsp.util.search_ancestors()| and the functions which use it:
    - |nvim_lsp.util.root_pattern(patterns...)| finds an ancestor which
    - contains one of the files in `patterns...`. This is equivalent
      to coc.nvim's "rootPatterns"
    - Related utilities for common tools:
      - |nvim_lsp.util.find_git_root()|
      - |nvim_lsp.util.find_node_modules_root()|
      - |nvim_lsp.util.find_package_json_root()|

  {name}
    Defaults to the server's name.

  {filetypes}
    Set of filetypes to filter for consideration by {root_dir}.
    May be empty.
    Server may specify a default value.

  {log_level}
    controls the level of logs to show from build processes and other
    window/logMessage events. Defaults to
    vim.lsp.protocol.MessageType.Warning instead of
    vim.lsp.protocol.MessageType.Log.

  {settings}
    Map with case-sensitive keys corresponding to `workspace/configuration`
    event responses.
    We also notify the server *once* on `initialize` with
    `workspace/didChangeConfiguration`.
    If you change the settings later on, you must emit the notification
    with `client.workspace_did_change_configuration({settings})`
    Example: `settings = { keyName = { subKey = 1 } }`

  {on_attach}
    `function(client)` executed with the current buffer as the one the {client}
    is being attached-to. This is different from
    |vim.lsp.start_client()|'s on_attach parameter, which passes the {bufnr} as
    the second parameter instead. Useful for doing buffer-local setup.

  {on_new_config}
    `function(new_config)` will be executed after a new configuration has been
    created as a result of {root_dir} returning a unique value. You can use this
    as an opportunity to further modify the new_config or use it before it is
    sent to |vim.lsp.start_client()|.
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-configurations" class="anchor" aria-hidden="true" href="#configurations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configurations&lt;/h1&gt;
&lt;p&gt;The following LSP configs are included. Follow a link to find documentation for
that config.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#bashls"&gt;bashls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ccls"&gt;ccls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#clangd"&gt;clangd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cssls"&gt;cssls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dockerls"&gt;dockerls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#elmls"&gt;elmls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#flow"&gt;flow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fortls"&gt;fortls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ghcide"&gt;ghcide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gopls"&gt;gopls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hie"&gt;hie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#intelephense"&gt;intelephense&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#leanls"&gt;leanls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ocamlls"&gt;ocamlls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pyls"&gt;pyls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pyls_ms"&gt;pyls_ms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rls"&gt;rls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rust_analyzer"&gt;rust_analyzer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#solargraph"&gt;solargraph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sumneko_lua"&gt;sumneko_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#terraformls"&gt;terraformls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#texlab"&gt;texlab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tsserver"&gt;tsserver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vimls"&gt;vimls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#yamlls"&gt;yamlls&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-bashls" class="anchor" aria-hidden="true" href="#bashls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;bashls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/mads-hartmann/bash-language-server"&gt;https://github.com/mads-hartmann/bash-language-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Language server for bash, written using tree sitter in typescript.&lt;/p&gt;
&lt;p&gt;Can be installed in Nvim with &lt;code&gt;:LspInstall bashls&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;bashls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bash-language-server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;start&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;vim&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s starting directory&lt;/span&gt;
&lt;span class="pl-s"&gt;    settings = {}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-ccls" class="anchor" aria-hidden="true" href="#ccls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ccls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/MaskRay/ccls/wiki"&gt;https://github.com/MaskRay/ccls/wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ccls relies on a &lt;a href="https://clang.llvm.org/docs/JSONCompilationDatabase.html" rel="nofollow"&gt;JSON compilation database&lt;/a&gt; specified
as compile_commands.json or, for simpler projects, a compile_flags.txt.&lt;/p&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.cache.directory&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;".ccls-cache"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Absolute or relative (from the project root) path to the directory that the cached index will be stored in. Try to have this directory on an SSD. If empty, cached indexes will not be saved on disk.&lt;/p&gt;
&lt;p&gt;${workspaceFolder} will be replaced by the folder where .vscode/settings.json resides.&lt;/p&gt;
&lt;p&gt;Cache directories are project-wide, so this should be configured in the workspace settings so multiple indexes do not clash.&lt;/p&gt;
&lt;p&gt;Example value: "/work/ccls-cache/chrome/"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.cache.hierarchicalPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If false, store cache files as $directory/@a@b/c.cc.blob&lt;/p&gt;
&lt;p&gt;If true, $directory/a/b/c.cc.blob.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.callHierarchy.qualified&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If true, use qualified names in the call hiearchy&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.clang.excludeArgs&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;An set of command line arguments to strip before passing to clang when indexing. Each list entry is a separate argument.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.clang.extraArgs&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;An extra set of command line arguments to give clang when indexing. Each list entry is a separate argument.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.clang.pathMappings&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Translate paths in compile_commands.json entries, .ccls options and cache files. This allows to reuse cache files built otherwhere if the source paths are different.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.clang.resourceDir&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default value to use for clang -resource-dir argument. This will be automatically supplied by ccls if not provided.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.codeLens.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Specifies whether the references CodeLens should be shown.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.codeLens.localVariables&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Set to false to hide code lens on parameters and function local variables.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.codeLens.renderInline&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enables a custom code lens renderer so code lens are displayed inline with code. This removes any vertical-space footprint at the cost of horizontal space.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.completion.caseSensitivity&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Case sensitivity when code completion is filtered. 0: case-insensitive, 1: case-folded, i.e. insensitive if no input character is uppercase, 2: case-sensitive&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.completion.detailedLabel&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When this option is enabled, the completion item label is very detailed, it shows the full signature of the candidate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.completion.duplicateOptional&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For functions with default arguments, generate one more item per default argument.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.completion.enableSnippetInsertion&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If true, parameter declarations are inserted as snippets in function/method call arguments when completing a function/method call&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.completion.include.blacklist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ECMAScript regex that checks absolute path. If it partially matches, the file is not added to include path auto-complete. An example is "/CACHE/"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.completion.include.maxPathSize&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;37&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Maximum length for path in #include proposals. If the path length goes beyond this number it will be elided. Set to 0 to always display the full path.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.completion.include.suffixWhitelist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ ".h", ".hpp", ".hh" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Only files ending in one of these values will be shown in include auto-complete. Set to the empty-list to disable include auto-complete.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.completion.include.whitelist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ECMAScript regex that checks absolute file path. If it does not partially match, the file is not added to include path auto-complete. An example is "/src/"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.diagnostics.blacklist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Files that match these patterns won't be displayed in diagnostics view.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.diagnostics.onChange&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;1000&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Time in milliseconds to wait before computing diagnostics on type. -1: disable diagnostics on type.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.diagnostics.onOpen&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Time in milliseconds to wait before computing diagnostics when a file is opened.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.diagnostics.onSave&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Time in milliseconds to wait before computing diagnostics when a file is saved.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.diagnostics.spellChecking&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Whether to do spell checking on undefined symbol names when computing diagnostics.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.diagnostics.whitelist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Files that match these patterns will be displayed in diagnostics view.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.blacklist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Files that match these patterns won't have semantic highlight.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.enum.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "variable", "member" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.function.colors&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "#e5b124", "#927754", "#eb992c", "#e2bf8f", "#d67c17", "#88651e", "#e4b953", "#a36526", "#b28927", "#d69855" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Colors to use for semantic highlight. A good generator is &lt;a href="http://tools.medialab.sciences-po.fr/iwanthue/" rel="nofollow"&gt;http://tools.medialab.sciences-po.fr/iwanthue/&lt;/a&gt;. If multiple colors are specified, semantic highlight will cycle through them for successive symbols.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.function.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.global.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "fontWeight: bolder" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.globalVariable.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "variable", "global" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.largeFileSize&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Disable semantic highlight for files larger than the size.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.macro.colors&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "#e79528", "#c5373d", "#e8a272", "#d84f2b", "#a67245", "#e27a33", "#9b4a31", "#b66a1e", "#e27a71", "#cf6d49" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Colors to use for semantic highlight. A good generator is &lt;a href="http://tools.medialab.sciences-po.fr/iwanthue/" rel="nofollow"&gt;http://tools.medialab.sciences-po.fr/iwanthue/&lt;/a&gt;. If multiple colors are specified, semantic highlight will cycle through them for successive symbols.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.macro.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "variable" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.member.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "fontStyle: italic" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.memberFunction.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "function", "member" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.memberVariable.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "variable", "member" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.namespace.colors&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "#429921", "#58c1a4", "#5ec648", "#36815b", "#83c65d", "#417b2f", "#43cc71", "#7eb769", "#58bf89", "#3e9f4a" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Colors to use for semantic highlight. A good generator is &lt;a href="http://tools.medialab.sciences-po.fr/iwanthue/" rel="nofollow"&gt;http://tools.medialab.sciences-po.fr/iwanthue/&lt;/a&gt;. If multiple colors are specified, semantic highlight will cycle through them for successive symbols.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.namespace.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "type" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.parameter.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "variable" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.static.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "fontWeight: bold" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.staticMemberFunction.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "function", "static" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.staticMemberVariable.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "variable", "static" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.staticVariable.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "variable", "static" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.type.colors&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "#e1afc3", "#d533bb", "#9b677f", "#e350b6", "#a04360", "#dd82bc", "#de3864", "#ad3f87", "#dd7a90", "#e0438a" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Colors to use for semantic highlight. A good generator is &lt;a href="http://tools.medialab.sciences-po.fr/iwanthue/" rel="nofollow"&gt;http://tools.medialab.sciences-po.fr/iwanthue/&lt;/a&gt;. If multiple colors are specified, semantic highlight will cycle through them for successive symbols.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.type.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.typeAlias.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "type" }&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.variable.colors&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "#587d87", "#26cdca", "#397797", "#57c2cc", "#306b72", "#6cbcdf", "#368896", "#3ea0d2", "#48a5af", "#7ca6b7" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Colors to use for semantic highlight. A good generator is &lt;a href="http://tools.medialab.sciences-po.fr/iwanthue/" rel="nofollow"&gt;http://tools.medialab.sciences-po.fr/iwanthue/&lt;/a&gt;. If multiple colors are specified, semantic highlight will cycle through them for successive symbols.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.variable.face&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.highlight.whitelist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Files that match these patterns will have semantic highlight.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.index.blacklist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A translation unit (cc/cpp file) is not indexed if any of the ECMAScript regexes in this list partially matches translation unit's the absolute path.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.index.initialBlacklist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Files matched by the regexes should not be indexed on initialization. Indexing is deferred to when they are opened.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.index.initialWhitelist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Files matched by the regexes should be indexed on initialization.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.index.maxInitializerLines&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;15&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Number of lines of the initializer / macro definition showed in hover.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.index.multiVersion&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If not 0, a file will be indexed in each tranlation unit that includes it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.index.onChange&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Allow indexing on textDocument/didChange. May be too slow for big projects, so it is off by default.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.index.threads&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Number of indexer threads. If 0, 80% of cores are used.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.index.trackDependency&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Whether to reparse a file if write times of its dependencies have changed. The file will always be reparsed if its own write time changes.&lt;/p&gt;
&lt;p&gt;0: no, 1: only during initial load of project, 2: yes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.index.whitelist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If a translation unit's absolute path partially matches any ECMAScript regex in this list, it will be indexed. The whitelist takes priority over the blacklist. To only index files in the whitelist, make "ccls.index.blacklist" match everything, ie, set it to ".*".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.launch.args&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array containing extra arguments to pass to the ccls binary&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.launch.command&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"ccls"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Path to the ccls binary (default assumes the binary is in the PATH)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.misc.compilationDatabaseCommand&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If not empty, the compilation database command to use&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.misc.compilationDatabaseDirectory&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If not empty, the compilation database directory to use instead of the project root&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.misc.showInactiveRegions&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If true, ccls will highlight skipped ranges.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.statusUpdateInterval&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;2000&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Interval between updating ccls status in milliseconds. Set to 0 to disable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.theme.dark.skippedRange.backgroundColor&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"rgba(18, 18, 18, 0.3)"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;CSS color to apply to the background when the code region has been disabled by the preprocessor in a dark theme.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.theme.dark.skippedRange.textColor&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"rgb(100, 100, 100)"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;CSS color to apply to text when the code region has been disabled by the preprocessor in a dark theme.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.theme.light.skippedRange.backgroundColor&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"rgba(220, 220, 220, 0.3)"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;CSS color to apply to the background when the code region has been disabled by the preprocessor in a light theme.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.theme.light.skippedRange.textColor&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"rgb(100, 100, 100)"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;CSS color to apply to text when the code region has been disabled by the preprocessor in a light theme.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.trace.websocketEndpointUrl&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When set, logs all LSP messages to specified WebSocket endpoint.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.treeViews.doubleClickTimeoutMs&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;500&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If a tree view entry is double-clicked within this timeout value, vscode will navigate to the entry.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.workspaceSymbol.caseSensitivity&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Case sensitivity when searching workspace symbols. 0: case-insensitive, 1: case-folded, i.e. insensitive if no input character is uppercase, 2: case-sensitive&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;ccls.workspaceSymbol.maxNum&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The maximum number of global search (ie, Ctrl+P + #foo) search results to report. For small search strings on large projects there can be a massive number of results (ie, over 1,000,000) so this limit is important to avoid extremely long delays. null means use the default value provided by the ccls language server.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;ccls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    capabilities &lt;span class="pl-k"&gt;=&lt;/span&gt; default capabilities, with offsetEncoding utf&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ccls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cpp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;objc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;objcpp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    on_init &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; to handle changing offsetEncoding
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;compile_commands.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;compile_flags.txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-clangd" class="anchor" aria-hidden="true" href="#clangd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;clangd&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://clang.llvm.org/extra/clangd/Installation.html" rel="nofollow"&gt;https://clang.llvm.org/extra/clangd/Installation.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Clang &amp;gt;= 9 is recommended! See &lt;a href="https://github.com/neovim/nvim-lsp/issues/23"&gt;this issue for more&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;clangd relies on a &lt;a href="https://clang.llvm.org/docs/JSONCompilationDatabase.html" rel="nofollow"&gt;JSON compilation database&lt;/a&gt; specified
as compile_commands.json or, for simpler projects, a compile_flags.txt.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;clangd&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    capabilities &lt;span class="pl-k"&gt;=&lt;/span&gt; default capabilities, with offsetEncoding utf&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;clangd&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--background-index&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cpp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;objc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;objcpp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    on_init &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; to handle changing offsetEncoding
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;compile_commands.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;compile_flags.txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-cssls" class="anchor" aria-hidden="true" href="#cssls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cssls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/vscode-langservers/vscode-css-languageserver-bin"&gt;https://github.com/vscode-langservers/vscode-css-languageserver-bin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;css-languageserver&lt;/code&gt; can be installed via &lt;code&gt;:LspInstall cssls&lt;/code&gt; or by yourself with &lt;code&gt;npm&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install -g vscode-css-languageserver-bin&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Can be installed in Nvim with &lt;code&gt;:LspInstall cssls&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;cssls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    capabilities &lt;span class="pl-k"&gt;=&lt;/span&gt; default capabilities, with offsetEncoding utf&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;css-languageserver&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--stdio&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;css&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;scss&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;less&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    on_init &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; to handle changing offsetEncoding
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;package.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      css &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        validate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
      },
      less &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        validate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
      },
      scss &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        validate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
      }
    }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-dockerls" class="anchor" aria-hidden="true" href="#dockerls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;dockerls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/rcjsuen/dockerfile-language-server-nodejs"&gt;https://github.com/rcjsuen/dockerfile-language-server-nodejs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker-langserver&lt;/code&gt; can be installed via &lt;code&gt;:LspInstall dockerls&lt;/code&gt; or by yourself with &lt;code&gt;npm&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install -g dockerfile-language-server-nodejs&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Can be installed in Nvim with &lt;code&gt;:LspInstall dockerls&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;dockerls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;docker-langserver&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--stdio&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Dockerfile&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dockerfile&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Dockerfile&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-elmls" class="anchor" aria-hidden="true" href="#elmls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;elmls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/elm-tooling/elm-language-server#installation"&gt;https://github.com/elm-tooling/elm-language-server#installation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you don't want to use Nvim to install it, then you can use:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install -g elm elm-test elm-format @elm-tooling/elm-language-server&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Can be installed in Nvim with &lt;code&gt;:LspInstall elmls&lt;/code&gt;
This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;elmLS.elmAnalyseTrigger&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "change", "save", "never" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"change"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When do you want the extension to run elm-analyse? Might need a restart to take effect.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;elmLS.elmFormatPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The path to your elm-format executable. Should be empty by default, in that case it will assume the name and try to first get it from a local npm installation or a global one. If you set it manually it will not try to load from the npm folder.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;elmLS.elmPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The path to your elm executable. Should be empty by default, in that case it will assume the name and try to first get it from a local npm installation or a global one. If you set it manually it will not try to load from the npm folder.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;elmLS.elmTestPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The path to your elm-test executable. Should be empty by default, in that case it will assume the name and try to first get it from a local npm installation or a global one. If you set it manually it will not try to load from the npm folder.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;elmLS.trace.server&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "off", "messages", "verbose" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"off"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Traces the communication between VS Code and the language server.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;elmls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    capabilities &lt;span class="pl-k"&gt;=&lt;/span&gt; default capabilities, with offsetEncoding utf&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;elm-language-server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;elm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    init_options &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      elmAnalyseTrigger &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;change&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      elmFormatPath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;elm-format&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      elmPath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;elm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      elmTestPath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;elm-test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    on_init &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; to handle changing offsetEncoding
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;elm.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-flow" class="anchor" aria-hidden="true" href="#flow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;flow&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://flow.org/" rel="nofollow"&gt;https://flow.org/&lt;/a&gt;
&lt;a href="https://github.com/facebook/flow"&gt;https://github.com/facebook/flow&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See below for how to setup Flow itself.
&lt;a href="https://flow.org/en/docs/install/" rel="nofollow"&gt;https://flow.org/en/docs/install/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See below for lsp command options.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm run flow lsp -- --help&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.coverageSeverity&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "error", "warn", "info" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"info"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Type coverage diagnostic severity&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Is flow enabled&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.fileExtensions&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ ".js", ".mjs", ".jsx", ".flow", ".json" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(Supported only when useLSP: false). File extensions to consider for flow processing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.lazyMode&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Set value to enable flow lazy mode&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.logLevel&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "error", "warn", "info", "trace" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"info"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Log level for output panel logs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.pathToFlow&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"flow"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Absolute path to flow binary. Special var ${workspaceFolder} or ${flowconfigDir} can be used in path (NOTE: in windows you can use '/' and can omit '.cmd' in path)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.runOnAllFiles&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(Supported only when useLSP: false) Run Flow on all files, No need to put //@flow comment on top of files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.runOnEdit&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If true will run flow on every edit, otherwise will run only when changes are saved (Note: 'useLSP: true' only supports syntax errors)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.showStatus&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(Supported only when useLSP: false) If true will display flow status is the statusbar&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.showUncovered&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If true will show uncovered code by default&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.stopFlowOnExit&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Stop Flow on Exit&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.trace.server&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"off"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Traces the communication between VSCode and the flow lsp service.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.useBundledFlow&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If true will use flow bundled with this plugin if nothing works&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.useCodeSnippetOnFunctionSuggest&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Complete functions with their parameter signature.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.useLSP&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Turn off to switch from the official Flow Language Server implementation to talking directly to flow.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;flow.useNPMPackagedFlow&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Support using flow through your node_modules folder, WARNING: Checking this box is a security risk. When you open a project we will immediately run code contained within it.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;flow&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;npm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;run&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;flow&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lsp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;javascript&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;javascriptreact&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;javascript.jsx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.flowconfig&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-fortls" class="anchor" aria-hidden="true" href="#fortls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;fortls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/hansec/fortran-language-server"&gt;https://github.com/hansec/fortran-language-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fortran Language Server for the Language Server Protocol&lt;/p&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.autocompletePrefix&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Filter autocomplete suggestions with variable prefix&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.displayVerWarning&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Provides notifications when the underlying language server is out of date.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.enableCodeActions&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable experimental code actions (requires v1.7.0+).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.executablePath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"fortls"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Path to the Fortran language server (fortls).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.hoverSignature&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Show signature information in hover for argument (also enables 'variableHover').&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.includeSymbolMem&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Include type members in document outline (also used for 'Go to Symbol in File')&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.incrementalSync&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use incremental synchronization for file changes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.lowercaseIntrinsics&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use lowercase for intrinsics and keywords in autocomplete requests.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.maxCommentLineLength&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;-1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Maximum comment line length (requires v1.8.0+).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.maxLineLength&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;-1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Maximum line length (requires v1.8.0+).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.notifyInit&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Notify when workspace initialization is complete (requires v1.7.0+).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.useSignatureHelp&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use signature help instead of snippets when available.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fortran-ls.variableHover&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Show hover information for variables.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;fortls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fortls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fortran&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.fortls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      nthreads &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-ghcide" class="anchor" aria-hidden="true" href="#ghcide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ghcide&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/digital-asset/ghcide"&gt;https://github.com/digital-asset/ghcide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A library for building Haskell IDE tooling.&lt;/p&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;hic.arguments&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"--lsp"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The arguments you would like to pass to the executable&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;hic.executablePath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"ghcide"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The location of your ghcide executable&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;ghcide&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ghcide&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--lsp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;haskell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lhaskell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stack.yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hie-bios&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BUILD.bazel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cabal.config&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;package.yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-gopls" class="anchor" aria-hidden="true" href="#gopls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;gopls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/golang/tools/tree/master/gopls"&gt;https://github.com/golang/tools/tree/master/gopls&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Google's lsp server for golang.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;gopls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gopls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;go&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;go.mod&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-hie" class="anchor" aria-hidden="true" href="#hie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hie&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/haskell/haskell-ide-engine"&gt;https://github.com/haskell/haskell-ide-engine&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;the following init_options are supported (see &lt;a href="https://github.com/haskell/haskell-ide-engine#configuration"&gt;https://github.com/haskell/haskell-ide-engine#configuration&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;init_options &lt;span class="pl-k"&gt;=&lt;/span&gt; {
  languageServerHaskell &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    hlintOn &lt;span class="pl-k"&gt;=&lt;/span&gt; bool;
    maxNumberOfProblems &lt;span class="pl-k"&gt;=&lt;/span&gt; number;
    diagnosticsDebounceDuration &lt;span class="pl-k"&gt;=&lt;/span&gt; number;
    liquidOn &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;bool&lt;/span&gt; (default &lt;span class="pl-c1"&gt;false&lt;/span&gt;);
    completionSnippetsOn &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;bool&lt;/span&gt; (default &lt;span class="pl-c1"&gt;true&lt;/span&gt;);
    formatOnImportOn &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;bool&lt;/span&gt; (default &lt;span class="pl-c1"&gt;true&lt;/span&gt;);
    formattingProvider &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;string&lt;/span&gt; (&lt;span class="pl-c1"&gt;default&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;brittany&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;alternate&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;floskell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.completionSnippetsOn&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Show snippets with type information when using code completion&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.diagnosticsOnChange&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Compute diagnostics continuously as you type. Turn off to only generate diagnostics on file save.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.enableHIE&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable/disable HIE (useful for multi-root workspaces).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.formatOnImportOn&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When adding an import, use the formatter on the result&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.formattingProvider&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "brittany", "floskell", "none" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"brittany"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The tool to use for formatting requests.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.hieExecutablePath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Set the path to your hie executable, if it's not already on your $PATH. Works with ~, ${HOME} and ${workspaceFolder}.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.hlintOn&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Get suggestions from hlint&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.liquidOn&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Get diagnostics from liquid haskell&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.logFile&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If set, redirects the logs to a file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.maxNumberOfProblems&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;100&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Controls the maximum number of problems produced by the server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.noLspParam&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Do not set the '--lsp' flag in the hie/hie-wrapper arguments when launching it&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.showTypeForSelection.command.location&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "dropdown", "channel" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"dropdown"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Determines where the type information for selected text will be shown when the &lt;code&gt;showType&lt;/code&gt; command is triggered (distinct from automatically showing this information when hover is triggered).
dropdown: in a dropdown
channel: will be revealed in an output channel&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.showTypeForSelection.onHover&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If true, when an expression is selected, the hover tooltip will attempt to display the type of the entire expression - rather than just the term under the cursor.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.trace.server&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "off", "messages", "verbose" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"off"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Traces the communication between VSCode and the languageServerHaskell service.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.useCustomHieWrapper&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use your own custom wrapper for hie (remember to specify the path!). This will take precedence over useHieWrapper and hieExecutablePath.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;languageServerHaskell.useCustomHieWrapperPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Specify the full path to your own custom hie wrapper (e.g. ${HOME}/.hie-wrapper.sh). Works with ~, ${HOME} and ${workspaceFolder}.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;hie&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hie-wrapper&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;haskell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stack.yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;package.yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-intelephense" class="anchor" aria-hidden="true" href="#intelephense"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;intelephense&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://intelephense.com/" rel="nofollow"&gt;https://intelephense.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;intelephense&lt;/code&gt; can be installed via &lt;code&gt;:LspInstall intelephense&lt;/code&gt; or by yourself with &lt;code&gt;npm&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install -g intelephense&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Can be installed in Nvim with &lt;code&gt;:LspInstall intelephense&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;intelephense&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    capabilities &lt;span class="pl-k"&gt;=&lt;/span&gt; default capabilities, with offsetEncoding utf&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;intelephense&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--stdio&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;php&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    on_init &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; to handle changing offsetEncoding
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;composer.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-leanls" class="anchor" aria-hidden="true" href="#leanls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;leanls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/leanprover/lean-client-js/tree/master/lean-language-server"&gt;https://github.com/leanprover/lean-client-js/tree/master/lean-language-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lean language server.&lt;/p&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.executablePath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"lean"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Path to the Lean executable to use.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.extraOptions&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{description = "a single command-line argument",type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Extra command-line options for the Lean server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.infoViewAllErrorsOnLine&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Info view: show all errors on the current line, instead of just the ones on the right of the cursor.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.infoViewAutoOpen&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Info view: open info view when Lean extension is activated.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.infoViewAutoOpenShowGoal&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Info view: auto open shows goal and messages for the current line (instead of all messages for the whole file)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.infoViewFilterIndex&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;-1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Index of the filter applied to the tactic state (in the array infoViewTacticStateFilters). An index of -1 means no filter is applied.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.infoViewStyle&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;""&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Add an additional CSS snippet to the info view.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.infoViewTacticStateFilters&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ {flags = "",match = false,regex = "^_"}, {flags = "",match = true,name = "goals only",regex = "^(âŠ¢|\\d+ goals|case|$)"} }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{description = "an object with required properties 'regex': string, 'match': boolean, and 'flags': string, and optional property 'name': string",properties = {flags = {description = "additional flags passed to the RegExp constructor, e.g. 'i' for ignore case",type = "string"},match = {description = "whether tactic state lines matching the value of 'regex' should be included (true) or excluded (false)",type = "boolean"},name = {description = "name displayed in the dropdown",type = "string"},regex = {description = "a properly-escaped regex string, e.g. '^_' matches any string beginning with an underscore",type = "string"}},required = { "regex", "match", "flags" },type = "object"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;An array of objects containing regular expression strings that can be used to filter (positively or negatively) the tactic state in the info view. Set to an empty array '[]' to hide the filter select dropdown.&lt;/p&gt;
&lt;p&gt;Each object must contain the following keys: 'regex': string, 'match': boolean, 'flags': string.
'regex' is a properly-escaped regex string,
'match' = true (false) means blocks in the tactic state matching 'regex' will be included (excluded) in the info view,
'flags' are additional flags passed to the JavaScript RegExp constructor.
The 'name' key is optional and may contain a string that is displayed in the dropdown instead of the full regex details.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.input.customTranslations&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;object&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.empty_dict()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{description = "Unicode character to translate to",type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Add additional input Unicode translations. Example: &lt;code&gt;{"foo": "â˜º"}&lt;/code&gt; will correct &lt;code&gt;\foo&lt;/code&gt; to &lt;code&gt;â˜º&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.input.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable Lean input mode.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.input.languages&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "lean" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{description = "the name of a language, e.g. 'lean', 'markdown'",type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable Lean Unicode input in other file types.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.input.leader&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"\\"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Leader key to trigger input mode.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.leanpkgPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"leanpkg"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Path to the leanpkg executable to use.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.memoryLimit&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;4096&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Set a memory limit (in megabytes) for the Lean server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.progressMessages&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Show error messages where Lean is still checking.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.roiModeDefault&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"visible"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Set the default region of interest mode (nothing, visible, lines, linesAndAbove, open, or project) for the Lean extension.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.timeLimit&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;100000&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Set a deterministic timeout (it is approximately the maximum number of memory allocations in thousands) for the Lean server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.typeInStatusBar&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Show the type of term under the cursor in the status bar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lean.typesInCompletionList&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Display types of all items in the list of completions. By default, only the type of the highlighted item is shown.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;leanls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lean-language-server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--stdio&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lean&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; util.&lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-ocamlls" class="anchor" aria-hidden="true" href="#ocamlls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ocamlls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/ocaml-lsp/ocaml-language-server"&gt;https://github.com/ocaml-lsp/ocaml-language-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ocaml-language-server&lt;/code&gt; can be installed via &lt;code&gt;:LspInstall ocamlls&lt;/code&gt; or by yourself with &lt;code&gt;npm&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install -g ocaml-langauge-server&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Can be installed in Nvim with &lt;code&gt;:LspInstall ocamlls&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;ocamlls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ocaml-language-server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--stdio&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ocaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reason&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.merlin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;package.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-pyls" class="anchor" aria-hidden="true" href="#pyls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pyls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/palantir/python-language-server"&gt;https://github.com/palantir/python-language-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python-language-server&lt;/code&gt;, a language server for Python.&lt;/p&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.configurationSources&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "pycodestyle" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{enum = { "pycodestyle", "pyflakes" },type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;List of configuration sources to use.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.executable&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"pyls"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Language server executable&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi.environment&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Define environment for jedi.Script and Jedi.names.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi.extra_paths&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Define extra paths for jedi.Script.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi_completion.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi_completion.include_params&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Auto-completes methods and classes with tabstops for each parameter.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi_definition.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi_definition.follow_builtin_imports&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If follow_imports is True will decide if it follow builtin imports.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi_definition.follow_imports&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The goto call will follow imports.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi_hover.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi_references.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi_signature_help.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi_symbols.all_scopes&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If True lists the names of all scopes instead of only the module namespace.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.jedi_symbols.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.mccabe.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.mccabe.threshold&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;15&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The minimum threshold that triggers warnings about cyclomatic complexity.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.preload.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.preload.modules&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;List of modules to import on startup&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pycodestyle.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pycodestyle.exclude&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Exclude files or directories which match these patterns.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pycodestyle.filename&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When parsing directories, only check filenames matching these patterns.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pycodestyle.hangClosing&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Hang closing bracket instead of matching indentation of opening bracket's line.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pycodestyle.ignore&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ignore errors and warnings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pycodestyle.maxLineLength&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Set maximum allowed line length.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pycodestyle.select&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Select errors and warnings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pydocstyle.addIgnore&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ignore errors and warnings in addition to the specified convention.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pydocstyle.addSelect&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Select errors and warnings in addition to the specified convention.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pydocstyle.convention&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "pep257", "numpy" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Choose the basic list of checked errors by specifying an existing convention.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pydocstyle.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pydocstyle.ignore&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ignore errors and warnings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pydocstyle.match&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"(?!test_).*\\.py"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pydocstyle.matchDir&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"[^\\.].*"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pydocstyle.select&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Select errors and warnings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pyflakes.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pylint.args&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Arguments to pass to pylint.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.pylint.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.rope_completion.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.plugins.yapf.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable or disable the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.rope.extensionModules&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Builtin and c-extension modules that are allowed to be imported and inspected by rope.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pyls.rope.ropeFolder&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The name of the folder in which rope stores project configurations and data.  Pass &lt;code&gt;null&lt;/code&gt; for not using such a folder at all.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;pyls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pyls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;python&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;vim&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s starting directory&lt;/span&gt;
&lt;span class="pl-s"&gt;    settings = {}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-pyls_ms" class="anchor" aria-hidden="true" href="#pyls_ms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pyls_ms&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/Microsoft/python-language-server"&gt;https://github.com/Microsoft/python-language-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python-language-server&lt;/code&gt;, a language server for Python.&lt;/p&gt;
&lt;p&gt;Requires &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-install-script" rel="nofollow"&gt;.NET Core&lt;/a&gt; to run. On Linux or macOS:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -L https://dot.net/v1/dotnet-install.sh &lt;span class="pl-k"&gt;|&lt;/span&gt; sh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;p&gt;Can be installed in Nvim with &lt;code&gt;:LspInstall pyls_ms&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;pyls_ms&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;python&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    init_options &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      analysisUpdates &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
      asyncStartup &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
      displayOptions &lt;span class="pl-k"&gt;=&lt;/span&gt; {},
      interpreter &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        properties &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          InterpreterPath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/usr/bin/python&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
          Version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2.7&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
      }
    }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    on_new_config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;vim&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s starting directory&lt;/span&gt;
&lt;span class="pl-s"&gt;    settings = {&lt;/span&gt;
&lt;span class="pl-s"&gt;      python = {&lt;/span&gt;
&lt;span class="pl-s"&gt;        analysis = {&lt;/span&gt;
&lt;span class="pl-s"&gt;          disabled = {},&lt;/span&gt;
&lt;span class="pl-s"&gt;          errors = {},&lt;/span&gt;
&lt;span class="pl-s"&gt;          info = {}&lt;/span&gt;
&lt;span class="pl-s"&gt;        }&lt;/span&gt;
&lt;span class="pl-s"&gt;      }&lt;/span&gt;
&lt;span class="pl-s"&gt;    }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-rls" class="anchor" aria-hidden="true" href="#rls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rls"&gt;https://github.com/rust-lang/rls&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;rls, a language server for Rust&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://github.com/rust-lang/rls#setup"&gt;https://github.com/rust-lang/rls#setup&lt;/a&gt; to setup rls itself.
See &lt;a href="https://github.com/rust-lang/rls#configuration"&gt;https://github.com/rust-lang/rls#configuration&lt;/a&gt; for rls-specific settings.&lt;/p&gt;
&lt;p&gt;If you want to use rls for a particular build, eg nightly, set cmd as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rustup&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;run&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nightly&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.channel&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "stable", "beta", "nightly" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Rust channel to invoke rustup with. Ignored if rustup is disabled. By default, uses the same channel as your currently open project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.disableRustup&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Disable usage of rustup and use rustc/rls from PATH.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.enableMultiProjectSetup&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Allow multiple projects in the same folder, along with remove the constraint that the cargo.toml must be located at the root. (Experimental: might not work for certain setups)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.logToFile&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When set to true, RLS stderr is logged to a file at workspace root level. Requires reloading extension after change.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.nestedMultiRootConfigInOutermost&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If one root workspace folder is nested in another root folder, look for the Rust config in the outermost root.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.revealOutputChannelOn&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "info", "warn", "error", "never" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"never"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Specifies message severity on which the output channel will be revealed. Requires reloading extension after change.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.rlsPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Override RLS path. Only required for RLS developers. If you set this and use rustup, you should also set &lt;code&gt;rust-client.channel&lt;/code&gt; to ensure your RLS sees the right libraries. If you don't use rustup, make sure to set &lt;code&gt;rust-client.disableRustup&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.rustupPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"rustup"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Path to rustup executable. Ignored if rustup is disabled.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.trace.server&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "off", "messages", "verbose" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"off"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Traces the communication between VS Code and the Rust language server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.updateOnStartup&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Update the RLS whenever the extension starts up.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-client.useWSL&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When set to true, RLS is started within Windows Subsystem for Linux.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.all_features&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable all Cargo features.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.all_targets&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Checks the project as if you were running cargo check --all-targets (I.e., check all targets and integration tests too).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.build_bin&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Specify to run analysis as if running &lt;code&gt;cargo check --bin &amp;lt;name&amp;gt;&lt;/code&gt;. Use &lt;code&gt;null&lt;/code&gt; to auto-detect. (unstable)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.build_command&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;EXPERIMENTAL (requires &lt;code&gt;unstable_features&lt;/code&gt;)
If set, executes a given program responsible for rebuilding save-analysis to be loaded by the RLS. The program given should output a list of resulting .json files on stdout.
Implies &lt;code&gt;rust.build_on_save&lt;/code&gt;: true.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.build_lib&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Specify to run analysis as if running &lt;code&gt;cargo check --lib&lt;/code&gt;. Use &lt;code&gt;null&lt;/code&gt; to auto-detect. (unstable)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.build_on_save&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Only index the project when a file is saved and not on change.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.cfg_test&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Build cfg(test) code. (unstable)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.clear_env_rust_log&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Clear the RUST_LOG environment variable before running rustc or cargo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.clippy_preference&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "on", "opt-in", "off" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"opt-in"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Controls eagerness of clippy diagnostics when available. Valid values are (case-insensitive):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;"off": Disable clippy lints.&lt;/li&gt;
&lt;li&gt;"on": Display the same diagnostics as command-line clippy invoked with no arguments (&lt;code&gt;clippy::all&lt;/code&gt; unless overridden).&lt;/li&gt;
&lt;li&gt;"opt-in": Only display the lints explicitly enabled in the code. Start by adding &lt;code&gt;#![warn(clippy::all)]&lt;/code&gt; to the root of each crate you want linted.
You need to install clippy via rustup if you haven't already.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.crate_blacklist&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "cocoa", "gleam", "glium", "idna", "libc", "openssl", "rustc_serialize", "serde", "serde_json", "typenum", "unicode_normalization", "unicode_segmentation", "winapi" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Overrides the default list of packages for which analysis is skipped.
Available since RLS 1.38&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.features&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A list of Cargo features to enable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.full_docs&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Instructs cargo to enable full documentation extraction during save-analysis while building the crate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.jobs&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Number of Cargo jobs to be run in parallel.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.no_default_features&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Do not enable default Cargo features.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.racer_completion&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enables code completion using racer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.rustflags&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Flags added to RUSTFLAGS.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.rustfmt_path&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When specified, RLS will use the Rustfmt pointed at the path instead of the bundled one&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.show_hover_context&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Show additional context in hover tooltips when available. This is often the type local variable declaration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.show_warnings&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Show warnings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.sysroot&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;--sysroot&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.target&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;--target&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.target_dir&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When specified, it places the generated analysis files at the specified target directory. By default it is placed target/rls directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.unstable_features&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable unstable features.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust.wait_to_build&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;1500&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Time in milliseconds between receiving a change notification and starting build.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;rls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rust&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Cargo.toml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-rust_analyzer" class="anchor" aria-hidden="true" href="#rust_analyzer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rust_analyzer&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-analyzer/rust-analyzer"&gt;https://github.com/rust-analyzer/rust-analyzer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;rust-analyzer (aka rls 2.0), a language server for Rust&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://github.com/rust-analyzer/rust-analyzer/tree/master/docs/user#settings"&gt;docs&lt;/a&gt; for extra settings.&lt;/p&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.cargo-watch.allTargets&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Check all targets and tests (will be passed as &lt;code&gt;--all-targets&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.cargo-watch.arguments&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cargo-watch&lt;/code&gt; arguments. (e.g: &lt;code&gt;--features="shumway,pdf"&lt;/code&gt; will run as &lt;code&gt;cargo watch -x "check --features="shumway,pdf""&lt;/code&gt; )&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.cargo-watch.command&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"check"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cargo-watch&lt;/code&gt; command. (e.g: &lt;code&gt;clippy&lt;/code&gt; will run as &lt;code&gt;cargo watch -x clippy&lt;/code&gt; )&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.cargo-watch.enable&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Run &lt;code&gt;cargo check&lt;/code&gt; for diagnostics on save&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.cargoFeatures.allFeatures&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Activate all available features&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.cargoFeatures.features&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;List of features to activate&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.cargoFeatures.noDefaultFeatures&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Do not activate the &lt;code&gt;default&lt;/code&gt; feature&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.displayInlayHints&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Display additional type information in the editor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.enableEnhancedTyping&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enables enhanced typing. NOTE: If using a VIM extension, you should set this to false&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.excludeGlobs&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Paths to exclude from analysis&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.featureFlags&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;object&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.empty_dict()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Fine grained feature flags to disable annoying features&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.highlightingOn&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Highlight Rust code (overrides built-in syntax highlighting)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.lruCapacity&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Number of syntax trees rust-analyzer keeps in memory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.maxInlayHintLength&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;20&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Maximum length for inlay hints&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.raLspServerPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"ra_lsp_server"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Path to ra_lsp_server executable&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.rainbowHighlightingOn&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When highlighting Rust code, use a unique color per identifier&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.trace.server&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "off", "messages", "verbose" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"off"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Trace requests to the ra_lsp_server&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rust-analyzer.useClientWatching&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;client provided file watching instead of notify watching.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;rust_analyzer&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    capabilities &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      offsetEncoding &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;utf-8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;utf-16&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; },
      textDocument &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        completion &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          completionItem &lt;span class="pl-k"&gt;=&lt;/span&gt; {
            commitCharactersSupport &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
            deprecatedSupport &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
            documentationFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;markdown&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;plaintext&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; },
            preselectSupport &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
            snippetSupport &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
          },
          completionItemKind &lt;span class="pl-k"&gt;=&lt;/span&gt; {
            valueSet &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;11&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;, &lt;span class="pl-c1"&gt;13&lt;/span&gt;, &lt;span class="pl-c1"&gt;14&lt;/span&gt;, &lt;span class="pl-c1"&gt;15&lt;/span&gt;, &lt;span class="pl-c1"&gt;16&lt;/span&gt;, &lt;span class="pl-c1"&gt;17&lt;/span&gt;, &lt;span class="pl-c1"&gt;18&lt;/span&gt;, &lt;span class="pl-c1"&gt;19&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;21&lt;/span&gt;, &lt;span class="pl-c1"&gt;22&lt;/span&gt;, &lt;span class="pl-c1"&gt;23&lt;/span&gt;, &lt;span class="pl-c1"&gt;24&lt;/span&gt;, &lt;span class="pl-c1"&gt;25&lt;/span&gt; }
          },
          contextSupport &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
          dynamicRegistration &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        },
        documentHighlight &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          dynamicRegistration &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        },
        hover &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          contentFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;markdown&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;plaintext&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; },
          dynamicRegistration &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        },
        references &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          dynamicRegistration &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        },
        signatureHelp &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          dynamicRegistration &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
          signatureInformation &lt;span class="pl-k"&gt;=&lt;/span&gt; {
            documentationFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;markdown&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;plaintext&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
          }
        },
        synchronization &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          didSave &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
          dynamicRegistration &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
          willSave &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
          willSaveWaitUntil &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        }
      }
    }
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ra_lsp_server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rust&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    on_init &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Cargo.toml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-solargraph" class="anchor" aria-hidden="true" href="#solargraph"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;solargraph&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://solargraph.org/" rel="nofollow"&gt;https://solargraph.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;solargraph, a language server for Ruby&lt;/p&gt;
&lt;p&gt;You can install solargraph via gem install.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;gem install solargraph&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.autoformat&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { true, false }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable automatic formatting while typing (WARNING: experimental)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.bundlerPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"bundle"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Path to the bundle executable, defaults to 'bundle'&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.checkGemVersion&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { true, false }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Automatically check if a new version of the Solargraph gem is available.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.commandPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"solargraph"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Path to the solargraph command.  Set this to an absolute path to select from multiple installed Ruby versions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.completion&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { true, false }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable completion&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.definitions&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { true, false }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable definitions (go to, etc.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.diagnostics&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { true, false }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable diagnostics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.externalServer&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;object&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{host = "localhost",port = 7658}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The host and port to use for external transports. (Ignored for stdio and socket transports.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.folding&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable folding ranges&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.formatting&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { true, false }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable document formatting&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.hover&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { true, false }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable hover&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.logLevel&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "warn", "info", "debug" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"warn"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Level of debug info to log. &lt;code&gt;warn&lt;/code&gt; is least and &lt;code&gt;debug&lt;/code&gt; is most.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.references&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { true, false }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable finding references&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.rename&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { true, false }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable symbol renaming&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.symbols&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { true, false }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable symbols&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.transport&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "socket", "stdio", "external" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"socket"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The type of transport to use.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;solargraph.useBundler&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;bundle exec&lt;/code&gt; to run solargraph. (If this is true, the solargraph.commandPath setting is ignored.)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;solargraph&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;solargraph&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stdio&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ruby&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Gemfile&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-sumneko_lua" class="anchor" aria-hidden="true" href="#sumneko_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sumneko_lua&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/sumneko/lua-language-server"&gt;https://github.com/sumneko/lua-language-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lua language server. &lt;strong&gt;By default, this doesn't have a &lt;code&gt;cmd&lt;/code&gt; set.&lt;/strong&gt; This is
because it doesn't provide a global binary. We provide an installer for Linux
and macOS using &lt;code&gt;:LspInstall&lt;/code&gt;.  If you wish to install it yourself, &lt;a href="https://github.com/sumneko/lua-language-server/wiki/Build-and-Run"&gt;here is a
guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Can be installed in Nvim with &lt;code&gt;:LspInstall sumneko_lua&lt;/code&gt;
This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.awakened.cat&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.completion.callSnippet&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "Disable", "Both", "Replace" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"Disable"&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.completion.enable&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.completion.keywordSnippet&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "Disable", "Both", "Replace" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"Replace"&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.develop.debuggerPort&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;11412&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.develop.debuggerWait&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.develop.enable&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.diagnostics.disable&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.diagnostics.enable&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.diagnostics.globals&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.diagnostics.severity&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;object&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.runtime.path&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ "?.lua", "?/init.lua", "?/?.lua" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.runtime.version&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "Lua 5.1", "Lua 5.2", "Lua 5.3", "Lua 5.4", "LuaJIT" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"Lua 5.3"&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.workspace.ignoreDir&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ ".vscode" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array items: &lt;code&gt;{type = "string"}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.workspace.ignoreSubmodules&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.workspace.library&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;object&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.workspace.maxPreload&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;300&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.workspace.preloadFileSize&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;100&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lua.workspace.useGitIgnore&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;sumneko_lua&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lua&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;or&lt;/span&gt; os_homedir
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-terraformls" class="anchor" aria-hidden="true" href="#terraformls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;terraformls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/juliosueiras/terraform-lsp"&gt;https://github.com/juliosueiras/terraform-lsp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Terraform language server
You can use &lt;a href="https://github.com/juliosueiras/terraform-lsp/releases"&gt;released binary&lt;/a&gt; or &lt;a href="https://github.com/juliosueiras/terraform-lsp#building"&gt;build&lt;/a&gt; your own.&lt;/p&gt;
&lt;p&gt;This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;terraform.codelens.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable/disable the CodeLens feature&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;terraform.format&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;object&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{ignoreExtensionsOnSave = { ".tfsmurf" }}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Formatting settings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;terraform.indexing&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;object&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{delay = 500,enabled = true,exclude = { ".terraform/**/*", "**/.terraform/**/*" },liveIndexing = false}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Indexes all terraform sources to get live syntax errors, rename support, go to symbol, and much more...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;terraform.languageServer&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;object&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{args = {},enabled = false}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Configures how the language server runs and works&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;terraform.lintConfig&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string|null&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.NIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Path to the &lt;code&gt;tflint&lt;/code&gt; config file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;terraform.lintPath&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"tflint"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Path to the &lt;code&gt;tflint&lt;/code&gt; executable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;terraform.path&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"terraform"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Path to the &lt;code&gt;terraform&lt;/code&gt; executable&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;terraform.paths&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;List of terraform paths or paths with versions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;terraform.telemetry.enabled&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable/disable telemetry reporting for this plugin. The global &lt;code&gt;telemetry.enableTelemetry&lt;/code&gt; is also respected. If the global is disabled, this setting has no effect.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;terraform.templateDirectory&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;string&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"templates"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A relative path to where your templates are stored relative to the workspace root.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;terraformls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;terraform-lsp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;terraform&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-texlab" class="anchor" aria-hidden="true" href="#texlab"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;texlab&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://texlab.netlify.com/" rel="nofollow"&gt;https://texlab.netlify.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A completion engine built from scratch for (La)TeX.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://texlab.netlify.com/docs/reference/configuration" rel="nofollow"&gt;https://texlab.netlify.com/docs/reference/configuration&lt;/a&gt; for configuration options.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;texlab&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Commands:
  &lt;span class="pl-k"&gt;-&lt;/span&gt; TexlabBuild: Build the current buffer
  
  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;texlab&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tex&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bib&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;vim&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s starting directory&lt;/span&gt;
&lt;span class="pl-s"&gt;    settings = {&lt;/span&gt;
&lt;span class="pl-s"&gt;      bibtex = {&lt;/span&gt;
&lt;span class="pl-s"&gt;        formatting = {&lt;/span&gt;
&lt;span class="pl-s"&gt;          lineLength = 120&lt;/span&gt;
&lt;span class="pl-s"&gt;        }&lt;/span&gt;
&lt;span class="pl-s"&gt;      },&lt;/span&gt;
&lt;span class="pl-s"&gt;      latex = {&lt;/span&gt;
&lt;span class="pl-s"&gt;        build = {&lt;/span&gt;
&lt;span class="pl-s"&gt;          args = { "-pdf", "-interaction=nonstopmode", "-synctex=1" },&lt;/span&gt;
&lt;span class="pl-s"&gt;          executable = "latexmk",&lt;/span&gt;
&lt;span class="pl-s"&gt;          onSave = false&lt;/span&gt;
&lt;span class="pl-s"&gt;        },&lt;/span&gt;
&lt;span class="pl-s"&gt;        forwardSearch = {&lt;/span&gt;
&lt;span class="pl-s"&gt;          args = {},&lt;/span&gt;
&lt;span class="pl-s"&gt;          onSave = false&lt;/span&gt;
&lt;span class="pl-s"&gt;        },&lt;/span&gt;
&lt;span class="pl-s"&gt;        lint = {&lt;/span&gt;
&lt;span class="pl-s"&gt;          onChange = false&lt;/span&gt;
&lt;span class="pl-s"&gt;        }&lt;/span&gt;
&lt;span class="pl-s"&gt;      }&lt;/span&gt;
&lt;span class="pl-s"&gt;    }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-tsserver" class="anchor" aria-hidden="true" href="#tsserver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tsserver&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/theia-ide/typescript-language-server"&gt;https://github.com/theia-ide/typescript-language-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;typescript-language-server&lt;/code&gt; can be installed via &lt;code&gt;:LspInstall tsserver&lt;/code&gt; or by yourself with &lt;code&gt;npm&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install -g typescript-language-server&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Can be installed in Nvim with &lt;code&gt;:LspInstall tsserver&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;tsserver&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    capabilities &lt;span class="pl-k"&gt;=&lt;/span&gt; default capabilities, with offsetEncoding utf&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;typescript-language-server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--stdio&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;javascript&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;javascriptreact&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;javascript.jsx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;typescript&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;typescriptreact&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;typescript.tsx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    on_init &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; to handle changing offsetEncoding
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;package.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-vimls" class="anchor" aria-hidden="true" href="#vimls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;vimls&lt;/h2&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;vimls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;vim-language-server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--stdio&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    docs &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      description &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/iamcco/vim-language-server&lt;span class="pl-cce"&gt;\n\n&lt;/span&gt;If you don't want to use Nvim to install it, then you can use:&lt;span class="pl-cce"&gt;\n&lt;/span&gt;```sh&lt;span class="pl-cce"&gt;\n&lt;/span&gt;npm install -g vim-language-server&lt;span class="pl-cce"&gt;\n&lt;/span&gt;```&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;vim&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    init_options &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      diagnostic &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        enable &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
      },
      indexes &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;,
        gap &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;,
        projectRootPatterns &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;runtime&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nvim&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;autoload&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;plugin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; },
        runtimepath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
      },
      iskeyword &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@,48-57,_,192-255,-#&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      runtimepath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      suggest &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        fromRuntimepath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
        fromVimruntime &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
      },
      vimruntime &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    on_new_config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-yamlls" class="anchor" aria-hidden="true" href="#yamlls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;yamlls&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/redhat-developer/yaml-language-server"&gt;https://github.com/redhat-developer/yaml-language-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yaml-language-server&lt;/code&gt; can be installed via &lt;code&gt;:LspInstall yamlls&lt;/code&gt; or by yourself with &lt;code&gt;npm&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install -g yaml-language-server&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Can be installed in Nvim with &lt;code&gt;:LspInstall yamlls&lt;/code&gt;
This server accepts configuration via the &lt;code&gt;settings&lt;/code&gt; key.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Available settings:&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;yaml.completion&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable/disable completion feature&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;yaml.customTags&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;array&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Custom tags for the parser to use&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;yaml.format.bracketSpacing&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Print spaces between brackets in objects&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;yaml.format.enable&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable/disable default YAML formatter&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;yaml.format.printWidth&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;integer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;80&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Specify the line length that the printer will wrap on&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;yaml.format.proseWrap&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "preserve", "never", "always" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"preserve"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Always: wrap prose if it exeeds the print width, Never: never wrap the prose, Preserve: wrap prose as-is&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;yaml.format.singleQuote&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use single quotes instead of double quotes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;yaml.hover&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable/disable hover feature&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;yaml.schemaStore.enable&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Automatically pull available YAML schemas from JSON Schema Store&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;yaml.schemas&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;object&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;vim.empty_dict()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Associate schemas to YAML files in the current workspace&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;yaml.trace.server&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;enum { "off", "messages", "verbose" }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;"off"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Traces the communication between VSCode and the YAML language service.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;yaml.validate&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable/disable validation feature&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;require&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nvim_lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;yamlls&lt;/span&gt;.&lt;span class="pl-c1"&gt;setup&lt;/span&gt;{}

  Default Values:
    capabilities &lt;span class="pl-k"&gt;=&lt;/span&gt; {
      offsetEncoding &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;utf-8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;utf-16&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; },
      textDocument &lt;span class="pl-k"&gt;=&lt;/span&gt; {
        completion &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          completionItem &lt;span class="pl-k"&gt;=&lt;/span&gt; {
            commitCharactersSupport &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
            deprecatedSupport &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
            documentationFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;markdown&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;plaintext&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; },
            preselectSupport &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
            snippetSupport &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
          },
          completionItemKind &lt;span class="pl-k"&gt;=&lt;/span&gt; {
            valueSet &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;11&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;, &lt;span class="pl-c1"&gt;13&lt;/span&gt;, &lt;span class="pl-c1"&gt;14&lt;/span&gt;, &lt;span class="pl-c1"&gt;15&lt;/span&gt;, &lt;span class="pl-c1"&gt;16&lt;/span&gt;, &lt;span class="pl-c1"&gt;17&lt;/span&gt;, &lt;span class="pl-c1"&gt;18&lt;/span&gt;, &lt;span class="pl-c1"&gt;19&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;21&lt;/span&gt;, &lt;span class="pl-c1"&gt;22&lt;/span&gt;, &lt;span class="pl-c1"&gt;23&lt;/span&gt;, &lt;span class="pl-c1"&gt;24&lt;/span&gt;, &lt;span class="pl-c1"&gt;25&lt;/span&gt; }
          },
          contextSupport &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
          dynamicRegistration &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        },
        documentHighlight &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          dynamicRegistration &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        },
        hover &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          contentFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;markdown&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;plaintext&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; },
          dynamicRegistration &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        },
        references &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          dynamicRegistration &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        },
        signatureHelp &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          dynamicRegistration &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
          signatureInformation &lt;span class="pl-k"&gt;=&lt;/span&gt; {
            documentationFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;markdown&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;plaintext&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
          }
        },
        synchronization &lt;span class="pl-k"&gt;=&lt;/span&gt; {
          didSave &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
          dynamicRegistration &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
          willSave &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
          willSaveWaitUntil &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        }
      }
    }
    cmd &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;yaml-language-server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--stdio&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    filetypes &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
    on_init &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    root_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;root_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, vim.&lt;span class="pl-smi"&gt;fn&lt;/span&gt;.&lt;span class="pl-c1"&gt;getcwd&lt;/span&gt;())
    settings &lt;span class="pl-k"&gt;=&lt;/span&gt; {}&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>neovim</author><guid isPermaLink="false">https://github.com/neovim/nvim-lsp</guid><pubDate>Wed, 29 Jan 2020 00:05:00 GMT</pubDate></item><item><title>openwrt/luci #6 in Lua, Today</title><link>https://github.com/openwrt/luci</link><description>&lt;p&gt;&lt;i&gt;LuCI - OpenWrt Configuration Interface&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-openwrt-luci-feed" class="anchor" aria-hidden="true" href="#openwrt-luci-feed"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenWrt luci feed&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://hosted.weblate.org/engage/openwrt/?utm_source=widget" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/47d411daca21e7a3a1e812d4f30c9c5a41a23cb3/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f6f70656e7772742f2d2f7376672d62616467652e737667" alt="Translation status" data-canonical-src="https://hosted.weblate.org/widgets/openwrt/-/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;p&gt;This is the OpenWrt "luci"-feed containing LuCI - OpenWrt Configuration Interface.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;This feed is enabled by default. Your feeds.conf.default (or feeds.conf) should contain a line like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;src-git luci https://github.com/openwrt/luci.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To install all its package definitions, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./scripts/feeds update luci
./scripts/feeds install -a -p luci
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-api-reference" class="anchor" aria-hidden="true" href="#api-reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API Reference&lt;/h2&gt;
&lt;p&gt;You can browse the generated API documentation directly on Github.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://openwrt.github.io/luci/api/index.html" rel="nofollow"&gt;Server side Lua APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://openwrt.github.io/luci/jsapi/index.html" rel="nofollow"&gt;Client side JavaScript APIs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;Documentation for developing and extending LuCI can be found &lt;a href="https://github.com/openwrt/luci/wiki"&gt;in the Wiki&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;See &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-package-guidelines" class="anchor" aria-hidden="true" href="#package-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Package Guidelines&lt;/h2&gt;
&lt;p&gt;See &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-translation-status" class="anchor" aria-hidden="true" href="#translation-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Translation status&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://hosted.weblate.org/engage/openwrt/?utm_source=widget" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f855e22709cc0ccc6f6e012a71d57c0a9297838e/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f6f70656e7772742f2d2f6d756c74692d6175746f2e737667" alt="Translation status" data-canonical-src="https://hosted.weblate.org/widgets/openwrt/-/multi-auto.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>openwrt</author><guid isPermaLink="false">https://github.com/openwrt/luci</guid><pubDate>Wed, 29 Jan 2020 00:06:00 GMT</pubDate></item><item><title>opentibiabr/otservbr-global #7 in Lua, Today</title><link>https://github.com/opentibiabr/otservbr-global</link><description>&lt;p&gt;&lt;i&gt;OTServBR-Global 12x for OpenTibia community. | Supported by:&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-otserv-brasil---global-server" class="anchor" aria-hidden="true" href="#otserv-brasil---global-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OTServ Brasil - Global Server&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://ci.appveyor.com/project/opentibiabr/otservbr-global" title="Download nightly builds for Windows" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ea98873db37c08b7c1e74e8be2f9038e6bdcb30c/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6f70656e746962696162722f6f747365727662722d676c6f62616c3f6272616e63683d646576656c6f702670617373696e67546578743d646576656c6f702532302d2532304f4b267376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/opentibiabr/otservbr-global?branch=develop&amp;amp;passingText=develop%20-%20OK&amp;amp;svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/opentibiabr/OTServBR-Global" title="Linux Build Status - Develop Branch" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7dc681b18bfbc981ac7311715ca747e9017eefe4/68747470733a2f2f7472617669732d63692e6f72672f6f70656e746962696162722f4f545365727642522d476c6f62616c2e7376673f6272616e63683d646576656c6f70" alt="Build Status" data-canonical-src="https://travis-ci.org/opentibiabr/OTServBR-Global.svg?branch=develop" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/3NxYnyV" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c82d6005fe89e6d4bee3f90a191af37b1f6f023a/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3532383131373530333935323535313933362e7376673f6c6162656c3d646973636f7264" alt="Discord Channel" data-canonical-src="https://img.shields.io/discord/528117503952551936.svg?label=discord" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OTServ Brasil - Global Server is a free and open-source MMORPG server emulator written in C++. It is a fork of the &lt;a href="https://github.com/otland/forgottenserver"&gt;Forgotten Server&lt;/a&gt; project. To connect to the server and to take a stable experience, you can use our &lt;a href="https://forums.otserv.com.br/index.php?/forums/topic/167933-otservbr-global-cliente%C2%A0tibia-10-cliente-tibia-11-cliente-tibia-12/" rel="nofollow"&gt;own client&lt;/a&gt; and if you want to edit something, check our &lt;a href="https://github.com/opentibiabr/tools"&gt;customized tools&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;WARNING: YOU NEED TO UNZIP THE MAP BEFORE START THE SERVER.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forums.otserv.com.br/index.php?/forums/topic/167896-windowsvc2017-compilando-sources-otservbr-global/" rel="nofollow"&gt;Compiling on Windows&lt;/a&gt;, alternatively download &lt;a href="https://ci.appveyor.com/project/opentibiabr/otservbr-global" rel="nofollow"&gt;nightly builds for Windows&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-issues" class="anchor" aria-hidden="true" href="#issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues&lt;/h3&gt;
&lt;p&gt;We use the &lt;a href="https://github.com/opentibiabr/OTServBR-Global/issues"&gt;issue tracker on GitHub&lt;/a&gt;. Keep in mind that everyone who is watching the repository gets notified by e-mail when there is an activity, so be thoughtful and avoid writing comments that aren't meant for an issue (e.g. "+1"). If you'd like for an issue to be fixed faster, you should either fix it yourself and submit a pull request, or place a bounty on the issue.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-special-thanks" class="anchor" aria-hidden="true" href="#special-thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special Thanks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;our partners&lt;/li&gt;
&lt;li&gt;our crew (majesty, gpedro, eduardo dantas)&lt;/li&gt;
&lt;li&gt;our testers (raphaellb, petardako, szulcek and olimpotibia)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/opentibiabr/OTServBR-Global/graphs/contributors"&gt;our contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FearLucien"&gt;fear lucien&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Eternal-Scripts"&gt;cjaker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/slavidodo"&gt;slavidodo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ottools"&gt;mignari and our awesome tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattyx14/otxserver"&gt;mattyx14/otxserver&lt;/a&gt; and contributors.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/otland/forgottenserver"&gt;otland/forgottenserver&lt;/a&gt; and contributors.&lt;/li&gt;
&lt;li&gt;if we forget someone, we apologize by forgot you. but you know, &lt;strong&gt;forgot&lt;/strong&gt;tenserver.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h3&gt;
&lt;p&gt;If you want to sponsor here, join on discord and send a message for one of our administrators.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-partners" class="anchor" aria-hidden="true" href="#partners"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Partners&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://forums.otserv.com.br" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ca24083d0174860497a2289f9934a75348797af9/68747470733a2f2f666f72756d732e6f74736572762e636f6d2e62722f75706c6f6164732f6d6f6e74686c795f323031385f30352f6f7462722e706e672e39663334643831393237386531373063373364643135356130636131623530312e706e67" alt="Supported by OTServ Brasil" data-canonical-src="https://forums.otserv.com.br/uploads/monthly_2018_05/otbr.png.9f34d819278e170c73dd155a0ca1b501.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bit.ly/1q2q4de" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cb01313f502e04a9136f71123bf6206f44754858/68747470733a2f2f6d6b7473632e736572766572636f72652e636f6d2e62722f70726f7465637465646279736572766572636f72652e706e67" alt="Protected by ServerCore" data-canonical-src="https://mktsc.servercore.com.br/protectedbyservercore.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>opentibiabr</author><guid isPermaLink="false">https://github.com/opentibiabr/otservbr-global</guid><pubDate>Wed, 29 Jan 2020 00:07:00 GMT</pubDate></item><item><title>NebulousCloud/helix-plugins #8 in Lua, Today</title><link>https://github.com/NebulousCloud/helix-plugins</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>NebulousCloud</author><guid isPermaLink="false">https://github.com/NebulousCloud/helix-plugins</guid><pubDate>Wed, 29 Jan 2020 00:08:00 GMT</pubDate></item></channel></rss>