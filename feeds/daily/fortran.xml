<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Fortran, Today</title><link>https://github.com/trending/fortran?since=daily</link><description>The top repositories on GitHub for fortran, measured daily</description><pubDate>Sat, 04 Jan 2020 01:10:42 GMT</pubDate><lastBuildDate>Sat, 04 Jan 2020 01:10:42 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>xianyi/OpenBLAS #1 in Fortran, Today</title><link>https://github.com/xianyi/OpenBLAS</link><description>&lt;p&gt;&lt;i&gt;OpenBLAS is an optimized BLAS library based on GotoBLAS2 1.13 BSD version. &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-openblas" class="anchor" aria-hidden="true" href="#openblas"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenBLAS&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/xianyi/OpenBLAS?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Join the chat at https://gitter.im/xianyi/OpenBLAS" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Travis CI: &lt;a href="https://travis-ci.org/xianyi/OpenBLAS" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/157584e487e8949a51cf72e1fab249958c0c34a9/68747470733a2f2f7472617669732d63692e6f72672f7869616e79692f4f70656e424c41532e7376673f6272616e63683d646576656c6f70" alt="Build Status" data-canonical-src="https://travis-ci.org/xianyi/OpenBLAS.svg?branch=develop" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AppVeyor: &lt;a href="https://ci.appveyor.com/project/xianyi/openblas/branch/develop" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/308d8b6dc9555e26feefd5e2a254e6f248297302/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3039736f686433356e386e6b6b7836342f6272616e63682f646576656c6f703f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/09sohd35n8nkkx64/branch/develop?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/xianyi/OpenBLAS/_build/latest?definitionId=1&amp;amp;branchName=develop" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/21a914cf9118842e79f2377e77b2639ccf1c6e5d/68747470733a2f2f6465762e617a7572652e636f6d2f7869616e79692f4f70656e424c41532f5f617069732f6275696c642f7374617475732f7869616e79692e4f70656e424c41533f6272616e63684e616d653d646576656c6f70" alt="Build Status" data-canonical-src="https://dev.azure.com/xianyi/OpenBLAS/_apis/build/status/xianyi.OpenBLAS?branchName=develop" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;OpenBLAS is an optimized BLAS library based on GotoBLAS2 1.13 BSD version.&lt;/p&gt;
&lt;p&gt;Please read the documentation on the OpenBLAS wiki pages: &lt;a href="https://github.com/xianyi/OpenBLAS/wiki"&gt;https://github.com/xianyi/OpenBLAS/wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-binary-packages" class="anchor" aria-hidden="true" href="#binary-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Binary Packages&lt;/h2&gt;
&lt;p&gt;We provide official binary packages for the following platform:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows x86/x86_64&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can download them from &lt;a href="https://sourceforge.net/projects/openblas/files/" rel="nofollow"&gt;file hosting on sourceforge.net&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation-from-source" class="anchor" aria-hidden="true" href="#installation-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation from Source&lt;/h2&gt;
&lt;p&gt;Download from project homepage, &lt;a href="https://xianyi.github.com/OpenBLAS/"&gt;https://xianyi.github.com/OpenBLAS/&lt;/a&gt;, or check out the code
using Git from &lt;a href="https://github.com/xianyi/OpenBLAS.git"&gt;https://github.com/xianyi/OpenBLAS.git&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h3&gt;
&lt;p&gt;Building OpenBLAS requires the following to be installed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GNU Make&lt;/li&gt;
&lt;li&gt;A C compiler, e.g. GCC or Clang&lt;/li&gt;
&lt;li&gt;A Fortran compiler (optional, for LAPACK)&lt;/li&gt;
&lt;li&gt;IBM MASS (optional, see below)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-normal-compile" class="anchor" aria-hidden="true" href="#normal-compile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Normal compile&lt;/h3&gt;
&lt;p&gt;Simply invoking &lt;code&gt;make&lt;/code&gt; (or &lt;code&gt;gmake&lt;/code&gt; on BSD) will detect the CPU automatically.
To set a specific target CPU, use &lt;code&gt;make TARGET=xxx&lt;/code&gt;, e.g. &lt;code&gt;make TARGET=NEHALEM&lt;/code&gt;.
The full target list is in the file &lt;code&gt;TargetList.txt&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cross-compile" class="anchor" aria-hidden="true" href="#cross-compile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cross compile&lt;/h3&gt;
&lt;p&gt;Set &lt;code&gt;CC&lt;/code&gt; and &lt;code&gt;FC&lt;/code&gt; to point to the cross toolchains, and set &lt;code&gt;HOSTCC&lt;/code&gt; to your host C compiler.
The target must be specified explicitly when cross compiling.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;On an x86 box, compile this library for a loongson3a CPU:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make BINARY=64 CC=mips64el-unknown-linux-gnu-gcc FC=mips64el-unknown-linux-gnu-gfortran HOSTCC=gcc TARGET=LOONGSON3A&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On an x86 box, compile this library for a loongson3a CPU with loongcc (based on Open64) compiler:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make CC=loongcc FC=loongf95 HOSTCC=gcc TARGET=LOONGSON3A CROSS=1 CROSS_SUFFIX=mips64el-st-linux-gnu-   NO_LAPACKE=1 NO_SHARED=1 BINARY=32&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-debug-version" class="anchor" aria-hidden="true" href="#debug-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debug version&lt;/h3&gt;
&lt;p&gt;A debug version can be built using &lt;code&gt;make DEBUG=1&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-compile-with-mass-support-on-power-cpu-optional" class="anchor" aria-hidden="true" href="#compile-with-mass-support-on-power-cpu-optional"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compile with MASS support on Power CPU (optional)&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://www.ibm.com/support/home/product/W511326D80541V01/other_software/mathematical_acceleration_subsystem" rel="nofollow"&gt;IBM MASS&lt;/a&gt; library consists of a set of mathematical functions for C, C++, and Fortran applications that are tuned for optimum performance on POWER architectures.
OpenBLAS with MASS requires a 64-bit, little-endian OS on POWER.
The library can be installed as shown:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;On Ubuntu:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;wget -q http://public.dhe.ibm.com/software/server/POWER/Linux/xl-compiler/eval/ppc64le/ubuntu/public.gpg -O- &lt;span class="pl-k"&gt;|&lt;/span&gt; sudo apt-key add -
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;deb http://public.dhe.ibm.com/software/server/POWER/Linux/xl-compiler/eval/ppc64le/ubuntu/ trusty main&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; sudo tee /etc/apt/sources.list.d/ibm-xl-compiler-eval.list
sudo apt-get update
sudo apt-get install libxlmass-devel.8.1.5&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On RHEL/CentOS:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;wget http://public.dhe.ibm.com/software/server/POWER/Linux/xl-compiler/eval/ppc64le/rhel7/repodata/repomd.xml.key
sudo rpm --import repomd.xml.key
wget http://public.dhe.ibm.com/software/server/POWER/Linux/xl-compiler/eval/ppc64le/rhel7/ibm-xl-compiler-eval.repo
sudo cp ibm-xl-compiler-eval.repo /etc/yum.repos.d/
sudo yum install libxlmass-devel.8.1.5&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After installing the MASS library, compile OpenBLAS with &lt;code&gt;USE_MASS=1&lt;/code&gt;.
For example, to compile on Power8 with MASS support: &lt;code&gt;make USE_MASS=1 TARGET=POWER8&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-install-to-a-specific-directory-optional" class="anchor" aria-hidden="true" href="#install-to-a-specific-directory-optional"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install to a specific directory (optional)&lt;/h3&gt;
&lt;p&gt;Use &lt;code&gt;PREFIX=&lt;/code&gt; when invoking &lt;code&gt;make&lt;/code&gt;, for example&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make install PREFIX=your_installation_directory&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default installation directory is &lt;code&gt;/opt/OpenBLAS&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-cpus-and-operating-systems" class="anchor" aria-hidden="true" href="#supported-cpus-and-operating-systems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported CPUs and Operating Systems&lt;/h2&gt;
&lt;p&gt;Please read &lt;code&gt;GotoBLAS_01Readme.txt&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-additional-supported-cpus" class="anchor" aria-hidden="true" href="#additional-supported-cpus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional supported CPUs&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-x86x86-64" class="anchor" aria-hidden="true" href="#x86x86-64"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;x86/x86-64&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Intel Xeon 56xx (Westmere)&lt;/strong&gt;: Used GotoBLAS2 Nehalem codes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Intel Sandy Bridge&lt;/strong&gt;: Optimized Level-3 and Level-2 BLAS with AVX on x86-64.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Intel Haswell&lt;/strong&gt;: Optimized Level-3 and Level-2 BLAS with AVX2 and FMA  on x86-64.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Intel Skylake&lt;/strong&gt;: Optimized Level-3 and Level-2 BLAS with AVX512 and FMA  on x86-64.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AMD Bobcat&lt;/strong&gt;: Used GotoBLAS2 Barcelona codes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AMD Bulldozer&lt;/strong&gt;: x86-64 ?GEMM FMA4 kernels. (Thanks to Werner Saar)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AMD PILEDRIVER&lt;/strong&gt;: Uses Bulldozer codes with some optimizations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AMD STEAMROLLER&lt;/strong&gt;: Uses Bulldozer codes with some optimizations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AMD ZEN&lt;/strong&gt;: Uses Haswell codes with some optimizations.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-mips64" class="anchor" aria-hidden="true" href="#mips64"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MIPS64&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ICT Loongson 3A&lt;/strong&gt;: Optimized Level-3 BLAS and the part of Level-1,2.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ICT Loongson 3B&lt;/strong&gt;: Experimental&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-arm" class="anchor" aria-hidden="true" href="#arm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ARM&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ARMv6&lt;/strong&gt;: Optimized BLAS for vfpv2 and vfpv3-d16 (e.g. BCM2835, Cortex M0+)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ARMv7&lt;/strong&gt;: Optimized BLAS for vfpv3-d32 (e.g. Cortex A8, A9 and A15)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-arm64" class="anchor" aria-hidden="true" href="#arm64"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ARM64&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ARMv8&lt;/strong&gt;: Experimental&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ARM Cortex-A57&lt;/strong&gt;: Experimental&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-ppcppc64" class="anchor" aria-hidden="true" href="#ppcppc64"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PPC/PPC64&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;POWER8&lt;/strong&gt;: Optimized BLAS, only for PPC64LE (Little Endian), only with &lt;code&gt;USE_OPENMP=1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;POWER9&lt;/strong&gt;: Optimized Level-3 BLAS (real) and some Level-1,2. PPC64LE with OpenMP only.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-ibm-zenterprise-system" class="anchor" aria-hidden="true" href="#ibm-zenterprise-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IBM zEnterprise System&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Z13&lt;/strong&gt;: Optimized Level-3 BLAS and Level-1,2 (double precision)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Z14&lt;/strong&gt;: Optimized Level-3 BLAS and Level-1,2 (single precision)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-supported-os" class="anchor" aria-hidden="true" href="#supported-os"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported OS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GNU/Linux&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MinGW or Visual Studio (CMake)/Windows&lt;/strong&gt;: Please read &lt;a href="https://github.com/xianyi/OpenBLAS/wiki/How-to-use-OpenBLAS-in-Microsoft-Visual-Studio"&gt;https://github.com/xianyi/OpenBLAS/wiki/How-to-use-OpenBLAS-in-Microsoft-Visual-Studio&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Darwin/macOS&lt;/strong&gt;: Experimental. Although GotoBLAS2 supports Darwin, we are not macOS experts.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FreeBSD&lt;/strong&gt;: Supported by the community. We don't actively test the library on this OS.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OpenBSD&lt;/strong&gt;: Supported by the community. We don't actively test the library on this OS.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DragonFly BSD&lt;/strong&gt;: Supported by the community. We don't actively test the library on this OS.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Android&lt;/strong&gt;: Supported by the community. Please read &lt;a href="https://github.com/xianyi/OpenBLAS/wiki/How-to-build-OpenBLAS-for-Android"&gt;https://github.com/xianyi/OpenBLAS/wiki/How-to-build-OpenBLAS-for-Android&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Statically link with &lt;code&gt;libopenblas.a&lt;/code&gt; or dynamically link with &lt;code&gt;-lopenblas&lt;/code&gt; if OpenBLAS was
compiled as a shared library.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-setting-the-number-of-threads-using-environment-variables" class="anchor" aria-hidden="true" href="#setting-the-number-of-threads-using-environment-variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting the number of threads using environment variables&lt;/h3&gt;
&lt;p&gt;Environment variables are used to specify a maximum number of threads.
For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; OPENBLAS_NUM_THREADS=4
&lt;span class="pl-k"&gt;export&lt;/span&gt; GOTO_NUM_THREADS=4
&lt;span class="pl-k"&gt;export&lt;/span&gt; OMP_NUM_THREADS=4&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The priorities are &lt;code&gt;OPENBLAS_NUM_THREADS&lt;/code&gt; &amp;gt; &lt;code&gt;GOTO_NUM_THREADS&lt;/code&gt; &amp;gt; &lt;code&gt;OMP_NUM_THREADS&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you compile this library with &lt;code&gt;USE_OPENMP=1&lt;/code&gt;, you should set the &lt;code&gt;OMP_NUM_THREADS&lt;/code&gt;
environment variable; OpenBLAS ignores &lt;code&gt;OPENBLAS_NUM_THREADS&lt;/code&gt; and &lt;code&gt;GOTO_NUM_THREADS&lt;/code&gt; when
compiled with &lt;code&gt;USE_OPENMP=1&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-setting-the-number-of-threads-at-runtime" class="anchor" aria-hidden="true" href="#setting-the-number-of-threads-at-runtime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting the number of threads at runtime&lt;/h3&gt;
&lt;p&gt;We provide the following functions to control the number of threads at runtime:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;goto_set_num_threads&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; num_threads);
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;openblas_set_num_threads&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; num_threads);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you compile this library with &lt;code&gt;USE_OPENMP=1&lt;/code&gt;, you should use the above functions too.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reporting-bugs" class="anchor" aria-hidden="true" href="#reporting-bugs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting bugs&lt;/h2&gt;
&lt;p&gt;Please submit an issue in &lt;a href="https://github.com/xianyi/OpenBLAS/issues"&gt;https://github.com/xianyi/OpenBLAS/issues&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;OpenBLAS users mailing list: &lt;a href="https://groups.google.com/forum/#!forum/openblas-users" rel="nofollow"&gt;https://groups.google.com/forum/#!forum/openblas-users&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OpenBLAS developers mailing list: &lt;a href="https://groups.google.com/forum/#!forum/openblas-dev" rel="nofollow"&gt;https://groups.google.com/forum/#!forum/openblas-dev&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-change-log" class="anchor" aria-hidden="true" href="#change-log"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change log&lt;/h2&gt;
&lt;p&gt;Please see Changelog.txt to view the differences between OpenBLAS and GotoBLAS2 1.13 BSD version.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Please read the &lt;a href="https://github.com/xianyi/OpenBLAS/wiki/Faq"&gt;FAQ&lt;/a&gt; first.&lt;/li&gt;
&lt;li&gt;Please use GCC version 4.6 and above to compile Sandy Bridge AVX kernels on Linux/MinGW/BSD.&lt;/li&gt;
&lt;li&gt;Please use Clang version 3.1 and above to compile the library on Sandy Bridge microarchitecture.
Clang 3.0 will generate the wrong AVX binary code.&lt;/li&gt;
&lt;li&gt;Please use GCC version 6 or LLVM version 6 and above to compile Skylake AVX512 kernels.&lt;/li&gt;
&lt;li&gt;The number of CPUs/cores should less than or equal to 256. On Linux &lt;code&gt;x86_64&lt;/code&gt; (&lt;code&gt;amd64&lt;/code&gt;),
there is experimental support for up to 1024 CPUs/cores and 128 numa nodes if you build
the library with &lt;code&gt;BIGNUMA=1&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;OpenBLAS does not set processor affinity by default.
On Linux, you can enable processor affinity by commenting out the line &lt;code&gt;NO_AFFINITY=1&lt;/code&gt; in
Makefile.rule. However, note that this may cause
&lt;a href="https://stat.ethz.ch/pipermail/r-sig-hpc/2012-April/001348.html" rel="nofollow"&gt;a conflict with R parallel&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;On Loongson 3A, &lt;code&gt;make test&lt;/code&gt; may fail with a &lt;code&gt;pthread_create&lt;/code&gt; error (&lt;code&gt;EAGAIN&lt;/code&gt;).
However, it will be okay when you run the same test case on the shell.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/xianyi/OpenBLAS/issues"&gt;Check for open issues&lt;/a&gt; or open a fresh issue
to start a discussion around a feature idea or a bug.&lt;/li&gt;
&lt;li&gt;Fork the &lt;a href="https://github.com/xianyi/OpenBLAS"&gt;OpenBLAS&lt;/a&gt; repository to start making your changes.&lt;/li&gt;
&lt;li&gt;Write a test which shows that the bug was fixed or that the feature works as expected.&lt;/li&gt;
&lt;li&gt;Send a pull request. Make sure to add yourself to &lt;code&gt;CONTRIBUTORS.md&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-donation" class="anchor" aria-hidden="true" href="#donation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donation&lt;/h2&gt;
&lt;p&gt;Please read &lt;a href="https://github.com/xianyi/OpenBLAS/wiki/Donation"&gt;this wiki page&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>xianyi</author><guid isPermaLink="false">https://github.com/xianyi/OpenBLAS</guid><pubDate>Sat, 04 Jan 2020 00:01:00 GMT</pubDate></item><item><title>GEOS-ESM/GEOSgcm_GridComp #2 in Fortran, Today</title><link>https://github.com/GEOS-ESM/GEOSgcm_GridComp</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-geos-gcm-component" class="anchor" aria-hidden="true" href="#geos-gcm-component"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GEOS GCM Component&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/GEOS-ESM/GEOSgcm_GridComp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9600b6c21a3510382468e1d30a5242cf6f64106c/68747470733a2f2f636972636c6563692e636f6d2f67682f47454f532d45534d2f47454f5367636d5f47726964436f6d702e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/GEOS-ESM/GEOSgcm_GridComp.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>GEOS-ESM</author><guid isPermaLink="false">https://github.com/GEOS-ESM/GEOSgcm_GridComp</guid><pubDate>Sat, 04 Jan 2020 00:02:00 GMT</pubDate></item><item><title>GEOS-ESM/MAPL #3 in Fortran, Today</title><link>https://github.com/GEOS-ESM/MAPL</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-mapl-repository" class="anchor" aria-hidden="true" href="#mapl-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MAPL Repository&lt;/h1&gt;
&lt;p&gt;MAPL is a foundation layer of the GEOS architecture, whose original purpose is to supplement the Earth System Modeling Framework (ESMF).   MAPL fills in missing capabilities of ESMF, provides higher-level interfaces for common boiler-plate logic, and enforces various componentization conventions across ESMF gridded components within GEOS.&lt;/p&gt;
&lt;p&gt;MAPL has 3 primary subdirectories:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;MAPL_Base - pretty much the core of MAPL as described above.&lt;/li&gt;
&lt;li&gt;GMAO_pFIO - this is a high level I/O layer that supports input and output as well as checkpointing for GEOS.   The layer heavily uses object oriented Fortran and is intended to be highly extensible.    The layer includes client-server capabilities that allow using a dedicated set of nodes to cache output before writing to disk, and is highly parallel.&lt;/li&gt;
&lt;li&gt;MAPL_cfio - this is a deprecated lower-level I/O layer that is generally replaced by GMAO_pFIO.    Not all of the strings have been cut yet.  Sometime soon, this directory will be eliminated.&lt;/li&gt;
&lt;/ol&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>GEOS-ESM</author><guid isPermaLink="false">https://github.com/GEOS-ESM/MAPL</guid><pubDate>Sat, 04 Jan 2020 00:03:00 GMT</pubDate></item><item><title>RobertPincus/rte-rrtmgp #4 in Fortran, Today</title><link>https://github.com/RobertPincus/rte-rrtmgp</link><description>&lt;p&gt;&lt;i&gt;RTE+RRTMGP is a set of codes for computing radiative fluxes in planetary atmospheres.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-rterrtmgp" class="anchor" aria-hidden="true" href="#rterrtmgp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RTE+RRTMGP&lt;/h1&gt;
&lt;p&gt;This is the repository for RTE+RRTMGP, a set of codes for computing radiative fluxes in planetary atmospheres. RTE+RRTMGP is described in a &lt;a href="https://doi.org/10.1029/2019MS001621" rel="nofollow"&gt;paper&lt;/a&gt; in &lt;a href="http://james.agu.org" rel="nofollow"&gt;Journal of Advances in Modeling Earth Systems&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;RRTMGP uses a k-distribution to provide an optical description (absorption and possibly Rayleigh optical depth) of the gaseous atmosphere, along with the relevant source functions, on a pre-determined spectral grid given temperatures, pressures, and gas concentration. The k-distribution currently distributed with this package is applicable to the Earth's atmosphere under present-day, pre-industrial, and 4xCO2 conditions.&lt;/p&gt;
&lt;p&gt;RTE computes fluxes given spectrally-resolved optical descriptions and source functions. The fluxes are normally summarized or reduced via a user extensible class.&lt;/p&gt;
&lt;p&gt;Example programs and documenation are evolving - please see examples/ in the repo and Wiki on the project's Github page. Suggestions are welcome. Meanwhile for questions please contact Robert Pincus and Eli Mlawer at &lt;a href="mailto:rrtmgp@aer.com"&gt;rrtmgp@aer.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-the-libraries" class="anchor" aria-hidden="true" href="#building-the-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the libraries.&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cd build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Set environment variables &lt;code&gt;FC&lt;/code&gt; (the Fortran 2003 compiler) and &lt;code&gt;FCFLAGS&lt;/code&gt; (compiler flags). Alternately create a Makefile.conf that sets these variables. You could also link to an existing file.&lt;/li&gt;
&lt;li&gt;Set environment variable &lt;code&gt;RTE_KERNELS&lt;/code&gt; to &lt;code&gt;openacc&lt;/code&gt; if you want the OpenACC kernels rather than the default.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;p&gt;Two examples are provided, one for clear skies and one including clouds. See the README file and codes in each directory for further information.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>RobertPincus</author><guid isPermaLink="false">https://github.com/RobertPincus/rte-rrtmgp</guid><pubDate>Sat, 04 Jan 2020 00:04:00 GMT</pubDate></item><item><title>NGEET/fates #5 in Fortran, Today</title><link>https://github.com/NGEET/fates</link><description>&lt;p&gt;&lt;i&gt;repository for the Functionally Assembled Terrestrial Ecosystem Simulator (FATES)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-fates" class="anchor" aria-hidden="true" href="#fates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FATES&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;This repository holds the Functionally Assembled Terrestrial Ecosystem Simulator (FATES).  FATES is a numerical terrestrial ecosystem model. Its development and support is primarily supported by the Department of Energy's Office of Science, through the Next Generation Ecosystem Experiment - Tropics (&lt;a href="https://ngee-tropics.lbl.gov/" rel="nofollow"&gt;NGEE-T&lt;/a&gt;) project.&lt;/p&gt;
&lt;p&gt;For more information on the FATES model, see our &lt;a href="https://github.com/NGEET/fates/wiki"&gt;wiki&lt;/a&gt; and &lt;a href="https://fates-docs.readthedocs.io/en/latest/index.html" rel="nofollow"&gt;technical documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-important-guides" class="anchor" aria-hidden="true" href="#important-guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important Guides:&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://github.com/NGEET/fates/blob/master/CONTRIBUTING.md"&gt;How to Contribute&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/NGEET/fates/wiki/Current-Unsupported-or-Broken-Features"&gt;List of Unsupported or Broken Features&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/NGEET/fates/blob/master/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-important-note" class="anchor" aria-hidden="true" href="#important-note"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important Note:&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Most users should not need to directly clone this repository.  FATES needs to be run through a host model, and all supported host-models are in charge of cloning and loading the fates software.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;FATES has support to be run via the Energy Exascale Earth System Model (E3SM), the Community Earth System Model (CESM), or its land component, the Community Terrestrial Systems Model (CTSM).&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/E3SM-Project/E3SM"&gt;https://github.com/E3SM-Project/E3SM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ESCOMP/cesm"&gt;https://github.com/ESCOMP/cesm&lt;/a&gt;
&lt;a href="https://github.com/ESCOMP/ctsm"&gt;https://github.com/ESCOMP/ctsm&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-important-note-about-host-models-and-compatible-branches" class="anchor" aria-hidden="true" href="#important-note-about-host-models-and-compatible-branches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important Note About Host-Models and Compatible Branches:&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;The FATES and E3SM teams maintain compatability of the NGEET/FATES master branch with the &lt;strong&gt;E3SM master&lt;/strong&gt; branch. When changes to the FATES API force compatability updates with E3SM, there may be some modest lag time.&lt;/p&gt;
&lt;p&gt;The FATES team maintains compatability of the NGEET/FATES master branch with the &lt;strong&gt;CTSM fates_next_api&lt;/strong&gt; branch.  Since the FATES team uses this branch for its internal testing, this compatability is tightly (immediately) maintained and these two should always be in sync.  However, CTSM master may become out of sync with FATES master for large periods (months) of time.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>NGEET</author><guid isPermaLink="false">https://github.com/NGEET/fates</guid><pubDate>Sat, 04 Jan 2020 00:05:00 GMT</pubDate></item><item><title>MPAS-Dev/MPAS-Model #6 in Fortran, Today</title><link>https://github.com/MPAS-Dev/MPAS-Model</link><description>&lt;p&gt;&lt;i&gt;Repository for MPAS models and shared framework releases.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-mpas-v70" class="anchor" aria-hidden="true" href="#mpas-v70"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MPAS-v7.0&lt;/h1&gt;
&lt;p&gt;The Model for Prediction Across Scales (MPAS) is a collaborative project for
developing atmosphere, ocean, and other earth-system simulation components for
use in climate, regional climate, and weather studies. The primary development
partners are the climate modeling group at Los Alamos National Laboratory
(COSIM) and the National Center for Atmospheric Research. Both primary
partners are responsible for the MPAS framework, operators, and tools common to
the applications; LANL has primary responsibility for the ocean model, and NCAR
has primary responsibility for the atmospheric model.&lt;/p&gt;
&lt;p&gt;The MPAS framework facilitates the rapid development and prototyping of models
by providing infrastructure typically required by model developers, including
high-level data types, communication routines, and I/O routines. By using MPAS,
developers can leverage pre-existing code and focus more on development of
their model.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BUILDING&lt;/h1&gt;
&lt;p&gt;This README is provided as a brief introduction to the MPAS framework. It does
not provide details about each specific model, nor does it provide building
instructions.&lt;/p&gt;
&lt;p&gt;For information about building and running each core, please refer to each
core's user's guide, which can be found at the following web sites:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mpas-dev.github.io/atmosphere/atmosphere_download.html" rel="nofollow"&gt;MPAS-Atmosphere&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mpas-dev.github.io/land_ice/download.html" rel="nofollow"&gt;MPAS-Albany Land Ice&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mpas-dev.github.io/ocean/releases.html" rel="nofollow"&gt;MPAS-Ocean&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mpas-dev.github.io/sea_ice/releases.html" rel="nofollow"&gt;MPAS-Seaice&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-layout" class="anchor" aria-hidden="true" href="#code-layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Layout&lt;/h2&gt;
&lt;p&gt;Within the MPAS repository, code is laid out as follows. Sub-directories are
only described below the src directory.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;MPAS-Model
├── src
│   ├── registry -- Code for building Registry.xml parser (Shared)
│   ├── driver -- Main driver for MPAS in stand-alone mode (Shared)
│   ├── external -- External software for MPAS (Shared)
│   ├── framework -- MPAS Framework (Includes DDT Descriptions, and shared routines. Shared)
│   ├── operators -- MPAS Opeartors (Includes Operators for MPAS meshes. Shared)
│   ├── inc -- Empty directory for include files that Registry generates (Shared)
│   └── core_* -- Individual model cores.
    └────── testing_and_setup -- tools for setting up configurations and tests cases (Shared)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Model cores are typically developed independently. For information about
building and running a particular core, please refer to that core's user's
guide.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>MPAS-Dev</author><guid isPermaLink="false">https://github.com/MPAS-Dev/MPAS-Model</guid><pubDate>Sat, 04 Jan 2020 00:06:00 GMT</pubDate></item><item><title>GEOS-ESM/UMD_Etc #7 in Fortran, Today</title><link>https://github.com/GEOS-ESM/UMD_Etc</link><description>&lt;p&gt;&lt;i&gt;Repository containing the UMD_Etc code&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;This repo does not have a README.&lt;/i&gt;&lt;/p&gt;</description><author>GEOS-ESM</author><guid isPermaLink="false">https://github.com/GEOS-ESM/UMD_Etc</guid><pubDate>Sat, 04 Jan 2020 00:07:00 GMT</pubDate></item><item><title>MPP-LSM/MPP #8 in Fortran, Today</title><link>https://github.com/MPP-LSM/MPP</link><description>&lt;p&gt;&lt;i&gt;Multi-Physics Problem (MPP) library is a standalone library that solves biophysics problems relevant to global land surface models (LSMs).&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-mpp" class="anchor" aria-hidden="true" href="#mpp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MPP&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/MPP-LSM/MPP/blob/master/License.txt"&gt;&lt;img src="https://camo.githubusercontent.com/6289cd478372b4cc8ce68e6c513b6e24aeb2363f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d425344253230332d2d436c617573652d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/License-BSD%203--Clause-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://zenodo.org/badge/latestdoi/117907556" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ce0aec4f50f923fc861838dcf4a583a5744ce664/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3131373930373535362e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/117907556.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/MPP-LSM/MPP" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/77da2778e7cfa2d1259bdef5f044a9e2d2c1cda7/68747470733a2f2f7472617669732d63692e6f72672f4d50502d4c534d2f4d50502e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/MPP-LSM/MPP.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/MPP-LSM/MPP" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7fa6083cb51f5a9eaac7d41de55c4052ed90a106/68747470733a2f2f636f6465636f762e696f2f67682f4d50502d4c534d2f4d50502f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Code Coverage" data-canonical-src="https://codecov.io/gh/MPP-LSM/MPP/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Multi-Physics Problem (MPP) library is a standalone library that
solves biophysics problems relevant to global land surface models (LSMs).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mac&lt;/li&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;li&gt;C and Fortran compiler&lt;/li&gt;
&lt;li&gt;CMake&lt;/li&gt;
&lt;li&gt;PETSc&lt;/li&gt;
&lt;li&gt;Message Passing Interface&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-installation-instructions" class="anchor" aria-hidden="true" href="#installation-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation instructions&lt;/h3&gt;
&lt;h4&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-install-petsc" class="anchor" aria-hidden="true" href="#install-petsc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install PETSc&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Clone PETSc and check out the &lt;strong&gt;supported&lt;/strong&gt; version.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;directory-of-choice&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
git clone https://bitbucket.org/petsc/petsc petsc
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; petsc
git checkout v3.8.3&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Configure PETSc. (Detailed PETSc installation instructions are available &lt;a href="http://www.mcs.anl.gov/petsc/documentation/installation.html" rel="nofollow"&gt;here&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;2.1. Set PETSc installation location and architecture&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; PETSC_DIR=&lt;span class="pl-smi"&gt;$PWD&lt;/span&gt;
&lt;span class="pl-k"&gt;export&lt;/span&gt; PETSC_ARCH=&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;user-defined&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.2. Set compilers&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Set compilers&lt;/span&gt;
&lt;span class="pl-k"&gt;export&lt;/span&gt; CC=&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Parallel-C-compiler&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;export&lt;/span&gt; CXX=&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Parallel-C++-compiler&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;export&lt;/span&gt; FC=&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Parallel-Fortran-compiler&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;export&lt;/span&gt; MPIEXCE=&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Path-to-mpiexec&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;export&lt;/span&gt; BLAS_DIR=&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Path-to-BLAS-dir&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On Mac OS X, one can set &lt;code&gt;BLAS_DIR&lt;/code&gt; to &lt;code&gt;/System/Library/Frameworks/Accelerate.framework/Versions/Current/Accelerate&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2.3. Run configure&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./configure \
--with-cc=&lt;span class="pl-smi"&gt;$CC&lt;/span&gt;   \
--with-cxx=&lt;span class="pl-smi"&gt;$CXX&lt;/span&gt; \
--with-fc=&lt;span class="pl-smi"&gt;$FC&lt;/span&gt; \
--with-mpiexec=&lt;span class="pl-smi"&gt;$MPIEXEC&lt;/span&gt; \
--with-blas-lapack-lib=&lt;span class="pl-smi"&gt;$BLAS_DIR&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Build PETSc&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;make PETSC_DIR=$PETSC_DIR PETSC_ARCH=$PETSC_ARCH all
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Test PETSc installation&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;make PETSC_DIR=$PETSC_DIR PETSC_ARCH=$PETSC_ARCH test
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-install-mpp" class="anchor" aria-hidden="true" href="#install-mpp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install MPP&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Clone MPP repository from github.com.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;directory-of-choice&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
git clone https://github.com/MPP-LSM/MPP&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Configure MPP&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; MPP
make CC=&lt;span class="pl-smi"&gt;$CC&lt;/span&gt; CXX=&lt;span class="pl-smi"&gt;$CXX&lt;/span&gt; FC=&lt;span class="pl-smi"&gt;$FC&lt;/span&gt; config&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Build MPP&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make CC=&lt;span class="pl-smi"&gt;$CC&lt;/span&gt; CXX=&lt;span class="pl-smi"&gt;$CXX&lt;/span&gt; FC=&lt;span class="pl-smi"&gt;$FC&lt;/span&gt; install&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Run MPP tests&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make CC=&lt;span class="pl-smi"&gt;$CC&lt;/span&gt; CXX=&lt;span class="pl-smi"&gt;$CXX&lt;/span&gt; FC=&lt;span class="pl-smi"&gt;$FC&lt;/span&gt; &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-publication" class="anchor" aria-hidden="true" href="#publication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Publication&lt;/h3&gt;
&lt;p&gt;Bisht, G., Riley, W. J., Hammond, G. E., and Lorenzetti, D. M.,
Development and evaluation of a variably saturated flow model in the global E3SM
Land Model (ELM) version 1.0, Geosci. Model Dev., 11, 4085-4102,
&lt;a href="https://doi.org/10.5194/gmd-11-4085-2018" rel="nofollow"&gt;https://doi.org/10.5194/gmd-11-4085-2018&lt;/a&gt;, 2018&lt;/p&gt;
&lt;p&gt;Bisht, G., &amp;amp; Riley, W. J. (2019). Development and verification of a numerical library
for solving global terrestrial multi‐physics problems. Journal of Advances in
Modeling Earth Systems, 11. &lt;a href="https://doi.org/10.1029/2018MS001560" rel="nofollow"&gt;https://doi.org/10.1029/2018MS001560&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>MPP-LSM</author><guid isPermaLink="false">https://github.com/MPP-LSM/MPP</guid><pubDate>Sat, 04 Jan 2020 00:08:00 GMT</pubDate></item><item><title>BeTR-biogeochemistry-modeling/sbetr #9 in Fortran, Today</title><link>https://github.com/BeTR-biogeochemistry-modeling/sbetr</link><description>&lt;p&gt;&lt;i&gt;Standalone implementation of BeTR, the Biogeochemical Transport and Reaction module&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-betr" class="anchor" aria-hidden="true" href="#betr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BeTR&lt;/h1&gt;
&lt;p&gt;BeTR is a standalone reactive transport libary designed to be
integrated into land surface models such as CLM and ALM.&lt;/p&gt;
&lt;p&gt;Jinyun Tang, &lt;a href="mailto:jinyuntang@lbl.gov"&gt;jinyuntang@lbl.gov&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;References&lt;/p&gt;
&lt;p&gt;Tang, J. Y., Riley, W. J., Koven, C. D., and Subin, Z. M.: CLM4-BeTR, a generic biogeochemical transport and reaction module for CLM4: model development, evaluation, and application, Geosci. Model Dev., 6, 127-140, doi:10.5194/gmd-6-127-2013, 2013.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/BeTR-biogeochemistry-modeling/sbetr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d1df7199b63fcd93ebde293dc4f2a5eede80aef4/68747470733a2f2f7472617669732d63692e6f72672f426554522d62696f67656f6368656d69737472792d6d6f64656c696e672f73626574722e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/BeTR-biogeochemistry-modeling/sbetr.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h3&gt;
&lt;p&gt;Requirements for configuring and building BeTR:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;cmake &amp;gt; 3.1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fortran compiler&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;gfortran &amp;gt; 5.3.0. Older versions make work, but are not
supported. At a minimum, you will have to change the compiler
flags. The pfunit testing frame work can NOT be build with gcc &amp;lt;
4.9.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;intel - TBD&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pgi - TBD&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nag - TBD&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;c compiler - only used for 3rd-party libraries. Any modern compiler
should work. The following versions are tested:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;clang - approximately 7.3&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;gcc - 5.3&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;python 2.7&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All third party dependancies for building and running standalone BeTR
are included in the 3rd-party directory.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-build" class="anchor" aria-hidden="true" href="#build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build&lt;/h3&gt;
&lt;p&gt;BeTR uses a cmake based build system. The default build is debug. To
build using the default debug configuration:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ${SBETR_ROOT}
make config
make all
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will do an out of source build in:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;${SBETR_ROOT}/build/Xyz-Debug/src
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where Xyz is the build configuration.&lt;/p&gt;
&lt;p&gt;The standalone &lt;code&gt;sbetr&lt;/code&gt; executable is in:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;${SBETR_(ROOT}/build/Xyz-Debug/src/driver/sbetr
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To build a release configuration of the code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ${SBETR_ROOT}
make debug=0 config
make debug=0 all
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following command will create local/bin/, where sbetr will be installed.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Please note, the top level make file providing &lt;code&gt;make config&lt;/code&gt; etc is a
convenience for the most common use cases. You don't have to use it
and can specify all configuration and build commands manually.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hpc-machines" class="anchor" aria-hidden="true" href="#hpc-machines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HPC machines&lt;/h3&gt;
&lt;p&gt;To run betr on cluster, one needs to load the following (take intel
compiler for example) the compiler, cmake, python (&amp;gt;2.7), and
mkl, the configuration command is then&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make config CC=icc CXX=icpc FC=ifort
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and the install command is&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make install CC=icc CXX=icpc FC=ifort
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Others should be done similarly as one run betr on a desktop or
laptop, with appropriate modifications as described above.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;yellowstone&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;intel&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;module unload ncarbinlibs
module load intel/16.0.2
module load mkl/11.3.0
module load cmake/3.3.1
module load python/2.7.7

make CC=icc CXX=icpc FC=ifort config all install &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;gnu - doesn't work yet, can't link blas&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;module swap intel gnu/5.3.0
module load cmake/3.3.1
module load python/2.7.7

make config all install &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pgi - in progress&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;module swap intel pgi&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;edison&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;intel&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;module load cmake/3.3.2
module load intel/15.0.1.133

make CC=icc CXX=icpc FC=ifort config all install test
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cori&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;intel&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;module load cmake/3.3.2
module load intel/16.0.0.109

make CC=icc CXX=icpc FC=ifort config all install test
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h2&gt;
&lt;p&gt;BeTR testing inclueds &lt;a href="http://pfunit.sourceforge.net/" rel="nofollow"&gt;pFUnit&lt;/a&gt; based
unit tests and a systems level regression test driver.&lt;/p&gt;
&lt;p&gt;pFUnit tests are created automatical during the build. Run the unit
tests with&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or by calling ctest in the build directory.&lt;/p&gt;
&lt;p&gt;Regression tests are based on calling the standalone sbetr executable
and checking the results are within a specified epsilon of a baseline.&lt;/p&gt;
&lt;p&gt;Regression testing will eventually be integrated into the 'make test'
command with unit tests. For now they have to be run separately.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd regression-tests
make rtest
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-creating-new-tests" class="anchor" aria-hidden="true" href="#creating-new-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating new tests&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-regression-tests" class="anchor" aria-hidden="true" href="#regression-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Regression tests&lt;/h4&gt;
&lt;p&gt;Regression tests are grouped into test suites, which are defined by
configuration files. The directory where the configuration file is
referred to as the 'suite directory'. A suite directory can contain
multiple configuratin files. Configuration files are in cfg/ini
format, and have the following information:&lt;/p&gt;
&lt;div class="highlight highlight-source-ini"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;[default_tolerances]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;category = value type&lt;/span&gt;
&lt;span class="pl-k"&gt;general&lt;/span&gt; = 1.0e-14 absolute
&lt;span class="pl-k"&gt;concentration&lt;/span&gt; = 1.0e-13 relative

&lt;span class="pl-en"&gt;[mock]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; override default tolarance&lt;/span&gt;
&lt;span class="pl-k"&gt;concentration&lt;/span&gt; = 1.0e-14 absolute
&lt;span class="pl-k"&gt;timeout&lt;/span&gt; = 30 seconds
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Where there is one required section: &lt;code&gt;default_tolerances&lt;/code&gt;. This
contains the default tolerances for &lt;em&gt;all tests in this suite.&lt;/em&gt;
Tolerances are specified by category, concentration, velocity,
general. The type of toleraces can be absolute, relative or
percent. These values can be over ridden for individual tests.&lt;/p&gt;
&lt;p&gt;In general, tests should be kept short. Long tests are harder to debug
and they rarely provide a benefit over shorter tests. If a particular
set of conditions needs to be tested, it is better to create a special
forcing data set that exercises those conditions in a short test. The
test suite enforces a timeout limit for tests to prevent infinite
loops and other hangs from running. If a test is exceeding the default
timeout limit, then it can be increased on a case by case basis in the
test suite configuration.&lt;/p&gt;
&lt;p&gt;All other sections are considered to define tests. The name of the
section is the test name. It is expected that a &lt;code&gt;test_name.namelist&lt;/code&gt;
file will be present in the same directory as the suite configuration
file. sbetr is run from the same directory as the configuration file,
and all paths in the namelist file must be relative to this directory.
sbetr will write a &lt;code&gt;test_name.regression&lt;/code&gt; file with the regression
test data. This is compared to &lt;code&gt;test_name.regression.baseline&lt;/code&gt;, also
in the same directory as the suite configuration file. Keys in the
test section are used to modify the test, either by changing the
tolerance, or modifying some other functionality, e.g. we will
eventually have restart tests triggered by a setting in the test
section.&lt;/p&gt;
&lt;p&gt;Setting tolerances is a balancing act that requires some trial and
error. Test tolerances should be set as tightly as possible to
identify small changes in behavior. But they should be loose enough to
be platform independent, so we don't get false positives when moving
to a new platform.&lt;/p&gt;
&lt;p&gt;A requirement for testing is that the repository be self contained and
platform independent. All input data and baselines should be contained
in the repository. Inorder to be revision control friendly, the data
should be saved in the repository as plain text files. Netcdf files
should be converted to their text representation with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ncdump -p 9,17 ${DATA}.nc &amp;gt; ${DATA}.nc.cdl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These files will be automatically converted back to binary when the
test suite is run with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ncgen -o ${DATA}.nc ${DATA}.nc.cdl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check the cdl file to ensure all variables have the same data type as
is expected in the code, i.e. double percision for r8. Before saving a
cdl file in the repo, verify that the round trip of cdl-nc-cdl results
in the same files. &lt;em&gt;Failure to do so will result in unreproducible
test results!&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-unit-tests" class="anchor" aria-hidden="true" href="#unit-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unit tests&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Document procedure for new pFUnit tests&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running" class="anchor" aria-hidden="true" href="#running"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running&lt;/h2&gt;
&lt;p&gt;sbetr takes exactly one command line arguement, the name of the input
namelist file. The namelist input file specifies runtime configuration
and paths to other input data files. NOTE: paths are relative to the
directory where sbetr is executed!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ${SBETR_ROOT}/example_input
${SBETR_ROOT}/local/bin/sbetr mock.namelist
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The example is set with mock run that transport five tracers: N2, O2,
AR, CO2, CH4 and DOC&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-create-customized-testing-runs" class="anchor" aria-hidden="true" href="#create-customized-testing-runs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;create customized testing runs&lt;/h2&gt;
&lt;div class="highlight highlight-source-ini"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use the python script&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; first check how the script should be used&lt;/span&gt;

python tools/python/create_newcase.py --help

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; then create your case&lt;/span&gt;

python tools/python/create_newcase.py --case_name  your_case

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; config and build your case&lt;/span&gt;

cd your_case

python case_make.py --task config --CC $cc --CXX $cxx --FC $fc

python case_make.py --task install --CC $cc --CXX $cxx --FC $fc

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; run the model&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; column mode&lt;/span&gt;

./sbetr reaction.1d.sbetr.nl

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; single layer mode&lt;/span&gt;

./sbetr reaction.jar.sbetr.nl&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;Key direcotries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;3rd-party - select 3rd-party sources that betr depends on.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;src - contains model code&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;src/betr - LM independent betr library&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;src/driver - standalone driver&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;src/stub_clm, esmf_wrf_timemgr, src/shr - stub version of land
model code needed to make the standalone LM interfaces compile.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Application - place to hold customized betr applications&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cmake - contains utilities for the configuration and build system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;regression_tests - regressiont test input and baselines.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To configure a new bgc implementation, follow the example in
BGCReactionsMockRunType and add the new configuration name to
ApplicationsFactoryMod.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>BeTR-biogeochemistry-modeling</author><guid isPermaLink="false">https://github.com/BeTR-biogeochemistry-modeling/sbetr</guid><pubDate>Sat, 04 Jan 2020 00:09:00 GMT</pubDate></item><item><title>E3SM-Project/Ocean-BGC #10 in Fortran, Today</title><link>https://github.com/E3SM-Project/Ocean-BGC</link><description>&lt;p&gt;&lt;i&gt;This repository will house the columnized ocean BGC modules&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;This repo does not have a README.&lt;/i&gt;&lt;/p&gt;</description><author>E3SM-Project</author><guid isPermaLink="false">https://github.com/E3SM-Project/Ocean-BGC</guid><pubDate>Sat, 04 Jan 2020 00:10:00 GMT</pubDate></item><item><title>CVMix/CVMix-src #11 in Fortran, Today</title><link>https://github.com/CVMix/CVMix-src</link><description>&lt;p&gt;&lt;i&gt;CVMix source code (including protex documentation) as well as build system and examples / tests&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-last-update-july-23-2014" class="anchor" aria-hidden="true" href="#last-update-july-23-2014"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Last update: July 23, 2014&lt;/h2&gt;
&lt;p&gt;CVMix is a transparent, robust, flexible, and well-documented open source
Fortran library for parameterizing ocean vertical mixing processes. It contains
the following first-order closures:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Background [time-independent] mixing, including the Bryan and Lewis (1979)
parameterization&lt;/li&gt;
&lt;li&gt;Convective mixing (both density-based and the Brunt-Vaisala scheme)&lt;/li&gt;
&lt;li&gt;Double diffusion mixing, as described in Large, et al. (1994) and modified
according to Danabasoglu, et al. (2006)&lt;/li&gt;
&lt;li&gt;The KPP boundary layer mixing scheme from Large, et al. 1994&lt;/li&gt;
&lt;li&gt;Shear [Richardson number-based] mixing, including both Pacanowski and
Philander (1981) and the shear mixing used in Large, et al. (1994)&lt;/li&gt;
&lt;li&gt;Tidal mixing, which currently only offers the method described in Simmons,
et al. (2004)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The library can be built on its own and linked in to a general ocean
circulation model. Additionally, CVMix is packaged with a very light-weight
stand-alone driver that offers the ability to run quick (typically single
column) tests to ensure everything is working properly.&lt;/p&gt;
&lt;p&gt;Community input is both welcomed and encouraged. Documentation online at&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/CVMix/CVMix-src/wiki"&gt;https://github.com/CVMix/CVMix-src/wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;goes into details about how to contribute, but basically we ask three things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Follow the CVMix coding policies to ensure all modules use the same
formatting and all documentation is consistent.&lt;/li&gt;
&lt;li&gt;Run the provided suite of regression tests to ensure you did not
accidentally change something in another module.&lt;/li&gt;
&lt;li&gt;Provide a stand-alone driver for your method so that others can ensure they
do not accidentally change something in your module.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-installation-notes" class="anchor" aria-hidden="true" href="#installation-notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;INSTALLATION NOTES&lt;/h2&gt;
&lt;p&gt;The src directory contains a Makefile and a simple 'make' should be sufficient
to build the standalone driver. The first time you build, the 'cvmix_setup'
utility will run and prompt you for compiler and netcdf information - it will
only run once, and the info is saved in bld/.CVMix_env.&lt;/p&gt;
&lt;p&gt;To build with netcdf, run 'make netcdf'.&lt;/p&gt;
&lt;p&gt;The default executable is $CVMix/bin/cvmix, but it can be overwritten with
'make EXE=[executable]'.&lt;/p&gt;
&lt;p&gt;To build just the library, run the following (from src/shared):&lt;/p&gt;
&lt;p&gt;$ make FC=[compiler]                        &lt;br&gt;
FCFLAGS=[compiler flags]             &lt;br&gt;
INC_DIR=[place to save .mod files]   &lt;br&gt;
LIB_DIR=[place to create libcvmix.a] &lt;br&gt;
OBJ_DIR=[place to save .o files]&lt;/p&gt;
&lt;p&gt;And then use -I$(INC_DIR) -L$(LIB_DIR) -lcvmix when you build software using
the CVMix library.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-directory-structure" class="anchor" aria-hidden="true" href="#directory-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DIRECTORY STRUCTURE&lt;/h2&gt;
&lt;p&gt;bin/ -- Default location for the cvmix executable.&lt;/p&gt;
&lt;p&gt;bld/ -- Contains auxiliary files needed by the build system. CompileFlags.mak
has default compile flags for 5 different compilers -- gfortran,
pgf90, ifort, xlf90, and nagfor, as well as ftn (the Cray wrapper for
pgf90). At this time, no other compilers are supported on Cray systems.
cvmix_setup is a python script that saves information about what
compiler to use and where netCDF is installed in .CVMix_env.&lt;/p&gt;
&lt;p&gt;bld/obj -- Where .o  and .mod files for the stand-alone drivers are stored.&lt;/p&gt;
&lt;p&gt;doc/ -- Contains documentation. At this point, it only has a PDF of the latest
protex in-code notes and a script to generate said PDF.&lt;/p&gt;
&lt;p&gt;git_config/ -- Contains files for recommended git setup of repository. At this
time, only file is git_commit_template.txt, and running&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;           $ git config commit.template git_config/git_commit_template.txt

           Will add comments to default commit log to help organize the
           commit log.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;include/ -- Default location for the .o and .mod files that need to be included
with libcvmix.a.&lt;/p&gt;
&lt;p&gt;inputdata/ -- The stand-alone tidal driver requires some large netCDF files to
provide initial conditions and grid information. These files are
downloaded the first time you run Simmons-test.sh (due to the
file size, they are not kept in the same repository as the source
code).&lt;/p&gt;
&lt;p&gt;lib/ -- Default location for libcvmix.a, the library that can be linked in
to an ocean model.&lt;/p&gt;
&lt;p&gt;reg_tests/ -- Contains functional tests for all mixing methods except
convective. Each test directory contains a shell script that
calls functions defined in common/ to determine what settings to
use for the test. All scripts have a "-h" (or "--help") flag to
print usage options and a "-nc" (or "--netcdf") flag to turn on
netCDF output. Note that the "-nc" is required for the tidal
mixing test because it reads in netcdf data.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;          All directories contain one (or many) NCL script(s) to produce a
          plot from the output; by default these plots are in the PDF
          format.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;reg_tests/Bryan-Lewis/ -- location of the Bryan-Lewis background mixing test
$ ./BL_test.sh&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;          * plot_diff_coeffs.ncl -- makes a plot with depth on the y-axis
            and diffusivity (for both columns) on the x-axis.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;reg_tests/double_diff/ -- location of the double diffusion test
$ ./double_diff-test.sh&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;          * plot_diff_coeffs.ncl -- makes two plots
            1. ddiff-diffuse: shows the interior diffusivity for potential
               temperature (normalized by the molecular diffusivity)
               in the diffusive convection regime plotted against the
               inverse stratification parameter.
            2. ddiff-salt: shows the interior diffusivity for salinity
               (normalized by its maximum) in the salt fingering regime
               plotted against the stratification parameter.
            Note: these plots are comparable to the two plots in Figure 4
                  of Large et al.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;reg_tests/kpp/ -- location of the KPP mixing test
$ ./kpp-test.sh&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;          * compare_interpolation_methods.ncl -- makes three plots
            1. bldepth: compares different interpolation techniques
               (linear, quadratic, and cubic) when it comes to estimating
               the boundary layer depth based on the depth of the mix
               layer (analytically, HBL = HMIX+2)
            2. bldepth_error: the error of the three different
               interpolation techniques compared to the analytic solution
            3. single_col22.05.pdf: the estimated boundary layer depth
               using each interpolation method when HMIX=22.05 (shows
               bulk Richardson number on x-axis, HBL is point where bulk
               Richardson = 0.3)
          * plot_bulk_Rich.ncl -- makes the KPP-bulk_Rich plot, which
            shows buoyancy, zonal wind, and bulk Richardson values at
            each layer center. Compare to Figure C1 of Large et al.
          * plot_flux_profiles.ncl -- makes the KPP-flux_profile plot,
            which shows the non-dimensional flux profiles for momentum
            and scalars as a function of the stability parameter. Compare
            to Figure B1 of Large et al.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;reg_tests/shear-KPP/ -- location of the shear mixing test
$ ./Large_test.sh&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;          * plot_diff_coeffs.ncl -- makes a plot with the local gradient
            Richardson number on the x-axis and the temperature
            diffusivity coefficient (normalized by its maximum) on the
            y-axis. Compare to Figure 3 of Large et al.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;reg_tests/tidal-Simmons/ -- location of the tidal mixing test
$ ./Simmons_test.sh -nc&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;          * plot_diff_coeffs.ncl -- shows how the tidal diffusivity
            changes over depth for a specified column (column is set in
            the Simmons_nml namelist)
          * plot_tidal_energy_map.ncl -- produces a global contour map
            for the tidal energy flux (taken from the inputdata/
            directory)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;reg_tests/common/ -- a set of bash shell scripts that are used by the
individual scripts mentioned above to reduce the amount
of duplicate code from test to test.&lt;/p&gt;
&lt;p&gt;src/ -- Contains the source code, organized as follows. The top directory
contains modules needed by the stand-alone driver (output, for example)
as well as the driver routine itself. Also contains the Makefile used
to build the cvmix executable.&lt;/p&gt;
&lt;p&gt;src/drivers/ -- Subroutines called by the driver (one per test).&lt;/p&gt;
&lt;p&gt;src/shared/  -- Where all the modules that are needed to use CVMix with an
outside model are stored. Also contains the Makefile used to
build the libcvmix.a library.&lt;/p&gt;
&lt;p&gt;templates/ -- Contains a template F90 file for adding a new mixing module to
the src/shared/ directory. See the CVMix webpage for directions
for requesting to have your module included in the main CVMix
repository.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about-the-stand-alone-cvmix-driver" class="anchor" aria-hidden="true" href="#about-the-stand-alone-cvmix-driver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ABOUT THE STAND-ALONE CVMIX DRIVER&lt;/h2&gt;
&lt;p&gt;There are five options for the stand-alone driver which can be used to test two
different mixing methods. The first test is to output Bryan-Lewis mixing on two
columns (a high latitude column and a tropical column), and output the tracer
diffusivity coefficients at each level. This tests both the Bryan-Lewis portion
of the background mixing module and the ability for the CVMix data type (used
for the "wrapped" interface of all of the coefficient computation routines) to
use pointers or memory copies to store column data.&lt;/p&gt;
&lt;p&gt;The second driver tests double diffusion mixing by setting up two columns, one
in the salt fingering regime and one in the diffusive convective instability
regime. In each case, the stratification parameter is set and then the
temperature and salinity diffusivity coefficients are computed.&lt;/p&gt;
&lt;p&gt;The third driver runs a set of 6 tests for KPP boundary layer mixing:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Compute the boundary layer depth for a column with a given HMIX (HBLT
should = |HMIX|+2)&lt;/li&gt;
&lt;li&gt;Compute shape function coefficients with G(0) = G(1) = G'(1) = 0 and G'(0)
= 1; should be sigma*(sigma-1)^2&lt;/li&gt;
&lt;li&gt;Compute nondimensional flux profile over range of stability parameter
values&lt;/li&gt;
&lt;li&gt;Compute diffusivity in the boundary layer when boundary layer is (a) below
cell center and (b) above cell center&lt;/li&gt;
&lt;li&gt;Compute bulk Richardson number from buoyancy and zonal wind data&lt;/li&gt;
&lt;li&gt;Compute velocity scales (a) when surface buoyancy flux is 0 and friction
is positive; and (b) when surface buoyancy flux is negative and friction
velocity is 0.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The fourth driver sets up a single column using the shear mixing formula found in
the Large, et al. KPP paper. For this test, each level is a different local
gradient Richardson number rather than a different depth to show how tracer
diffusivity varies with different Richardson numbers.&lt;/p&gt;
&lt;p&gt;The fifth driver reads in tidal energy flux and buoyancy frequency data from an
input data set and computes diffusivities in a column based on these physical
values.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>CVMix</author><guid isPermaLink="false">https://github.com/CVMix/CVMix-src</guid><pubDate>Sat, 04 Jan 2020 00:11:00 GMT</pubDate></item></channel></rss>