<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: F#, Today</title><link>https://github.com/trending/f%23?since=daily</link><description>The top repositories on GitHub for f%23, measured daily</description><pubDate>Mon, 04 Nov 2019 01:05:12 GMT</pubDate><lastBuildDate>Mon, 04 Nov 2019 01:05:12 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>yatli/fvim #1 in F#, Today</title><link>https://github.com/yatli/fvim</link><description>&lt;p&gt;&lt;i&gt;Cross platform Neovim front-end UI, built with F# + Avalonia&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-fvim-" class="anchor" aria-hidden="true" href="#fvim-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FVim&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yatli/fvim/raw/master/Assets/fvim.png"&gt;&lt;img src="https://github.com/yatli/fvim/raw/master/Assets/fvim.png" width="40" height="40" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://dev.azure.com/v-yadli/fvim/_build/latest?definitionId=2&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1942cd3146419f6e948d1d1b8f3a2c62dc8617cc/68747470733a2f2f6465762e617a7572652e636f6d2f762d7961646c692f6676696d2f5f617069732f6275696c642f7374617475732f7961746c692e6676696d3f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/v-yadli/fvim/_apis/build/status/yatli.fvim?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Cross platform Neovim front-end UI, built with &lt;a href="https://fsharp.org/" rel="nofollow"&gt;F#&lt;/a&gt; + &lt;a href="http://avaloniaui.net/" rel="nofollow"&gt;Avalonia&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/yatli/fvim/raw/master/images/screenshot.png"&gt;&lt;img src="https://github.com/yatli/fvim/raw/master/images/screenshot.png" alt="Screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/yatli/fvim/releases"&gt;Download&lt;/a&gt; the latest release package for your system, extract and run &lt;code&gt;FVim&lt;/code&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For Windows 7, use the &lt;code&gt;win7-x64&lt;/code&gt; package.
&lt;ul&gt;
&lt;li&gt;Make sure you have &lt;a href="https://www.microsoft.com/en-us/download/details.aspx?id=26764" rel="nofollow"&gt;KB2533623&lt;/a&gt; installed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For Windows 10, use the &lt;code&gt;win-x64&lt;/code&gt; package -- this version has faster startup.&lt;/li&gt;
&lt;li&gt;For macOS, it's packaged as an app bundle -- unzip and drag it to your applications folder.&lt;/li&gt;
&lt;li&gt;For Linux:
&lt;ul&gt;
&lt;li&gt;Debian based distributions: &lt;code&gt;dpkg -i fvim_package_name.deb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Arch Linux:  &lt;a href="https://aur.archlinux.org/packages/fvim/" rel="nofollow"&gt;Install via AUR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RPM-based distributions: &lt;code&gt;rpm -ivh fvim_package_name.rpm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fedora: &lt;code&gt;dnf install fvim_package_name.rpm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Compile from Source (having dotnet-sdk-3+ installed):
&lt;pre&gt;&lt;code&gt;    git clone https://github.com/yatli/fvim &amp;amp;&amp;amp; cd fvim &amp;amp;&amp;amp; dotnet publish -f netcoreapp3.0 -c Release -r linux-x64 --self-contained
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;HiDPI support -- try dragging it across two screens with different DPIs ;)&lt;/li&gt;
&lt;li&gt;Proper font rendering -- respects font style, baseline, &lt;a href="https://github.com/tonsky/FiraCode"&gt;ligatures&lt;/a&gt; etc.&lt;/li&gt;
&lt;li&gt;Proper cursor rendering -- color, blink etc.&lt;/li&gt;
&lt;li&gt;Built-in support for Nerd font -- no need to patch your fonts!&lt;/li&gt;
&lt;li&gt;East Asia wide glyph display with font fallback options&lt;/li&gt;
&lt;li&gt;Emojis!&lt;/li&gt;
&lt;li&gt;High performance rendering, low latency (60FPS on 4K display with reasonable font size!)&lt;/li&gt;
&lt;li&gt;GPU acceleration&lt;/li&gt;
&lt;li&gt;Use a Windows FVim frontend with a WSL neovim: &lt;code&gt;fvim --wsl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use the front end with a remote neovim: &lt;code&gt;fvim --ssh user@host&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use custom neovim binary: &lt;code&gt;fvim --nvim ~/bin/nvim.appimage&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Host a daemon to preload NeoVim&lt;/li&gt;
&lt;li&gt;Connect to a remote NeoVim backend: &lt;code&gt;fvim --connect localhost:9527&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Try these bindings (note, fvim-specific settings only work in &lt;code&gt;ginit.vim&lt;/code&gt;, not &lt;code&gt;init.vim&lt;/code&gt;!):&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;exists&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;g:fvim_loaded&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;    &lt;span class="pl-c"&gt;"&lt;/span&gt; good old 'set guifont' compatibility&lt;/span&gt;
    &lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;guifont&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;Iosevka&lt;span class="pl-cce"&gt;\ &lt;/span&gt;Sla&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;b:&lt;/span&gt;h16&lt;/span&gt;
&lt;span class="pl-c"&gt;    &lt;span class="pl-c"&gt;"&lt;/span&gt; Ctrl-ScrollWheel for zooming in/out&lt;/span&gt;
    &lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;silent&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;C-ScrollWheelUp&amp;gt;&lt;/span&gt; :&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;guifont&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;silent&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;C-ScrollWheelDown&amp;gt;&lt;/span&gt; :&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;guifont&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;nnoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;A-CR&amp;gt;&lt;/span&gt; :FVimToggleFullScreen&lt;span class="pl-c1"&gt;&amp;lt;CR&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;endif&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some work-in-progress fancy cursor effects:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-en"&gt;exists&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;g:fvim_loaded&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    FVimCursorSmoothMove &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;true&lt;/span&gt;
    FVimCursorSmoothBlink &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;true&lt;/span&gt;
&lt;span class="pl-k"&gt;endif&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/yatli/fvim/master/images/fluent_cursor.gif"&gt;&lt;img src="https://raw.githubusercontent.com/yatli/fvim/master/images/fluent_cursor.gif" alt="fluent_cursor" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-from-source" class="anchor" aria-hidden="true" href="#building-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building from source&lt;/h3&gt;
&lt;p&gt;We're now targeting &lt;code&gt;netcoreapp3.0&lt;/code&gt; so make sure to install the latest preview SDK from the &lt;a href="https://dotnet.microsoft.com/download/dotnet-core/3.0" rel="nofollow"&gt;.NET site&lt;/a&gt;.
We're actively tracking the head of &lt;code&gt;Avalonia&lt;/code&gt;, and fetch the nightly packages from myget (see &lt;code&gt;NuGet.config&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Then, simply:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/yatli/fvim
cd fvim
dotnet build -c Release
dotnet run -c Release
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-fvim-specific-commands" class="anchor" aria-hidden="true" href="#fvim-specific-commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FVim-specific commands&lt;/h3&gt;
&lt;p&gt;The following new commands are available:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Toggle between normal and fullscreen&lt;/span&gt;
FVimToggleFullScreen

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Cursor tweaks&lt;/span&gt;
FVimCursorSmoothMove &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;true&lt;/span&gt;
FVimCursorSmoothBlink &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;true&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Debug UI overlay&lt;/span&gt;
FVimDrawFPS &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;true&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Font tweaks&lt;/span&gt;
FVimFontAntialias &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;true&lt;/span&gt;
FVimFontAutohint &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;true&lt;/span&gt;
FVimFontSubpixel &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;true&lt;/span&gt;
FVimFontLcdRender &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;true&lt;/span&gt;
FVimFontHintLevel &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;full&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
FVimFontLineHeight &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;+1.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;"&lt;/span&gt; can be 'default', '14.0', '-1.0' etc.&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Try to snap the fonts to the pixels, reduces blur&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; in some situations (e.g. 100% DPI).&lt;/span&gt;
FVimFontAutoSnap &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;true&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Font weight tuning, possible valuaes are 100..900&lt;/span&gt;
FVimFontNormalWeight &lt;span class="pl-c1"&gt;400&lt;/span&gt;
FVimFontBoldWeight &lt;span class="pl-c1"&gt;700&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Font debugging -- draw bounds around each glyph&lt;/span&gt;
FVimFontDrawBounds &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;true&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; UI options (all default to v:false)&lt;/span&gt;
FVimUIMultiGrid &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;false&lt;/span&gt;&lt;span class="pl-c"&gt;     &lt;span class="pl-c"&gt;"&lt;/span&gt; per-window grid system -- work in progress&lt;/span&gt;
FVimUIPopupMenu &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;true&lt;/span&gt;&lt;span class="pl-c"&gt;      &lt;span class="pl-c"&gt;"&lt;/span&gt; external popup menu&lt;/span&gt;
FVimUITabLine &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;false&lt;/span&gt;&lt;span class="pl-c"&gt;       &lt;span class="pl-c"&gt;"&lt;/span&gt; external tabline -- not implemented&lt;/span&gt;
FVimUICmdLine &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;false&lt;/span&gt;&lt;span class="pl-c"&gt;       &lt;span class="pl-c"&gt;"&lt;/span&gt; external cmdline -- not implemented&lt;/span&gt;
FVimUIWildMenu &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;false&lt;/span&gt;&lt;span class="pl-c"&gt;      &lt;span class="pl-c"&gt;"&lt;/span&gt; external wildmenu -- not implemented&lt;/span&gt;
FVimUIMessages &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;false&lt;/span&gt;&lt;span class="pl-c"&gt;      &lt;span class="pl-c"&gt;"&lt;/span&gt; external messages -- not implemented&lt;/span&gt;
FVimUITermColors &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;false&lt;/span&gt;&lt;span class="pl-c"&gt;    &lt;span class="pl-c"&gt;"&lt;/span&gt; not implemented&lt;/span&gt;
FVimUIHlState &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;v:&lt;/span&gt;false&lt;/span&gt;&lt;span class="pl-c"&gt;       &lt;span class="pl-c"&gt;"&lt;/span&gt; not implemented&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Detach from a remote session without killing the server&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; If this command is executed on a standalone instance,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; the embedded process will be terminated anyway.&lt;/span&gt;
FVimDetach&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-startup-options" class="anchor" aria-hidden="true" href="#startup-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Startup options&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Usage: FVim [FVim-args] [NeoVim-args]

FVim-args:

    =========================== Client options ===================================

    --ssh user@host             Start NeoVim remotely over ssh
    --wsl                       Start NeoVim in WSL
    --nvim path-to-program      Use an alternative nvim program

    --connect target            Connect to a remote NeoVim backend. The target
                                can be an IP endpoint (127.0.0.1:9527), or a
                                Unix socket address (/tmp/path/to/socket), or a
                                Windows named pipe (PipeName).

    --setup                     Registers FVim as a text editor, and updates
                                file association and icons. Requires UAC
                                elevation on Windows.

    =========================== Daemon options ===================================

    --daemon                    Start a daemon that ensures that a NeoVim
                                backend is always listening in the background.
                                The backend will be respawn on exit.

    --daemonPort port           Set the Tcp listening port of the daemon.
                                When this option is not given, Tcp server is
                                disabled.

    --daemonPipe                Override the named pipe address of the daemon.
                                When this option is not given, defaults to
                                '/tmp/FVimServer'

    --tryDaemon                 First try to connect to a local daemon. If not
                                found, start an embedded NeoVim instance.

    =========================== Debug options ====================================

    --trace-to-stdout           Trace to stdout.
    --trace-to-file             Trace to a file.
    --trace-patterns            Filter trace output by a list of keyword strings


The FVim arguments will be consumed and filtered before the rest are passed to NeoVim.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-goals" class="anchor" aria-hidden="true" href="#goals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Goals&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Input method support built from scratch (wip)&lt;/li&gt;
&lt;li&gt;Multi-grid &amp;lt;=&amp;gt; Multi-window mapping (multiple windows in the OS sense, not Vim "frames")&lt;/li&gt;
&lt;li&gt;Extend with XAML -- UI widgets as NeoVim plugins&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-non-goals" class="anchor" aria-hidden="true" href="#non-goals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Non-Goals&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Electron ecosystem integration&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>yatli</author><guid isPermaLink="false">https://github.com/yatli/fvim</guid><pubDate>Mon, 04 Nov 2019 00:01:00 GMT</pubDate></item><item><title>fsprojects/FsUnit #2 in F#, Today</title><link>https://github.com/fsprojects/FsUnit</link><description>&lt;p&gt;&lt;i&gt;FsUnit makes unit-testing with F# more enjoyable. It adds a special syntax to your favorite .NET testing framework.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://sergeytihon.visualstudio.com/FsUnit/_build/latest?definitionId=3&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/65f73c24c1c8f0e264c217cf7ecb9d17078a7eb3/68747470733a2f2f7365726765797469686f6e2e76697375616c73747564696f2e636f6d2f4673556e69742f5f617069732f6275696c642f7374617475732f667370726f6a656374732e4673556e69743f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://sergeytihon.visualstudio.com/FsUnit/_apis/build/status/fsprojects.FsUnit?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-fsunit" class="anchor" aria-hidden="true" href="#fsunit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FsUnit&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;FsUnit&lt;/strong&gt; is a set of libraries that makes unit-testing with F# more enjoyable. It adds a special syntax to your favorite .NET testing framework.
FsUnit currently supports NUnit, xUnit, and MsTest.&lt;/p&gt;
&lt;p&gt;The goals of FsUnit are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;to make unit-testing feel more at home in F#, i.e., more functional.&lt;/li&gt;
&lt;li&gt;to leverage existing test frameworks while at the same time adapting them to the F# language in new ways.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-involved" class="anchor" aria-hidden="true" href="#getting-involved"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Involved&lt;/h2&gt;
&lt;p&gt;GitHub makes collaboration very easy. To get involved with FsUnit, simply follow the directions provided by GitHub to
fork this repository, then implement lots of cool stuff, and finally send a pull request.&lt;/p&gt;
&lt;p&gt;A few things to keep in mind:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Going forward, FsUnit will aim to support as much functionality as possible across all supported testing frameworks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Development environments need to be setup to run tests for xUnit and NUnit. A product like ReSharper can make this easier.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Since the unit tests for FsUnit are written with FsUnit, failing tests are just as important as passing tests.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-maintainers" class="anchor" aria-hidden="true" href="#maintainers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maintainer(s)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dmohl"&gt;@dmohl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sergey-tihon"&gt;@sergey-tihon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The default maintainer account for projects under "fsprojects" is &lt;a href="https://github.com/fsprojectsgit"&gt;@fsprojectsgit&lt;/a&gt; - F# Community Project Incubation Space (repo management)&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>fsprojects</author><guid isPermaLink="false">https://github.com/fsprojects/FsUnit</guid><pubDate>Mon, 04 Nov 2019 00:02:00 GMT</pubDate></item><item><title>cognitedata/oryx #3 in F#, Today</title><link>https://github.com/cognitedata/oryx</link><description>&lt;p&gt;&lt;i&gt;.NET Cross platform Functional Web Request Handlers for F#&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-oryx" class="anchor" aria-hidden="true" href="#oryx"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Oryx&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/cognitedata/oryx" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5c2a00b9ac5597e2e0f233e850452e567e02ae4f/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f636f676e697465646174612f6f727978" alt="Build" data-canonical-src="https://img.shields.io/travis/cognitedata/oryx" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/cognitedata/oryx" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ba11b07f5769345a2700e9366d47405e94df004c/68747470733a2f2f636f6465636f762e696f2f67682f636f676e697465646174612f6f7279782f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/cognitedata/oryx/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.nuget.org/packages/Oryx/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2da4612dd51548a85ad49e421870c0f522dde8c2/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f6f727978" alt="Nuget" data-canonical-src="https://img.shields.io/nuget/v/oryx" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Oryx is a high performance .NET cross platform functional HTTP request handler library for writing HTTP web clients in F#.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An SDK for writing HTTP web clients or SDKs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This library enables you to write Web and REST clients and SDKs for various APIs and is currently used by the &lt;a href="https://github.com/cognitedata/cognite-sdk-dotnet"&gt;.NET SDK for Cognite Data Fusion (CDF)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Oryx is heavily inspired by the &lt;a href="https://github.com/giraffe-fsharp/Giraffe"&gt;Giraffe&lt;/a&gt; web framework, and applies the same ideas to the client making the web requests. You can think of Oryx as the client equivalent of Giraffe, and you could envision the HTTP request processing pipeline starting at the client and going all the way to the server and back again.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-fundamentals" class="anchor" aria-hidden="true" href="#fundamentals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fundamentals&lt;/h2&gt;
&lt;p&gt;The main building blocks in Oryx is the &lt;code&gt;Context&lt;/code&gt; and the &lt;code&gt;HttpHandler&lt;/code&gt;. The Context stores all the state needed for making the request and any response or error received from the server:&lt;/p&gt;
&lt;div class="highlight highlight-source-fsharp"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-en"&gt;Context&amp;lt;'a&amp;gt; &lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;{&lt;/span&gt;
    Request&lt;span class="pl-k"&gt;:&lt;/span&gt; HttpRequest
    Response&lt;span class="pl-k"&gt;:&lt;/span&gt; 'a
&lt;span class="pl-k"&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;Context&lt;/code&gt; may be transformed by series of HTTP handlers. The &lt;code&gt;HttpHandler&lt;/code&gt; takes a &lt;code&gt;Context&lt;/code&gt; (and a &lt;code&gt;NextFunc&lt;/code&gt;) and returns a new &lt;code&gt;Context&lt;/code&gt; wrapped in a &lt;code&gt;Result&lt;/code&gt; and &lt;code&gt;Task&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-fsharp"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-en"&gt;HttpFuncResult&amp;lt;'b&amp;gt; &lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;  Task&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Result&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Context&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;'b&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;, ResponseError&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-en"&gt;HttpFunc&amp;lt;'a, 'b&amp;gt; &lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; Context&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;'a&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; HttpFuncResult&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;'b&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-en"&gt;NextFunc&amp;lt;'a, 'b&amp;gt; &lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; HttpFunc&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;'a, 'b&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-en"&gt;HttpHandler&amp;lt;'a, 'b, 'c&amp;gt; &lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; NextFunc&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;'b, 'c&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Context&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;'a&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; HttpFuncResult&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;'c&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;// For convenience&lt;/span&gt;
&lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-en"&gt;HttpHandler&amp;lt;'a, 'b&amp;gt; &lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; HttpHandler&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;'a, 'a, 'b&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-en"&gt;HttpHandler&amp;lt;'a&amp;gt; &lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; HttpHandler&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;HttpResponseMessage, 'a&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;type&lt;/span&gt; &lt;span class="pl-en"&gt;HttpHandler &lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; HttpHandler&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;HttpResponseMessage&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An &lt;code&gt;HttpHandler&lt;/code&gt; is a plain function that takes two curried arguments, a &lt;code&gt;NextFunc&lt;/code&gt; and a &lt;code&gt;Context&lt;/code&gt;, and returns a new &lt;code&gt;Context&lt;/code&gt; (wrapped in a &lt;code&gt;Result&lt;/code&gt; and &lt;code&gt;Task&lt;/code&gt;) when finished. On a high level the &lt;code&gt;HttpHandler&lt;/code&gt; function takes and returns a context object, which means every &lt;code&gt;HttpHandler&lt;/code&gt; function has full control of the outgoing &lt;code&gt;HttpRequest&lt;/code&gt; and also the resulting response.&lt;/p&gt;
&lt;p&gt;Each HttpHandler usually adds more info to the &lt;code&gt;HttpRequest&lt;/code&gt; before passing it further down the pipeline by invoking the next &lt;code&gt;NextFunc&lt;/code&gt; or short circuit the execution by returning a result of &lt;code&gt;Result&amp;lt;Context&amp;lt;'a&amp;gt;, ResponseError&amp;gt;&lt;/code&gt;. E.g if an HttpHandler detects an error, then it can return &lt;code&gt;Result.Error&lt;/code&gt; to fail the processing.&lt;/p&gt;
&lt;p&gt;The easiest way to get your head around a Oryx &lt;code&gt;HttpHandler&lt;/code&gt; is to think of it as a functional Web request processing pipeline. Each handler has the full &lt;code&gt;Context&lt;/code&gt; at its disposal and can decide whether it wants to fail the request by returning an &lt;code&gt;Error&lt;/code&gt;, or continue the request by passing on a new &lt;code&gt;Context&lt;/code&gt; to the "next" handler, &lt;code&gt;NextFunc&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The more complex way to think about a &lt;code&gt;HttpHandler&lt;/code&gt; is that there are in fact 3 different ways it may process the request:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Call the next handler with an &lt;code&gt;Ok&lt;/code&gt; result value, and return what the next handler is returning.&lt;/li&gt;
&lt;li&gt;Return an &lt;code&gt;Error&lt;/code&gt;result to fail the request.&lt;/li&gt;
&lt;li&gt;Return &lt;code&gt;Ok&lt;/code&gt; to short circuit the processing. This is not something you would normally do.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-operators" class="anchor" aria-hidden="true" href="#operators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Operators&lt;/h2&gt;
&lt;p&gt;The fact that everything is an &lt;code&gt;HttpHandler&lt;/code&gt; makes it easy to compose handlers together. You can think of them as lego bricks that you can fit together. Two &lt;code&gt;HttpHandler&lt;/code&gt; functions may be composed together using Keisli compsition, i.e using the fish operator &lt;code&gt;&amp;gt;=&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-fsharp"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;(&amp;gt;=&amp;gt;)&lt;/span&gt; &lt;span class="pl-v"&gt;a&lt;/span&gt; &lt;span class="pl-v"&gt;b&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; compose a b&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;compose&lt;/code&gt; function is the magic that sews it all togheter and explains how you can curry the &lt;code&gt;HttpHandler&lt;/code&gt; to generate a new &lt;code&gt;NextFunc&lt;/code&gt; that you give to next &lt;code&gt;HttpHandler&lt;/code&gt;. If the first handler fails, the next handler will be skipped.&lt;/p&gt;
&lt;div class="highlight highlight-source-fsharp"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;compose&lt;/span&gt; (&lt;span class="pl-v"&gt;first&lt;/span&gt; : &lt;span class="pl-v"&gt;HttpHandler&lt;/span&gt;&amp;lt;&lt;span class="pl-v"&gt;'a&lt;/span&gt;, &lt;span class="pl-v"&gt;'b&lt;/span&gt;, &lt;span class="pl-v"&gt;'d&lt;/span&gt;&amp;gt;) (&lt;span class="pl-v"&gt;second&lt;/span&gt; : &lt;span class="pl-v"&gt;HttpHandler&lt;/span&gt;&amp;lt;&lt;span class="pl-v"&gt;'b&lt;/span&gt;, &lt;span class="pl-v"&gt;'c&lt;/span&gt;, &lt;span class="pl-v"&gt;'d&lt;/span&gt;&amp;gt;) : &lt;span class="pl-v"&gt;HttpHandler&lt;/span&gt;&amp;lt;&lt;span class="pl-v"&gt;'a&lt;/span&gt;,&lt;span class="pl-v"&gt;'c&lt;/span&gt;,&lt;span class="pl-v"&gt;'d&lt;/span&gt;&amp;gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;
    &lt;span class="pl-k"&gt;fun&lt;/span&gt; (next&lt;span class="pl-k"&gt;:&lt;/span&gt; NextFunc&lt;span class="pl-k"&gt;&amp;lt;_&lt;/span&gt;, &lt;span class="pl-k"&gt;_&amp;gt;&lt;/span&gt;) (ctx &lt;span class="pl-k"&gt;:&lt;/span&gt; Context&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;'a&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;func&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;
            next
            &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; second
            &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; first

        func ctx&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This enables you to compose your web requests and decode the response, e.g as we do when listing Assets in the  the &lt;a href="https://github.com/cognitedata/cognite-sdk-dotnet/blob/master/src/assets/ListAssets.fs#L55"&gt;Cognite Data Fusion SDK&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-fsharp"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;listAssets&lt;/span&gt; (&lt;span class="pl-v"&gt;options&lt;/span&gt;: &lt;span class="pl-v"&gt;AssetQuery&lt;/span&gt; &lt;span class="pl-v"&gt;seq&lt;/span&gt;) (&lt;span class="pl-v"&gt;filters&lt;/span&gt;: &lt;span class="pl-v"&gt;AssetFilter&lt;/span&gt; &lt;span class="pl-v"&gt;seq&lt;/span&gt;) (&lt;span class="pl-v"&gt;fetch&lt;/span&gt;: &lt;span class="pl-v"&gt;HttpHandler&lt;/span&gt;&amp;lt;&lt;span class="pl-v"&gt;HttpResponseMessage&lt;/span&gt;, &lt;span class="pl-v"&gt;'a&lt;/span&gt;&amp;gt;) &lt;span class="pl-k"&gt;=&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;decodeResponse&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; Decode.decodeContent AssetItemsReadDto.Decoder id
        &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;request&lt;/span&gt; : &lt;span class="pl-v"&gt;Request&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;{&lt;/span&gt;
            Filters &lt;span class="pl-k"&gt;=&lt;/span&gt; filters
            Options &lt;span class="pl-k"&gt;=&lt;/span&gt; options
        &lt;span class="pl-k"&gt;}&lt;/span&gt;

        POST
        &lt;span class="pl-k"&gt;&amp;gt;=&amp;gt;&lt;/span&gt; setVersion V10
        &lt;span class="pl-k"&gt;&amp;gt;=&amp;gt;&lt;/span&gt; setContent (Content.JsonValue request.Encoder)
        &lt;span class="pl-k"&gt;&amp;gt;=&amp;gt;&lt;/span&gt; setResource Url
        &lt;span class="pl-k"&gt;&amp;gt;=&amp;gt;&lt;/span&gt; fetch
        &lt;span class="pl-k"&gt;&amp;gt;=&amp;gt;&lt;/span&gt; Decode.decodeError
        &lt;span class="pl-k"&gt;&amp;gt;=&amp;gt;&lt;/span&gt; decodeResponse&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Thus the function &lt;code&gt;listAssets&lt;/code&gt; is now also an &lt;code&gt;HttpHandler&lt;/code&gt; and may be composed with other handlers to create complex chains for doing series of multiple requests to a web service.&lt;/p&gt;
&lt;p&gt;There is also a &lt;code&gt;retry&lt;/code&gt; that retries HTTP handlers using max number of retries and exponential backoff.&lt;/p&gt;
&lt;div class="highlight highlight-source-fsharp"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;retry&lt;/span&gt; : (&lt;span class="pl-v"&gt;initialDelay&lt;/span&gt;: &lt;span class="pl-v"&gt;int&lt;/span&gt;&amp;lt;&lt;span class="pl-v"&gt;ms&lt;/span&gt;&amp;gt;) -&amp;gt; (&lt;span class="pl-v"&gt;maxRetries&lt;/span&gt;: &lt;span class="pl-v"&gt;int&lt;/span&gt;) -&amp;gt; (&lt;span class="pl-v"&gt;handler&lt;/span&gt;: &lt;span class="pl-v"&gt;HttpHandler&lt;/span&gt;&amp;lt;&lt;span class="pl-v"&gt;'a&lt;/span&gt;,&lt;span class="pl-v"&gt;'b&lt;/span&gt;,&lt;span class="pl-v"&gt;'c&lt;/span&gt;&amp;gt;) -&amp;gt; (&lt;span class="pl-v"&gt;next&lt;/span&gt;: &lt;span class="pl-v"&gt;NextFunc&lt;/span&gt;&amp;lt;&lt;span class="pl-v"&gt;'b&lt;/span&gt;,&lt;span class="pl-v"&gt;'c&lt;/span&gt;&amp;gt;) -&amp;gt; (&lt;span class="pl-v"&gt;ctx&lt;/span&gt;: &lt;span class="pl-v"&gt;Context&lt;/span&gt;&amp;lt;&lt;span class="pl-v"&gt;'a&lt;/span&gt;&amp;gt;) -&amp;gt; &lt;span class="pl-v"&gt;Task&lt;/span&gt;&amp;lt;&lt;span class="pl-v"&gt;Context&lt;/span&gt;&amp;lt;&lt;span class="pl-v"&gt;'c&lt;/span&gt;&amp;gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And a &lt;code&gt;concurrent&lt;/code&gt; operator that runs a list of HTTP handlers in parallel.&lt;/p&gt;
&lt;div class="highlight highlight-source-fsharp"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;concurrent&lt;/span&gt; : (&lt;span class="pl-v"&gt;handlers&lt;/span&gt;: &lt;span class="pl-v"&gt;HttpHandler&lt;/span&gt;&amp;lt;&lt;span class="pl-v"&gt;'a&lt;/span&gt;, &lt;span class="pl-v"&gt;'b&lt;/span&gt;, &lt;span class="pl-v"&gt;'b&lt;/span&gt;&amp;gt; &lt;span class="pl-v"&gt;seq&lt;/span&gt;) -&amp;gt; (&lt;span class="pl-v"&gt;next&lt;/span&gt;: &lt;span class="pl-v"&gt;NextFunc&lt;/span&gt;&amp;lt;&lt;span class="pl-v"&gt;'b&lt;/span&gt; &lt;span class="pl-v"&gt;list&lt;/span&gt;, &lt;span class="pl-v"&gt;'c&lt;/span&gt;&amp;gt;) -&amp;gt; (&lt;span class="pl-v"&gt;ctx&lt;/span&gt;: &lt;span class="pl-v"&gt;Context&lt;/span&gt;&amp;lt;&lt;span class="pl-v"&gt;'a&lt;/span&gt;&amp;gt;) -&amp;gt; &lt;span class="pl-v"&gt;Task&lt;/span&gt;&amp;lt;&lt;span class="pl-v"&gt;Context&lt;/span&gt;&amp;lt;&lt;span class="pl-v"&gt;'c&lt;/span&gt;&amp;gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-json-and-protobuf" class="anchor" aria-hidden="true" href="#json-and-protobuf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON and Protobuf&lt;/h2&gt;
&lt;p&gt;Oryx will serialize (and deserialize) JSON using &lt;code&gt;Thoth.Json.Net&lt;/code&gt; or Protobuf using &lt;code&gt;Google.Protobuf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Both encode and decode uses streaming so no large strings or arrays will be allocated in the process.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-computational-expression-builder" class="anchor" aria-hidden="true" href="#computational-expression-builder"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Computational Expression Builder&lt;/h2&gt;
&lt;p&gt;Working with &lt;code&gt;Context&lt;/code&gt; objects can be a bit painful since the actual result will be available inside a &lt;code&gt;Task&lt;/code&gt; effect that has a &lt;code&gt;Result&lt;/code&gt; that can be either &lt;code&gt;Ok&lt;/code&gt; with the response or &lt;code&gt;Error&lt;/code&gt;. To make it simpler to handle multiple requests using handlers you can use the &lt;code&gt;oryx&lt;/code&gt; builder that will hide the complexity of both the &lt;code&gt;Context&lt;/code&gt; and the &lt;code&gt;Result&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-fsharp"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;oryx {&lt;/span&gt;
        &lt;span class="pl-k"&gt;let!&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; fetchData &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;service1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;let!&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; fetchData &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;service2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

        &lt;span class="pl-k"&gt;return&lt;/span&gt; a &lt;span class="pl-k"&gt;+&lt;/span&gt; b
    &lt;span class="pl-k"&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run a handler u can use the &lt;code&gt;runHandler&lt;/code&gt; function.&lt;/p&gt;
&lt;div class="highlight highlight-source-fsharp"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;runHandler&lt;/span&gt; : (&lt;span class="pl-v"&gt;handler&lt;/span&gt;: &lt;span class="pl-v"&gt;HttpHandler&lt;/span&gt;&amp;lt;&lt;span class="pl-v"&gt;'a&lt;/span&gt;,&lt;span class="pl-v"&gt;'b&lt;/span&gt;,&lt;span class="pl-v"&gt;'b&lt;/span&gt;&amp;gt;) -&amp;gt; (&lt;span class="pl-v"&gt;ctx&lt;/span&gt; : &lt;span class="pl-v"&gt;Context&lt;/span&gt;&amp;lt;&lt;span class="pl-v"&gt;'a&lt;/span&gt;&amp;gt;) -&amp;gt; &lt;span class="pl-v"&gt;Task&lt;/span&gt;&amp;lt;&lt;span class="pl-v"&gt;Result&lt;/span&gt;&amp;lt;&lt;span class="pl-v"&gt;'b&lt;/span&gt;, &lt;span class="pl-v"&gt;ResponseError&lt;/span&gt;&amp;gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TODO&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The library currently depends on &lt;a href="https://mangelmaxime.github.io/Thoth/" rel="nofollow"&gt;&lt;code&gt;Thoth.Json.Net&lt;/code&gt;&lt;/a&gt;. This should at some point be split into a separate library.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The library also assumes the type of the error response. This should perhaps be made more generic.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h2&gt;
&lt;p&gt;This project follows &lt;a href="https://www.contributor-covenant.org" rel="nofollow"&gt;https://www.contributor-covenant.org&lt;/a&gt;, see our &lt;a href="https://github.com/cognitedata/oryx/blob/master/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Apache v2, see &lt;a href="https://github.com/cognitedata/oryx/blob/master/LICENSE"&gt;LICENSE&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>cognitedata</author><guid isPermaLink="false">https://github.com/cognitedata/oryx</guid><pubDate>Mon, 04 Nov 2019 00:03:00 GMT</pubDate></item></channel></rss>