<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Unknown languages, Today</title><link>https://github.com/trending/unknown?since=daily</link><description>The top repositories on GitHub for unknown, measured daily</description><pubDate>Tue, 24 Dec 2019 01:08:23 GMT</pubDate><lastBuildDate>Tue, 24 Dec 2019 01:08:23 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>Yuheng-Li/MixNMatch #1 in Unknown languages, Today</title><link>https://github.com/Yuheng-Li/MixNMatch</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-mixnmatch-multifactor-disentanglement-and-encoding-for-conditional-image-generation--paper" class="anchor" aria-hidden="true" href="#mixnmatch-multifactor-disentanglement-and-encoding-for-conditional-image-generation--paper"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MixNMatch: Multifactor Disentanglement and Encoding for Conditional Image Generation &lt;br&gt; &lt;a href="https://arxiv.org/abs/1911.11758" rel="nofollow"&gt;[Paper]&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/Yuheng-Li"&gt;Yuheng Li&lt;/a&gt;,
&lt;a href="http://krsingh.cs.ucdavis.edu/" rel="nofollow"&gt;Krishna Kumar Singh&lt;/a&gt;,
&lt;a href="https://utkarshojha.github.io/" rel="nofollow"&gt;Utkarsh Ojha&lt;/a&gt;,
&lt;a href="https://web.cs.ucdavis.edu/~yjlee/" rel="nofollow"&gt;Yong Jae Lee&lt;/a&gt;&lt;br&gt;
UC Davis &lt;br&gt;
In &lt;a href="https://arxiv.org/abs/1911.11758" rel="nofollow"&gt;arXiv, 2019&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The code and pre-trained models will be released soon. &lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-demo-video" class="anchor" aria-hidden="true" href="#demo-video"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demo Video&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=w36vnkIbyjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/37841ad79075105d0603ceeb0639090e733ef122/68747470733a2f2f696d672e796f75747562652e636f6d2f76692f773336766e6b4962796a732f302e6a7067" alt="IMAGE ALT TEXT HERE" data-canonical-src="https://img.youtube.com/vi/w36vnkIbyjs/0.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-results" class="anchor" aria-hidden="true" href="#results"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Results&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-1-extracting-all-factors-from-differnet-real-images-to-synthesize-a-new-image" class="anchor" aria-hidden="true" href="#1-extracting-all-factors-from-differnet-real-images-to-synthesize-a-new-image"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. Extracting all factors from differnet real images to synthesize a new image&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="data/MixNMatch.png"&gt;&lt;img src="data/MixNMatch.png" align="middle" width="1000" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-2-comparison-between-the-feature-and-code-mode" class="anchor" aria-hidden="true" href="#2-comparison-between-the-feature-and-code-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. Comparison between the feature and code mode&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="data/main_result2.png"&gt;&lt;img src="data/main_result2.png" align="middle" width="1000" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-3-manipulating-real-images-by-varying-a-single-factor" class="anchor" aria-hidden="true" href="#3-manipulating-real-images-by-varying-a-single-factor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. Manipulating real images by varying a single factor&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="data/bird_vary.png"&gt;&lt;img src="data/bird_vary.png" align="middle" width="1000" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-4-inferring-style-from-unseen-data" class="anchor" aria-hidden="true" href="#4-inferring-style-from-unseen-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. Inferring style from unseen data&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Cartoon -&amp;gt; image&lt;/th&gt;
&lt;th align="center"&gt;Sketch -&amp;gt; image&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="data/cartoon2img.png"&gt;&lt;img src="data/cartoon2img.png" align="middle" width="450" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="data/sketch2img.png"&gt;&lt;img src="data/sketch2img.png" align="middle" width="450" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-5-converting-a-reference-image-according-to-a-reference-video" class="anchor" aria-hidden="true" href="#5-converting-a-reference-image-according-to-a-reference-video"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5. Converting a reference image according to a reference video&lt;/h3&gt;
&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="data/img2gif2.gif"&gt;&lt;img src="data/img2gif2.gif" align="middle" width="350" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citation&lt;/h2&gt;
&lt;p&gt;If you find this useful in your research, consider citing our work:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@inproceedings{li-arxiv2019,
  title = {MixNMatch: Multifactor Disentanglement and Encoding for Conditional Image Generation},
  author = {Yuheng Li and Krishna Kumar Singh and Utkarsh Ojha and Yong Jae Lee},
  booktitle = {arXiv},
  year = {2019}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Yuheng-Li</author><guid isPermaLink="false">https://github.com/Yuheng-Li/MixNMatch</guid><pubDate>Tue, 24 Dec 2019 00:01:00 GMT</pubDate></item><item><title>Hack-with-Github/Awesome-Hacking #2 in Unknown languages, Today</title><link>https://github.com/Hack-with-Github/Awesome-Hacking</link><description>&lt;p&gt;&lt;i&gt;A collection of various awesome lists for hackers, pentesters and security researchers&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="awesome_hacking.jpg"&gt;&lt;img src="awesome_hacking.jpg" alt="Awesome Hacking" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-awesome-hacking-" class="anchor" aria-hidden="true" href="#awesome-hacking-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/Hack-with-Github/Awesome-Hacking"&gt;Awesome Hacking&lt;/a&gt; &lt;a href="https://twitter.com/intent/tweet?text=Awesome%20Hacking%20-%20a%20collection%20of%20awesome%20lists%20for%20hackers%20and%20pentesters%20by%20@HackwithGithub&amp;amp;url=https://github.com/Hack-with-Github/Awesome-Hacking&amp;amp;hashtags=security,hacking" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/83d4084f7b71558e33b08844da5c773a8657e271/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c" alt="Tweet" data-canonical-src="https://img.shields.io/twitter/url/http/shields.io.svg?style=social" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;A collection of awesome lists for hackers, pentesters &amp;amp; security researchers.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Your &lt;a href="contributing.md"&gt;contributions&lt;/a&gt; are always welcome !&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-awesome-repositories" class="anchor" aria-hidden="true" href="#awesome-repositories"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Awesome Repositories&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Repository&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/ashishb/android-security-awesome"&gt;Android Security&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Collection of Android security related resources&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/paragonie/awesome-appsec"&gt;AppSec&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Resources for learning about application security&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/redhuntlabs/Awesome-Asset-Discovery"&gt;Asset Discovery&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of resources which help during asset discovery phase of a security assessment engagement&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/djadmin/awesome-bug-bounty"&gt;Bug Bounty&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of Bug Bounty Programs and write-ups from the Bug Bounty hunters&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apsdehal/awesome-ctf"&gt;CTF&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of CTF frameworks, libraries, resources and softwares&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/joe-shenouda/awesome-cyber-skills"&gt;Cyber Skills&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Curated list of hacking environments where you can train your cyber skills legally and safely&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/devsecops/awesome-devsecops"&gt;DevSecOps&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of awesome DevSecOps tools with the help from community experiments and contributions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/FabioBaroni/awesome-exploit-development"&gt;Exploit Development&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Resources for learning about Exploit Development&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/secfigo/Awesome-Fuzzing"&gt;Fuzzing&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of fuzzing resources for learning Fuzzing and initial phases of Exploit Development like root cause analysis&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/carpedm20/awesome-hacking"&gt;Hacking&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of awesome Hacking tutorials, tools and resources&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/vitalysim/Awesome-Hacking-Resources"&gt;Hacking Resources&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Collection of hacking / penetration testing resources to make you better!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/paralax/awesome-honeypots"&gt;Honeypots&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of honeypot resources&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/meirwah/awesome-incident-response"&gt;Incident Response&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of tools for incident response&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/hslatman/awesome-industrial-control-system-security"&gt;Industrial Control System Security&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of resources related to Industrial Control System (ICS) security&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/onlurking/awesome-infosec"&gt;InfoSec&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of awesome infosec courses and training resources&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/nebgnahz/awesome-iot-hacks"&gt;IoT Hacks&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Collection of Hacks in IoT Space&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/rshipp/awesome-malware-analysis"&gt;Malware Analysis&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of awesome malware analysis tools and resources&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/jivoi/awesome-osint"&gt;OSINT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of amazingly awesome Open Source Intelligence (OSINT) tools and resources&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/ashishb/osx-and-ios-security-awesome"&gt;OSX and iOS Security&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;OSX and iOS related security tools&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/caesar0301/awesome-pcaptools"&gt;Pcaptools&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Collection of tools developed by researchers in the Computer Science area to process network traces&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/enaqx/awesome-pentest"&gt;Pentest&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of awesome penetration testing resources, tools and other shiny things&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/ziadoz/awesome-php#security"&gt;PHP Security&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Libraries for generating secure random numbers, encrypting data and scanning for vulnerabilities&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/yeyintminthuhtut/Awesome-Red-Teaming"&gt;Red Teaming&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of Awesome Red Team / Red Teaming Resources&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/fdivrp/awesome-reversing"&gt;Reversing&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of awesome reverse engineering resources&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/PaulSec/awesome-sec-talks"&gt;Sec Talks&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of awesome security talks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/danielmiessler/SecLists"&gt;SecLists&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Collection of multiple types of lists used during security assessments&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/sbilly/awesome-security"&gt;Security&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Collection of awesome software, libraries, documents, books, resources and cools stuffs about security&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/puresec/awesome-serverless-security/"&gt;Serverless Security&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Collection of Serverless security related resources&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/v2-dev/awesome-social-engineering"&gt;Social Engineering&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of awesome social engineering resources&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/mre/awesome-static-analysis"&gt;Static Analysis&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of static analysis tools, linters and code quality checkers for various programming languages&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/hslatman/awesome-threat-intelligence"&gt;Threat Intelligence&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of Awesome Threat Intelligence resources&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/jaredthecoder/awesome-vehicle-security"&gt;Vehicle Security&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of resources for learning about vehicle security and car hacking&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/re-pronin/awesome-vulnerability-research"&gt;Vulnerability Research&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of resources about Vulnerability Research&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/infoslack/awesome-web-hacking"&gt;Web Hacking&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of web application security&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/yeyintminthuhtut/Awesome-Advanced-Windows-Exploitation-References"&gt;Windows Exploitation - Advanced&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of Awesome Advanced Windows Exploitation References&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/0x90/wifi-arsenal"&gt;WiFi Arsenal&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Pack of various useful/useless tools for 802.11 hacking&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/InQuest/awesome-yara"&gt;YARA&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of awesome YARA rules, tools, and people&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/sundowndev/hacker-roadmap"&gt;Hacker Roadmap&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A guide for amateur pen testers and a collection of hacking tools, resources and references to practice ethical hacking.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-other-useful-repositories" class="anchor" aria-hidden="true" href="#other-useful-repositories"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other useful repositories&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Repository&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/yenchenlin/awesome-adversarial-machine-learning"&gt;Adversarial Machine Learning&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Curated list of awesome adversarial machine learning resources&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/RandomAdversary/Awesome-AI-Security"&gt;AI Security&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Curated list of AI security resources&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/shieldfy/API-Security-Checklist"&gt;API Security Checklist&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Checklist of the most important security countermeasures when designing, testing, and releasing your API&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/kbandla/APTnotes"&gt;APT Notes&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Various public documents, whitepapers and articles about APT campaigns&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/ngalongc/bug-bounty-reference"&gt;Bug Bounty Reference&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of bug bounty write-up that is categorized by the bug nature&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/sobolevn/awesome-cryptography"&gt;Cryptography&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Cryptography resources and tools&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/SandySekharan/CTF-tool"&gt;CTF Tool&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of Capture The Flag (CTF) frameworks, libraries, resources and softwares&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/qazbnm456/awesome-cve-poc"&gt;CVE PoC&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of CVE Proof of Concepts (PoCs)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/clong/DetectionLab"&gt;Detection Lab&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Vagrant &amp;amp; Packer scripts to build a lab environment complete with security tooling and logging best practices&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Cugu/awesome-forensics"&gt;Forensics&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of awesome forensic analysis tools and resources&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Free programming books for developers&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/bt3gl/Gray-Hacker-Resources"&gt;Gray Hacker Resources&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Useful for CTFs, wargames, pentesting&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Hacker0x01/hacker101"&gt;Hacker101&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A free class for web security by HackerOne&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/gradiuscypher/infosec_getting_started"&gt;Infosec Getting Started&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A collection of resources, documentation, links, etc to help people learn about Infosec&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/rmusser01/Infosec_Reference"&gt;Infosec Reference&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Information Security Reference That Doesn't Suck&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/sroberts/awesome-iocs"&gt;IOC&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Collection of sources of indicators of compromise&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/xairy/linux-kernel-exploitation"&gt;Linux Kernel Exploitation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A bunch of links related to Linux kernel fuzzing and exploitation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/meitar/awesome-lockpicking"&gt;Lockpicking&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Resources relating to the security and compromise of locks, safes, and keys.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/jivoi/awesome-ml-for-cybersecurity"&gt;Machine Learning for Cyber Security&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Curated list of tools and resources related to the use of machine learning for cyber security&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/foospidy/payloads"&gt;Payloads&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Collection of web attack payloads&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings"&gt;PayloadsAllTheThings&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of useful payloads and bypass for Web Application Security and Pentest/CTF&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/coreb1t/awesome-pentest-cheat-sheets"&gt;Pentest Cheatsheets&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Collection of the cheat sheets useful for pentesting&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/nixawk/pentest-wiki"&gt;Pentest Wiki&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A free online security knowledge library for pentesters / researchers&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/berzerk0/Probable-Wordlists"&gt;Probable Wordlists&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Wordlists sorted by probability originally created for password generation and testing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/FuzzySecurity/Resource-List"&gt;Resource List&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Collection of useful GitHub projects loosely categorised&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/onethawt/reverseengineering-reading-list"&gt;Reverse Engineering&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of Reverse Engineering articles, books, and papers&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cn0xroot/RFSec-ToolKit"&gt;RFSec-ToolKit&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Collection of Radio Frequency Communication Protocol Hacktools&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/andrewjkerr/security-cheatsheets"&gt;Security Cheatsheets&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Collection of cheatsheets for various infosec tools and topics&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/zbetcheckin/Security_list"&gt;Security List&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Great security list for fun and profit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/alebcay/awesome-shell"&gt;Shell&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of awesome command-line frameworks, toolkits, guides and gizmos to make complete use of shell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Cyb3rWard0g/ThreatHunter-Playbook"&gt;ThreatHunter-Playbook&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A Threat hunter's playbook to aid the development of techniques and hypothesis for hunting campaigns&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/qazbnm456/awesome-web-security"&gt;Web Security&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Curated list of Web Security materials and resources&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-need-more-" class="anchor" aria-hidden="true" href="#need-more-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Need more ?&lt;/h2&gt;
&lt;p&gt;Follow &lt;strong&gt;Hack with GitHub&lt;/strong&gt; on your favorite social media to get daily updates on interesting GitHub repositories related to Security.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Twitter : &lt;a href="https://twitter.com/HackwithGithub" rel="nofollow"&gt;@HackwithGithub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Facebook : &lt;a href="https://www.facebook.com/HackwithGithub" rel="nofollow"&gt;HackwithGithub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h2&gt;
&lt;p&gt;Please have a look at &lt;a href="contributing.md"&gt;contributing.md&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Hack-with-Github</author><guid isPermaLink="false">https://github.com/Hack-with-Github/Awesome-Hacking</guid><pubDate>Tue, 24 Dec 2019 00:02:00 GMT</pubDate></item><item><title>jlevy/the-art-of-command-line #3 in Unknown languages, Today</title><link>https://github.com/jlevy/the-art-of-command-line</link><description>&lt;p&gt;&lt;i&gt;Master the command line, in one page&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;g-emoji class="g-emoji" alias="earth_africa" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f30d.png"&gt;🌍&lt;/g-emoji&gt;
&lt;em&gt;&lt;a href="README-cs.md"&gt;Čeština&lt;/a&gt; ∙ &lt;a href="README-de.md"&gt;Deutsch&lt;/a&gt; ∙ &lt;a href="README-el.md"&gt;Ελληνικά&lt;/a&gt; ∙ &lt;a href="README.md"&gt;English&lt;/a&gt; ∙ &lt;a href="README-es.md"&gt;Español&lt;/a&gt; ∙ &lt;a href="README-fr.md"&gt;Français&lt;/a&gt; ∙ &lt;a href="README-id.md"&gt;Indonesia&lt;/a&gt; ∙ &lt;a href="README-it.md"&gt;Italiano&lt;/a&gt; ∙ &lt;a href="README-ja.md"&gt;日本語&lt;/a&gt; ∙ &lt;a href="README-ko.md"&gt;한국어&lt;/a&gt; ∙ &lt;a href="README-pt.md"&gt;Português&lt;/a&gt; ∙ &lt;a href="README-ro.md"&gt;Română&lt;/a&gt; ∙ &lt;a href="README-ru.md"&gt;Русский&lt;/a&gt; ∙ &lt;a href="README-sl.md"&gt;Slovenščina&lt;/a&gt; ∙ &lt;a href="README-uk.md"&gt;Українська&lt;/a&gt; ∙ &lt;a href="README-zh.md"&gt;简体中文&lt;/a&gt; ∙ &lt;a href="README-zh-Hant.md"&gt;繁體中文&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-the-art-of-command-line" class="anchor" aria-hidden="true" href="#the-art-of-command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Art of Command Line&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Note: I'm looking for a new (and potentially paid) lead author to help expand this to a more comprehensive Guide. While it's very popoular, it could be both deeper and more helpful. If you like to write and are close to being an expert on this material and willing to consider helping, please drop me a note at josh (0x40) holloway.com. –&lt;a href="https://github.com/jlevy"&gt;jlevy&lt;/a&gt;, &lt;a href="https://www.holloway.com" rel="nofollow"&gt;Holloway&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#meta"&gt;Meta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#basics"&gt;Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#everyday-use"&gt;Everyday use&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#processing-files-and-data"&gt;Processing files and data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#system-debugging"&gt;System debugging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#one-liners"&gt;One-liners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#obscure-but-useful"&gt;Obscure but useful&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#macos-only"&gt;macOS only&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#windows-only"&gt;Windows only&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#more-resources"&gt;More resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#disclaimer"&gt;Disclaimer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="cowsay.png"&gt;&lt;img src="cowsay.png" alt="curl -s 'https://raw.githubusercontent.com/jlevy/the-art-of-command-line/master/README.md' | egrep -o '\w+' | tr -d '`' | cowsay -W50" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fluency on the command line is a skill often neglected or considered arcane, but it improves your flexibility and productivity as an engineer in both obvious and subtle ways. This is a selection of notes and tips on using the command-line that we've found useful when working on Linux. Some tips are elementary, and some are fairly specific, sophisticated, or obscure. This page is not long, but if you can use and recall all the items here, you know a lot.&lt;/p&gt;
&lt;p&gt;This work is the result of &lt;a href="AUTHORS.md"&gt;many authors and translators&lt;/a&gt;.
Some of this
&lt;a href="http://www.quora.com/What-are-some-lesser-known-but-useful-Unix-commands" rel="nofollow"&gt;originally&lt;/a&gt;
&lt;a href="http://www.quora.com/What-are-the-most-useful-Swiss-army-knife-one-liners-on-Unix" rel="nofollow"&gt;appeared&lt;/a&gt;
on &lt;a href="http://www.quora.com/What-are-some-time-saving-tips-that-every-Linux-user-should-know" rel="nofollow"&gt;Quora&lt;/a&gt;,
but it has since moved to GitHub, where people more talented than the original author have made numerous improvements.
&lt;a href="https://airtable.com/shrzMhx00YiIVAWJg" rel="nofollow"&gt;&lt;strong&gt;Please submit a question&lt;/strong&gt;&lt;/a&gt; if you have a question related to the command line. &lt;a href="/CONTRIBUTING.md"&gt;&lt;strong&gt;Please contribute&lt;/strong&gt;&lt;/a&gt; if you see an error or something that could be better!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-meta" class="anchor" aria-hidden="true" href="#meta"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Meta&lt;/h2&gt;
&lt;p&gt;Scope:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This guide is both for beginners and the experienced. The goals are &lt;em&gt;breadth&lt;/em&gt; (everything important), &lt;em&gt;specificity&lt;/em&gt; (give concrete examples of the most common case), and &lt;em&gt;brevity&lt;/em&gt; (avoid things that aren't essential or digressions you can easily look up elsewhere). Every tip is essential in some situation or significantly saves time over alternatives.&lt;/li&gt;
&lt;li&gt;This is written for Linux, with the exception of the "&lt;a href="#macos-only"&gt;macOS only&lt;/a&gt;" and "&lt;a href="#windows-only"&gt;Windows only&lt;/a&gt;" sections. Many of the other items apply or can be installed on other Unices or macOS (or even Cygwin).&lt;/li&gt;
&lt;li&gt;The focus is on interactive Bash, though many tips apply to other shells and to general Bash scripting.&lt;/li&gt;
&lt;li&gt;It includes both "standard" Unix commands as well as ones that require special package installs -- so long as they are important enough to merit inclusion.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To keep this to one page, content is implicitly included by reference. You're smart enough to look up more detail elsewhere once you know the idea or command to Google. Use &lt;code&gt;apt&lt;/code&gt;, &lt;code&gt;yum&lt;/code&gt;, &lt;code&gt;dnf&lt;/code&gt;, &lt;code&gt;pacman&lt;/code&gt;, &lt;code&gt;pip&lt;/code&gt; or &lt;code&gt;brew&lt;/code&gt; (as appropriate) to install new programs.&lt;/li&gt;
&lt;li&gt;Use &lt;a href="http://explainshell.com/" rel="nofollow"&gt;Explainshell&lt;/a&gt; to get a helpful breakdown of what commands, options, pipes etc. do.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-basics" class="anchor" aria-hidden="true" href="#basics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basics&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Learn basic Bash. Actually, type &lt;code&gt;man bash&lt;/code&gt; and at least skim the whole thing; it's pretty easy to follow and not that long. Alternate shells can be nice, but Bash is powerful and always available (learning &lt;em&gt;only&lt;/em&gt; zsh, fish, etc., while tempting on your own laptop, restricts you in many situations, such as using existing servers).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn at least one text-based editor well. The &lt;code&gt;nano&lt;/code&gt; editor is one of the simplest for basic editing (opening, editing, saving, searching). However, for the power user in a text terminal, there is no substitute for Vim (&lt;code&gt;vi&lt;/code&gt;), the hard-to-learn but venerable, fast, and full-featured editor. Many people also use the classic Emacs, particularly for larger editing tasks. (Of course, any modern software developer working on an extensive project is unlikely to use only a pure text-based editor and should also be familiar with modern graphical IDEs and tools.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finding documentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Know how to read official documentation with &lt;code&gt;man&lt;/code&gt; (for the inquisitive, &lt;code&gt;man man&lt;/code&gt; lists the section numbers, e.g. 1 is "regular" commands, 5 is files/conventions, and 8 are for administration). Find man pages with &lt;code&gt;apropos&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Know that some commands are not executables, but Bash builtins, and that you can get help on them with &lt;code&gt;help&lt;/code&gt; and &lt;code&gt;help -d&lt;/code&gt;. You can find out whether a command is an executable, shell builtin or an alias by using &lt;code&gt;type command&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl cheat.sh/command&lt;/code&gt; will give a brief "cheat sheet" with common examples of how to use a shell command.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn about redirection of output and input using &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;&lt;/code&gt; and pipes using &lt;code&gt;|&lt;/code&gt;. Know &lt;code&gt;&amp;gt;&lt;/code&gt; overwrites the output file and &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; appends. Learn about stdout and stderr.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn about file glob expansion with &lt;code&gt;*&lt;/code&gt; (and perhaps &lt;code&gt;?&lt;/code&gt; and &lt;code&gt;[&lt;/code&gt;...&lt;code&gt;]&lt;/code&gt;) and quoting and the difference between double &lt;code&gt;"&lt;/code&gt; and single &lt;code&gt;'&lt;/code&gt; quotes. (See more on variable expansion below.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be familiar with Bash job management: &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;strong&gt;ctrl-z&lt;/strong&gt;, &lt;strong&gt;ctrl-c&lt;/strong&gt;, &lt;code&gt;jobs&lt;/code&gt;, &lt;code&gt;fg&lt;/code&gt;, &lt;code&gt;bg&lt;/code&gt;, &lt;code&gt;kill&lt;/code&gt;, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know &lt;code&gt;ssh&lt;/code&gt;, and the basics of passwordless authentication, via &lt;code&gt;ssh-agent&lt;/code&gt;, &lt;code&gt;ssh-add&lt;/code&gt;, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Basic file management: &lt;code&gt;ls&lt;/code&gt; and &lt;code&gt;ls -l&lt;/code&gt; (in particular, learn what every column in &lt;code&gt;ls -l&lt;/code&gt; means), &lt;code&gt;less&lt;/code&gt;, &lt;code&gt;head&lt;/code&gt;, &lt;code&gt;tail&lt;/code&gt; and &lt;code&gt;tail -f&lt;/code&gt; (or even better, &lt;code&gt;less +F&lt;/code&gt;), &lt;code&gt;ln&lt;/code&gt; and &lt;code&gt;ln -s&lt;/code&gt; (learn the differences and advantages of hard versus soft links), &lt;code&gt;chown&lt;/code&gt;, &lt;code&gt;chmod&lt;/code&gt;, &lt;code&gt;du&lt;/code&gt; (for a quick summary of disk usage: &lt;code&gt;du -hs *&lt;/code&gt;). For filesystem management, &lt;code&gt;df&lt;/code&gt;, &lt;code&gt;mount&lt;/code&gt;, &lt;code&gt;fdisk&lt;/code&gt;, &lt;code&gt;mkfs&lt;/code&gt;, &lt;code&gt;lsblk&lt;/code&gt;. Learn what an inode is (&lt;code&gt;ls -i&lt;/code&gt; or &lt;code&gt;df -i&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Basic network management: &lt;code&gt;ip&lt;/code&gt; or &lt;code&gt;ifconfig&lt;/code&gt;, &lt;code&gt;dig&lt;/code&gt;, &lt;code&gt;traceroute&lt;/code&gt;, &lt;code&gt;route&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn and use a version control management system, such as &lt;code&gt;git&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know regular expressions well, and the various flags to &lt;code&gt;grep&lt;/code&gt;/&lt;code&gt;egrep&lt;/code&gt;. The &lt;code&gt;-i&lt;/code&gt;, &lt;code&gt;-o&lt;/code&gt;, &lt;code&gt;-v&lt;/code&gt;, &lt;code&gt;-A&lt;/code&gt;, &lt;code&gt;-B&lt;/code&gt;, and &lt;code&gt;-C&lt;/code&gt; options are worth knowing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn to use &lt;code&gt;apt-get&lt;/code&gt;, &lt;code&gt;yum&lt;/code&gt;, &lt;code&gt;dnf&lt;/code&gt; or &lt;code&gt;pacman&lt;/code&gt; (depending on distro) to find and install packages. And make sure you have &lt;code&gt;pip&lt;/code&gt; to install Python-based command-line tools (a few below are easiest to install via &lt;code&gt;pip&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-everyday-use" class="anchor" aria-hidden="true" href="#everyday-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Everyday use&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In Bash, use &lt;strong&gt;Tab&lt;/strong&gt; to complete arguments or list all available commands and &lt;strong&gt;ctrl-r&lt;/strong&gt; to search through command history (after pressing, type to search, press &lt;strong&gt;ctrl-r&lt;/strong&gt; repeatedly to cycle through more matches, press &lt;strong&gt;Enter&lt;/strong&gt; to execute the found command, or hit the right arrow to put the result in the current line to allow editing).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In Bash, use &lt;strong&gt;ctrl-w&lt;/strong&gt; to delete the last word, and &lt;strong&gt;ctrl-u&lt;/strong&gt; to delete the content from current cursor back to the start of the line. Use &lt;strong&gt;alt-b&lt;/strong&gt; and &lt;strong&gt;alt-f&lt;/strong&gt; to move by word, &lt;strong&gt;ctrl-a&lt;/strong&gt; to move cursor to beginning of line,  &lt;strong&gt;ctrl-e&lt;/strong&gt; to move cursor to end of line, &lt;strong&gt;ctrl-k&lt;/strong&gt; to kill to the end of the line, &lt;strong&gt;ctrl-l&lt;/strong&gt; to clear the screen. See &lt;code&gt;man readline&lt;/code&gt; for all the default keybindings in Bash. There are a lot. For example &lt;strong&gt;alt-.&lt;/strong&gt; cycles through previous arguments, and &lt;strong&gt;alt-&lt;/strong&gt;* expands a glob.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alternatively, if you love vi-style key-bindings, use &lt;code&gt;set -o vi&lt;/code&gt; (and &lt;code&gt;set -o emacs&lt;/code&gt; to put it back).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For editing long commands, after setting your editor (for example &lt;code&gt;export EDITOR=vim&lt;/code&gt;), &lt;strong&gt;ctrl-x&lt;/strong&gt; &lt;strong&gt;ctrl-e&lt;/strong&gt; will open the current command in an editor for multi-line editing. Or in vi style, &lt;strong&gt;escape-v&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To see recent commands, use &lt;code&gt;history&lt;/code&gt;. Follow with &lt;code&gt;!n&lt;/code&gt; (where &lt;code&gt;n&lt;/code&gt; is the command number) to execute again. There are also many abbreviations you can use, the most useful probably being &lt;code&gt;!$&lt;/code&gt; for last argument and &lt;code&gt;!!&lt;/code&gt; for last command (see "HISTORY EXPANSION" in the man page). However, these are often easily replaced with &lt;strong&gt;ctrl-r&lt;/strong&gt; and &lt;strong&gt;alt-.&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to your home directory with &lt;code&gt;cd&lt;/code&gt;. Access files relative to your home directory with the &lt;code&gt;~&lt;/code&gt; prefix (e.g. &lt;code&gt;~/.bashrc&lt;/code&gt;). In &lt;code&gt;sh&lt;/code&gt; scripts refer to the home directory as &lt;code&gt;$HOME&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To go back to the previous working directory: &lt;code&gt;cd -&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are halfway through typing a command but change your mind, hit &lt;strong&gt;alt-#&lt;/strong&gt; to add a &lt;code&gt;#&lt;/code&gt; at the beginning and enter it as a comment (or use &lt;strong&gt;ctrl-a&lt;/strong&gt;, &lt;strong&gt;#&lt;/strong&gt;, &lt;strong&gt;enter&lt;/strong&gt;). You can then return to it later via command history.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;xargs&lt;/code&gt; (or &lt;code&gt;parallel&lt;/code&gt;). It's very powerful. Note you can control how many items execute per line (&lt;code&gt;-L&lt;/code&gt;) as well as parallelism (&lt;code&gt;-P&lt;/code&gt;). If you're not sure if it'll do the right thing, use &lt;code&gt;xargs echo&lt;/code&gt; first. Also, &lt;code&gt;-I{}&lt;/code&gt; is handy. Examples:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      find &lt;span class="pl-c1"&gt;.&lt;/span&gt; -name &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*.py&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; xargs grep some_function
      cat hosts &lt;span class="pl-k"&gt;|&lt;/span&gt; xargs -I{} ssh root@{} hostname&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pstree -p&lt;/code&gt; is a helpful display of the process tree.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;pgrep&lt;/code&gt; and &lt;code&gt;pkill&lt;/code&gt; to find or signal processes by name (&lt;code&gt;-f&lt;/code&gt; is helpful).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know the various signals you can send processes. For example, to suspend a process, use &lt;code&gt;kill -STOP [pid]&lt;/code&gt;. For the full list, see &lt;code&gt;man 7 signal&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;nohup&lt;/code&gt; or &lt;code&gt;disown&lt;/code&gt; if you want a background process to keep running forever.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check what processes are listening via &lt;code&gt;netstat -lntp&lt;/code&gt; or &lt;code&gt;ss -plat&lt;/code&gt; (for TCP; add &lt;code&gt;-u&lt;/code&gt; for UDP) or &lt;code&gt;lsof -iTCP -sTCP:LISTEN -P -n&lt;/code&gt; (which also works on macOS).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;See also &lt;code&gt;lsof&lt;/code&gt; and &lt;code&gt;fuser&lt;/code&gt; for open sockets and files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;See &lt;code&gt;uptime&lt;/code&gt; or &lt;code&gt;w&lt;/code&gt; to know how long the system has been running.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;alias&lt;/code&gt; to create shortcuts for commonly used commands. For example, &lt;code&gt;alias ll='ls -latr'&lt;/code&gt; creates a new alias &lt;code&gt;ll&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Save aliases, shell settings, and functions you commonly use in &lt;code&gt;~/.bashrc&lt;/code&gt;, and &lt;a href="http://superuser.com/a/183980/7106" rel="nofollow"&gt;arrange for login shells to source it&lt;/a&gt;. This will make your setup available in all your shell sessions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Put the settings of environment variables as well as commands that should be executed when you login in &lt;code&gt;~/.bash_profile&lt;/code&gt;. Separate configuration will be needed for shells you launch from graphical environment logins and &lt;code&gt;cron&lt;/code&gt; jobs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Synchronize your configuration files (e.g. &lt;code&gt;.bashrc&lt;/code&gt; and &lt;code&gt;.bash_profile&lt;/code&gt;) among various computers with Git.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Understand that care is needed when variables and filenames include whitespace. Surround your Bash variables with quotes, e.g. &lt;code&gt;"$FOO"&lt;/code&gt;. Prefer the &lt;code&gt;-0&lt;/code&gt; or &lt;code&gt;-print0&lt;/code&gt; options to enable null characters to delimit filenames, e.g. &lt;code&gt;locate -0 pattern | xargs -0 ls -al&lt;/code&gt; or &lt;code&gt;find / -print0 -type d | xargs -0 ls -al&lt;/code&gt;. To iterate on filenames containing whitespace in a for loop, set your IFS to be a newline only using &lt;code&gt;IFS=$'\n'&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In Bash scripts, use &lt;code&gt;set -x&lt;/code&gt; (or the variant &lt;code&gt;set -v&lt;/code&gt;, which logs raw input, including unexpanded variables and comments) for debugging output. Use strict modes unless you have a good reason not to: Use &lt;code&gt;set -e&lt;/code&gt; to abort on errors (nonzero exit code). Use &lt;code&gt;set -u&lt;/code&gt; to detect unset variable usages. Consider &lt;code&gt;set -o pipefail&lt;/code&gt; too, to abort on errors within pipes (though read up on it more if you do, as this topic is a bit subtle). For more involved scripts, also use &lt;code&gt;trap&lt;/code&gt; on EXIT or ERR. A useful habit is to start a script like this, which will make it detect and abort on common errors and print a message:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      &lt;span class="pl-c1"&gt;set&lt;/span&gt; -euo pipefail
      &lt;span class="pl-c1"&gt;trap&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;echo 'error: Script failed: see failed command above'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ERR&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;In Bash scripts, subshells (written with parentheses) are convenient ways to group commands. A common example is to temporarily move to a different working directory, e.g.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; do something in current dir&lt;/span&gt;
      (cd /some/other/dir &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; other-command)
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; continue in original dir&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In Bash, note there are lots of kinds of variable expansion. Checking a variable exists: &lt;code&gt;${name:?error message}&lt;/code&gt;. For example, if a Bash script requires a single argument, just write &lt;code&gt;input_file=${1:?usage: $0 input_file}&lt;/code&gt;. Using a default value if a variable is empty: &lt;code&gt;${name:-default}&lt;/code&gt;. If you want to have an additional (optional) parameter added to the previous example, you can use something like &lt;code&gt;output_file=${2:-logfile}&lt;/code&gt;. If &lt;code&gt;$2&lt;/code&gt; is omitted and thus empty, &lt;code&gt;output_file&lt;/code&gt; will be set to &lt;code&gt;logfile&lt;/code&gt;. Arithmetic expansion: &lt;code&gt;i=$(( (i + 1) % 5 ))&lt;/code&gt;. Sequences: &lt;code&gt;{1..10}&lt;/code&gt;. Trimming of strings: &lt;code&gt;${var%suffix}&lt;/code&gt; and &lt;code&gt;${var#prefix}&lt;/code&gt;. For example if &lt;code&gt;var=foo.pdf&lt;/code&gt;, then &lt;code&gt;echo ${var%.pdf}.txt&lt;/code&gt; prints &lt;code&gt;foo.txt&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Brace expansion using &lt;code&gt;{&lt;/code&gt;...&lt;code&gt;}&lt;/code&gt; can reduce having to re-type similar text and automate combinations of items.  This is helpful in examples like &lt;code&gt;mv foo.{txt,pdf} some-dir&lt;/code&gt; (which moves both files), &lt;code&gt;cp somefile{,.bak}&lt;/code&gt; (which expands to &lt;code&gt;cp somefile somefile.bak&lt;/code&gt;) or &lt;code&gt;mkdir -p test-{a,b,c}/subtest-{1,2,3}&lt;/code&gt; (which expands all possible combinations and creates a directory tree). Brace expansion is performed before any other expansion.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The order of expansions is: brace expansion; tilde expansion, parameter and variable expansion, arithmetic expansion, and command substitution (done in a left-to-right fashion); word splitting; and filename expansion. (For example, a range like &lt;code&gt;{1..20}&lt;/code&gt; cannot be expressed with variables using &lt;code&gt;{$a..$b}&lt;/code&gt;. Use &lt;code&gt;seq&lt;/code&gt; or a &lt;code&gt;for&lt;/code&gt; loop instead, e.g., &lt;code&gt;seq $a $b&lt;/code&gt; or &lt;code&gt;for((i=a; i&amp;lt;=b; i++)); do ... ; done&lt;/code&gt;.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The output of a command can be treated like a file via &lt;code&gt;&amp;lt;(some command)&lt;/code&gt; (known as process substitution). For example, compare local &lt;code&gt;/etc/hosts&lt;/code&gt; with a remote one:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      diff /etc/hosts &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;(&lt;/span&gt;ssh somehost cat /etc/hosts&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;When writing scripts you may want to put all of your code in curly braces. If the closing brace is missing, your script will be prevented from executing due to a syntax error. This makes sense when your script is going to be downloaded from the web, since it prevents partially downloaded scripts from executing:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;{
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Your code here&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;A "here document" allows &lt;a href="https://www.tldp.org/LDP/abs/html/here-docs.html" rel="nofollow"&gt;redirection of multiple lines of input&lt;/a&gt; as if from a file:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;cat &amp;lt;&amp;lt;EOF
input
on multiple lines
EOF
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In Bash, redirect both standard output and standard error via: &lt;code&gt;some-command &amp;gt;logfile 2&amp;gt;&amp;amp;1&lt;/code&gt; or &lt;code&gt;some-command &amp;amp;&amp;gt;logfile&lt;/code&gt;. Often, to ensure a command does not leave an open file handle to standard input, tying it to the terminal you are in, it is also good practice to add &lt;code&gt;&amp;lt;/dev/null&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;man ascii&lt;/code&gt; for a good ASCII table, with hex and decimal values. For general encoding info, &lt;code&gt;man unicode&lt;/code&gt;, &lt;code&gt;man utf-8&lt;/code&gt;, and &lt;code&gt;man latin1&lt;/code&gt; are helpful.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;screen&lt;/code&gt; or &lt;a href="https://tmux.github.io/" rel="nofollow"&gt;&lt;code&gt;tmux&lt;/code&gt;&lt;/a&gt; to multiplex the screen, especially useful on remote ssh sessions and to detach and re-attach to a session. &lt;code&gt;byobu&lt;/code&gt; can enhance screen or tmux by providing more information and easier management. A more minimal alternative for session persistence only is &lt;a href="https://github.com/bogner/dtach"&gt;&lt;code&gt;dtach&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In ssh, knowing how to port tunnel with &lt;code&gt;-L&lt;/code&gt; or &lt;code&gt;-D&lt;/code&gt; (and occasionally &lt;code&gt;-R&lt;/code&gt;) is useful, e.g. to access web sites from a remote server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It can be useful to make a few optimizations to your ssh configuration; for example, this &lt;code&gt;~/.ssh/config&lt;/code&gt; contains settings to avoid dropped connections in certain network environments, uses compression (which is helpful with scp over low-bandwidth connections), and multiplex channels to the same server with a local control file:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;      TCPKeepAlive=yes
      ServerAliveInterval=15
      ServerAliveCountMax=6
      Compression=yes
      ControlMaster auto
      ControlPath /tmp/%r@%h:%p
      ControlPersist yes
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A few other options relevant to ssh are security sensitive and should be enabled with care, e.g. per subnet or host or in trusted networks: &lt;code&gt;StrictHostKeyChecking=no&lt;/code&gt;, &lt;code&gt;ForwardAgent=yes&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Consider &lt;a href="https://mosh.mit.edu/" rel="nofollow"&gt;&lt;code&gt;mosh&lt;/code&gt;&lt;/a&gt; an alternative to ssh that uses UDP, avoiding dropped connections and adding convenience on the road (requires server-side setup).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To get the permissions on a file in octal form, which is useful for system configuration but not available in &lt;code&gt;ls&lt;/code&gt; and easy to bungle, use something like&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      stat -c &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;%A %a %n&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; /etc/timezone&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For interactive selection of values from the output of another command, use &lt;a href="https://github.com/mooz/percol"&gt;&lt;code&gt;percol&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://github.com/junegunn/fzf"&gt;&lt;code&gt;fzf&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For interaction with files based on the output of another command (like &lt;code&gt;git&lt;/code&gt;), use &lt;code&gt;fpp&lt;/code&gt; (&lt;a href="https://github.com/facebook/PathPicker"&gt;PathPicker&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For a simple web server for all files in the current directory (and subdirs), available to anyone on your network, use:
&lt;code&gt;python -m SimpleHTTPServer 7777&lt;/code&gt; (for port 7777 and Python 2) and &lt;code&gt;python -m http.server 7777&lt;/code&gt; (for port 7777 and Python 3).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For running a command as another user, use &lt;code&gt;sudo&lt;/code&gt;. Defaults to running as root; use &lt;code&gt;-u&lt;/code&gt; to specify another user. Use &lt;code&gt;-i&lt;/code&gt; to login as that user (you will be asked for &lt;em&gt;your&lt;/em&gt; password).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For switching the shell to another user, use &lt;code&gt;su username&lt;/code&gt; or &lt;code&gt;su - username&lt;/code&gt;. The latter with "-" gets an environment as if another user just logged in. Omitting the username defaults to root. You will be asked for the password &lt;em&gt;of the user you are switching to&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know about the &lt;a href="https://wiki.debian.org/CommonErrorMessages/ArgumentListTooLong" rel="nofollow"&gt;128K limit&lt;/a&gt; on command lines. This "Argument list too long" error is common when wildcard matching large numbers of files. (When this happens alternatives like &lt;code&gt;find&lt;/code&gt; and &lt;code&gt;xargs&lt;/code&gt; may help.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For a basic calculator (and of course access to Python in general), use the &lt;code&gt;python&lt;/code&gt; interpreter. For example,&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; 2+3
5
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-processing-files-and-data" class="anchor" aria-hidden="true" href="#processing-files-and-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Processing files and data&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To locate a file by name in the current directory, &lt;code&gt;find . -iname '*something*'&lt;/code&gt; (or similar). To find a file anywhere by name, use &lt;code&gt;locate something&lt;/code&gt; (but bear in mind &lt;code&gt;updatedb&lt;/code&gt; may not have indexed recently created files).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For general searching through source or data files, there are several options more advanced or faster than &lt;code&gt;grep -r&lt;/code&gt;, including (in rough order from older to newer) &lt;a href="https://github.com/beyondgrep/ack2"&gt;&lt;code&gt;ack&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://github.com/ggreer/the_silver_searcher"&gt;&lt;code&gt;ag&lt;/code&gt;&lt;/a&gt; ("the silver searcher"), and &lt;a href="https://github.com/BurntSushi/ripgrep"&gt;&lt;code&gt;rg&lt;/code&gt;&lt;/a&gt; (ripgrep).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To convert HTML to text: &lt;code&gt;lynx -dump -stdin&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For Markdown, HTML, and all kinds of document conversion, try &lt;a href="http://pandoc.org/" rel="nofollow"&gt;&lt;code&gt;pandoc&lt;/code&gt;&lt;/a&gt;. For example, to convert a Markdown document to Word format: &lt;code&gt;pandoc README.md --from markdown --to docx -o temp.docx&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you must handle XML, &lt;code&gt;xmlstarlet&lt;/code&gt; is old but good.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For JSON, use &lt;a href="http://stedolan.github.io/jq/" rel="nofollow"&gt;&lt;code&gt;jq&lt;/code&gt;&lt;/a&gt;. For interactive use, also see &lt;a href="https://github.com/simeji/jid"&gt;&lt;code&gt;jid&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/fiatjaf/jiq"&gt;&lt;code&gt;jiq&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For YAML, use &lt;a href="https://github.com/0k/shyaml"&gt;&lt;code&gt;shyaml&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For Excel or CSV files, &lt;a href="https://github.com/onyxfish/csvkit"&gt;csvkit&lt;/a&gt; provides &lt;code&gt;in2csv&lt;/code&gt;, &lt;code&gt;csvcut&lt;/code&gt;, &lt;code&gt;csvjoin&lt;/code&gt;, &lt;code&gt;csvgrep&lt;/code&gt;, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For Amazon S3, &lt;a href="https://github.com/s3tools/s3cmd"&gt;&lt;code&gt;s3cmd&lt;/code&gt;&lt;/a&gt; is convenient and &lt;a href="https://github.com/bloomreach/s4cmd"&gt;&lt;code&gt;s4cmd&lt;/code&gt;&lt;/a&gt; is faster. Amazon's &lt;a href="https://github.com/aws/aws-cli"&gt;&lt;code&gt;aws&lt;/code&gt;&lt;/a&gt; and the improved &lt;a href="https://github.com/donnemartin/saws"&gt;&lt;code&gt;saws&lt;/code&gt;&lt;/a&gt; are essential for other AWS-related tasks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know about &lt;code&gt;sort&lt;/code&gt; and &lt;code&gt;uniq&lt;/code&gt;, including uniq's &lt;code&gt;-u&lt;/code&gt; and &lt;code&gt;-d&lt;/code&gt; options -- see one-liners below. See also &lt;code&gt;comm&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know about &lt;code&gt;cut&lt;/code&gt;, &lt;code&gt;paste&lt;/code&gt;, and &lt;code&gt;join&lt;/code&gt; to manipulate text files. Many people use &lt;code&gt;cut&lt;/code&gt; but forget about &lt;code&gt;join&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know about &lt;code&gt;wc&lt;/code&gt; to count newlines (&lt;code&gt;-l&lt;/code&gt;), characters (&lt;code&gt;-m&lt;/code&gt;), words (&lt;code&gt;-w&lt;/code&gt;) and bytes (&lt;code&gt;-c&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know about &lt;code&gt;tee&lt;/code&gt; to copy from stdin to a file and also to stdout, as in &lt;code&gt;ls -al | tee file.txt&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For more complex calculations, including grouping, reversing fields, and statistical calculations, consider &lt;a href="https://www.gnu.org/software/datamash/" rel="nofollow"&gt;&lt;code&gt;datamash&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know that locale affects a lot of command line tools in subtle ways, including sorting order (collation) and performance. Most Linux installations will set &lt;code&gt;LANG&lt;/code&gt; or other locale variables to a local setting like US English. But be aware sorting will change if you change locale. And know i18n routines can make sort or other commands run &lt;em&gt;many times&lt;/em&gt; slower. In some situations (such as the set operations or uniqueness operations below) you can safely ignore slow i18n routines entirely and use traditional byte-based sort order, using &lt;code&gt;export LC_ALL=C&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can set a specific command's environment by prefixing its invocation with the environment variable settings, as in &lt;code&gt;TZ=Pacific/Fiji date&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know basic &lt;code&gt;awk&lt;/code&gt; and &lt;code&gt;sed&lt;/code&gt; for simple data munging. See &lt;a href="#one-liners"&gt;One-liners&lt;/a&gt; for examples.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To replace all occurrences of a string in place, in one or more files:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      perl -pi.bak -e &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s/old-string/new-string/g&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; my-files-&lt;span class="pl-k"&gt;*&lt;/span&gt;.txt&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;To rename multiple files and/or search and replace within files, try &lt;a href="https://github.com/jlevy/repren"&gt;&lt;code&gt;repren&lt;/code&gt;&lt;/a&gt;. (In some cases the &lt;code&gt;rename&lt;/code&gt; command also allows multiple renames, but be careful as its functionality is not the same on all Linux distributions.)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Full rename of filenames, directories, and contents foo -&amp;gt; bar:&lt;/span&gt;
      repren --full --preserve-case --from foo --to bar &lt;span class="pl-c1"&gt;.&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Recover backup files whatever.bak -&amp;gt; whatever:&lt;/span&gt;
      repren --renames --from &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(.*)\.bak&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; --to &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;.bak
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Same as above, using rename, if available:&lt;/span&gt;
      rename &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s/\.bak$//&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;.bak&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;As the man page says, &lt;code&gt;rsync&lt;/code&gt; really is a fast and extraordinarily versatile file copying tool. It's known for synchronizing between machines but is equally useful locally. When security restrictions allow, using &lt;code&gt;rsync&lt;/code&gt; instead of &lt;code&gt;scp&lt;/code&gt; allows recovery of a transfer without restarting from scratch. It also is among the &lt;a href="https://web.archive.org/web/20130929001850/http://linuxnote.net/jianingy/en/linux/a-fast-way-to-remove-huge-number-of-files.html" rel="nofollow"&gt;fastest ways&lt;/a&gt; to delete large numbers of files:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mkdir empty &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rsync -r --delete empty/ some-dir &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rmdir some-dir&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For monitoring progress when processing files, use &lt;a href="http://www.ivarch.com/programs/pv.shtml" rel="nofollow"&gt;&lt;code&gt;pv&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://github.com/dmerejkowsky/pycp"&gt;&lt;code&gt;pycp&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://github.com/dspinellis/pmonitor"&gt;&lt;code&gt;pmonitor&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://github.com/Xfennec/progress"&gt;&lt;code&gt;progress&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;rsync --progress&lt;/code&gt;, or, for block-level copying, &lt;code&gt;dd status=progress&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;shuf&lt;/code&gt; to shuffle or select random lines from a file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know &lt;code&gt;sort&lt;/code&gt;'s options. For numbers, use &lt;code&gt;-n&lt;/code&gt;, or &lt;code&gt;-h&lt;/code&gt; for handling human-readable numbers (e.g. from &lt;code&gt;du -h&lt;/code&gt;). Know how keys work (&lt;code&gt;-t&lt;/code&gt; and &lt;code&gt;-k&lt;/code&gt;). In particular, watch out that you need to write &lt;code&gt;-k1,1&lt;/code&gt; to sort by only the first field; &lt;code&gt;-k1&lt;/code&gt; means sort according to the whole line. Stable sort (&lt;code&gt;sort -s&lt;/code&gt;) can be useful. For example, to sort first by field 2, then secondarily by field 1, you can use &lt;code&gt;sort -k1,1 | sort -s -k2,2&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you ever need to write a tab literal in a command line in Bash (e.g. for the -t argument to sort), press &lt;strong&gt;ctrl-v&lt;/strong&gt; &lt;strong&gt;[Tab]&lt;/strong&gt; or write &lt;code&gt;$'\t'&lt;/code&gt; (the latter is better as you can copy/paste it).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The standard tools for patching source code are &lt;code&gt;diff&lt;/code&gt; and &lt;code&gt;patch&lt;/code&gt;. See also &lt;code&gt;diffstat&lt;/code&gt; for summary statistics of a diff and &lt;code&gt;sdiff&lt;/code&gt; for a side-by-side diff. Note &lt;code&gt;diff -r&lt;/code&gt; works for entire directories. Use &lt;code&gt;diff -r tree1 tree2 | diffstat&lt;/code&gt; for a summary of changes. Use &lt;code&gt;vimdiff&lt;/code&gt; to compare and edit files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For binary files, use &lt;code&gt;hd&lt;/code&gt;, &lt;code&gt;hexdump&lt;/code&gt; or &lt;code&gt;xxd&lt;/code&gt; for simple hex dumps and &lt;code&gt;bvi&lt;/code&gt;, &lt;code&gt;hexedit&lt;/code&gt; or &lt;code&gt;biew&lt;/code&gt; for binary editing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Also for binary files, &lt;code&gt;strings&lt;/code&gt; (plus &lt;code&gt;grep&lt;/code&gt;, etc.) lets you find bits of text.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For binary diffs (delta compression), use &lt;code&gt;xdelta3&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To convert text encodings, try &lt;code&gt;iconv&lt;/code&gt;. Or &lt;code&gt;uconv&lt;/code&gt; for more advanced use; it supports some advanced Unicode things. For example:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Displays hex codes or actual names of characters (useful for debugging):&lt;/span&gt;
      uconv -f utf-8 -t utf-8 -x &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;::Any-Hex;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; input.txt
      uconv -f utf-8 -t utf-8 -x &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;::Any-Name;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; input.txt
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Lowercase and removes all accents (by expanding and dropping them):&lt;/span&gt;
      uconv -f utf-8 -t utf-8 -x &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;::Any-Lower; ::Any-NFD; [:Nonspacing Mark:] &amp;gt;; ::Any-NFC;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; input.txt &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; output.txt&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To split files into pieces, see &lt;code&gt;split&lt;/code&gt; (to split by size) and &lt;code&gt;csplit&lt;/code&gt; (to split by a pattern).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Date and time: To get the current date and time in the helpful &lt;a href="https://en.wikipedia.org/wiki/ISO_8601" rel="nofollow"&gt;ISO 8601&lt;/a&gt; format, use &lt;code&gt;date -u +"%Y-%m-%dT%H:%M:%SZ"&lt;/code&gt; (other options &lt;a href="https://stackoverflow.com/questions/7216358/date-command-on-os-x-doesnt-have-iso-8601-i-option" rel="nofollow"&gt;are&lt;/a&gt; &lt;a href="https://unix.stackexchange.com/questions/164826/date-command-iso-8601-option" rel="nofollow"&gt;problematic&lt;/a&gt;). To manipulate date and time expressions, use &lt;code&gt;dateadd&lt;/code&gt;, &lt;code&gt;datediff&lt;/code&gt;, &lt;code&gt;strptime&lt;/code&gt; etc. from &lt;a href="http://www.fresse.org/dateutils/" rel="nofollow"&gt;&lt;code&gt;dateutils&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;zless&lt;/code&gt;, &lt;code&gt;zmore&lt;/code&gt;, &lt;code&gt;zcat&lt;/code&gt;, and &lt;code&gt;zgrep&lt;/code&gt; to operate on compressed files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;File attributes are settable via &lt;code&gt;chattr&lt;/code&gt; and offer a lower-level alternative to file permissions. For example, to protect against accidental file deletion the immutable flag:  &lt;code&gt;sudo chattr +i /critical/directory/or/file&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;getfacl&lt;/code&gt; and &lt;code&gt;setfacl&lt;/code&gt; to save and restore file permissions. For example:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;   getfacl -R /some/path &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; permissions.txt
   setfacl --restore=permissions.txt&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;To create empty files quickly, use &lt;code&gt;truncate&lt;/code&gt; (creates &lt;a href="https://en.wikipedia.org/wiki/Sparse_file" rel="nofollow"&gt;sparse file&lt;/a&gt;), &lt;code&gt;fallocate&lt;/code&gt; (ext4, xfs, btrfs and ocfs2 filesystems), &lt;code&gt;xfs_mkfile&lt;/code&gt; (almost any filesystems, comes in xfsprogs package), &lt;code&gt;mkfile&lt;/code&gt; (for Unix-like systems like Solaris, Mac OS).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-system-debugging" class="anchor" aria-hidden="true" href="#system-debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System debugging&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For web debugging, &lt;code&gt;curl&lt;/code&gt; and &lt;code&gt;curl -I&lt;/code&gt; are handy, or their &lt;code&gt;wget&lt;/code&gt; equivalents, or the more modern &lt;a href="https://github.com/jkbrzt/httpie"&gt;&lt;code&gt;httpie&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To know current cpu/disk status, the classic tools are &lt;code&gt;top&lt;/code&gt; (or the better &lt;code&gt;htop&lt;/code&gt;), &lt;code&gt;iostat&lt;/code&gt;, and &lt;code&gt;iotop&lt;/code&gt;. Use &lt;code&gt;iostat -mxz 15&lt;/code&gt; for basic CPU and detailed per-partition disk stats and performance insight.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For network connection details, use &lt;code&gt;netstat&lt;/code&gt; and &lt;code&gt;ss&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For a quick overview of what's happening on a system, &lt;code&gt;dstat&lt;/code&gt; is especially useful. For broadest overview with details, use &lt;a href="https://github.com/nicolargo/glances"&gt;&lt;code&gt;glances&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To know memory status, run and understand the output of &lt;code&gt;free&lt;/code&gt; and &lt;code&gt;vmstat&lt;/code&gt;. In particular, be aware the "cached" value is memory held by the Linux kernel as file cache, so effectively counts toward the "free" value.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Java system debugging is a different kettle of fish, but a simple trick on Oracle's and some other JVMs is that you can run &lt;code&gt;kill -3 &amp;lt;pid&amp;gt;&lt;/code&gt; and a full stack trace and heap summary (including generational garbage collection details, which can be highly informative) will be dumped to stderr/logs. The JDK's &lt;code&gt;jps&lt;/code&gt;, &lt;code&gt;jstat&lt;/code&gt;, &lt;code&gt;jstack&lt;/code&gt;, &lt;code&gt;jmap&lt;/code&gt; are useful. &lt;a href="https://github.com/aragozin/jvm-tools"&gt;SJK tools&lt;/a&gt; are more advanced.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;a href="http://www.bitwizard.nl/mtr/" rel="nofollow"&gt;&lt;code&gt;mtr&lt;/code&gt;&lt;/a&gt; as a better traceroute, to identify network issues.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For looking at why a disk is full, &lt;a href="https://dev.yorhel.nl/ncdu" rel="nofollow"&gt;&lt;code&gt;ncdu&lt;/code&gt;&lt;/a&gt; saves time over the usual commands like &lt;code&gt;du -sh *&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To find which socket or process is using bandwidth, try &lt;a href="http://www.ex-parrot.com/~pdw/iftop/" rel="nofollow"&gt;&lt;code&gt;iftop&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://github.com/raboof/nethogs"&gt;&lt;code&gt;nethogs&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;ab&lt;/code&gt; tool (comes with Apache) is helpful for quick-and-dirty checking of web server performance. For more complex load testing, try &lt;code&gt;siege&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For more serious network debugging, &lt;a href="https://wireshark.org/" rel="nofollow"&gt;&lt;code&gt;wireshark&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://www.wireshark.org/docs/wsug_html_chunked/AppToolstshark.html" rel="nofollow"&gt;&lt;code&gt;tshark&lt;/code&gt;&lt;/a&gt;, or &lt;a href="http://ngrep.sourceforge.net/" rel="nofollow"&gt;&lt;code&gt;ngrep&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know about &lt;code&gt;strace&lt;/code&gt; and &lt;code&gt;ltrace&lt;/code&gt;. These can be helpful if a program is failing, hanging, or crashing, and you don't know why, or if you want to get a general idea of performance. Note the profiling option (&lt;code&gt;-c&lt;/code&gt;), and the ability to attach to a running process (&lt;code&gt;-p&lt;/code&gt;). Use trace child option (&lt;code&gt;-f&lt;/code&gt;) to avoid missing important calls.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know about &lt;code&gt;ldd&lt;/code&gt; to check shared libraries etc — but &lt;a href="http://www.catonmat.net/blog/ldd-arbitrary-code-execution/" rel="nofollow"&gt;never run it on untrusted files&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know how to connect to a running process with &lt;code&gt;gdb&lt;/code&gt; and get its stack traces.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;/proc&lt;/code&gt;. It's amazingly helpful sometimes when debugging live problems. Examples: &lt;code&gt;/proc/cpuinfo&lt;/code&gt;, &lt;code&gt;/proc/meminfo&lt;/code&gt;, &lt;code&gt;/proc/cmdline&lt;/code&gt;, &lt;code&gt;/proc/xxx/cwd&lt;/code&gt;, &lt;code&gt;/proc/xxx/exe&lt;/code&gt;, &lt;code&gt;/proc/xxx/fd/&lt;/code&gt;, &lt;code&gt;/proc/xxx/smaps&lt;/code&gt; (where &lt;code&gt;xxx&lt;/code&gt; is the process id or pid).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When debugging why something went wrong in the past, &lt;a href="http://sebastien.godard.pagesperso-orange.fr/" rel="nofollow"&gt;&lt;code&gt;sar&lt;/code&gt;&lt;/a&gt; can be very helpful. It shows historic statistics on CPU, memory, network, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For deeper systems and performance analyses, look at &lt;code&gt;stap&lt;/code&gt; (&lt;a href="https://sourceware.org/systemtap/wiki" rel="nofollow"&gt;SystemTap&lt;/a&gt;), &lt;a href="https://en.wikipedia.org/wiki/Perf_%28Linux%29" rel="nofollow"&gt;&lt;code&gt;perf&lt;/code&gt;&lt;/a&gt;, and &lt;a href="https://github.com/draios/sysdig"&gt;&lt;code&gt;sysdig&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check what OS you're on with &lt;code&gt;uname&lt;/code&gt; or &lt;code&gt;uname -a&lt;/code&gt; (general Unix/kernel info) or &lt;code&gt;lsb_release -a&lt;/code&gt; (Linux distro info).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;dmesg&lt;/code&gt; whenever something's acting really funny (it could be hardware or driver issues).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you delete a file and it doesn't free up expected disk space as reported by &lt;code&gt;du&lt;/code&gt;, check whether the file is in use by a process:
&lt;code&gt;lsof | grep deleted | grep "filename-of-my-big-file"&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-one-liners" class="anchor" aria-hidden="true" href="#one-liners"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;One-liners&lt;/h2&gt;
&lt;p&gt;A few examples of piecing together commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It is remarkably helpful sometimes that you can do set intersection, union, and difference of text files via &lt;code&gt;sort&lt;/code&gt;/&lt;code&gt;uniq&lt;/code&gt;. Suppose &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are text files that are already uniqued. This is fast, and works on files of arbitrary size, up to many gigabytes. (Sort is not limited by memory, though you may need to use the &lt;code&gt;-T&lt;/code&gt; option if &lt;code&gt;/tmp&lt;/code&gt; is on a small root partition.) See also the note about &lt;code&gt;LC_ALL&lt;/code&gt; above and &lt;code&gt;sort&lt;/code&gt;'s &lt;code&gt;-u&lt;/code&gt; option (left out for clarity below).&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      sort a b &lt;span class="pl-k"&gt;|&lt;/span&gt; uniq &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; c   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; c is a union b&lt;/span&gt;
      sort a b &lt;span class="pl-k"&gt;|&lt;/span&gt; uniq -d &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; c   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; c is a intersect b&lt;/span&gt;
      sort a b b &lt;span class="pl-k"&gt;|&lt;/span&gt; uniq -u &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; c   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; c is set difference a - b&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Pretty-print two JSON files, normalizing their syntax, then coloring and paginating the result:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;      diff &amp;lt;(jq --sort-keys . &amp;lt; file1.json) &amp;lt;(jq --sort-keys . &amp;lt; file2.json) | colordiff | less -R
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;grep . *&lt;/code&gt; to quickly examine the contents of all files in a directory (so each line is paired with the filename), or &lt;code&gt;head -100 *&lt;/code&gt; (so each file has a heading). This can be useful for directories filled with config settings like those in &lt;code&gt;/sys&lt;/code&gt;, &lt;code&gt;/proc&lt;/code&gt;, &lt;code&gt;/etc&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Summing all numbers in the third column of a text file (this is probably 3X faster and 3X less code than equivalent Python):&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      awk &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{ x += $3 } END { print x }&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; myfile&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;To see sizes/dates on a tree of files, this is like a recursive &lt;code&gt;ls -l&lt;/code&gt; but is easier to read than &lt;code&gt;ls -lR&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      find &lt;span class="pl-c1"&gt;.&lt;/span&gt; -type f -ls&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Say you have a text file, like a web server log, and a certain value that appears on some lines, such as an &lt;code&gt;acct_id&lt;/code&gt; parameter that is present in the URL. If you want a tally of how many requests for each &lt;code&gt;acct_id&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      egrep -o &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;acct_id=[0-9]+&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; access.log &lt;span class="pl-k"&gt;|&lt;/span&gt; cut -d= -f2 &lt;span class="pl-k"&gt;|&lt;/span&gt; sort &lt;span class="pl-k"&gt;|&lt;/span&gt; uniq -c &lt;span class="pl-k"&gt;|&lt;/span&gt; sort -rn&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To continuously monitor changes, use &lt;code&gt;watch&lt;/code&gt;, e.g. check changes to files in a directory with &lt;code&gt;watch -d -n 2 'ls -rtlh | tail'&lt;/code&gt; or to network settings while troubleshooting your wifi settings with &lt;code&gt;watch -d -n 2 ifconfig&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run this function to get a random tip from this document (parses Markdown and extracts an item):&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;      &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;taocl()&lt;/span&gt; {
        curl -s https://raw.githubusercontent.com/jlevy/the-art-of-command-line/master/README.md &lt;span class="pl-k"&gt;|&lt;/span&gt;
          sed &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/cowsay[.]png/d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt;
          pandoc -f markdown -t html &lt;span class="pl-k"&gt;|&lt;/span&gt;
          xmlstarlet fo --html --dropdtd &lt;span class="pl-k"&gt;|&lt;/span&gt;
          xmlstarlet sel -t -v &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(html/body/ul/li[count(p)&amp;gt;0])[&lt;span class="pl-smi"&gt;$RANDOM&lt;/span&gt; mod last()+1]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt;
          xmlstarlet unesc &lt;span class="pl-k"&gt;|&lt;/span&gt; fmt -80 &lt;span class="pl-k"&gt;|&lt;/span&gt; iconv -t US
      }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-obscure-but-useful" class="anchor" aria-hidden="true" href="#obscure-but-useful"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Obscure but useful&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;expr&lt;/code&gt;: perform arithmetic or boolean operations or evaluate regular expressions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;m4&lt;/code&gt;: simple macro processor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;yes&lt;/code&gt;: print a string a lot&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cal&lt;/code&gt;: nice calendar&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;env&lt;/code&gt;: run a command (useful in scripts)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;printenv&lt;/code&gt;: print out environment variables (useful in debugging and scripts)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;look&lt;/code&gt;: find English words (or lines in a file) beginning with a string&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cut&lt;/code&gt;, &lt;code&gt;paste&lt;/code&gt; and &lt;code&gt;join&lt;/code&gt;: data manipulation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fmt&lt;/code&gt;: format text paragraphs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pr&lt;/code&gt;: format text into pages/columns&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fold&lt;/code&gt;: wrap lines of text&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;column&lt;/code&gt;: format text fields into aligned, fixed-width columns or tables&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;expand&lt;/code&gt; and &lt;code&gt;unexpand&lt;/code&gt;: convert between tabs and spaces&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;nl&lt;/code&gt;: add line numbers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;seq&lt;/code&gt;: print numbers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;bc&lt;/code&gt;: calculator&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;factor&lt;/code&gt;: factor integers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://gnupg.org/" rel="nofollow"&gt;&lt;code&gt;gpg&lt;/code&gt;&lt;/a&gt;: encrypt and sign files&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;toe&lt;/code&gt;: table of terminfo entries&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;nc&lt;/code&gt;: network debugging and data transfer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;socat&lt;/code&gt;: socket relay and tcp port forwarder (similar to &lt;code&gt;netcat&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/mattthias/slurm"&gt;&lt;code&gt;slurm&lt;/code&gt;&lt;/a&gt;: network traffic visualization&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dd&lt;/code&gt;: moving data between files or devices&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;file&lt;/code&gt;: identify type of a file&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;tree&lt;/code&gt;: display directories and subdirectories as a nesting tree; like &lt;code&gt;ls&lt;/code&gt; but recursive&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;stat&lt;/code&gt;: file info&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;time&lt;/code&gt;: execute and time a command&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;timeout&lt;/code&gt;: execute a command for specified amount of time and stop the process when the specified amount of time completes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;lockfile&lt;/code&gt;: create semaphore file that can only be removed by &lt;code&gt;rm -f&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;logrotate&lt;/code&gt;: rotate, compress and mail logs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;watch&lt;/code&gt;: run a command repeatedly, showing results and/or highlighting changes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/joh/when-changed"&gt;&lt;code&gt;when-changed&lt;/code&gt;&lt;/a&gt;: runs any command you specify whenever it sees file changed. See &lt;code&gt;inotifywait&lt;/code&gt; and &lt;code&gt;entr&lt;/code&gt; as well.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;tac&lt;/code&gt;: print files in reverse&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;comm&lt;/code&gt;: compare sorted files line by line&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;strings&lt;/code&gt;: extract text from binary files&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;tr&lt;/code&gt;: character translation or manipulation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;iconv&lt;/code&gt; or &lt;code&gt;uconv&lt;/code&gt;: conversion for text encodings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;split&lt;/code&gt; and &lt;code&gt;csplit&lt;/code&gt;: splitting files&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sponge&lt;/code&gt;: read all input before writing it, useful for reading from then writing to the same file, e.g., &lt;code&gt;grep -v something some-file | sponge some-file&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;units&lt;/code&gt;: unit conversions and calculations; converts furlongs per fortnight to twips per blink (see also &lt;code&gt;/usr/share/units/definitions.units&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;apg&lt;/code&gt;: generates random passwords&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;xz&lt;/code&gt;: high-ratio file compression&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ldd&lt;/code&gt;: dynamic library info&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;nm&lt;/code&gt;: symbols from object files&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ab&lt;/code&gt; or &lt;a href="https://github.com/wg/wrk"&gt;&lt;code&gt;wrk&lt;/code&gt;&lt;/a&gt;: benchmarking web servers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;strace&lt;/code&gt;: system call debugging&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.bitwizard.nl/mtr/" rel="nofollow"&gt;&lt;code&gt;mtr&lt;/code&gt;&lt;/a&gt;: better traceroute for network debugging&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cssh&lt;/code&gt;: visual concurrent shell&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;rsync&lt;/code&gt;: sync files and folders over SSH or in local file system&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://wireshark.org/" rel="nofollow"&gt;&lt;code&gt;wireshark&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://www.wireshark.org/docs/wsug_html_chunked/AppToolstshark.html" rel="nofollow"&gt;&lt;code&gt;tshark&lt;/code&gt;&lt;/a&gt;: packet capture and network debugging&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://ngrep.sourceforge.net/" rel="nofollow"&gt;&lt;code&gt;ngrep&lt;/code&gt;&lt;/a&gt;: grep for the network layer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;host&lt;/code&gt; and &lt;code&gt;dig&lt;/code&gt;: DNS lookups&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;lsof&lt;/code&gt;: process file descriptor and socket info&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dstat&lt;/code&gt;: useful system stats&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/nicolargo/glances"&gt;&lt;code&gt;glances&lt;/code&gt;&lt;/a&gt;: high level, multi-subsystem overview&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;iostat&lt;/code&gt;: Disk usage stats&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mpstat&lt;/code&gt;: CPU usage stats&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;vmstat&lt;/code&gt;: Memory usage stats&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;htop&lt;/code&gt;: improved version of top&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;last&lt;/code&gt;: login history&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;w&lt;/code&gt;: who's logged on&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;id&lt;/code&gt;: user/group identity info&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://sebastien.godard.pagesperso-orange.fr/" rel="nofollow"&gt;&lt;code&gt;sar&lt;/code&gt;&lt;/a&gt;: historic system stats&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.ex-parrot.com/~pdw/iftop/" rel="nofollow"&gt;&lt;code&gt;iftop&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://github.com/raboof/nethogs"&gt;&lt;code&gt;nethogs&lt;/code&gt;&lt;/a&gt;: network utilization by socket or process&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ss&lt;/code&gt;: socket statistics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dmesg&lt;/code&gt;: boot and system error messages&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sysctl&lt;/code&gt;: view and configure Linux kernel parameters at run time&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;hdparm&lt;/code&gt;: SATA/ATA disk manipulation/performance&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;lsblk&lt;/code&gt;: list block devices: a tree view of your disks and disk partitions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;lshw&lt;/code&gt;, &lt;code&gt;lscpu&lt;/code&gt;, &lt;code&gt;lspci&lt;/code&gt;, &lt;code&gt;lsusb&lt;/code&gt;, &lt;code&gt;dmidecode&lt;/code&gt;: hardware information, including CPU, BIOS, RAID, graphics, devices, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;lsmod&lt;/code&gt; and &lt;code&gt;modinfo&lt;/code&gt;: List and show details of kernel modules.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fortune&lt;/code&gt;, &lt;code&gt;ddate&lt;/code&gt;, and &lt;code&gt;sl&lt;/code&gt;: um, well, it depends on whether you consider steam locomotives and Zippy quotations "useful"&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-macos-only" class="anchor" aria-hidden="true" href="#macos-only"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS only&lt;/h2&gt;
&lt;p&gt;These are items relevant &lt;em&gt;only&lt;/em&gt; on macOS.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Package management with &lt;code&gt;brew&lt;/code&gt; (Homebrew) and/or &lt;code&gt;port&lt;/code&gt; (MacPorts). These can be used to install on macOS many of the above commands.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy output of any command to a desktop app with &lt;code&gt;pbcopy&lt;/code&gt; and paste input from one with &lt;code&gt;pbpaste&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To enable the Option key in macOS Terminal as an alt key (such as used in the commands above like &lt;strong&gt;alt-b&lt;/strong&gt;, &lt;strong&gt;alt-f&lt;/strong&gt;, etc.), open Preferences -&amp;gt; Profiles -&amp;gt; Keyboard and select "Use Option as Meta key".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To open a file with a desktop app, use &lt;code&gt;open&lt;/code&gt; or &lt;code&gt;open -a /Applications/Whatever.app&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Spotlight: Search files with &lt;code&gt;mdfind&lt;/code&gt; and list metadata (such as photo EXIF info) with &lt;code&gt;mdls&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be aware macOS is based on BSD Unix, and many commands (for example &lt;code&gt;ps&lt;/code&gt;, &lt;code&gt;ls&lt;/code&gt;, &lt;code&gt;tail&lt;/code&gt;, &lt;code&gt;awk&lt;/code&gt;, &lt;code&gt;sed&lt;/code&gt;) have many subtle variations from Linux, which is largely influenced by System V-style Unix and GNU tools. You can often tell the difference by noting a man page has the heading "BSD General Commands Manual." In some cases GNU versions can be installed, too (such as &lt;code&gt;gawk&lt;/code&gt; and &lt;code&gt;gsed&lt;/code&gt; for GNU awk and sed). If writing cross-platform Bash scripts, avoid such commands (for example, consider Python or &lt;code&gt;perl&lt;/code&gt;) or test carefully.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To get macOS release information, use &lt;code&gt;sw_vers&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-windows-only" class="anchor" aria-hidden="true" href="#windows-only"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows only&lt;/h2&gt;
&lt;p&gt;These items are relevant &lt;em&gt;only&lt;/em&gt; on Windows.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ways-to-obtain-unix-tools-under-windows" class="anchor" aria-hidden="true" href="#ways-to-obtain-unix-tools-under-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ways to obtain Unix tools under Windows&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Access the power of the Unix shell under Microsoft Windows by installing &lt;a href="https://cygwin.com/" rel="nofollow"&gt;Cygwin&lt;/a&gt;. Most of the things described in this document will work out of the box.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On Windows 10, you can use &lt;a href="https://msdn.microsoft.com/commandline/wsl/about" rel="nofollow"&gt;Windows Subsystem for Linux (WSL)&lt;/a&gt;, which provides a familiar Bash environment with Unix command line utilities.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you mainly want to use GNU developer tools (such as GCC) on Windows, consider &lt;a href="http://www.mingw.org/" rel="nofollow"&gt;MinGW&lt;/a&gt; and its &lt;a href="http://www.mingw.org/wiki/msys" rel="nofollow"&gt;MSYS&lt;/a&gt; package, which provides utilities such as bash, gawk, make and grep. MSYS doesn't have all the features compared to Cygwin. MinGW is particularly useful for creating native Windows ports of Unix tools.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Another option to get Unix look and feel under Windows is &lt;a href="https://github.com/dthree/cash"&gt;Cash&lt;/a&gt;. Note that only very few Unix commands and command-line options are available in this environment.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-useful-windows-command-line-tools" class="anchor" aria-hidden="true" href="#useful-windows-command-line-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Useful Windows command-line tools&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You can perform and script most Windows system administration tasks from the command line by learning and using &lt;code&gt;wmic&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Native command-line Windows networking tools you may find useful include &lt;code&gt;ping&lt;/code&gt;, &lt;code&gt;ipconfig&lt;/code&gt;, &lt;code&gt;tracert&lt;/code&gt;, and &lt;code&gt;netstat&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can perform &lt;a href="http://www.thewindowsclub.com/rundll32-shortcut-commands-windows" rel="nofollow"&gt;many useful Windows tasks&lt;/a&gt; by invoking the &lt;code&gt;Rundll32&lt;/code&gt; command.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-cygwin-tips-and-tricks" class="anchor" aria-hidden="true" href="#cygwin-tips-and-tricks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cygwin tips and tricks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Install additional Unix programs with the Cygwin's package manager.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;mintty&lt;/code&gt; as your command-line window.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Access the Windows clipboard through &lt;code&gt;/dev/clipboard&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;cygstart&lt;/code&gt; to open an arbitrary file through its registered application.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Access the Windows registry with &lt;code&gt;regtool&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Note that a &lt;code&gt;C:\&lt;/code&gt; Windows drive path becomes &lt;code&gt;/cygdrive/c&lt;/code&gt; under Cygwin, and that Cygwin's &lt;code&gt;/&lt;/code&gt; appears under &lt;code&gt;C:\cygwin&lt;/code&gt; on Windows. Convert between Cygwin and Windows-style file paths with &lt;code&gt;cygpath&lt;/code&gt;. This is most useful in scripts that invoke Windows programs.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-more-resources" class="anchor" aria-hidden="true" href="#more-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alebcay/awesome-shell"&gt;awesome-shell&lt;/a&gt;: A curated list of shell tools and resources.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/herrbischoff/awesome-osx-command-line"&gt;awesome-osx-command-line&lt;/a&gt;: A more in-depth guide for the macOS command line.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://redsymbol.net/articles/unofficial-bash-strict-mode/" rel="nofollow"&gt;Strict mode&lt;/a&gt; for writing better shell scripts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/koalaman/shellcheck"&gt;shellcheck&lt;/a&gt;: A shell script static analysis tool. Essentially, lint for bash/sh/zsh.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.dwheeler.com/essays/filenames-in-shell.html" rel="nofollow"&gt;Filenames and Pathnames in Shell&lt;/a&gt;: The sadly complex minutiae on how to handle filenames correctly in shell scripts.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://datascienceatthecommandline.com/#tools" rel="nofollow"&gt;Data Science at the Command Line&lt;/a&gt;: More commands and tools helpful for doing data science, from the book of the same name&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-disclaimer" class="anchor" aria-hidden="true" href="#disclaimer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;With the exception of very small tasks, code is written so others can read it. With power comes responsibility. The fact you &lt;em&gt;can&lt;/em&gt; do something in Bash doesn't necessarily mean you should! ;)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://creativecommons.org/licenses/by-sa/4.0/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e170e276291254896665fa8f612b99fe5b7dd005/68747470733a2f2f692e6372656174697665636f6d6d6f6e732e6f72672f6c2f62792d73612f342e302f38387833312e706e67" alt="Creative Commons License" data-canonical-src="https://i.creativecommons.org/l/by-sa/4.0/88x31.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This work is licensed under a &lt;a href="http://creativecommons.org/licenses/by-sa/4.0/" rel="nofollow"&gt;Creative Commons Attribution-ShareAlike 4.0 International License&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jlevy</author><guid isPermaLink="false">https://github.com/jlevy/the-art-of-command-line</guid><pubDate>Tue, 24 Dec 2019 00:03:00 GMT</pubDate></item><item><title>jobbole/awesome-java-cn #4 in Unknown languages, Today</title><link>https://github.com/jobbole/awesome-java-cn</link><description>&lt;p&gt;&lt;i&gt;Java资源大全中文版，包括开发库、开发工具、网站、博客、微信、微博等，由伯乐在线持续更新。&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-java资源大全中文版" class="anchor" aria-hidden="true" href="#java资源大全中文版"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Java资源大全中文版&lt;/h1&gt;
&lt;p&gt;我想很多程序员应该记得 GitHub 上有一个 Awesome - XXX 系列的资源整理。&lt;a href="https://github.com/akullpp/awesome-java"&gt;awesome-java&lt;/a&gt; 就是 akullpp 发起维护的 Java 资源列表，内容包括：构建工具、数据库、框架、模板、安全、代码分析、日志、第三方库、书籍、Java 站点等等。伯乐在线已经把 awesome-java 资源列表翻成中文后发布于 &lt;a href="http://www.importnew.com/14429.html" rel="nofollow"&gt;ImportNew&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Awesome 系列虽然挺全，但基本只对收录的资源做了极为简要的介绍，如果有更详细的中文介绍，对相应开发者的帮助会更大。这也是我们发起这个开源项目的初衷。&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-我们要做什么" class="anchor" aria-hidden="true" href="#我们要做什么"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;我们要做什么？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;基于 awesome-java 资源列表，我们将对各个资源项进行编译整理。&lt;/li&gt;
&lt;li&gt;整理后的内容，将收录在&lt;a href="http://hao.jobbole.com/" rel="nofollow"&gt;伯乐在线资源频道&lt;/a&gt;。可参考已整理的内容：
&lt;ul&gt;
&lt;li&gt;《&lt;a href="http://hao.jobbole.com/owner/" rel="nofollow"&gt;OWNER：Java配置文件解决方案&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="http://hao.jobbole.com/spring-boot/" rel="nofollow"&gt;Spring Boot：简化Spring应用初始搭建以及开发过程&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href="http://hao.jobbole.com/sonarqube/" rel="nofollow"&gt;SonarQube：开源的代码质量管理工具&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-如何参与本项目" class="anchor" aria-hidden="true" href="#如何参与本项目"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;如何参与本项目？&lt;/h3&gt;

&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-如何为列表贡献新资源" class="anchor" aria-hidden="true" href="#如何为列表贡献新资源"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;如何为列表贡献新资源？&lt;/h3&gt;
&lt;p&gt;欢迎大家为列表贡献高质量的新资源，提交PR时请参照以下要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;请确保推荐的资源自己使用过&lt;/li&gt;
&lt;li&gt;提交PR时请注明推荐理由&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;资源列表管理收到PR请求后，会定期（每周）在微博转发本周提交的PR列表，并在微博上面听取使用过这些资源的意见。确认通过后，会加入资源大全。&lt;/p&gt;
&lt;p&gt;感谢您的贡献！&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-本项目的参与者" class="anchor" aria-hidden="true" href="#本项目的参与者"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;本项目的参与者&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;维护者：&lt;a href="https://github.com/tangyouhua"&gt;tangyouhua&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;贡献者：&lt;a href="https://github.com/tangyouhua"&gt;tangyouhua&lt;/a&gt;、&lt;a href="https://github.com/kingzone"&gt;kingzone&lt;/a&gt;、&lt;a href="https://github.com/llhua2329"&gt;llhua2329&lt;/a&gt;、&lt;a href="https://github.com/BadCoderChou"&gt;BadCoderChou&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/anankun/" rel="nofollow"&gt;anankun&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/jianghehe/" rel="nofollow"&gt;贺贺&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/petra/" rel="nofollow"&gt;大彭&lt;/a&gt;、&lt;a href="https://github.com/wing00yf/"&gt;superXiaoFan&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/3951356/" rel="nofollow"&gt;javayrf&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/John%20Smith/" rel="nofollow"&gt;John Smith&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/jaler/" rel="nofollow"&gt;Jaler&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/fdconan/" rel="nofollow"&gt;JM&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/zy124348985/" rel="nofollow"&gt;dreamkidd&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/cheenlie" rel="nofollow"&gt;cheenlie&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/zhangQian1991" rel="nofollow"&gt;zhangQian1991&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/wt726553124/" rel="nofollow"&gt;王涛&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/xun_cui" rel="nofollow"&gt;马&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/xuhf_1988/" rel="nofollow"&gt;vvkee&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/yangxy81118" rel="nofollow"&gt;凝枫&lt;/a&gt;、&lt;a href="https://github.com/luhaixun"&gt;haixunlu&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/milly/" rel="nofollow"&gt;milly&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/xuhf_1988/" rel="nofollow"&gt;Hodur&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/FakeHank" rel="nofollow"&gt;FakeHank&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/%E8%BF%9E%E4%B9%90/" rel="nofollow"&gt;连乐&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/UncleTim/" rel="nofollow"&gt;UncleTim&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/sunbiaobiao" rel="nofollow"&gt;sunbiaobiao&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/wx2702327993/" rel="nofollow"&gt;zhiguo&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/zhongjianno1/" rel="nofollow"&gt;光光头去打酱油&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/TonyAaron/" rel="nofollow"&gt;云中游&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/zemo/" rel="nofollow"&gt;Zemo&lt;/a&gt;、&lt;a href="https://github.com/sdcuike"&gt;sdcuike&lt;/a&gt;、&lt;a href="https://github.com/danielwii"&gt;danielwii&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/q1118024125/" rel="nofollow"&gt;oneDay&lt;/a&gt;、&lt;a href="https://github.com/dfghj44444"&gt;邢敏&lt;/a&gt;、&lt;a href="https://github.com/heikehuan"&gt;heikehuan&lt;/a&gt;、&lt;a href="https://github.com/fgcui1204"&gt;fgcui1204&lt;/a&gt;、&lt;a href="https://github.com/wenxueliu"&gt;wenxueliu&lt;/a&gt;、&lt;a href="https://github.com/node"&gt;Gentle Yang&lt;/a&gt;、&lt;a href="http://hao.jobbole.com/author/huangxiaofei/" rel="nofollow"&gt;黄小非&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/wtgn1m1/" rel="nofollow"&gt;wangtg&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/2937134480/" rel="nofollow"&gt;百焱&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/2480130384/" rel="nofollow"&gt;胡不GUI&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/mtHzm/" rel="nofollow"&gt;Another_mt&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/adonis/" rel="nofollow"&gt;Rainbow&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/menghuanqiqi" rel="nofollow"&gt;super^糖&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/huangyuliang/" rel="nofollow"&gt;黄余粮&lt;/a&gt;、&lt;a href="http://www.jobbole.com/members/sunbojian100/" rel="nofollow"&gt;Sun&lt;/a&gt;、&lt;a href="https://github.com/SoberChina"&gt;李伟高&lt;/a&gt;、&lt;a href="https://github.com/q977734161"&gt;lixiaobao&lt;/a&gt;、&lt;a href="https://github.com/XuZhongCN"&gt;許中&lt;/a&gt;、You&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注：名单不分排名，不定期补充更新&lt;/p&gt;
&lt;hr&gt;

&lt;h3&gt;&lt;a id="user-content-目录" class="anchor" aria-hidden="true" href="#目录"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;目录&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#awesome-java-cn"&gt;Java资源大全中文版&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#ancients"&gt;古董级工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build"&gt;构建工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bytecode-manipulation"&gt;字节码操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cluster-management"&gt;集群管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#code-analysis"&gt;代码分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#compiler-compiler"&gt;编译器生成工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#configuration"&gt;外部配置工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#constraint-satisfaction-problem-solver"&gt;约束满足问题求解程序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#continuous-integration"&gt;持续集成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#csv"&gt;CSV解析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-structures"&gt;数据结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database"&gt;数据库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#date-and-time"&gt;时间日期工具库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dependency-injection"&gt;依赖注入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#development"&gt;开发流程增强工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#distributed-applications"&gt;分布式应用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#distributed-databases"&gt;分布式数据库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#distribution"&gt;发布&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#document-processing"&gt;文档处理工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#functional-programming"&gt;函数式编程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#game-development"&gt;游戏开发&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gui"&gt;GUI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#high-performance"&gt;高性能计算&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ide"&gt;IDE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#imagery"&gt;图像处理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#json"&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#jvm-and-jdk"&gt;JVM与JDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#languages"&gt;基于JVM的语言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#logging"&gt;日志&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#machine-learning"&gt;机器学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#messaging"&gt;消息传递&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#miscellaneous"&gt;杂项&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#monitoring"&gt;应用监控工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#native"&gt;原生开发库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#natural-language-processing"&gt;自然语言处理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#networking"&gt;网络&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orm"&gt;ORM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pdf"&gt;PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#performance-analysis"&gt;性能分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reactive-libraries"&gt;响应式开发库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rest-frameworks"&gt;REST框架&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#science"&gt;科学计算与分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#search"&gt;搜索引擎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#security"&gt;安全&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#serialization"&gt;序列化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#server"&gt;应用服务器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#template-engine"&gt;模板引擎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#testing"&gt;测试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#utility"&gt;通用工具库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#web-crawling"&gt;网络爬虫&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#web-frameworks"&gt;Web框架&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Business-Process-Management"&gt;业务流程管理套件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#resources"&gt;资源&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#communities"&gt;社区&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#influential-books"&gt;有影响力的书&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#podcasts"&gt;播客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#weibo-weixin"&gt;微博、微信公众号&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#twitter"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#websites"&gt;知名网站&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="user-content-ancients"&gt;&lt;a id="user-content-古董级工具" class="anchor" aria-hidden="true" href="#古董级工具"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;古董级工具&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;这些工具伴随着Java一起出现，在各自辉煌之后还在一直使用。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/apache-ant/" rel="nofollow"&gt;Apache Ant&lt;/a&gt;：基于XML的构建管理工具。&lt;a href="http://ant.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/cglib/" rel="nofollow"&gt;cglib&lt;/a&gt;：字节码生成库。&lt;a href="https://github.com/cglib/cglib"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/glassfish/" rel="nofollow"&gt;GlassFish&lt;/a&gt;：应用服务器，由Oracle赞助支持的Java EE参考实现。&lt;a href="https://glassfish.java.net/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/hudson/" rel="nofollow"&gt;Hudson&lt;/a&gt;：持续集成服务器，目前仍在活跃开发。&lt;a href="http://hudson-ci.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/javaserver-faces/" rel="nofollow"&gt;JavaServer Faces&lt;/a&gt;：Mojarra是JSF标准的一个开源实现，由Oracle开发。&lt;a href="https://javaserverfaces.java.net/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/javaserver-pages/" rel="nofollow"&gt;JavaServer Pages&lt;/a&gt;：支持自定义标签库的网站通用模板库。&lt;a href="https://jsp.java.net/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/liquibase/" rel="nofollow"&gt;Liquibase&lt;/a&gt;：与具体数据库独立的追踪、管理和应用数据库Scheme变化的工具。&lt;a href="http://www.liquibase.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-build"&gt;&lt;a id="user-content-构建工具" class="anchor" aria-hidden="true" href="#构建工具"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;构建工具&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;构建及应用依赖关系处理工具。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/maven/" rel="nofollow"&gt;Apache Maven&lt;/a&gt;：Maven是一款声明式构建及依赖管理工具，采用约定优于配置方式进行管理。相对Apache Ant更推荐使用Maven，前者采用了过程式管理，维护相对困难。&lt;a href="http://maven.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/bazel/" rel="nofollow"&gt;Bazel&lt;/a&gt;：来自Google的构建工具，可以快速、可靠地构建代码。&lt;a href="http://bazel.io" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/gradle/" rel="nofollow"&gt;Gradle&lt;/a&gt;：使用Groovy（非XML）进行增量构建，可以很好地与Maven依赖管理配合工作。&lt;a href="http://gradle.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/buck/" rel="nofollow"&gt;Buck&lt;/a&gt;：Facebook构建工具。&lt;a href="https://buckbuild.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-bytecode-manipulation"&gt;&lt;a id="user-content-字节码操作" class="anchor" aria-hidden="true" href="#字节码操作"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;字节码操作&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;编程方式操作字节码的开发库。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/asm/" rel="nofollow"&gt;ASM&lt;/a&gt;：通用底层字节码操作和分析开发库。&lt;a href="http://asm.ow2.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/byte-buddy/" rel="nofollow"&gt;Byte Buddy&lt;/a&gt;：使用流式API进一步简化字节码生成。&lt;a href="http://bytebuddy.net/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/byteman/" rel="nofollow"&gt;Byteman&lt;/a&gt;：在运行时通过DSL（规则）操作字节码进行测试和故障排除。&lt;a href="http://byteman.jboss.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/javassist/" rel="nofollow"&gt;Javassist&lt;/a&gt;：一个简化字节码编辑尝试。&lt;a href="http://jboss-javassist.github.io/javassist" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-cluster-management"&gt;&lt;a id="user-content-集群管理" class="anchor" aria-hidden="true" href="#集群管理"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;集群管理&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;在集群内动态管理应用程序的框架。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/apache-aurora/" rel="nofollow"&gt;Apache Aurora&lt;/a&gt;：Apache Aurora是一个Mesos框架，用于长时间运行服务和定时任务（cron job）。&lt;a href="http://aurora.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/singularity/" rel="nofollow"&gt;Singularity&lt;/a&gt;：Singularity是一个Mesos框架，方便部署和操作。它支持Web Service、后台运行、调度作业和一次性任务。&lt;a href="http://getsingularity.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-code-analysis"&gt;&lt;a id="user-content-代码分析" class="anchor" aria-hidden="true" href="#代码分析"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;代码分析&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;测量代码指标和质量工具。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/checkstyle/" rel="nofollow"&gt;Checkstyle&lt;/a&gt;：代码编写规范和标准静态分析工具。&lt;a href="https://github.com/checkstyle/checkstyle"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/error-prone/" rel="nofollow"&gt;Error Prone&lt;/a&gt;：将常见编程错误作为运行时错误报告。&lt;a href="https://github.com/google/error-prone"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;FindBugs：通过字节码静态分析查找隐藏bug。&lt;a href="http://findbugs.sourceforge.net/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jqassistant/" rel="nofollow"&gt;jQAssistant&lt;/a&gt;：使用基于Neo4J查询语言进行代码静态分析。&lt;a href="http://jqassistant.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/pmd/" rel="nofollow"&gt;PMD&lt;/a&gt;：对源代码分析查找不良的编程习惯。&lt;a href="https://github.com/pmd/pmd"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/sonarqube/" rel="nofollow"&gt;SonarQube&lt;/a&gt;：通过插件集成其它分析组件，对过去一段时间内的数据进行统计。&lt;a href="http://www.sonarqube.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-compiler-compiler"&gt;&lt;a id="user-content-编译器生成工具" class="anchor" aria-hidden="true" href="#编译器生成工具"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;编译器生成工具&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;用来创建解析器、解释器或编译器的框架。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/antlr/" rel="nofollow"&gt;ANTLR&lt;/a&gt;：复杂的全功能自顶向下解析框架。&lt;a href="http://www.antlr.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/javacc/" rel="nofollow"&gt;JavaCC&lt;/a&gt;：JavaCC是更加专门的轻量级工具，易于上手且支持语法超前预测。&lt;a href="https://javacc.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-configuration"&gt;&lt;a id="user-content-外部配置工具" class="anchor" aria-hidden="true" href="#外部配置工具"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;外部配置工具&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;支持外部配置的开发库。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/config/" rel="nofollow"&gt;config&lt;/a&gt;：针对JVM语言的配置库。&lt;a href="https://github.com/typesafehub/config"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/owner/" rel="nofollow"&gt;owner&lt;/a&gt;：减少冗余配置属性。&lt;a href="https://github.com/lviggiano/owner"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-constraint-satisfaction-problem-solver"&gt;&lt;a id="user-content-约束满足问题求解程序" class="anchor" aria-hidden="true" href="#约束满足问题求解程序"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;约束满足问题求解程序&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;帮助解决约束满足问题的开发库。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/choco/" rel="nofollow"&gt;Choco&lt;/a&gt;：可直接使用的约束满足问题求解程序，使用了约束规划技术。&lt;a href="http://choco-solver.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jacop/" rel="nofollow"&gt;JaCoP&lt;/a&gt;：为FlatZinc语言提供了一个接口，可以执行MiniZinc模型。&lt;a href="https://github.com/radsz/jacop/"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/optaplanner/" rel="nofollow"&gt;OptaPlanner&lt;/a&gt;：业务规划与资源调度优化求解程序。&lt;a href="http://www.optaplanner.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/sat4j/" rel="nofollow"&gt;Sat4J&lt;/a&gt;：逻辑代数与优化问题最先进的求解程序。&lt;a href="http://www.sat4j.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-continuous-integration"&gt;&lt;a id="user-content-持续集成" class="anchor" aria-hidden="true" href="#持续集成"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;持续集成&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/bamboo/" rel="nofollow"&gt;Bamboo&lt;/a&gt;：Atlassian解决方案，可以很好地集成Atlassian的其他产品。可以选择开源许可，也可以购买商业版。&lt;a href="https://www.atlassian.com/software/bamboo" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CircleCI：提供托管服务，可以免费试用。&lt;a href="https://circleci.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/codeship/" rel="nofollow"&gt;Codeship&lt;/a&gt;：提供托管服务，提供有限的免费模式。&lt;a href="https://codeship.com/features" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="hao.jobbole.com/fabric8/"&gt;fabric8&lt;/a&gt;：容器集成平台。&lt;a href="http://fabric8.io/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/go/" rel="nofollow"&gt;Go&lt;/a&gt;：ThoughtWork开源解决方案。&lt;a href="https://www.gocd.io/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jenkins/" rel="nofollow"&gt;Jenkins&lt;/a&gt;：支持基于服务器的部署服务。&lt;a href="http://jenkins-ci.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/teamcity/" rel="nofollow"&gt;TeamCity&lt;/a&gt;：JetBrain的持续集成解决方案，有免费版。&lt;a href="http://www.jetbrains.com/teamcity/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/travis/" rel="nofollow"&gt;Travis&lt;/a&gt;：通常用作开源项目的托管服务。&lt;a href="https://travis-ci.org" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/buildkite/" rel="nofollow"&gt;Buildkite&lt;/a&gt;: 持续集成工具，用简单的脚本就能设置pipeline，而且能快速构建，可以免费试用。&lt;a href="https://buildkite.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-csv"&gt;&lt;a id="user-content-csv解析" class="anchor" aria-hidden="true" href="#csv解析"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CSV解析&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;简化CSV数据读写的框架与开发库&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/univocity-parsers/" rel="nofollow"&gt;uniVocity-parsers&lt;/a&gt;：速度最快功能最全的CSV开发库之一，同时支持TSV与固定宽度记录的读写。&lt;a href="https://github.com/uniVocity/univocity-parsers"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-database"&gt;&lt;a id="user-content-数据库" class="anchor" aria-hidden="true" href="#数据库"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数据库&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;简化数据库交互的相关工具。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/apache-phoenix/" rel="nofollow"&gt;Apache Phoenix&lt;/a&gt;：HBase针对低延时应用程序的高性能关系数据库层。&lt;a href="http://phoenix.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/crate/" rel="nofollow"&gt;Crate&lt;/a&gt;：实现了数据同步、分片、缩放、复制的分布式数据存储。除此之外还可以使用基于SQL的语法跨集群查询。&lt;a href="https://crate.io/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/flyway/" rel="nofollow"&gt;Flyway&lt;/a&gt;：简单的数据库迁移工具。&lt;a href="http://flywaydb.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/h2/" rel="nofollow"&gt;H2&lt;/a&gt;：小型SQL数据库，以可以作为内存数据库使用著称。&lt;a href="http://h2database.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/hikaricp/" rel="nofollow"&gt;HikariCP&lt;/a&gt;：高性能JDBC连接工具。&lt;a href="https://github.com/brettwooldridge/HikariCP"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jdbi/" rel="nofollow"&gt;JDBI&lt;/a&gt;：便捷的JDBC抽象。&lt;a href="http://jdbi.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jooq/" rel="nofollow"&gt;jOOQ&lt;/a&gt;：为SQL schema生成typesafe代码。&lt;a href="http://www.jooq.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/mapdb/" rel="nofollow"&gt;MapDB&lt;/a&gt;：以磁盘或堆内存中并发集合为基础的嵌入式数据库引擎。&lt;a href="http://www.mapdb.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/presto/" rel="nofollow"&gt;Presto&lt;/a&gt;：针对大数据的分布式SQL查询引擎。&lt;a href="https://github.com/facebook/presto"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/querydsl/" rel="nofollow"&gt;Querydsl&lt;/a&gt;：Typesafe统一查询。&lt;a href="http://www.querydsl.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-data-structures"&gt;&lt;a id="user-content-数据结构" class="anchor" aria-hidden="true" href="#数据结构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数据结构&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/apache-parquet/" rel="nofollow"&gt;Apache Parquet&lt;/a&gt;：Google Dremel论文中发布的基于组装算法的列式（Columnar）存储格式。&lt;a href="http://parquet.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/protobuf/" rel="nofollow"&gt;Protobuf&lt;/a&gt;：Google数据交换格式。&lt;a href="https://github.com/google/protobuf"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/sbe/" rel="nofollow"&gt;SBE&lt;/a&gt;：简单二进制编码，是最快速的消息格式之一。&lt;a href="https://github.com/real-logic/simple-binary-encoding"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/wire/" rel="nofollow"&gt;Wire&lt;/a&gt;：整洁轻量级协议缓存。&lt;a href="https://github.com/square/wire"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-date-and-time"&gt;&lt;a id="user-content-时间日期工具库" class="anchor" aria-hidden="true" href="#时间日期工具库"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;时间日期工具库&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;处理时间和日期的开发库。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/joda-time/" rel="nofollow"&gt;Joda-Time&lt;/a&gt;：在Java 8发布前，Joda-Time是实际使用的时间日期库标准。&lt;a href="http://www.joda.org/joda-time/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/time4j/" rel="nofollow"&gt;Time4J&lt;/a&gt;：高级时间和日期库。&lt;a href="https://github.com/MenoData/Time4J"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/ThreeTen/" rel="nofollow"&gt;ThreeTen&lt;/a&gt;：JSR-310实现，为JDK提供更具特点的时间和日期API。&lt;a href="http://www.threeten.org" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-dependency-injection"&gt;&lt;a id="user-content-依赖注入" class="anchor" aria-hidden="true" href="#依赖注入"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;依赖注入&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;帮实现依赖翻转范式的开发库。&lt;/em&gt; &lt;a href="https://en.wikipedia.org/wiki/Inversion_of_control" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/apache-deltaspike/" rel="nofollow"&gt;Apache DeltaSpike&lt;/a&gt;：CDI扩展框架。&lt;a href="https://deltaspike.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/dagger2/" rel="nofollow"&gt;Dagger2&lt;/a&gt;：编译时注入框架，不需要使用反射。&lt;a href="http://google.github.io/dagger/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/guice/" rel="nofollow"&gt;Guice&lt;/a&gt;：可以匹敌Dagger的轻量级注入框架。&lt;a href="https://github.com/google/guice"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/hk2/" rel="nofollow"&gt;HK2&lt;/a&gt;：轻量级动态依赖注入框架。&lt;a href="https://hk2.java.net" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-development"&gt;&lt;a id="user-content-开发流程增强工具" class="anchor" aria-hidden="true" href="#开发流程增强工具"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;开发流程增强工具&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;从最基本的层面增强开发流程。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/adt4j/" rel="nofollow"&gt;ADT4J&lt;/a&gt;：针对代数数据类型的JSR-269代码生成器。&lt;a href="https://github.com/sviperll/adt4j"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/aspectj/" rel="nofollow"&gt;AspectJ&lt;/a&gt;：面向切面编程（AOP）的无缝扩展。&lt;a href="https://eclipse.org/aspectj/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/auto/" rel="nofollow"&gt;Auto&lt;/a&gt;：源代码生成器集合。&lt;a href="https://github.com/google/auto"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/dcevm/" rel="nofollow"&gt;DCEVM&lt;/a&gt;：通过修改JVM在运行时支持对已加载的类进行无限次重定义。&lt;a href="http://dcevm.github.io/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;HotswapAgent：支持无限次重定义运行时类与资源。&lt;a href="https://github.com/HotswapProjects/HotswapAgent"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Immutables：类似Scala的条件类。&lt;a href="http://immutables.github.io/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;JHipster：基于Spring Boot与AngularJS应用程序的Yeoman源代码生成器。&lt;a href="https://github.com/jhipster/generator-jhipster"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jrebel/" rel="nofollow"&gt;JRebel&lt;/a&gt;：无需重新部署，可以即时重新加载代码与配置的商业软件。&lt;a href="http://zeroturnaround.com/software/jrebel/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Lombok：减少冗余的代码生成器。&lt;a href="https://projectlombok.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spring Loaded：类重载代理。&lt;a href="https://github.com/spring-projects/spring-loaded"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/vert-x/" rel="nofollow"&gt;vert.x&lt;/a&gt;：多语言事件驱动应用框架。&lt;a href="http://vertx.io/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-distributed-applications"&gt;&lt;a id="user-content-分布式应用" class="anchor" aria-hidden="true" href="#分布式应用"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;分布式应用&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;用来编写分布式容错应用的开发库和框架。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/akka/" rel="nofollow"&gt;Akka&lt;/a&gt;：用来编写分布式容错并发事件驱动应用程序的工具和运行时。&lt;a href="http://akka.io" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/storm/" rel="nofollow"&gt;Apache Storm&lt;/a&gt;：实时计算系统。&lt;a href="http://storm.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/zookeeper/" rel="nofollow"&gt;Apache ZooKeeper&lt;/a&gt;：针对大型分布式系统的协调服务，支持分布式配置、同步和名称注册。&lt;a href="http://zookeeper.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/Hazelcast/" rel="nofollow"&gt;Hazelcast&lt;/a&gt;：高可扩展内存数据网格。&lt;a href="http://hazelcast.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/hystrix/" rel="nofollow"&gt;Hystrix&lt;/a&gt;：提供延迟和容错。&lt;a href="https://github.com/Netflix/Hystrix"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jgroups/" rel="nofollow"&gt;JGroups&lt;/a&gt;：提供可靠的消息传递和集群创建的工具。&lt;a href="http://www.jgroups.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/orbit/" rel="nofollow"&gt;Orbit&lt;/a&gt;：支持虚拟角色（Actor），在传统角色的基础上增加了另外一层抽象。&lt;a href="http://orbit.bioware.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/quasar/" rel="nofollow"&gt;Quasar&lt;/a&gt;：为JVM提供轻量级线程和角色。&lt;a href="http://www.paralleluniverse.co/quasar/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-distributed-databases"&gt;&lt;a id="user-content-分布式数据库" class="anchor" aria-hidden="true" href="#分布式数据库"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;分布式数据库&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;对应用程序而言，在分布式系统中的数据库看起来就像是只有一个数据源。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/cassandra/" rel="nofollow"&gt;Apache Cassandra&lt;/a&gt;：列式数据库，可用性高且没有单点故障。&lt;a href="http://cassandra.apache.org" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/hbase/" rel="nofollow"&gt;Apache HBase&lt;/a&gt;：针对大数据的Hadoop数据库。&lt;a href="http://hbase.apache.org" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/druid/" rel="nofollow"&gt;Druid&lt;/a&gt;：实时和历史OLAP数据存储，在聚集查询和近似查询方面表现不俗。&lt;a href="http://druid.io" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/infinispan/" rel="nofollow"&gt;Infinispan&lt;/a&gt;：针对缓存的高并发键值对数据存储。&lt;a href="http://infinispan.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=""&gt;TiDB&lt;/a&gt;：开源分布式HTAP数据库，结合了传统的RDBMS和NoSQL的最佳特性。&lt;a href="https://pingcap.com" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-distribution"&gt;&lt;a id="user-content-发布" class="anchor" aria-hidden="true" href="#发布"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;发布&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;以本机格式发布应用程序的工具。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bintray：发布二进制文件版本控制工具。可以于Maven或Gradle一起配合使用。提供开源免费版本和几种商业收费版本。&lt;a href="https://bintray.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/central-repository/" rel="nofollow"&gt;Central Repository&lt;/a&gt;：最大的二进制组件仓库，面向开源社区提供免费服务。Apache Maven默认使用Central &lt;a href="http://search.maven.org/" rel="nofollow"&gt;官网&lt;/a&gt;Repository，也可以在所有其他构建工具中使用。&lt;/li&gt;
&lt;li&gt;IzPack：为跨平台部署建立创作工具（Authoring Tool）。&lt;a href="http://izpack.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;JitPack：打包GitHub仓库的便捷工具。可根据需要构建Maven、Gradle项目，发布可立即使用的组件。&lt;a href="https://jitpack.io/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Launch4j：将JAR包装为轻量级本机Windows可执行程序。&lt;a href="http://launch4j.sourceforge.net/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Nexus：支持代理和缓存功能的二进制管理工具。&lt;a href="http://www.sonatype.com/nexus" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;packr：将JAR、资源和JVM打包成Windows、Linux和Mac OS X本地发布文件。&lt;a href="https://github.com/libgdx/packr/"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-document-processing"&gt;&lt;a id="user-content-文档处理工具" class="anchor" aria-hidden="true" href="#文档处理工具"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;文档处理工具&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;处理Office文档的开发库。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/poi/" rel="nofollow"&gt;Apache POI&lt;/a&gt;：支持OOXML规范（XLSX、DOCX、PPTX）以及OLE2规范（XLS、DOC、PPT）。&lt;a href="http://poi.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/documents4j/" rel="nofollow"&gt;documents4j&lt;/a&gt;：使用第三方转换器进行文档格式转换，转成类似MS Word这样的格式。&lt;a href="http://documents4j.com" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jopendocument/" rel="nofollow"&gt;jOpenDocument&lt;/a&gt;：处理OpenDocument格式（由Sun公司提出基于XML的文档格式）。&lt;a href="http://www.jopendocument.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-functional-programming"&gt;&lt;a id="user-content-函数式编程" class="anchor" aria-hidden="true" href="#函数式编程"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;函数式编程&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;函数式编程支持库。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cyclops：支持一元（Monad）操作和流操作工具类、comprehension（List语法）、模式匹配、trampoline等特性。&lt;a href="https://github.com/aol/cyclops"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fugue：Guava的函数式编程扩展。&lt;a href="https://bitbucket.org/atlassian/fugue" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Functional Java：实现了多种基础和高级编程抽象，用来辅助面向组合开发（composition-oriented development）。&lt;a href="http://www.functionaljava.org" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Javaslang：一个函数式组件库，提供持久化数据类型和函数式控制结构。&lt;a href="http://javaslang.com" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;jOOλ：旨在填补Java 8 lambda差距的扩展，提供了众多缺失的类型和一组丰富的顺序流API。&lt;a href="https://github.com/jOOQ/jOOL"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-game-development"&gt;&lt;a id="user-content-游戏开发" class="anchor" aria-hidden="true" href="#游戏开发"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;游戏开发&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;游戏开发框架。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jmonkeyengine/" rel="nofollow"&gt;jMonkeyEngine&lt;/a&gt;：现代3D游戏开发引擎。&lt;a href="http://jmonkeyengine.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/libgdx/" rel="nofollow"&gt;libGDX&lt;/a&gt;：全面的跨平台高级框架。&lt;a href="https://libgdx.badlogicgames.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/lwjgl/" rel="nofollow"&gt;LWJGL&lt;/a&gt;：对OpenGL/CL/AL等技术进行抽象的健壮框架。&lt;a href="https://www.lwjgl.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;jPCT：基于OpenGL技术开发的3D图形引擎。纯Java的3D引擎。&lt;a href="http://www.jpct.net/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-gui"&gt;&lt;a id="user-content-gui" class="anchor" aria-hidden="true" href="#gui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GUI&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;现代图形化用户界面开发库。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/javafx/" rel="nofollow"&gt;JavaFX&lt;/a&gt;：Swing的后继者。&lt;a href="http://www.oracle.com/technetwork/java/javase/overview/javafx-overview-2158620.html" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/scene_builder/" rel="nofollow"&gt;Scene Builder&lt;/a&gt;：开发JavaFX应用的可视化布局工具。&lt;a href="http://docs.oracle.com/javase/8/scene-builder-2/get-started-tutorial/overview.htm#JSBGS164" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-high-performance"&gt;&lt;a id="user-content-高性能计算" class="anchor" aria-hidden="true" href="#高性能计算"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;高性能计算&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;涵盖了从集合到特定开发库的高性能计算相关工具。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Agrona：高性能应用中常见的数据结构和工具方法。&lt;a href="https://github.com/real-logic/Agrona"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disruptor：线程间消息传递开发库。&lt;a href="http://lmax-exchange.github.io/disruptor/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;fastutil：快速紧凑的特定类型集合（Collection）。&lt;a href="http://fastutil.di.unimi.it/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GS Collections：受Smalltalk启发的集合框架。&lt;a href="https://github.com/goldmansachs/gs-collections"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/hppc/" rel="nofollow"&gt;HPPC&lt;/a&gt;：基础类型集合。&lt;a href="http://labs.carrotsearch.com/hppc.html" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Javolution：实时和嵌入式系统的开发库。&lt;a href="http://javolution.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jctools/" rel="nofollow"&gt;JCTools&lt;/a&gt;：JDK中缺失的并发工具。&lt;a href="https://github.com/JCTools/JCTools"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/koloboke/" rel="nofollow"&gt;Koloboke&lt;/a&gt;：Hash set和hash map。&lt;a href="https://github.com/OpenHFT/Koloboke"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Trove：基础类型集合。&lt;a href="http://trove.starlight-systems.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;High-scale-lib:Cliff Click 个人开发的高性能并发库&lt;a href="https://github.com/stephenc/high-scale-lib"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-ide"&gt;&lt;a id="user-content-ide" class="anchor" aria-hidden="true" href="#ide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IDE&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;简化开发的集成开发环境。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/eclipse/" rel="nofollow"&gt;Eclipse&lt;/a&gt;：老牌开源项目，支持多种插件和编程语言。&lt;a href="http://www.eclipse.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/intellij-idea/" rel="nofollow"&gt;IntelliJ IDEA&lt;/a&gt;：支持众多JVM语言，是安卓开发者好的选择。商业版主要针对企业客户。&lt;a href="http://www.jetbrains.com/idea/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/netbeans/" rel="nofollow"&gt;NetBeans&lt;/a&gt;：为多种技术提供集成化支持，包括Java SE、Java EE、数据库访问、HTML5等。&lt;a href="https://netbeans.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/scala-ide/" rel="nofollow"&gt;Scala IDE&lt;/a&gt;：一款基于Eclipse开源平台打造的Scala集成开发环境。&lt;a href="http://scala-ide.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/springsource-tool-suite/" rel="nofollow"&gt;SpringSource Tool Suite（STS）&lt;/a&gt;:一款基于Eclipse开源平台打造的Spring应用开发环境。&lt;a href="http://spring.io/tools/sts/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-imagery"&gt;&lt;a id="user-content-图像处理" class="anchor" aria-hidden="true" href="#图像处理"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;图像处理&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;创建、评价和操作图片的支持库。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/imgscalr/" rel="nofollow"&gt;Imgscalr&lt;/a&gt;：纯Java 2D实现，简单、高效、支持硬件加速的图像缩放开发库。&lt;a href="https://github.com/thebuzzmedia/imgscalr"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/picasso/" rel="nofollow"&gt;Picasso&lt;/a&gt;：安卓图片下载和图片缓存开发库。&lt;a href="http://square.github.io/picasso/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/thumbnailator/" rel="nofollow"&gt;Thumbnailator&lt;/a&gt;：Thumbnailator是一个高质量Java缩略图开发库。&lt;a href="https://github.com/coobird/thumbnailator"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/zxing/" rel="nofollow"&gt;ZXing&lt;/a&gt;：支持多种格式的一维、二维条形码图片处理开发库。&lt;a href="https://github.com/zxing/zxing"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/im4java/" rel="nofollow"&gt;im4java&lt;/a&gt;: 基于ImageMagick或GraphicsMagick命令行的图片处理开发库，基本上ImageMagick能够支持的图片格式和处理方式都能够处理。&lt;a href="http://im4java.sourceforge.net/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Apache Batik：在Java应用中程序以SVG格式显示、生成及处理图像的工具集，包括SVG解析器、SVG生成器、SVG DOM等模块，可以集成使用也可以单独使用，还可以扩展自定义的SVG标签。&lt;a href="http://xmlgraphics.apache.org/batik/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-json"&gt;&lt;a id="user-content-json" class="anchor" aria-hidden="true" href="#json"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;简化JSON处理的开发库。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/genson/" rel="nofollow"&gt;Genson&lt;/a&gt;：强大且易于使用的Java到JSON转换开发库。&lt;a href="http://owlike.github.io/genson" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/gson/" rel="nofollow"&gt;Gson&lt;/a&gt;：谷歌官方推出的JSON处理库，支持在对象与JSON之间双向序列化，性能良好且可以实时调用。&lt;a href="https://github.com/google/gson"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jackson/" rel="nofollow"&gt;Jackson&lt;/a&gt;：与GSON类似，在频繁使用时性能更佳。&lt;a href="http://wiki.fasterxml.com/JacksonHome" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/logansquare/" rel="nofollow"&gt;LoganSquare&lt;/a&gt;：基于Jackson流式API，提供对JSON解析和序列化。比GSON与Jackson组合方式效果更好。&lt;a href="https://github.com/bluelinelabs/LoganSquare"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/fastjson/" rel="nofollow"&gt;Fastjson&lt;/a&gt;：一个Java语言编写的高性能功能完善的JSON库。&lt;a href="https://github.com/Alibaba/fastjson"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kyro：快速、高效、自动化的Java对象序列化和克隆库。&lt;a href="https://github.com/EsotericSoftware/kryo"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-jvm-and-jdk"&gt;&lt;a id="user-content-jvm与jdk" class="anchor" aria-hidden="true" href="#jvm与jdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JVM与JDK&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;目前的JVM和JDK实现。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jdk-9/" rel="nofollow"&gt;JDK 9&lt;/a&gt;：JDK 9的早期访问版本。&lt;a href="https://jdk9.java.net/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/openjdk/" rel="nofollow"&gt;OpenJDK&lt;/a&gt;：JDK开源实现。&lt;a href="http://openjdk.java.net/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-languages"&gt;&lt;a id="user-content-基于jvm的语言" class="anchor" aria-hidden="true" href="#基于jvm的语言"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;基于JVM的语言&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;除Java外，可以用来编写JVM应用程序的编程语言。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scala：融合了面向对象和函数式编程思想的静态类型编程语言。&lt;a href="http://www.scala-lang.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/groovy/" rel="nofollow"&gt;Groovy&lt;/a&gt;：类型可选（Optionally typed）的动态语言，支持静态类型和静态编译。目前是一个Apache孵化器项目。&lt;a href="http://www.groovy-lang.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clojure：可看做现代版Lisp的动态类型语言。&lt;a href="http://clojure.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ceylon：RedHat开发的面向对象静态类型编程语言。&lt;a href="http://ceylon-lang.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kotlin：JetBrain针对JVM、安卓和浏览器提供的静态类型编程语言。&lt;a href="http://kotlinlang.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/xtend/" rel="nofollow"&gt;Xtend&lt;/a&gt;：一种静态编程语言，能够将其代码转换为简洁高效的Java代码，并基于JVM运行。&lt;a href="http://www.eclipse.org/xtend/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-logging"&gt;&lt;a id="user-content-日志" class="anchor" aria-hidden="true" href="#日志"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;日志&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;记录应用程序行为日志的开发库。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/log4j2/" rel="nofollow"&gt;Apache Log4j 2&lt;/a&gt;：使用强大的插件和配置架构进行完全重写。&lt;a href="http://logging.apache.org/log4j/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/kibana/" rel="nofollow"&gt;kibana&lt;/a&gt;：分析及可视化日志文件。&lt;a href="https://www.elastic.co/products/kibana" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/logback/" rel="nofollow"&gt;Logback&lt;/a&gt;：强健的日期开发库，通过Groovy提供很多有趣的选项。&lt;a href="http://logback.qos.ch/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/logstash/" rel="nofollow"&gt;logstash&lt;/a&gt;：日志文件管理工具。&lt;a href="https://www.elastic.co/products/logstash" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/metrics/" rel="nofollow"&gt;Metrics&lt;/a&gt;：通过JMX或HTTP发布参数，并且支持存储到数据库。&lt;a href="https://github.com/dropwizard/metrics"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/slf4j/" rel="nofollow"&gt;SLF4J&lt;/a&gt;：日志抽象层，需要与具体的实现配合使用。&lt;a href="http://www.slf4j.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-machine-learning"&gt;&lt;a id="user-content-机器学习" class="anchor" aria-hidden="true" href="#机器学习"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;机器学习&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;提供具体统计算法的工具。其算法可从数据中学习。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/apache-flink/" rel="nofollow"&gt;Apache Flink&lt;/a&gt;：快速、可靠的大规模数据处理引擎。&lt;a href="https://flink.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/apache-hadoop/" rel="nofollow"&gt;Apache Hadoop&lt;/a&gt;：在商用硬件集群上用来进行大规模数据存储的开源软件框架。&lt;a href="http://hadoop.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/apache-mahout/" rel="nofollow"&gt;Apache Mahout&lt;/a&gt;：专注协同过滤、聚类和分类的可扩展算法。&lt;a href="https://mahout.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/apache-spark/" rel="nofollow"&gt;Apache Spark&lt;/a&gt;：开源数据分析集群计算框架。&lt;a href="http://spark.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/deepdive/" rel="nofollow"&gt;DeepDive&lt;/a&gt;：从非结构化数据建立结构化信息并集成到已有数据库的工具。&lt;a href="http://deepdive.stanford.edu" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/deeplearning4j/" rel="nofollow"&gt;Deeplearning4j&lt;/a&gt;：分布式多线程深度学习开发库。&lt;a href="http://deeplearning4j.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/h2o/" rel="nofollow"&gt;H2O&lt;/a&gt;：用作大数据统计的分析引擎。&lt;a href="http://h2o.ai/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/weka/" rel="nofollow"&gt;Weka&lt;/a&gt;：用作数据挖掘的算法集合，包括从预处理到可视化的各个层次。&lt;a href="http://www.cs.waikato.ac.nz/ml/weka/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/quickml/" rel="nofollow"&gt;QuickML&lt;/a&gt;：高效机器学习库。&lt;a href="http://quickml.org/" rel="nofollow"&gt;官网&lt;/a&gt;、&lt;a href="https://github.com/sanity/quickml"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-messaging"&gt;&lt;a id="user-content-消息传递" class="anchor" aria-hidden="true" href="#消息传递"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;消息传递&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;在客户端之间进行消息传递，确保协议独立性的工具。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/aeron/" rel="nofollow"&gt;Aeron&lt;/a&gt;：高效可扩展的单播、多播消息传递工具。&lt;a href="https://github.com/real-logic/Aeron"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/activemq/" rel="nofollow"&gt;Apache ActiveMQ&lt;/a&gt;：实现JMS的开源消息代理（broker），可将同步通讯转为异步通讯。&lt;a href="http://activemq.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/apache-camel/" rel="nofollow"&gt;Apache Camel&lt;/a&gt;：通过企业级整合模式（Enterprise Integration Pattern EIP）将不同的消息传输API整合在一起。&lt;a href="http://camel.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/kafka/" rel="nofollow"&gt;Apache Kafka&lt;/a&gt;：高吞吐量分布式消息系统。&lt;a href="http://kafka.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/hermes/" rel="nofollow"&gt;Hermes&lt;/a&gt;：快速、可靠的消息代理（Broker），基于Kafka构建。&lt;a href="http://hermes.allegro.tech" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;JBoss HornetQ：清晰、准确、模块化，可以方便嵌入的消息工具。&lt;a href="http://hornetq.jboss.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jeromq/" rel="nofollow"&gt;JeroMQ&lt;/a&gt;：ZeroMQ的纯Java实现。&lt;a href="https://github.com/zeromq/jeromq"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/smack/" rel="nofollow"&gt;Smack&lt;/a&gt;：跨平台XMPP客户端函数库。&lt;a href="https://github.com/igniterealtime/Smack/"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Openfire：是开源的、基于XMPP、采用Java编程语言开发的实时协作服务器。 Openfire安装和使用都非常简单，并可利用Web界面进行管理。 &lt;a href="http://www.igniterealtime.org/projects/openfire/index.jsp" rel="nofollow"&gt;官网&lt;/a&gt; &lt;a href="https://github.com/igniterealtime/Openfire"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spark：是一个开源，跨平台IM客户端。它的特性支持集组聊天，电话集成和强大安全性能。如果企业内部部署IM使用Openfire+Spark是最佳的组合。 &lt;a href="http://www.igniterealtime.org/projects/spark/index.jsp" rel="nofollow"&gt;官网&lt;/a&gt; &lt;a href="https://github.com/igniterealtime/Spark"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tigase： 是一个轻量级的可伸缩的 Jabber/XMPP 服务器。无需其他第三方库支持，可以处理非常高的复杂和大量的用户数，可以根据需要进行水平扩展。 &lt;a href="http://www.tigase.net" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-miscellaneous"&gt;&lt;a id="user-content-杂项" class="anchor" aria-hidden="true" href="#杂项"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;杂项&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;未分类其它资源。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Design Patterns：实现并解释了最常见的设计模式。&lt;a href="https://github.com/iluwatar/java-design-patterns"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jimfs：内存文件系统。&lt;a href="https://github.com/google/jimfs"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Lanterna：类似curses的简单console文本GUI函数库。&lt;a href="https://code.google.com/p/lanterna/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;LightAdmin：可插入式CRUD UI函数库，可用来快速应用开发。&lt;a href="http://lightadmin.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OpenRefine：用来处理混乱数据的工具，包括清理、转换、使用Web Service进行扩展并将其关联到数据库。&lt;a href="http://openrefine.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RoboVM：Java编写原生iOS应用。&lt;a href="https://robovm.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/quartz/" rel="nofollow"&gt;Quartz&lt;/a&gt;：强大的任务调度库.&lt;a href="http://www.quartz-scheduler.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-monitoring"&gt;&lt;a id="user-content-应用监控工具" class="anchor" aria-hidden="true" href="#应用监控工具"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;应用监控工具&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;监控生产环境中应用程序的工具。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/appdynamics/" rel="nofollow"&gt;AppDynamics&lt;/a&gt;：性能监测商业工具。&lt;a href="http://www.appdynamics.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/javamelody/" rel="nofollow"&gt;JavaMelody&lt;/a&gt;：性能监测和分析工具。&lt;a href="https://github.com/javamelody/javamelody"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/Kamon/" rel="nofollow"&gt;Kamon&lt;/a&gt;：Kamon用来监测在JVM上运行的应用程序。&lt;a href="http://www.kamon.io/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/new-relic/" rel="nofollow"&gt;New Relic&lt;/a&gt;：性能监测商业工具。&lt;a href="http://newrelic.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SPM：支持对JVM应用程序进行分布式事务追踪的性能监测商业工具。&lt;a href="https://sematext.com/spm/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/overops_takipi/" rel="nofollow"&gt;OverOps(Takipi)&lt;/a&gt;：产品运行时错误监测及调试商业工具。&lt;a href="https://www.takipi.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-native"&gt;&lt;a id="user-content-原生开发库" class="anchor" aria-hidden="true" href="#原生开发库"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;原生开发库&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;用来进行特定平台开发的原生开发库。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jna/" rel="nofollow"&gt;JNA&lt;/a&gt;：不使用JNI就可以使用原生开发库。此外，还为常见系统函数提供了接口。&lt;a href="https://github.com/java-native-access/jna"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-natural-language-processing"&gt;&lt;a id="user-content-自然语言处理" class="anchor" aria-hidden="true" href="#自然语言处理"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;自然语言处理&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;用来专门处理文本的函数库。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/apache-opennlp/" rel="nofollow"&gt;Apache OpenNLP&lt;/a&gt;：处理类似分词等常见任务的工具。&lt;a href="https://opennlp.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/stanford_corenlp/" rel="nofollow"&gt;CoreNLP&lt;/a&gt;：斯坦佛CoreNLP提供了一组基础工具，可以处理类似标签、实体名识别和情感分析这样的任务。&lt;a href="http://nlp.stanford.edu/software/coenlp.shtml" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/lingpipe/" rel="nofollow"&gt;LingPipe&lt;/a&gt;：一组可以处理各种任务的工具集，支持POS标签、情感分析等。&lt;a href="http://alias-i.com/lingpipe/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/mallet/" rel="nofollow"&gt;Mallet&lt;/a&gt;：统计学自然语言处理、文档分类、聚类、主题建模等。&lt;a href="http://mallet.cs.umass.edu/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-networking"&gt;&lt;a id="user-content-网络" class="anchor" aria-hidden="true" href="#网络"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;网络&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;网络编程函数库。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/async-http-client/" rel="nofollow"&gt;Async Http Client&lt;/a&gt;：异步HTTP和WebSocket客户端函数库。&lt;a href="https://github.com/AsyncHttpClient/async-http-client"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/grizzly/" rel="nofollow"&gt;Grizzly&lt;/a&gt;：NIO框架，在Glassfish中作为网络层使用。&lt;a href="https://grizzly.java.net/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/netty/" rel="nofollow"&gt;Netty&lt;/a&gt;：构建高性能网络应用程序开发框架。&lt;a href="http://netty.io/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/okhttp/" rel="nofollow"&gt;OkHttp&lt;/a&gt;：一个Android和Java应用的HTTP+SPDY客户端。&lt;a href="http://square.github.io/okhttp/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Undertow：基于NIO实现了阻塞和非阻塞API的Web服务器，在WildFly中作为网络层使用。&lt;a href="http://undertow.io/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;unirest-java: Unirest 是一个轻量级的 HTTP 请求库，涵盖 Node、Ruby、Java、PHP、Python、Objective-C、.NET 等多种语言。可发起 GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS 请求。&lt;a href="http://unirest.io/java" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;brpc-java: java版baidu rpc框架，高性能、多协议、易扩展、低耦合。&lt;a href="https://github.com/baidu/brpc-java"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-orm"&gt;&lt;a id="user-content-orm" class="anchor" aria-hidden="true" href="#orm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ORM&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;处理对象持久化的API。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/ebean/" rel="nofollow"&gt;Ebean&lt;/a&gt;：支持快速数据访问和编码的ORM框架。&lt;a href="http://ebean-orm.github.io/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/eclipselink/" rel="nofollow"&gt;EclipseLink&lt;/a&gt;：支持许多持久化标准，JPA、JAXB、JCA和SDO。&lt;a href="https://www.eclipse.org/eclipselink/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/hibernate/" rel="nofollow"&gt;Hibernate&lt;/a&gt;：广泛使用、强健的持久化框架。Hibernate的技术社区非常活跃。&lt;a href="http://hibernate.org/orm/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/mybatis/" rel="nofollow"&gt;MyBatis&lt;/a&gt;：带有存储过程或者SQL语句的耦合对象（Couples object）。&lt;a href="http://mybatis.github.io/mybatis-3/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/ormlite/" rel="nofollow"&gt;OrmLite&lt;/a&gt;：轻量级开发包，免除了其它ORM产品中的复杂性和开销。&lt;a href="http://ormlite.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Nutz：另一个SSH。&lt;a href="http://nutzam.com/" rel="nofollow"&gt;官网&lt;/a&gt;，&lt;a href="https://github.com/nutzam/nutz"&gt;Github&lt;/a&gt;，&lt;a href="https://nutz.cn/" rel="nofollow"&gt;论坛&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;JFinal：JAVA WEB + ORM框架。&lt;a href="http://www.jfinal.com" rel="nofollow"&gt;官网&lt;/a&gt;，&lt;a href="https://github.com/jfinal/jfinal"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://openjpa.apache.org/" rel="nofollow"&gt;Apache OpenJPA&lt;/a&gt;: 实现了 EJB 3.0 中的 JPA 标准,为开发者提供功能强大、使用简单的持久化数据管理框架。 &lt;a href="http://openjpa.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-pdf"&gt;&lt;a id="user-content-pdf" class="anchor" aria-hidden="true" href="#pdf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PDF&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;用来帮助创建PDF文件的资源。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/apache_fop/" rel="nofollow"&gt;Apache FOP&lt;/a&gt;：从XSL-FO创建PDF。&lt;a href="http://xmlgraphics.apache.org/fop/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/apache-pdfbox/" rel="nofollow"&gt;Apache PDFBox&lt;/a&gt;：用来创建和操作PDF的工具集。&lt;a href="http://pdfbox.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/dynamicreports/" rel="nofollow"&gt;DynamicReports&lt;/a&gt;：JasperReports的精简版。&lt;a href="http://dynamicreports.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/flyingsaucer/" rel="nofollow"&gt;flyingsaucer&lt;/a&gt;：XML/XHTML和CSS 2.1渲染器。&lt;a href="https://github.com/flyingsaucerproject/flyingsaucer"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/itext/" rel="nofollow"&gt;iText&lt;/a&gt;：一个易于使用的PDF函数库，用来编程创建PDF文件。注意，用于商业用途时需要许可证。&lt;a href="http://itextpdf.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jasperreports/" rel="nofollow"&gt;JasperReports&lt;/a&gt;：一个复杂的报表引擎。&lt;a href="http://community.jaspersoft.com/project/jasperreports-library" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-performance-analysis"&gt;&lt;a id="user-content-性能分析" class="anchor" aria-hidden="true" href="#性能分析"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;性能分析&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;性能分析、性能剖析及基准测试工具。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jhiccup/" rel="nofollow"&gt;jHiccup&lt;/a&gt;：提供平台中JVM暂停的日志和记录。&lt;a href="https://github.com/giltene/jHiccup"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jmh/" rel="nofollow"&gt;JMH&lt;/a&gt;：JVM基准测试工具。&lt;a href="http://openjdk.java.net/projects/code-tools/jmh/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jprofiler/" rel="nofollow"&gt;JProfiler&lt;/a&gt;：商业分析器。&lt;a href="https://www.ej-technologies.com/products/jprofiler/overview.html" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/latencyutils/" rel="nofollow"&gt;LatencyUtils&lt;/a&gt;：测量和报告延迟的工具。&lt;a href="https://github.com/LatencyUtils/LatencyUtils"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/visualvm/" rel="nofollow"&gt;VisualVM&lt;/a&gt;：对运行中的应用程序信息提供了可视化界面。&lt;a href="http://visualvm.java.net/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/yourkit-java-profiler/" rel="nofollow"&gt;YourKit Java Profiler&lt;/a&gt;：商业分析器。&lt;a href="https://www.yourkit.com/features/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-reactive-libraries"&gt;&lt;a id="user-content-响应式开发库" class="anchor" aria-hidden="true" href="#响应式开发库"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;响应式开发库&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;用来开发响应式应用程序的开发库。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/reactive-streams/" rel="nofollow"&gt;Reactive Streams&lt;/a&gt;：异步流处理标准，支持非阻塞式反向压力（backpressure）。&lt;a href="https://github.com/reactive-streams/reactive-streams-jv/"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/reactor/" rel="nofollow"&gt;Reactor&lt;/a&gt;：构建响应式快速数据（fast-data）应用程序的开发库。&lt;a href="http://projectreactor.io/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/rxjava/" rel="nofollow"&gt;RxJava&lt;/a&gt;：通过JVM可观察序列（observable sequence）构建异步和基于事件的程序。&lt;a href="https://github.com/ReactiveX/RxJava"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-rest-frameworks"&gt;&lt;a id="user-content-rest框架" class="anchor" aria-hidden="true" href="#rest框架"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;REST框架&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;用来创建RESTful 服务的框架。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/dropwizard/" rel="nofollow"&gt;Dropwizard&lt;/a&gt;：偏向于自己使用的Web框架。用来构建Web应用程序，使用了Jetty、Jackson、Jersey和Metrics。&lt;a href="https://dropwizard.github.io/drpwizard/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/feign/" rel="nofollow"&gt;Feign&lt;/a&gt;：受Retrofit、JAXRS-2.0和WebSocket启发的HTTP客户端连接器（binder）。&lt;a href="https://github.com/Netflix/feign"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jersey：JAX-RS参考实现。&lt;a href="https://jersey.java.net/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/resteasy/" rel="nofollow"&gt;RESTEasy&lt;/a&gt;：经过JAX-RS规范完全认证的可移植实现。&lt;a href="http://resteasy.jboss.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/restexpress/" rel="nofollow"&gt;RestExpress&lt;/a&gt;：一个Java类型安全的REST客户端。&lt;a href="https://github.com/RestExpress/RestExpress"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/restx/" rel="nofollow"&gt;RestX&lt;/a&gt;：基于注解处理和编译时源码生成的框架。&lt;a href="http://restx.io" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/retrofit/" rel="nofollow"&gt;Retrofit&lt;/a&gt;：类型安全的REST客户端。&lt;a href="http://square.github.io/retrofit/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/sparkjava/" rel="nofollow"&gt;Spark&lt;/a&gt;：受到Sinatra启发的Java REST框架。&lt;a href="http://sparkjava.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/swagger/" rel="nofollow"&gt;Swagger&lt;/a&gt;：Swagger是一个规范且完整的框架，提供描述、生产、消费和可视化RESTful Web Service。&lt;a href="http://swagger.io/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/bladejava/" rel="nofollow"&gt;Blade&lt;/a&gt;：国人开发的一个轻量级的MVC框架. 它拥有简洁的代码，优雅的设计。&lt;a href="https://lets-blade.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-science"&gt;&lt;a id="user-content-科学计算与分析" class="anchor" aria-hidden="true" href="#科学计算与分析"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;科学计算与分析&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;用于科学计算和分析的函数库。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/datamelt/" rel="nofollow"&gt;DataMelt&lt;/a&gt;：用于科学计算、数据分析及数据可视化的开发环境。&lt;a href="http://jwork.org/dmelt/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jgrapht/" rel="nofollow"&gt;JGraphT&lt;/a&gt;：支持数学图论对象和算法的图形库。&lt;a href="https://github.com/jgrapht/jgrapht"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jscience/" rel="nofollow"&gt;JScience&lt;/a&gt;：用来进行科学测量和单位的一组类。&lt;a href="http://jscience.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-search"&gt;&lt;a id="user-content-搜索引擎" class="anchor" aria-hidden="true" href="#搜索引擎"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;搜索引擎&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;文档索引引擎，用于搜索和分析。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/solr/" rel="nofollow"&gt;Apache Solr&lt;/a&gt;：一个完全的企业搜索引擎。为高吞吐量通信进行了优化。&lt;a href="http://lucene.apache.org/solr/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Elasticsearch：一个分布式、支持多租户（multitenant）全文本搜索引擎。提供了RESTful Web接口和无schema的JSON文档。&lt;a href="http://www.elsticsearch.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Apache Lucene：是一个开放源代码的全文检索引擎工具包，是一个全文检索引擎的架构，提供了完整的查询引擎和索引引擎，部分文本分析引擎。&lt;a href="http://lucene.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-security"&gt;&lt;a id="user-content-安全" class="anchor" aria-hidden="true" href="#安全"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;安全&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;用于处理安全、认证、授权或会话管理的函数库。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/shiro/" rel="nofollow"&gt;Apache Shiro&lt;/a&gt;：执行认证、授权、加密和会话管理。&lt;a href="http://shiro.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/bouncy-castle/" rel="nofollow"&gt;Bouncy Castle&lt;/a&gt;，涵盖了从基础的帮助函数到PGP/SMIME操作。&lt;a href="https://www.bouncycastle.org/java.html" rel="nofollow"&gt;官网&lt;/a&gt;：多途加密开发库。支持JCA提供者（JCA provider)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/cryptomator/" rel="nofollow"&gt;Cryptomator&lt;/a&gt;：在云上进行客户端跨平台透明加密。&lt;a href="https://cryptomator.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/keycloak/" rel="nofollow"&gt;Keycloak&lt;/a&gt;：为浏览器应用和RESTful Web Service集成SSO和IDM。目前还处于beta版本，但是看起来非常有前途。&lt;a href="http://keycloak.jboss.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/picketlink/" rel="nofollow"&gt;PicketLink&lt;/a&gt;：PicketLink是一个针对Java应用进行安全和身份认证管理的大型项目（Umbrella Project）。&lt;a href="http://picketlink.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-serialization"&gt;&lt;a id="user-content-序列化" class="anchor" aria-hidden="true" href="#序列化"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;序列化&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;用来高效处理序列化的函数库。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/flatbuffers/" rel="nofollow"&gt;FlatBuffers&lt;/a&gt;：高效利用内存的序列化函数库，无需解包和解析即可高效访问序列化数据。&lt;a href="https://github.com/google/flatbuffers"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/kryo/" rel="nofollow"&gt;Kryo&lt;/a&gt;：快速、高效的对象图形序列化框架。&lt;a href="https://github.com/EsotericSoftware/kryo"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/fst/" rel="nofollow"&gt;FST&lt;/a&gt;：提供兼容JDK的高性能对象图形序列化。&lt;a href="https://github.com/RuedigerMoeller/fast-serialization"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/messagepack/" rel="nofollow"&gt;MessagePack&lt;/a&gt;：一种高效的二进制序列化格式。&lt;a href="https://github.com/msgpack/msgpack-java"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-server"&gt;&lt;a id="user-content-应用服务器" class="anchor" aria-hidden="true" href="#应用服务器"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;应用服务器&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;用来部署应用程序的服务器。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/apache-tomcat/" rel="nofollow"&gt;Apache Tomcat&lt;/a&gt;：针对Servlet和JSP的应用服务器，健壮性好且适用性强。&lt;a href="http://tomcat.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/tomee/" rel="nofollow"&gt;Apache TomEE&lt;/a&gt;：Tomcat加Java EE。&lt;a href="http://tomee.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jetty/" rel="nofollow"&gt;Jetty&lt;/a&gt;：轻量级、小巧的应用服务器，通常会嵌入到项目中。&lt;a href="http://www.eclipse.org/jetty/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/websphere-liberty/" rel="nofollow"&gt;WebSphere Liberty&lt;/a&gt;：轻量级、模块化应用服务器，由IBM开发。&lt;a href="https://developer.ibm.com/wasdev/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/wildfly/" rel="nofollow"&gt;WildFly&lt;/a&gt;：之前被称作JBoss，由Red Hat开发。支持很多Java EE功能。&lt;a href="http://www.wildfly.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-template-engine"&gt;&lt;a id="user-content-模板引擎" class="anchor" aria-hidden="true" href="#模板引擎"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;模板引擎&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;在模板中替换表达式的工具。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/velocity/" rel="nofollow"&gt;Apache Velocity&lt;/a&gt;：提供HTML页面模板、email模板和通用开源代码生成器模板。&lt;a href="http://velocity.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/freemarker/" rel="nofollow"&gt;FreeMarker&lt;/a&gt;：通用模板引擎，不需要任何重量级或自己使用的依赖关系。&lt;a href="http://freemarker.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/handlebars-java/" rel="nofollow"&gt;Handlebars.java&lt;/a&gt;：使用Java编写的模板引擎，逻辑简单，支持语义扩展（semantic Mustache）。&lt;a href="http://jknack.github.io/handlebars.java/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/thymeleaf/" rel="nofollow"&gt;Thymeleaf&lt;/a&gt;：旨在替换JSP，支持XML文件的工具。&lt;a href="http://www.thymeleaf.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ibeetl.com/" rel="nofollow"&gt;Beetl&lt;/a&gt;：新一代的模板引擎，功能强大，性能良好，超过当前流行的模板引擎。而且还易学易用。&lt;a href="http://ibeetl.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-testing"&gt;&lt;a id="user-content-测试" class="anchor" aria-hidden="true" href="#测试"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;测试&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;测试内容从对象到接口，涵盖性能测试和基准测试工具。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jmeter/" rel="nofollow"&gt;Apache JMeter&lt;/a&gt;：功能性测试和性能评测。&lt;a href="http://jmeter.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/arquillian/" rel="nofollow"&gt;Arquillian&lt;/a&gt;：集成测试和功能行测试平台，集成Java EE容器。&lt;a href="http://arquillian.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/assertj/" rel="nofollow"&gt;AssertJ&lt;/a&gt;：支持流式断言提高测试的可读性。&lt;a href="http://joel-costigliola.github.io/assertj/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/awaitility/" rel="nofollow"&gt;Awaitility&lt;/a&gt;：用来同步异步操作的DSL。&lt;a href="https://github.com/jayway/awaitility"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/cucumber-jvm/" rel="nofollow"&gt;Cucumber&lt;/a&gt;：BDD测试框架。&lt;a href="https://github.com/cucumber/cucumber-jvm"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Gatling：设计为易于使用、可维护的和高性能负载测试工具。&lt;a href="http://gatling.io/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/hamcrest/" rel="nofollow"&gt;Hamcrest&lt;/a&gt;：可用来灵活创建意图（intent）表达式的匹配器。&lt;a href="http://hamcrest.org/JavaHamcrest/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;JMockit：用来模拟静态、final方法等。&lt;a href="http://jmockit.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/junit/" rel="nofollow"&gt;JUnit&lt;/a&gt;：通用测试框架。&lt;a href="http://junit.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/mockito/" rel="nofollow"&gt;Mockito&lt;/a&gt;：在自动化单元测试中创建测试对象，为TDD或BDD提供支持。&lt;a href="https://github.com/mockito/mockito"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/powermock/" rel="nofollow"&gt;PowerMock&lt;/a&gt;： 支持模拟静态方法、构造函数、final类和方法、私有方法以及移除静态初始化器的模拟工具。&lt;a href="https://github.com/jayway/powermock"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/rest-assured/" rel="nofollow"&gt;REST Assured&lt;/a&gt;：为REST/HTTP服务提供方便测试的Java DSL。&lt;a href="https://github.com/jayway/rest-assured"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/selenide/" rel="nofollow"&gt;Selenide&lt;/a&gt;：为Selenium提供精准的周边API，用来编写稳定且可读的UI测试。&lt;a href="http://selenide.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/selenium/" rel="nofollow"&gt;Selenium&lt;/a&gt;：为Web应用程序提供可移植软件测试框架。&lt;a href="http://docs.seleniumhq.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/spock/" rel="nofollow"&gt;Spock&lt;/a&gt;：JUnit-compatible framework featuring an expressive Groovy-derived specification language.&lt;a href="http://docs.spockframework.org/" rel="nofollow"&gt;官网&lt;/a&gt;兼容JUnit框架，支持衍生的Groovy范的语言。&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/testng/" rel="nofollow"&gt;TestNG&lt;/a&gt;：测试框架。&lt;a href="http://testng.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/truth/" rel="nofollow"&gt;Truth&lt;/a&gt;：Google的断言和命题（proposition）框架。&lt;a href="https://github.com/google/truth"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/unitils/" rel="nofollow"&gt;Unitils&lt;/a&gt;：模块化测试函数库，支持单元测试和集成测试。&lt;a href="http://www.unitils.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/wiremock/" rel="nofollow"&gt;WireMock&lt;/a&gt;：Web Service测试桩（Stub）和模拟函数。&lt;a href="http://wiremock.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-utility"&gt;&lt;a id="user-content-通用工具库" class="anchor" aria-hidden="true" href="#通用工具库"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;通用工具库&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;通用工具类函数库。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/apache-commons/" rel="nofollow"&gt;Apache Commons&lt;/a&gt;：提供各种用途的函数，比如配置、验证、集合、文件上传或XML处理等。&lt;a href="http://commons.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/args4j/" rel="nofollow"&gt;args4j&lt;/a&gt;：命令行参数解析器。&lt;a href="http://args4j.kohsuke.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/crash/" rel="nofollow"&gt;CRaSH&lt;/a&gt;：为运行进行提供CLI。&lt;a href="http://www.crashub.org" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/gephi/" rel="nofollow"&gt;Gephi&lt;/a&gt;：可视化跨平台网络图形化操作程序。&lt;a href="https://github.com/gephi/gephi/"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/guava/" rel="nofollow"&gt;Guava&lt;/a&gt;：集合、缓存、支持基本类型、并发函数库、通用注解、字符串处理、I/O等。&lt;a href="https://github.com/google/guava"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jade/" rel="nofollow"&gt;JADE&lt;/a&gt;：构建、调试多租户系统的框架和环境。&lt;a href="http://jade.tilab.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/javatuples/" rel="nofollow"&gt;javatuples&lt;/a&gt;：正如名字表示的那样，提供tuple支持。尽管目前tuple的概念还有留有争议。&lt;a href="http://www.javatuples.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jcommander/" rel="nofollow"&gt;JCommander&lt;/a&gt;：命令行参数解析器。&lt;a href="http://jcommander.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/protege/" rel="nofollow"&gt;Protégé&lt;/a&gt;：提供存在论（ontology）编辑器以及构建知识系统的框架。&lt;a href="http://protege.stanford.edu/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/looly/hutool"&gt;Hutool&lt;/a&gt;：一个Java工具集，缓存、HTTP、加密解密、DFA、JSON、分组配置文件、数据库操作、图片验证码、Excel读写、定时任务、模板引擎、邮件、Servlet、二维码、Emoji、分词等一系列工具类。&lt;a href="https://hutool.cn" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-web-crawling"&gt;&lt;a id="user-content-网络爬虫" class="anchor" aria-hidden="true" href="#网络爬虫"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;网络爬虫&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;用于分析网站内容的函数库。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/nutch/" rel="nofollow"&gt;Apache Nutch&lt;/a&gt;：可用于生产环境的高度可扩展、可伸缩的网络爬虫。&lt;a href="http://nutch.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/crawler4j/" rel="nofollow"&gt;Crawler4j&lt;/a&gt;：简单的轻量级网络爬虫。&lt;a href="https://github.com/yasserg/crawler4j"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jsoup/" rel="nofollow"&gt;JSoup&lt;/a&gt;：刮取、解析、操作和清理HTML。&lt;a href="http://jsoup.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/code4craft/webmagic/"&gt;webmagic&lt;/a&gt;：一个可扩展的Java爬虫框架，架构类似Python的Scrapy。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-web-frameworks"&gt;&lt;a id="user-content-web框架" class="anchor" aria-hidden="true" href="#web框架"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Web框架&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;用于处理Web应用程序不同层次间通讯的框架。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/apache-tapestry/" rel="nofollow"&gt;Apache Tapestry&lt;/a&gt;：基于组件的框架，使用Java创建动态、强健的、高度可扩展的Web应用程序。&lt;a href="http://tapestry.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/apache-wicket/" rel="nofollow"&gt;Apache Wicket&lt;/a&gt;：基于组件的Web应用框架，与Tapestry类似带有状态显示GUI。&lt;a href="http://wicket.apache.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/gwt/" rel="nofollow"&gt;Google Web Toolkit&lt;/a&gt;：一组Web开发工具集，包含在客户端将Java代码转为JavaScript的编译器、XML解析器、RCP &lt;a href="http://www.gwtproject.org/" rel="nofollow"&gt;官网&lt;/a&gt;API、JUnit集成、国际化支持和GUI控件。&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/grails/" rel="nofollow"&gt;Grails&lt;/a&gt;：Groovy框架，旨在提供一个高效开发环境，使用约定而非配置、没有XML并支持混入（mixin）。&lt;a href="https://grails.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/ninja/" rel="nofollow"&gt;Ninja&lt;/a&gt;：Java全栈Web开发框架。非常稳固、快速和高效。&lt;a href="http://www.ninjaframework.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/pippo/" rel="nofollow"&gt;Pippo&lt;/a&gt;：小型、高度模块化的类Sinatra框架。&lt;a href="http://www.pippo.ro/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/play-framework/" rel="nofollow"&gt;Play&lt;/a&gt;：使用约定而非配置，支持代码热加载并在浏览器中显示错误。&lt;a href="https://www.playframework.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/primefaces/" rel="nofollow"&gt;PrimeFaces&lt;/a&gt;：JSF框架，提供免费和带支持的商业版本。包括若干前端组件。&lt;a href="http://primefaces.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/ratpack/" rel="nofollow"&gt;Ratpack&lt;/a&gt;：一组Java开发函数库，用于构建快速、高效、可扩展且测试完备的HTTP应用程序。&lt;a href="https://ratpack.io/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/spring-boot/" rel="nofollow"&gt;Spring Boot&lt;/a&gt;：微框架，简化了Spring新程序的开发过程。&lt;a href="http://projects.spring.io/spring-boot/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/spring-framework/" rel="nofollow"&gt;Spring&lt;/a&gt;：旨在简化Java EE的开发过程，提供依赖注入相关组件并支持面向切面编程。&lt;a href="http://projects.spring.io/spring-framework/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/vaadin/" rel="nofollow"&gt;Vaadin&lt;/a&gt;：基于GWT构建的事件驱动框架。使用服务端架构，客户端使用Ajax。&lt;a href="https://vaadin.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/bladejava/" rel="nofollow"&gt;Blade&lt;/a&gt;：国人开发的一个轻量级的MVC框架. 它拥有简洁的代码，优雅的设计。&lt;a href="https://lets-blade.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-business-process-management"&gt;&lt;a id="user-content-业务流程管理套件" class="anchor" aria-hidden="true" href="#业务流程管理套件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;业务流程管理套件&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;流程驱动的软件系统构建。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jbpm/" rel="nofollow"&gt;jBPM&lt;/a&gt;：非常灵活的业务流程管理框架，致力于构建开发与业务分析人员之间的桥梁。&lt;a href="http://www.jbpm.org/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Activity：轻量级工作流和业务流程管理框架。&lt;a href="http://www.activiti.org/" rel="nofollow"&gt;官网&lt;/a&gt; &lt;a href="https://github.com/Activiti/Activiti"&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="user-content-resources"&gt;&lt;a id="user-content-资源" class="anchor" aria-hidden="true" href="#资源"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;资源&lt;/h2&gt;
&lt;h3 id="user-content-communities"&gt;&lt;a id="user-content-社区" class="anchor" aria-hidden="true" href="#社区"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;社区&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;r/java：Reddit的Java子社区。&lt;a href="https://www.reddit.com/r/java" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;stackoverflow：问答平台。&lt;a href="http://stackoverflow.com/questions/tagged/java" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;vJUG：虚拟Java用户组。&lt;a href="http://virtualjug.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;java8 新特性教程例子。&lt;a href="https://github.com/winterbe/java8-tutorial"&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-influential-books"&gt;&lt;a id="user-content-有影响力的书" class="anchor" aria-hidden="true" href="#有影响力的书"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;有影响力的书&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;具有广泛影响且值得阅读的Java经典书籍。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/effective-java/" rel="nofollow"&gt;Effective Java (2nd Edition)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/java-8-in-action/" rel="nofollow"&gt;Java 8 in Action&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/java-concurrency-in-practice/" rel="nofollow"&gt;Java Concurrency in Practice | Java并发编程实战&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/thinking-in-java/" rel="nofollow"&gt;Thinking in Java | Java编程思想&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/java-puzzlers/" rel="nofollow"&gt;Java Puzzlers | Java解惑&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-podcasts"&gt;&lt;a id="user-content-播客" class="anchor" aria-hidden="true" href="#播客"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;播客&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;可以一边编程一边听的东西。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java Council：&lt;a href="http://virtualjug.com/#podcast/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Java Posse：Discontinued as of 02/2015.&lt;a href="http://www.javaposse.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-weibo-weixin"&gt;&lt;a id="user-content-微博微信公众号" class="anchor" aria-hidden="true" href="#微博微信公众号"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;微博、微信公众号&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ImportNew：是最受欢迎的、专注Java技术分享的微信公众号。专注Java技术分享，包括Java基础技术、进阶技能、架构设计和Java技术领域动态等。
&lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/7625acddd6081731eb5976dbcbbd432ae9a4db0b/687474703a2f2f7777322e73696e61696d672e636e2f736d616c6c2f3633393138363131677731657062326337727632756a3230343630343633796d2e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/7625acddd6081731eb5976dbcbbd432ae9a4db0b/687474703a2f2f7777322e73696e61696d672e636e2f736d616c6c2f3633393138363131677731657062326337727632756a3230343630343633796d2e6a7067" alt="" data-canonical-src="http://ww2.sinaimg.cn/small/63918611gw1epb2c7rv2uj20460463ym.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ImportNew 微博：&lt;a href="http://weibo.com/importnew" rel="nofollow"&gt;@ImportNew&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-twitter"&gt;&lt;a id="user-content-twitter" class="anchor" aria-hidden="true" href="#twitter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Twitter&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/AdamBien/" rel="nofollow"&gt;Adam Bien&lt;/a&gt;：自由职业者、作家、JavaONE明星演讲者、顾问、Java Champion。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/agoncal/" rel="nofollow"&gt;Antonio Goncalves&lt;/a&gt;：Java Champion、JUG Leader、Devoxx France、Java EE 6/7、JCP、作家。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/arungupta/" rel="nofollow"&gt;Arun Gupta&lt;/a&gt;：Java Champion、JavaONE明星演讲者、JUG Leader、Devoxx4Kids成员、Red Hatter。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/brunoborges" rel="nofollow"&gt;Bruno Borges&lt;/a&gt;：Oracle产品经理、Java Jock。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/edburns" rel="nofollow"&gt;Ed Burns&lt;/a&gt;：Oracle技术团队顾问。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/baeldung" rel="nofollow"&gt;Eugen Paraschiv&lt;/a&gt;：Spring安全课程作者。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/JavaFXpert" rel="nofollow"&gt;James Weaver&lt;/a&gt;：Java、JavaFX、IoT开发者、作者和演讲者。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Java_EE/" rel="nofollow"&gt;Java EE&lt;/a&gt;：Java EE Twitter官方账号。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Oraclejavamag" rel="nofollow"&gt;Java Magazine&lt;/a&gt;：Java杂志官方账号。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/javanetbuzz/" rel="nofollow"&gt;Java.net&lt;/a&gt;：Java.net官方账号。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/java/" rel="nofollow"&gt;Java&lt;/a&gt;：Java Twitter官方账号。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/javinpaul" rel="nofollow"&gt;Javin Paul&lt;/a&gt;：知名Java博客作者。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/lukaseder" rel="nofollow"&gt;Lukas Eder&lt;/a&gt;：Data Geekery（jOOQ）创始人兼CEO。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/mariofusco" rel="nofollow"&gt;Mario Fusco&lt;/a&gt;：RedHatter、JUG协调、活跃讲师和作者。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/mreinhold" rel="nofollow"&gt;Mark Reinhold&lt;/a&gt;：Oracle首席架构师、Java平台开发组。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/karianna" rel="nofollow"&gt;Martijn Verburg&lt;/a&gt;：London JUG co-leader、演讲者、作家、Java Champion等。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/OpenJDK" rel="nofollow"&gt;OpenJDK&lt;/a&gt;：OpenJDK官方账号。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/reza_rahman" rel="nofollow"&gt;Reza Rahman&lt;/a&gt;：Java EE、GlassFish、WebLogic传道者、作家、演讲者、开源黑客。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/sjmaple" rel="nofollow"&gt;Simon Maple&lt;/a&gt;：Java Champion、virtualJUG创始人、LJC leader、RebelLabs作者。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/jodastephen" rel="nofollow"&gt;Stephen Colebourne&lt;/a&gt;： Java Champion、演讲者。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/kablosna" rel="nofollow"&gt;Tim Boudreau&lt;/a&gt;：作家、NetBeans大牛。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/trisha_gee" rel="nofollow"&gt;Trisha Gee&lt;/a&gt;：Java Champion、演讲者。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-weibo-weixin"&gt;&lt;a id="user-content-微博微信公众号-1" class="anchor" aria-hidden="true" href="#微博微信公众号-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;微博、微信公众号&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ImportNew 微博：&lt;a href="http://weibo.com/importnew" rel="nofollow"&gt;@ImportNew&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ImportNew：最受欢迎的、专注Java技术分享的微信公众号。专注Java技术分享，包括Java基础技术、进阶技能、架构设计和Java技术领域动态等。
&lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/7625acddd6081731eb5976dbcbbd432ae9a4db0b/687474703a2f2f7777322e73696e61696d672e636e2f736d616c6c2f3633393138363131677731657062326337727632756a3230343630343633796d2e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/7625acddd6081731eb5976dbcbbd432ae9a4db0b/687474703a2f2f7777322e73696e61696d672e636e2f736d616c6c2f3633393138363131677731657062326337727632756a3230343630343633796d2e6a7067" width="150" height="150" data-canonical-src="http://ww2.sinaimg.cn/small/63918611gw1epb2c7rv2uj20460463ym.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="user-content-websites"&gt;&lt;a id="user-content-知名网站" class="anchor" aria-hidden="true" href="#知名网站"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;知名网站&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;值得关注的Java技术站点。&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-中文站点" class="anchor" aria-hidden="true" href="#中文站点"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;中文站点&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.importnew.com/" rel="nofollow"&gt;ImportNew&lt;/a&gt;（ImportNew 专注 Java 技术）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-英文站点" class="anchor" aria-hidden="true" href="#英文站点"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;英文站点&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://android-arsenal.com" rel="nofollow"&gt;Android Arsenal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/google-java-style/" rel="nofollow"&gt;Google Java Style&lt;/a&gt;：&lt;a href="https://google.github.io/styleguide/javaguide.html" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/infoq/" rel="nofollow"&gt;InfoQ&lt;/a&gt;：&lt;a href="http://www.infoq.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.javacodegeeks.com/" rel="nofollow"&gt;Java Code Geeks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.jooq.org/" rel="nofollow"&gt;Java, SQL, and jOOQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://java.net/" rel="nofollow"&gt;Java.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://java.dzone.com/" rel="nofollow"&gt;Javalobby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/javaworld/" rel="nofollow"&gt;JavaWorld&lt;/a&gt;：&lt;a href="http://www.javaworld.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/jaxenter/" rel="nofollow"&gt;JAXenter&lt;/a&gt;：&lt;a href="https://jaxenter.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://zeroturnaround.com/rebellabs/" rel="nofollow"&gt;RebelLabs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/javaspecialists/" rel="nofollow"&gt;The Java Specialist' Newsletter&lt;/a&gt;：&lt;a href="http://www.javaspecialists.eu/archive/archive.jsp" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.takipi.com/" rel="nofollow"&gt;The Takipi Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/theserverside/" rel="nofollow"&gt;TheServerSide.com&lt;/a&gt;：服务器编程交流平台是一个老牌的IT信息网站，关注服务器端编程的，以Java和.Net周边信息为主。&lt;a href="http://www.theserverside.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.thoughts-on-java.org/" rel="nofollow"&gt;Thoughts On Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vanillajava.blogspot.ch/" rel="nofollow"&gt;Vanilla Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vladmihalcea.com/" rel="nofollow"&gt;Vlad Mihalcea on Hibernate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.voxxed.com/" rel="nofollow"&gt;Voxxed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hao.jobbole.com/onjava/" rel="nofollow"&gt;OnJava&lt;/a&gt;：O'Reilly Java包含最新的Java技术资讯，优质代码，完全的实例和详解。&lt;a href="http://www.onjava.com/" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jobbole</author><guid isPermaLink="false">https://github.com/jobbole/awesome-java-cn</guid><pubDate>Tue, 24 Dec 2019 00:04:00 GMT</pubDate></item><item><title>gpakosz/.tmux #5 in Unknown languages, Today</title><link>https://github.com/gpakosz/.tmux</link><description>&lt;p&gt;&lt;i&gt;🇫🇷 Oh My Tmux! Pretty &amp; versatile tmux configuration made with ❤️ (imho the best tmux configuration that just works)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-tmux" class="anchor" aria-hidden="true" href="#tmux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.tmux&lt;/h1&gt;
&lt;p&gt;Self-contained, pretty and versatile &lt;code&gt;.tmux.conf&lt;/code&gt; configuration file.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/553208/19740585/85596a5a-9bbf-11e6-8aa1-7c8d9829c008.gif"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/553208/19740585/85596a5a-9bbf-11e6-8aa1-7c8d9829c008.gif" alt="Screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tmux &lt;strong&gt;&lt;code&gt;&amp;gt;= 2.1&lt;/code&gt;&lt;/strong&gt; (soon &lt;code&gt;&amp;gt;= 2.4&lt;/code&gt;) running inside Linux, Mac, OpenBSD, Cygwin
or WSL&lt;/li&gt;
&lt;li&gt;awk, perl and sed&lt;/li&gt;
&lt;li&gt;outside of tmux, &lt;code&gt;$TERM&lt;/code&gt; must be set to &lt;code&gt;xterm-256color&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To install, run the following from your terminal: (you may want to backup your
existing &lt;code&gt;~/.tmux.conf&lt;/code&gt; first)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd
$ git clone https://github.com/gpakosz/.tmux.git
$ ln -s -f .tmux/.tmux.conf
$ cp .tmux/.tmux.conf.local .
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then proceed to &lt;a href="#enabling-the-powerline-look"&gt;customize&lt;/a&gt; your &lt;code&gt;~/.tmux.conf.local&lt;/code&gt; copy.&lt;/p&gt;
&lt;p&gt;If you're a Vim user, setting the &lt;code&gt;$EDITOR&lt;/code&gt; environment variable to &lt;code&gt;vim&lt;/code&gt; will
enable and further customize the vi-style key bindings (see tmux manual).&lt;/p&gt;
&lt;p&gt;If you're new to tmux, I recommend you read &lt;a href="https://pragprog.com/book/bhtmux2/tmux-2" rel="nofollow"&gt;tmux 2: Productive Mouse-Free
Development&lt;/a&gt; by &lt;a href="https://twitter.com/bphogan" rel="nofollow"&gt;@bphogan&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;I'm running tmux &lt;code&gt;HEAD&lt;/code&gt; and things don't work properly. What should I do?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Please open an issue describing what doesn't work with upcoming tmux. I'll do
my best to address it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Status line is broken and/or gets duplicated at the bottom of the screen.
What gives?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This particularly happens on Linux when the distribution provides a version
of glib that received Unicode 9.0 upgrades (glib &lt;code&gt;&amp;gt;= 2.50.1&lt;/code&gt;) while providing
a version of glibc that didn't (glibc &lt;code&gt;&amp;lt; 2.26&lt;/code&gt;). You may also configure
&lt;code&gt;LC_CTYPE&lt;/code&gt; to use an &lt;code&gt;UTF-8&lt;/code&gt; locale. Typically VTE based terminal emulators
rely on glib's &lt;code&gt;g_unichar_iswide()&lt;/code&gt; function while tmux relies on glibc's
&lt;code&gt;wcwidth()&lt;/code&gt; function. When these two functions disagree, display gets messed
up.&lt;/p&gt;
&lt;p&gt;This can also happen on macOS when using iTerm2 and "Use Unicode version 9
character widths" is enabled in &lt;code&gt;Preferences... &amp;gt; Profiles &amp;gt; Text&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For that reason, the default &lt;code&gt;~/.tmux.conf.local&lt;/code&gt; file stopped using Unicode
characters for which width changed in between Unicode 8.0 and 9.0 standards,
as well as Emojis.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;I installed Powerline and/or (patched) fonts but can't see Powerline
symbols.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First, you don't need to install Powerline. You only need fonts patched with
Powerline symbols or the standalone &lt;code&gt;PowerlineSymbols.otf&lt;/code&gt; font. Then make
sure your &lt;code&gt;~/.tmux.conf.local&lt;/code&gt; copy uses the right code points for
&lt;code&gt;tmux_conf_theme_left_separator_XXX&lt;/code&gt; values.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;I'm using Bash On Windows (WSL), colors and Powerline look are broken.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There is currently a &lt;a href="https://github.com/Microsoft/BashOnWindows/issues/1681"&gt;bug&lt;/a&gt; in the new console powering Bash On Windows
preventing text attributes (bold, underscore, ...) to combine properly with
colors. The workaround is to search your &lt;code&gt;~/.tmux.conf.local&lt;/code&gt; copy and
replace attributes with &lt;code&gt;'none'&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Also, until Window's console replaces its GDI based render with a DirectWrite
one, Powerline symbols will be broken.&lt;/p&gt;
&lt;p&gt;The alternative is to use the &lt;a href="https://github.com/mintty/wsltty"&gt;Mintty terminal for WSL&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C-a&lt;/code&gt; acts as secondary prefix, while keeping default &lt;code&gt;C-b&lt;/code&gt; prefix&lt;/li&gt;
&lt;li&gt;visual theme inspired by &lt;a href="https://github.com/Lokaltog/powerline"&gt;Powerline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pempek.net/articles/2013/04/14/maximizing-tmux-pane-new-window/" rel="nofollow"&gt;maximize any pane to a new window with &lt;code&gt;&amp;lt;prefix&amp;gt; +&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SSH/Mosh aware username and hostname status line information&lt;/li&gt;
&lt;li&gt;mouse mode toggle with &lt;code&gt;&amp;lt;prefix&amp;gt; m&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;automatic usage of &lt;a href="https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard"&gt;&lt;code&gt;reattach-to-user-namespace&lt;/code&gt;&lt;/a&gt;
if available&lt;/li&gt;
&lt;li&gt;laptop battery status line information&lt;/li&gt;
&lt;li&gt;uptime status line information&lt;/li&gt;
&lt;li&gt;optional highlight of focused pane (tmux &lt;code&gt;&amp;gt;= 2.1&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;configurable new windows and panes behavior (optionally retain current path)&lt;/li&gt;
&lt;li&gt;SSH/Mosh aware split pane (reconnects to remote server)&lt;/li&gt;
&lt;li&gt;copy to OS clipboard (needs &lt;a href="https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard"&gt;&lt;code&gt;reattach-to-user-namespace&lt;/code&gt;&lt;/a&gt;
on macOS, &lt;code&gt;xsel&lt;/code&gt; or &lt;code&gt;xclip&lt;/code&gt; on Linux)&lt;/li&gt;
&lt;li&gt;support for 4-digit hexadecimal Unicode characters (requires &lt;code&gt;perl&lt;/code&gt; or Bash &amp;gt;= 4.1.2)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://facebook.github.io/PathPicker/" rel="nofollow"&gt;Facebook PathPicker&lt;/a&gt; integration if available&lt;/li&gt;
&lt;li&gt;&lt;a href="https://packages.debian.org/stable/misc/urlview" rel="nofollow"&gt;Urlview&lt;/a&gt; integration if available&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The "maximize any pane to a new window with &lt;code&gt;&amp;lt;prefix&amp;gt; +&lt;/code&gt;" feature is different
from builtin &lt;code&gt;resize-pane -Z&lt;/code&gt; as it allows you to further split a maximized
pane. It's also more flexible by allowing you to maximize a pane to a new
window, then change window, then go back and the pane is still in maximized
state in its own window. You can then minimize a pane by using &lt;code&gt;&amp;lt;prefix&amp;gt; +&lt;/code&gt;
either from the source window or the maximized window.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/553208/9890858/ee3c0ca6-5c02-11e5-890e-05d825a46c92.gif"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/553208/9890858/ee3c0ca6-5c02-11e5-890e-05d825a46c92.gif" alt="Maximize pane" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Mouse mode allows you to set the active window, set the active pane, resize
panes and automatically switches to copy-mode to select text.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/553208/9890797/8dffe542-5c02-11e5-9c06-a25b452e6fcc.gif"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/553208/9890797/8dffe542-5c02-11e5-9c06-a25b452e6fcc.gif" alt="Mouse mode" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bindings" class="anchor" aria-hidden="true" href="#bindings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bindings&lt;/h2&gt;
&lt;p&gt;tmux may be controlled from an attached client by using a key combination of a
prefix key, followed by a command key. This configuration uses &lt;code&gt;C-a&lt;/code&gt; as a
secondary prefix while keeping &lt;code&gt;C-b&lt;/code&gt; as the default prefix. In the following
list of key bindings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; means you have to either hit &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt; or &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;b&lt;/kbd&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;prefix&amp;gt; c&lt;/code&gt; means you have to hit &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt; or &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;b&lt;/kbd&gt; followed by &lt;kbd&gt;c&lt;/kbd&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;prefix&amp;gt; C-c&lt;/code&gt; means you have to hit &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt; or &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;b&lt;/kbd&gt; followed by &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;c&lt;/kbd&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This configuration uses the following bindings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prefix&amp;gt; e&lt;/code&gt; opens &lt;code&gt;~/.tmux.conf.local&lt;/code&gt; with the editor defined by the
&lt;code&gt;$EDITOR&lt;/code&gt; environment variable (defaults to &lt;code&gt;vim&lt;/code&gt; when empty)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prefix&amp;gt; r&lt;/code&gt; reloads the configuration&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;C-l&lt;/code&gt; clears both the screen and the tmux history&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prefix&amp;gt; C-c&lt;/code&gt; creates a new session&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prefix&amp;gt; C-f&lt;/code&gt; lets you switch to another session by name&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prefix&amp;gt; C-h&lt;/code&gt; and &lt;code&gt;&amp;lt;prefix&amp;gt; C-l&lt;/code&gt; let you navigate windows (default
&lt;code&gt;&amp;lt;prefix&amp;gt; n&lt;/code&gt; and &lt;code&gt;&amp;lt;prefix&amp;gt; p&lt;/code&gt; are unbound)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prefix&amp;gt; Tab&lt;/code&gt; brings you to the last active window&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prefix&amp;gt; -&lt;/code&gt; splits the current pane vertically&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prefix&amp;gt; _&lt;/code&gt; splits the current pane horizontally&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prefix&amp;gt; h&lt;/code&gt;, &lt;code&gt;&amp;lt;prefix&amp;gt; j&lt;/code&gt;, &lt;code&gt;&amp;lt;prefix&amp;gt; k&lt;/code&gt; and &lt;code&gt;&amp;lt;prefix&amp;gt; l&lt;/code&gt; let you navigate
panes ala Vim&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prefix&amp;gt; H&lt;/code&gt;, &lt;code&gt;&amp;lt;prefix&amp;gt; J&lt;/code&gt;, &lt;code&gt;&amp;lt;prefix&amp;gt; K&lt;/code&gt;, &lt;code&gt;&amp;lt;prefix&amp;gt; L&lt;/code&gt; let you resize panes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prefix&amp;gt; &amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;lt;prefix&amp;gt; &amp;gt;&lt;/code&gt; let you swap panes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prefix&amp;gt; +&lt;/code&gt; maximizes the current pane to a new window&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prefix&amp;gt; m&lt;/code&gt; toggles mouse mode on or off&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prefix&amp;gt; U&lt;/code&gt; launches Urlview (if available)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prefix&amp;gt; F&lt;/code&gt; launches Facebook PathPicker (if available)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prefix&amp;gt; Enter&lt;/code&gt; enters copy-mode&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prefix&amp;gt; b&lt;/code&gt; lists the paste-buffers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prefix&amp;gt; p&lt;/code&gt; pastes from the top paste-buffer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prefix&amp;gt; P&lt;/code&gt; lets you choose the paste-buffer to paste from&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally, &lt;code&gt;copy-mode-vi&lt;/code&gt; matches &lt;a href="https://github.com/gpakosz/.vim.git"&gt;my own Vim configuration&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bindings for &lt;code&gt;copy-mode-vi&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;v&lt;/code&gt; begins selection / visual mode&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-v&lt;/code&gt; toggles between blockwise visual mode and visual mode&lt;/li&gt;
&lt;li&gt;&lt;code&gt;H&lt;/code&gt; jumps to the start of line&lt;/li&gt;
&lt;li&gt;&lt;code&gt;L&lt;/code&gt; jumps to the end of line&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y&lt;/code&gt; copies the selection to the top paste-buffer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Escape&lt;/code&gt; cancels the current operation&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;While this configuration tries to bring sane default settings, you may want to
customize it further to your needs. Instead of altering the &lt;code&gt;~/.tmux.conf&lt;/code&gt; file
and diverging from upstream, the proper way is to edit the &lt;code&gt;~/.tmux.conf.local&lt;/code&gt;
file.&lt;/p&gt;
&lt;p&gt;Please refer to the default &lt;code&gt;~/.tmux.conf.local&lt;/code&gt; file to know more about
variables you can adjust to alter different behaviors. Pressing &lt;code&gt;&amp;lt;prefix&amp;gt; e&lt;/code&gt;
will open &lt;code&gt;~/.tmux.conf.local&lt;/code&gt; with the editor defined by the &lt;code&gt;$EDITOR&lt;/code&gt;
environment variable (defaults to &lt;code&gt;vim&lt;/code&gt; when empty).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-enabling-the-powerline-look" class="anchor" aria-hidden="true" href="#enabling-the-powerline-look"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enabling the Powerline look&lt;/h3&gt;
&lt;p&gt;Powerline originated as a status-line plugin for Vim. Its popular eye-catching
look is based on the use of special symbols: &lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/553208/10687156/1b76dda6-796b-11e5-83a1-1634337c4571.png"&gt;&lt;img width="80" alt="Powerline Symbols" src="https://cloud.githubusercontent.com/assets/553208/10687156/1b76dda6-796b-11e5-83a1-1634337c4571.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To make use of these symbols, there are several options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;use a font that already bundles those: this is e.g. the case of the
&lt;a href="https://github.com/adobe-fonts/source-code-pro/releases/tag/2.030R-ro/1.050R-it"&gt;2.030R-ro/1.050R-it version&lt;/a&gt; of the Source Code Pro font&lt;/li&gt;
&lt;li&gt;use a &lt;a href="https://github.com/powerline/fonts"&gt;pre-patched font&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;use your preferred font along with the &lt;a href="https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf"&gt;Powerline font&lt;/a&gt; (that
only contains the Powerline symbols): &lt;a href="http://powerline.readthedocs.io/en/master/usage.html#usage-terminal-emulators" rel="nofollow"&gt;this highly depends on your operating
system and your terminal emulator&lt;/a&gt;, for instance here's a
screenshot of iTerm2 configured to use &lt;code&gt;PowerlineSymbols.otf&lt;/code&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/553208/62243890-8232f500-b3de-11e9-9b8c-51a5d38bdaa8.png"&gt;&lt;img src="https://user-images.githubusercontent.com/553208/62243890-8232f500-b3de-11e9-9b8c-51a5d38bdaa8.png" alt="iTerm2 + Powerline font" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please see the &lt;a href="http://powerline.readthedocs.org/en/latest/installation.html#fonts-installation" rel="nofollow"&gt;Powerline manual&lt;/a&gt; for further details.&lt;/p&gt;
&lt;p&gt;Then edit the &lt;code&gt;~/.tmux.conf.local&lt;/code&gt; file (&lt;code&gt;&amp;lt;prefix&amp;gt; e&lt;/code&gt;) and adjust the following
variables:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tmux_conf_theme_left_separator_main='\uE0B0'
tmux_conf_theme_left_separator_sub='\uE0B1'
tmux_conf_theme_right_separator_main='\uE0B2'
tmux_conf_theme_right_separator_sub='\uE0B3'
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-configuring-the-status-line" class="anchor" aria-hidden="true" href="#configuring-the-status-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring the status line&lt;/h3&gt;
&lt;p&gt;Contrary to the first iterations of this configuration, by now you have total
control on the content and order of &lt;code&gt;status-left&lt;/code&gt; and &lt;code&gt;status-right&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Edit the &lt;code&gt;~/.tmux.conf.local&lt;/code&gt; file (&lt;code&gt;&amp;lt;prefix&amp;gt; e&lt;/code&gt;) and adjust the
&lt;code&gt;tmux_conf_theme_status_left&lt;/code&gt; and &lt;code&gt;tmux_conf_theme_status_right&lt;/code&gt; variables to
your own preferences.&lt;/p&gt;
&lt;p&gt;This configuration supports the following builtin variables:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;#{battery_bar}&lt;/code&gt;: horizontal battery charge bar&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#{battery_percentage}&lt;/code&gt;: battery percentage&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#{battery_status}&lt;/code&gt;: is battery charging or discharging?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#{battery_vbar}&lt;/code&gt;: vertical battery charge bar&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#{circled_session_name}&lt;/code&gt;: circled session number, up to 20&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#{hostname}&lt;/code&gt;: SSH/Mosh aware hostname information&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#{hostname_ssh}&lt;/code&gt;: SSH/Mosh aware hostname information, blank when not
connected to a remote server through SSH/Mosh&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#{loadavg}&lt;/code&gt;: load average&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#{pairing}&lt;/code&gt;: is session attached to more than one client?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#{prefix}&lt;/code&gt;: is prefix being depressed?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#{root}&lt;/code&gt;: is current user root?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#{synchronized}&lt;/code&gt;: are the panes synchronized?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#{uptime_y}&lt;/code&gt;: uptime years&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#{uptime_d}&lt;/code&gt;: uptime days, modulo 365 when &lt;code&gt;#{uptime_y}&lt;/code&gt; is used&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#{uptime_h}&lt;/code&gt;: uptime hours&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#{uptime_m}&lt;/code&gt;: uptime minutes&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#{uptime_s}&lt;/code&gt;: uptime seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#{username}&lt;/code&gt;: SSH/Mosh aware username information&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#{username_ssh}&lt;/code&gt;: SSH aware username information, blank when not connected
to a remote server through SSH/Mosh&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Beside custom variables mentioned above, the &lt;code&gt;tmux_conf_theme_status_left&lt;/code&gt; and
&lt;code&gt;tmux_conf_theme_status_right&lt;/code&gt; variables support usual tmux syntax, e.g. using
&lt;code&gt;#()&lt;/code&gt; to call an external command that inserts weather information provided by
&lt;a href="https://github.com/chubin/wttr.in#one-line-output"&gt;wttr.in&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tmux_conf_theme_status_right='#{prefix}#{pairing}#{synchronized} #(curl wttr.in?format=3) , %R , %d %b | #{username}#{root} | #{hostname} '
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/553208/52175490-07797c00-27a5-11e9-9fb6-42eec4fe4188.png"&gt;&lt;img src="https://user-images.githubusercontent.com/553208/52175490-07797c00-27a5-11e9-9fb6-42eec4fe4188.png" alt="Weather information from wttr.in" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-accessing-the-macos-clipboard-from-within-tmux-sessions" class="anchor" aria-hidden="true" href="#accessing-the-macos-clipboard-from-within-tmux-sessions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Accessing the macOS clipboard from within tmux sessions&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard"&gt;Chris Johnsen created the &lt;code&gt;reattach-to-user-namespace&lt;/code&gt;
utility&lt;/a&gt; that makes &lt;code&gt;pbcopy&lt;/code&gt; and &lt;code&gt;pbpaste&lt;/code&gt; work
again within tmux.&lt;/p&gt;
&lt;p&gt;To install &lt;code&gt;reattach-to-user-namespace&lt;/code&gt;, use either &lt;a href="http://www.macports.org/" rel="nofollow"&gt;MacPorts&lt;/a&gt; or
&lt;a href="http://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ port install tmux-pasteboard
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ brew install reattach-to-user-namespace
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once installed, &lt;code&gt;reattach-to-usernamespace&lt;/code&gt; will be automatically detected.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-the-configuration-under-cygwin-within-mintty" class="anchor" aria-hidden="true" href="#using-the-configuration-under-cygwin-within-mintty"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the configuration under Cygwin within Mintty&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;I don't recommend running this configuration with Cygwin anymore. Forking
under Cygwin is extremely slow and this configuration issues a lot of
&lt;code&gt;run-shell&lt;/code&gt; commands under the hood. As such, you will experience high CPU
usage. As an alternative consider using &lt;a href="https://github.com/mintty/wsltty"&gt;Mintty terminal for WSL&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/553208/19741789/67a3f3d8-9bc2-11e6-9ecc-499fc0228ee6.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/553208/19741789/67a3f3d8-9bc2-11e6-9ecc-499fc0228ee6.png" alt="cygwin" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It is possible to use this configuration under Cygwin within Mintty, however
support for Unicode symbols and emojis lacks behind Mac and Linux.&lt;/p&gt;
&lt;p&gt;Particularly, Mintty's text rendering is implemented with GDI which has
limitations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;color emojis are only available through DirectWrite starting with Windows 8.1&lt;/li&gt;
&lt;li&gt;display of double width symbols, like the battery discharging symbol indicator
(U+1F50B) is buggy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get Unicode symbols displayed properly, you have to use &lt;a href="https://msdn.microsoft.com/en-us/goglobal/bb688134.aspx" rel="nofollow"&gt;font linking&lt;/a&gt;.
Open &lt;code&gt;regedit.exe&lt;/code&gt; then navigate to the registry key at
&lt;code&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink&lt;/code&gt;
and add a new entry for you preferred font to link it with the Segoe UI Symbol
font.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/553208/19741304/71a2f3ae-9bc0-11e6-96aa-4c09a812c313.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/553208/19741304/71a2f3ae-9bc0-11e6-96aa-4c09a812c313.png" alt="regedit" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>gpakosz</author><guid isPermaLink="false">https://github.com/gpakosz/.tmux</guid><pubDate>Tue, 24 Dec 2019 00:05:00 GMT</pubDate></item><item><title>getify/You-Dont-Know-JS #6 in Unknown languages, Today</title><link>https://github.com/getify/You-Dont-Know-JS</link><description>&lt;p&gt;&lt;i&gt;A book series on JavaScript. @YDKJS on twitter.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-you-dont-know-js-yet-book-series---2nd-edition" class="anchor" aria-hidden="true" href="#you-dont-know-js-yet-book-series---2nd-edition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;You Don't Know JS Yet (book series) - 2nd Edition&lt;/h1&gt;
&lt;p&gt;This is a series of books diving deep into the core mechanisms of the JavaScript language.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To read more about the motivations and perspective behind this book series, check out the &lt;a href="preface.md"&gt;Preface&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-premier-sponsor" class="anchor" aria-hidden="true" href="#premier-sponsor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Premier Sponsor&lt;/h2&gt;
&lt;p&gt;This edition of the &lt;strong&gt;YDKJS&lt;/strong&gt; book series is exclusively sponsored by &lt;a href="https://frontendmasters.com" rel="nofollow"&gt;Frontend Masters&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Frontend Masters is the gold standard for top-of-the-line expert training material in frontend-oriented software development. With over 150 courses on all things frontend, this should be your first and only stop for quality video training on HTML, CSS, JS, and related technologies.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I teach &lt;a href="https://frontendmasters.com/kyle-simpson" rel="nofollow"&gt;all my workshops&lt;/a&gt; exclusively through Frontend Masters. If you like this book content, please check out my video training courses.&lt;/p&gt;
&lt;p&gt;I want to extend a warm and deep thanks to Marc Grabanski and the entire Frontend Masters team, not only for their excellent work with the video training platform, but for their unwavering support of me and of the "You Don't Know JS" books!&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-titles" class="anchor" aria-hidden="true" href="#titles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Titles&lt;/h2&gt;
&lt;p&gt;I recommend reading the books in this order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="get-started/README.md"&gt;Get Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="scope-closures/README.md"&gt;Scope &amp;amp; Closures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="objects-classes/README.md"&gt;Objects &amp;amp; Classes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="types-grammar/README.md"&gt;Types &amp;amp; Grammar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="sync-async/README.md"&gt;Sync &amp;amp; Async&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="es-next-beyond/README.md"&gt;ES.Next &amp;amp; Beyond&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-publishing" class="anchor" aria-hidden="true" href="#publishing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Publishing&lt;/h2&gt;
&lt;p&gt;As always, you'll be able to read these books online here entirely for free.&lt;/p&gt;
&lt;p&gt;This edition of the books is being self-published through &lt;a href="https://geti.pub" rel="nofollow"&gt;GetiPub&lt;/a&gt; publishing. The published books will be made available for sale through normal book retail sources.&lt;/p&gt;
&lt;p&gt;If you'd like to contribute financially towards the effort (or any of my other OSS efforts) aside from purchasing the published books, please consider these options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/users/getify/sponsorship"&gt;Github Sponsorship&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.patreon.com/getify" rel="nofollow"&gt;Patreon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.paypal.me/getify" rel="nofollow"&gt;Paypal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h2&gt;
&lt;p&gt;Please feel free to contribute to the quality of this content by submitting PRs for improvements to code snippets, explanations, etc. While typo fixes are welcomed, they will likely be caught through normal editing/publishing processes, &lt;strong&gt;so please don't worry about them right now.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Any contributions you make to this effort &lt;strong&gt;are of course greatly appreciated&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;But &lt;strong&gt;PLEASE&lt;/strong&gt; read the &lt;a href="CONTRIBUTING.md"&gt;Contributions Guidelines&lt;/a&gt; carefully before submitting a PR.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license--copyright" class="anchor" aria-hidden="true" href="#license--copyright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License &amp;amp; Copyright&lt;/h2&gt;
&lt;p&gt;The materials herein are all © 2019-2020 Kyle Simpson.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" rel="nofollow"&gt;&lt;img alt="Creative Commons License" src="https://camo.githubusercontent.com/777429797f9180579ed59a4f95d148a0c213dfa8/68747470733a2f2f692e6372656174697665636f6d6d6f6e732e6f72672f6c2f62792d6e632d6e642f342e302f38387833312e706e67" data-canonical-src="https://i.creativecommons.org/l/by-nc-nd/4.0/88x31.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;This work is licensed under a &lt;a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" rel="nofollow"&gt;Creative Commons Attribution-NonCommercial-NoDerivs 4.0 Unported License&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>getify</author><guid isPermaLink="false">https://github.com/getify/You-Dont-Know-JS</guid><pubDate>Tue, 24 Dec 2019 00:06:00 GMT</pubDate></item><item><title>londonappbrewery/Flutter-Course-Resources #7 in Unknown languages, Today</title><link>https://github.com/londonappbrewery/Flutter-Course-Resources</link><description>&lt;p&gt;&lt;i&gt;Learn to Code While Building Apps - The Complete Flutter Development Bootcamp&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-flutter-course-resources" class="anchor" aria-hidden="true" href="#flutter-course-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flutter-Course-Resources&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-section-1-introduction-to-cross-platform-development-with-flutter-and-dart" class="anchor" aria-hidden="true" href="#section-1-introduction-to-cross-platform-development-with-flutter-and-dart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section 1: Introduction to Cross-Platform Development with Flutter and Dart&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?export=download&amp;amp;id=1itL9AXx7Z-RxFAjSLLhsTeTFZYrkfweR" rel="nofollow"&gt;Download the Course Syllabus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?export=download&amp;amp;id=1RfRLujREfLx1PSpw9bubNDsvRuknJ5ek" rel="nofollow"&gt;Cornell Note Taking System - App Brewery Template&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-section-2-setting-up-for-flutter-development" class="anchor" aria-hidden="true" href="#section-2-setting-up-for-flutter-development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section 2: Setting Up for Flutter Development&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://flutter.dev/docs/get-started/install" rel="nofollow"&gt;Getting Started: Installing Flutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/download/win" rel="nofollow"&gt;Git for Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/studio/" rel="nofollow"&gt;Install Android Studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flutter.dev/docs/get-started/install/macos#ios-setup" rel="nofollow"&gt;iOS Setup Instructions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-section-3-i-am-rich---how-to-create-flutter-apps-from-scratch" class="anchor" aria-hidden="true" href="#section-3-i-am-rich---how-to-create-flutter-apps-from-scratch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section 3: I Am Rich - How to Create Flutter Apps from Scratch&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://material.io/" rel="nofollow"&gt;Material Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/material/Scaffold-class.html" rel="nofollow"&gt;Scaffold Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/material/AppBar-class.html" rel="nofollow"&gt;AppBar Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://material.io/design/color/the-color-system.html" rel="nofollow"&gt;Material Design Colour System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/widgets/Image-class.html" rel="nofollow"&gt;Image Widget Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.draw.io/" rel="nofollow"&gt;Make Flowcharts with Draw.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dartlang.org/tools/pub/pubspec" rel="nofollow"&gt;Learn More About the Pubspec File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flutter.dev/docs/development/ui/assets-and-images" rel="nofollow"&gt;Adding Assets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://appicon.co/" rel="nofollow"&gt;Generating App Icons with AppIcon.co&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-section-4-running-your-app-on-a-physical-device" class="anchor" aria-hidden="true" href="#section-4-running-your-app-on-a-physical-device"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section 4: Running Your App on a Physical Device&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://flutter.dev/docs/get-started/install/macos#deploy-to-ios-devices" rel="nofollow"&gt;Flutter Documentation on Deploying to Physical iOS Devices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://brew.sh/" rel="nofollow"&gt;Homebrew for MacOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.londonappbrewery.com/troubleshooting-ios-device-testing-for-flutter-38c5da239e62" rel="nofollow"&gt;Troubleshooting: Physical iOS Device Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.londonappbrewery.com/troubleshooting-android-device-testing-on-windows-a2b5d779df08" rel="nofollow"&gt;Troubleshooting: Physical Android Device Testing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-section-5-i-am-poor---app-challenge" class="anchor" aria-hidden="true" href="#section-5-i-am-poor---app-challenge"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section 5: I Am Poor - App Challenge&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://icons8.com/" rel="nofollow"&gt;Icons8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.vecteezy.com/" rel="nofollow"&gt;Vecteezy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.canva.com/" rel="nofollow"&gt;Canva&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-section-6-micard---how-to-build-beautiful-uis-with-flutter-widgets" class="anchor" aria-hidden="true" href="#section-6-micard---how-to-build-beautiful-uis-with-flutter-widgets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section 6: MiCard - How to Build Beautiful UIs with Flutter Widgets&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/mi_card_flutter"&gt;MiCard Stub Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flutter.dev/docs/development/ui/widgets" rel="nofollow"&gt;Widgets Catalogue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/widgets/Container-class.html" rel="nofollow"&gt;Container Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/widgets/Column-class.html" rel="nofollow"&gt;Column Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/widgets/Row-class.html" rel="nofollow"&gt;Row Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/flutter-community/flutter-layout-cheat-sheet-5363348d037e" rel="nofollow"&gt;Tomek's Flutter Layout Cheat Sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fonts.google.com/" rel="nofollow"&gt;Download fancy fonts from fonts.google.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flutter.dev/docs/cookbook/design/package-fonts" rel="nofollow"&gt;How to add fonts to the pubspec.yaml file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/material/Icons-class.html" rel="nofollow"&gt;The Icons Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://material.io/tools/icons/?style=baseline" rel="nofollow"&gt;Material Design Icons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.materialpalette.com/icons" rel="nofollow"&gt;Icons on materialpalette.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/material/Card-class.html" rel="nofollow"&gt;Card Class Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/widgets/Padding-class.html" rel="nofollow"&gt;The Padding Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/material/ListTile-class.html" rel="nofollow"&gt;The ListTile Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/material/Divider-class.html" rel="nofollow"&gt;Flutter's Horizontal Rule - The Divider&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/MiCard-Completed"&gt;MiCard Completed Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-section-7-dicee---building-apps-with-state" class="anchor" aria-hidden="true" href="#section-7-dicee---building-apps-with-state"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section 7: Dicee - Building Apps with State&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/dicee-flutter"&gt;Dicee Stub Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/widgets/Expanded-class.html" rel="nofollow"&gt;Expanded Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/widgets/Image-class.html" rel="nofollow"&gt;Image Widget Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/material/FlatButton-class.html" rel="nofollow"&gt;FlatButton Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dartpad.dartlang.org/" rel="nofollow"&gt;Run code snippets on DartPad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://api.dartlang.org/stable/2.2.0/dart-math/dart-math-library.html" rel="nofollow"&gt;Dart Math Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://api.dartlang.org/stable/2.2.0/dart-math/Random-class.html" rel="nofollow"&gt;Random Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/Dicee-Flutter-Completed"&gt;Dicee Completed Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-section-8-boss-level-challenge-1---magic-8-ball" class="anchor" aria-hidden="true" href="#section-8-boss-level-challenge-1---magic-8-ball"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section 8: Boss Level Challenge 1 - Magic 8 Ball&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/magic-8-ball-flutter"&gt;Magic 8 Ball Stub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-section-9-xylophone---using-flutter-and-dart-packages-to-speed-up-development" class="anchor" aria-hidden="true" href="#section-9-xylophone---using-flutter-and-dart-packages-to-speed-up-development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section 9: Xylophone - Using Flutter and Dart Packages to Speed Up Development&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/xylophone-flutter"&gt;XyloPhone Stub Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pub.dartlang.org/flutter" rel="nofollow"&gt;Flutter Packages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flutter.dev/docs/development/packages-and-plugins/using-packages" rel="nofollow"&gt;Guide to Using Flutter Packages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pub.dartlang.org/packages/audioplayers" rel="nofollow"&gt;Luan Nico's Audioplayers Package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/luanpotter/audioplayers/blob/master/doc/audio_cache.md"&gt;AudioCache Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dartpad.dartlang.org/4bf7549c820d1adb4be8673e92820e43" rel="nofollow"&gt;DartPad Functions Exercise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/Xylophone-Flutter-Completed"&gt;Xylophone Completed Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-section-10-quizzler---modularising--organising-flutter-code" class="anchor" aria-hidden="true" href="#section-10-quizzler---modularising--organising-flutter-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section 10: Quizzler - Modularising &amp;amp; Organising Flutter Code&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/quizzler-flutter"&gt;Quizzler Stub Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/angelabauer/f9db1b64cf51623d42b1ac1722bd016c"&gt;List Gist for DartPad List Practice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dartlang.org/guides/libraries/library-tour#collections" rel="nofollow"&gt;Dart List Language Tour&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pub.dartlang.org/packages/rflutter_alert" rel="nofollow"&gt;RFlutter Alert Package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dartlang.org/guides/language/language-tour#constructors" rel="nofollow"&gt;Dart Constructors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/quizzler-flutter-challenge-starting"&gt;Quizzler Starting File for Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/quizzler-flutter-challenge-final"&gt;Quizzler Solution &amp;amp; Completed Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-section-11-boss-level-challenge-2---destini" class="anchor" aria-hidden="true" href="#section-11-boss-level-challenge-2---destini"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section 11: Boss Level Challenge 2 - Destini&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/destini-challenge-starting"&gt;Destini Stub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/destini-challenge-completed/"&gt;Destini Solution &amp;amp; Completed Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-section-12-bmi-calculator---building-flutter-uis-for-intermediates" class="anchor" aria-hidden="true" href="#section-12-bmi-calculator---building-flutter-uis-for-intermediates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section 12: BMI Calculator - Building Flutter UIs for Intermediates&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/bmi-calculator-flutter"&gt;BMI Stub Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dribbble.com/" rel="nofollow"&gt;Dribbble: Find Designers and Design inspiration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dribbble.com/shots/4585382-Simple-BMI-Calculator" rel="nofollow"&gt;Ruben Vaalt's beautiful BMI Calculator Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flutter.dev/docs/cookbook/design/themes" rel="nofollow"&gt;Using Themes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flutter.dev/docs/cookbook" rel="nofollow"&gt;The Flutter Cookbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://api.flutter.dev//flutter/material/ThemeData-class.html" rel="nofollow"&gt;ThemeData Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.colorzilla.com/" rel="nofollow"&gt;Find Color HEX codes easily with the Colorzilla plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/dart-ui/Color-class.html" rel="nofollow"&gt;The Color Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/22239803/how-does-hexadecimal-color-work" rel="nofollow"&gt;How do HEX codes for with colours?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/foundation/Key-class.html" rel="nofollow"&gt;The Key Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=kn0EOS-ZiIc" rel="nofollow"&gt;When to Use Keys - Flutter Widgets 101 Ep. 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dartlang.org/guides/language/language-tour#final-and-const" rel="nofollow"&gt;Dart Language Tour: Final and Const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pub.dartlang.org/packages/font_awesome_flutter" rel="nofollow"&gt;Font Awesome Flutter Package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/widgets/GestureDetector-class.html" rel="nofollow"&gt;The GestureDetector Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/material/Slider-class.html" rel="nofollow"&gt;Slider Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/material/FloatingActionButton-class.html" rel="nofollow"&gt;FloatingActionButton Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/painting/ShapeBorder-class.html" rel="nofollow"&gt;ShapeBorder Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/material/RawMaterialButton-class.html" rel="nofollow"&gt;RawMaterialButton Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flutter.dev/docs/cookbook/navigation/navigation-basics" rel="nofollow"&gt;Navigating between Screens on Flutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/Navigation-Flutter-Demo"&gt;LAB Navigation Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flutter.dev/docs/cookbook/navigation/named-routes" rel="nofollow"&gt;Navigate with Named Routes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Body_mass_index" rel="nofollow"&gt;Definition of the Body Mass Index (BMI)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/BMI-Calculator-Completed"&gt;BMI Completed Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-section-13-clima---powering-your-flutter-app-with-live-weather-web-data" class="anchor" aria-hidden="true" href="#section-13-clima---powering-your-flutter-app-with-live-weather-web-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section 13: Clima - Powering Your Flutter App with Live Weather Web Data&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/Clima-Flutter"&gt;Clima Stub Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pub.dartlang.org/packages/geolocator" rel="nofollow"&gt;Get the Location using the Geolocator Package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flutter.dev/docs/development/packages-and-plugins/androidx-compatibility" rel="nofollow"&gt;Android X Compatilibity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/angelabauer/c19c42b7795a185d2113f3b47263d2c0"&gt;Starter Code Snippet for Async Await Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/Navigation-Flutter-Demo"&gt;Illustrating Lifecycles with the LAB Navigation Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/Clima-Flutter-Location-Refactor-Challenge"&gt;Location Refactoring Challenge Instructions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openweathermap.org/api" rel="nofollow"&gt;OpenWeatherMap APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flutter.dev/docs/cookbook/networking/fetch-data" rel="nofollow"&gt;Fetching Data from the Internet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pub.dartlang.org/packages/http" rel="nofollow"&gt;The Dart http package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openweathermap.org/current" rel="nofollow"&gt;OpenWeatherMap Current Weather Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pub.dartlang.org/documentation/http/latest/" rel="nofollow"&gt;HTTP Package API Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pub.dartlang.org/documentation/http/latest/http/Response-class.html" rel="nofollow"&gt;HTTP Response Class Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.restapitutorial.com/httpstatuscodes.html" rel="nofollow"&gt;List of HTTP Status Codes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/json-viewer-awesome/iemadiahhbebdklepanmkjenfdebfpfe?hl=en" rel="nofollow"&gt;Chrome Plugin for Formatting and Viewing JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jsonmate.com/" rel="nofollow"&gt;JSON Mate: Formatting and Viewing JSON without a plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pub.dartlang.org/packages/flutter_spinkit" rel="nofollow"&gt;Loading Indicators from the Flutter Spinkit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/widgets/State-class.html" rel="nofollow"&gt;The State Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openweathermap.org/weather-conditions" rel="nofollow"&gt;OpenWeatherMap Weather Conditions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flutter.dev/docs/cookbook/forms/text-input" rel="nofollow"&gt;Create and Style a TextField&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/material/TextField-class.html" rel="nofollow"&gt;The TextField Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/Clima-Flutter-Completed"&gt;Clima Completed Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-section-14-boss-level-challenge-3---bitcoin-ticker-aka-am-i-rich" class="anchor" aria-hidden="true" href="#section-14-boss-level-challenge-3---bitcoin-ticker-aka-am-i-rich"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section 14: Boss Level Challenge 3 - Bitcoin Ticker (a.k.a. Am I Rich?)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/bitcoin-ticker-flutter"&gt;Bitcoin Ticker Stub Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/material/DropdownButton-class.html" rel="nofollow"&gt;Flutter DropdownButton&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://material.io/design/components/menus.html#dropdown-menu" rel="nofollow"&gt;Dropdown Menu Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.99-bottles-of-beer.net/" rel="nofollow"&gt;99 Bottles of Beer Programming Language Collection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dartpad.dartlang.org/88fd2dd04c921892515bcd0567ef1636" rel="nofollow"&gt;DartPad For in Loop Mini Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flutter.dev/docs/development/ui/widgets/cupertino" rel="nofollow"&gt;Cupertino (iOS) Style Widgets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/cupertino/CupertinoPicker-class.html" rel="nofollow"&gt;CupertinoPicker Class Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apiv2.bitcoinaverage.com/#ticker-data-per-symbol" rel="nofollow"&gt;Bitcoin Average API Docs on Ticker Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/bitcoin-flutter-challenge-start"&gt;Bronze Challenge Start Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/bitcoin-flutter-silver-start"&gt;Silver Challenge Starter Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/bitcoin-flutter-gold-start"&gt;Gold Challenge Starter Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/bitcoin-flutter-final"&gt;Bitcoin Completed Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-section-15-flash-chat---flutter-x-firebase-cloud-firestore" class="anchor" aria-hidden="true" href="#section-15-flash-chat---flutter-x-firebase-cloud-firestore"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section 15: Flash Chat - Flutter x Firebase Cloud Firestore&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/flash-chat-flutter"&gt;Flash Chat Stub Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dartlang.org/guides/language/language-tour#keywords" rel="nofollow"&gt;Dart Language Keywords&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flutter.dev/docs/development/ui/animations/hero-animations" rel="nofollow"&gt;Hero Animations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/animation/Curves-class.html" rel="nofollow"&gt;Curves Class Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/animation/CurvedAnimation-class.html" rel="nofollow"&gt;CurvedAnimation Class Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/animation/Tween-class.html" rel="nofollow"&gt;Tween Animation Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dartlang.org/guides/language/language-tour#adding-features-to-a-class-mixins" rel="nofollow"&gt;Dart Language Tour: Mixins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pub.dartlang.org/packages/flutter_sequence_animation" rel="nofollow"&gt;Pre-packaged Animations: Flutter Sequence Animation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pub.dartlang.org/packages/rubber" rel="nofollow"&gt;Pre-packaged Animations: Rubber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pub.dartlang.org/packages/sprung" rel="nofollow"&gt;Pre-packaged Animations: Sprung&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pub.dartlang.org/packages/animated_text_kit" rel="nofollow"&gt;Pre-packaged Animations: Animated Text Kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/Flash-Chat-Flutter-Refactor-Challenge"&gt;Refactoring Challenge Instructions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://firebase.google.com/" rel="nofollow"&gt;Create your Firebase Account Here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pub.dartlang.org/packages/firebase_core" rel="nofollow"&gt;Firebase Core Package for Flutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pub.dartlang.org/packages/firebase_auth" rel="nofollow"&gt;Firebase Auth Package for Flutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pub.dartlang.org/packages/cloud_firestore" rel="nofollow"&gt;Cloud Firestore Package for Flutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.londonappbrewery.com/troubleshooting-firebase-x-flutter-a974b2645689" rel="nofollow"&gt;Troubleshooting: Firebase &amp;amp; Flutter: Common Errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pub.dartlang.org/packages/modal_progress_hud" rel="nofollow"&gt;Showing a Spinner: The Modal Progress HUD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://firebase.google.com/docs/" rel="nofollow"&gt;Firebase Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vimeo.com/47912950" rel="nofollow"&gt;Kitsune-kun visualising Dart Streams and Nagashi Sōmen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/widgets/StreamBuilder-class.html" rel="nofollow"&gt;StreamBuilder Class Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/widgets/AsyncSnapshot-class.html" rel="nofollow"&gt;AsyncSnapshot Class Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.flutter.io/flutter/widgets/ListView-class.html" rel="nofollow"&gt;ListView Class Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://firebase.google.com/docs/firestore/security/get-started" rel="nofollow"&gt;Guide to the Firestore Security Rules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/Flash-Chat-Flutter-Complete"&gt;Flash Chat Completed Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-section-16-flutter-state-management" class="anchor" aria-hidden="true" href="#section-16-flutter-state-management"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section 16: Flutter State Management&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://drive.google.com/uc?export=download&amp;amp;id=1Kz6y_DZA6slg-56kktB4Svkk1XNY8ACX" rel="nofollow"&gt;Todoey Design Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://api.flutter.dev/flutter/material/BottomSheet-class.html" rel="nofollow"&gt;Flutter BottomSheet Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://api.flutter.dev/flutter/material/showModalBottomSheet.html" rel="nofollow"&gt;showModalBottomSheet() function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://api.flutter.dev/flutter/widgets/WidgetBuilder.html" rel="nofollow"&gt;WidgetBuilder function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://api.flutter.dev/flutter/widgets/ListView-class.html" rel="nofollow"&gt;The ListView Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/d_m5csmrf7I" rel="nofollow"&gt;Flutter State Management at Google I/O 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pub.dev/packages/provider" rel="nofollow"&gt;The Provider Package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html" rel="nofollow"&gt;The InheritedWidget Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/londonappbrewery/todoey-flutter"&gt;Todoey Completed Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>londonappbrewery</author><guid isPermaLink="false">https://github.com/londonappbrewery/Flutter-Course-Resources</guid><pubDate>Tue, 24 Dec 2019 00:07:00 GMT</pubDate></item><item><title>github/gitignore #8 in Unknown languages, Today</title><link>https://github.com/github/gitignore</link><description>&lt;p&gt;&lt;i&gt;A collection of useful .gitignore templates&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-a-collection-of-gitignore-templates" class="anchor" aria-hidden="true" href="#a-collection-of-gitignore-templates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A collection of &lt;code&gt;.gitignore&lt;/code&gt; templates&lt;/h1&gt;
&lt;p&gt;This is GitHub’s collection of &lt;a href="http://git-scm.com/docs/gitignore" rel="nofollow"&gt;&lt;code&gt;.gitignore&lt;/code&gt;&lt;/a&gt; file templates.
We use this list to populate the &lt;code&gt;.gitignore&lt;/code&gt; template choosers available
in the GitHub.com interface when creating new repositories and files.&lt;/p&gt;
&lt;p&gt;For more information about how &lt;code&gt;.gitignore&lt;/code&gt; files work, and how to use them,
the following resources are a great place to start:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://git-scm.com/book/en/Git-Basics-Recording-Changes-to-the-Repository#_ignoring" rel="nofollow"&gt;Ignoring Files chapter&lt;/a&gt; of the &lt;a href="http://git-scm.com/book" rel="nofollow"&gt;Pro Git&lt;/a&gt; book.&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://help.github.com/articles/ignoring-files"&gt;Ignoring Files article&lt;/a&gt; on the GitHub Help site.&lt;/li&gt;
&lt;li&gt;The &lt;a href="http://git-scm.com/docs/gitignore" rel="nofollow"&gt;gitignore(5)&lt;/a&gt; manual page.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-folder-structure" class="anchor" aria-hidden="true" href="#folder-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Folder structure&lt;/h2&gt;
&lt;p&gt;We support a collection of templates, organized in this way:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the root folder contains templates in common use, to help people get started
with popular programming languages and technologies. These define a meaningful
set of rules to help get started, and ensure you are not committing
unimportant files into your repository&lt;/li&gt;
&lt;li&gt;&lt;a href="./Global"&gt;&lt;code&gt;Global&lt;/code&gt;&lt;/a&gt; contains templates for various editors, tools and
operating systems that can be used in different situations. It is recommended
that you either &lt;a href="https://help.github.com/articles/ignoring-files/#create-a-global-gitignore"&gt;add these to your global template&lt;/a&gt;
or merge these rules into your project-specific templates if you want to use
them permanently.&lt;/li&gt;
&lt;li&gt;&lt;a href="./community"&gt;&lt;code&gt;community&lt;/code&gt;&lt;/a&gt; contains specialized templates for other popular
languages, tools and project, which don't currently belong in the mainstream
templates. These should be added to your project-specific templates when you
decide to adopt the framework or tool.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-what-makes-a-good-template" class="anchor" aria-hidden="true" href="#what-makes-a-good-template"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What makes a good template?&lt;/h2&gt;
&lt;p&gt;A template should contain a set of rules to help Git repositories work with a
specific programming language, framework, tool or environment.&lt;/p&gt;
&lt;p&gt;If it's not possible to curate a small set of useful rules for this situation,
then the template is not a good fit for this collection.&lt;/p&gt;
&lt;p&gt;If a template is mostly a list of files installed by a particular version of
some software (e.g. a PHP framework), it could live under the &lt;code&gt;community&lt;/code&gt;
directory. See &lt;a href="#versioned-templates"&gt;versioned templates&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;If you have a small set of rules, or want to support a technology that is not
widely in use, and still believe this will be helpful to others, please read the
section about &lt;a href="#specialized-templates"&gt;specialized templates&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;If you believe your template is important and should be highly visible, please
add details about the impact of the technology when you open a pull request. We
may not accept it immediately, but we can promote it to the root at a later date
based on interest.&lt;/p&gt;
&lt;p&gt;Please also understand that we can’t list every tool that ever existed.
Our aim is to curate a collection of the &lt;em&gt;most common and helpful&lt;/em&gt; templates,
not to make sure we cover every project possible. If we choose not to
include your language, tool, or project, it’s not because it’s not awesome.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-guidelines" class="anchor" aria-hidden="true" href="#contributing-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing guidelines&lt;/h2&gt;
&lt;p&gt;We’d love for you to help us improve this project. To help us keep this collection
high quality, we request that contributions adhere to the following guidelines.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Provide a link to the application or project’s homepage&lt;/strong&gt;. Unless it’s
extremely popular, there’s a chance the maintainers don’t know about or use
the language, framework, editor, app, or project your change applies to.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Provide links to documentation&lt;/strong&gt; supporting the change you’re making.
Current, canonical documentation mentioning the files being ignored is best.
If documentation isn’t available to support your change, do the best you can
to explain what the files being ignored are for.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Explain why you’re making a change&lt;/strong&gt;. Even if it seems self-evident, please
take a sentence or two to tell us why your change or addition should happen.
It’s especially helpful to articulate why this change applies to &lt;em&gt;everyone&lt;/em&gt;
who works with the applicable technology, rather than just you or your team.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Please consider the scope of your change&lt;/strong&gt;. If your change is specific to a
certain language or framework, then make sure the change is made to the
template for that language or framework, rather than to the template for an
editor, tool, or operating system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Please only modify &lt;em&gt;one template&lt;/em&gt; per pull request&lt;/strong&gt;. This helps keep pull
requests and feedback focused on a specific project or technology.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In general, the more you can do to help us understand the change you’re making,
the more likely we’ll be to accept your contribution quickly.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-versioned-templates" class="anchor" aria-hidden="true" href="#versioned-templates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Versioned templates&lt;/h2&gt;
&lt;p&gt;Some templates can change greatly between versions, and if you wish to contribute
to this repository we need to follow this specific flow:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the template at the root should be the current supported version&lt;/li&gt;
&lt;li&gt;the template at the root should not have a version in the filename (i.e.
"evergreen")&lt;/li&gt;
&lt;li&gt;previous versions of templates should live under &lt;code&gt;community/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;previous versions of the template should embed the version in the filename,
for readability&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This helps ensure users get the latest version (because they'll use whatever is
at the root) but helps maintainers support older versions still in the wild.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-specialized-templates" class="anchor" aria-hidden="true" href="#specialized-templates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Specialized templates&lt;/h2&gt;
&lt;p&gt;If you have a template that you would like to contribute, but it isn't quite
mainstream, please consider adding this to the &lt;code&gt;community&lt;/code&gt; directory under a
folder that best suits where it belongs.&lt;/p&gt;
&lt;p&gt;The rules in your specialized template should be specific to the framework or
tool, and any additional templates should be mentioned in a comment in the
header of the template&lt;/p&gt;
&lt;p&gt;For example, this template might live at &lt;code&gt;community/DotNet/InforCRM.gitignore&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# gitignore template for InforCRM (formerly SalesLogix)
# website: https://www.infor.com/product-summary/cx/infor-crm/
#
# Recommended: VisualStudio.gitignore

# Ignore model files that are auto-generated
ModelIndex.xml
ExportedFiles.xml

# Ignore deployment files
[Mm]odel/[Dd]eployment

# Force include portal SupportFiles
!Model/Portal/*/SupportFiles/[Bb]in/
!Model/Portal/PortalTemplates/*/SupportFiles/[Bb]in
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-workflow" class="anchor" aria-hidden="true" href="#contributing-workflow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing workflow&lt;/h2&gt;
&lt;p&gt;Here’s how we suggest you go about proposing a change to this project:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/fork-a-repo/"&gt;Fork this project&lt;/a&gt; to your account.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/creating-and-deleting-branches-within-your-repository"&gt;Create a branch&lt;/a&gt; for the change you intend to make.&lt;/li&gt;
&lt;li&gt;Make your changes to your fork.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/using-pull-requests/"&gt;Send a pull request&lt;/a&gt; from your fork’s branch to our &lt;code&gt;master&lt;/code&gt; branch.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Using the web-based interface to make changes is fine too, and will help you
by automatically forking the project and prompting to send a pull request too.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="./LICENSE"&gt;CC0-1.0&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>github</author><guid isPermaLink="false">https://github.com/github/gitignore</guid><pubDate>Tue, 24 Dec 2019 00:08:00 GMT</pubDate></item><item><title>xiaolai/everyone-can-use-english #9 in Unknown languages, Today</title><link>https://github.com/xiaolai/everyone-can-use-english</link><description>&lt;p&gt;&lt;i&gt;人人都能用英语&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-人人都能用英语" class="anchor" aria-hidden="true" href="#人人都能用英语"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;人人都能用英语&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-目录" class="anchor" aria-hidden="true" href="#目录"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;目录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="README.md"&gt;简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="chapter1.md"&gt;第一章：起点&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="chapter2.md"&gt;第二章：口语&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="chapter3.md"&gt;第三章：语音&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="chapter4.md"&gt;第四章：朗读&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="chapter5.md"&gt;第五章：词典&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="chapter6.md"&gt;第六章：语法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="chapter7.md"&gt;第七章：精读&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="chapter8.md"&gt;第八章：叮嘱&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="end.md"&gt;后记&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-前言" class="anchor" aria-hidden="true" href="#前言"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;前言&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;有一天，有个人在Twitter上提问：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;@maozhu1: @xiaolai 还请李老师用140字概括一下怎样才能学好英语？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;我回复说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其实一个字就够了：“用”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;这本书里的文字，全部的意义，只有两个字：“启发”。&lt;/p&gt;
&lt;p&gt;有些知识，不仅要了解，还要深入了解。为了深入了解，不仅要学习，还要实践，更要反复试错，在成功中获得激励，在失败中汲取教训，路漫漫其修远，上下求索才可能修成正果。小到开车，大到创业，各种所需要的知识莫不如是。面对这样的知识，我们要了解&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What──它究竟是什么？&lt;/li&gt;
&lt;li&gt;Why──为什么它是那个样子？&lt;/li&gt;
&lt;li&gt;How──要掌握它、应用它，必须得遵循什么样的步骤？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然而，有另外一种知识，往往还是格外重要的知识，在知道它的那一瞬间就可能开始发挥重大的作用，甚至，在知道它（What）的那一瞬间，它所有的重大作用全部都发挥完毕（至于 Why 和 How，甚至可能在了解它的 What 那一瞬间早已经不言自明）。&lt;/p&gt;
&lt;p&gt;在我个人的记忆里，一路上遇到过很多这种 “只要知道就能够瞬间全部发挥作用” 的知识。学概率统计的时候，遇到 “独立事件” 这个概念，就是这类知识的典型例子。在此之前，我很自然地以为如果连续 9 次抛硬币都是正面朝上，那么第 10 次抛出硬币之后正面朝上的可能性要远远低于背面朝上的可能性 …… 在概率教科书里读到 “独立事件” 的那一瞬间，让我意识到之前的想法是多么的可笑。因为抛硬币正反面的几率是永远都相同的（硬币出现正反面在每次抛时都是相互独立、不受之前结果影响的），各占 50%，所以即便我抛一百次，一万次，甚至更多次都是正面朝上，下一次抛正反面的几率也还是如此，各占 50%。&lt;/p&gt;
&lt;p&gt;至此，这个知识的所有作用已经全部发挥完毕：它能够彻头彻尾地改变一些人──那些一不小心看到它实际意义的人。无论是谁，在做几乎所有决定的时候，都要考虑 “可能性”（学称 “概率”）。在我不知道 “独立事件” 这个概念之前所做出的很多决定，换在知道 “独立事件” 这个概念之后，我是无论如何都不会那样选择的──这就是改变，并且是质变。&lt;/p&gt;
&lt;p&gt;另一个令我记忆深刻的例子是很小的时候学习编程语言。多年以来，受影响最深的，并不是当时所学的 BASIC，或者是后来所学的 PASCAL，抑或再后来学的 C、C++什么的；受影响最深的是一种思考方式──在运行程序之前，要反复浏览代码，在脑子里进行预演；而不是写完程序直接运行，出错了再说。这是节省时间提高效率的重要方式。刚开始并不知道 “了解了这种操作方式” 给自己带来了多大的影响；可是，许多年之后，观察到身边大多数人从来都没有 “做事之前先在脑子里预演” 的习惯，才明白很小的时候知道了那样的做法给自己带来的巨大好处──并且是没办法给那些不知道的人讲明白的好处。（也许正因为如此，才总是有人这样无奈罢：会的人，自然会了，不会的人，无论如何也不会。）
更为关键的是，这种知识的获取，是 “不可逆的”。在你知道它的那一瞬间，它就已经改变了一切，你的生活因它而变，再也无法复原。我们再也不可能对这种知识视而不见，听而不闻，置之不理，它瞬间就能根深蒂固，无法铲除。比如，真正理解概率统计常识的人，是绝对不会去买彩票的 …… 因为买彩票这种行为在他们眼里相当于不尊重自己的智商和已学过的知识。可与此同时，彩票是地球上最畅销的商品，可见有多少人一生都未曾有机会了解那些重要的知识。&lt;/p&gt;
&lt;p&gt;当然，读到这里，读者都会同意：也许最值得传播的（至少应该为之努力的）就是这种知识。传播它们的最大意义，甚至唯一的意义和目的，就是 “启发”。这本书里的文字，全部的意义，只有两个字：“启发”。作者真诚地希望读者在读过这些文字之后，（起码）在英语使用方面有所启发。&lt;/p&gt;
&lt;p&gt;也许有些读者会发现里面有 “太多的废话”，那仅仅是因为这类知识的特性：它们太 “貌不惊人”，如果非要它们以本来的面目出现，他们是不会注意到的──无论它们实际上有多么重要。否则，他们早就被这类知识彻头彻尾地改变了 …… 可事实上他们不还是原来那个样子么？&lt;/p&gt;
&lt;p&gt;也许有些读者自然而然地依照思维惯性，希望看到更多的 “How”。可正如之前所解释的那样，这类知识中的大多数，读者在了解到 “What” 的那一瞬间，它的作用就已经全部发挥完毕，“Why” 也许只不过是多余的解释，而 “How” 或者不言自明，或者因人而异，需要读者自己摸索……&lt;/p&gt;
&lt;p&gt;这类知识注定属于少数人。除了之前已经说过的原因之外，还有另外一个重要的原因：人们只愿传播自己相信的知识──哪怕那所谓的知识根本就是错的。重要的不是对错，重要的是感觉。尽管 “觉得正确” 和 “正确” 相差可能十万八千里，但对大多数人来说根本就是一回事儿，起码，他们情愿那就是一回事儿。所以，容易传递的是那些 “很自然地就令人相信（感觉）是正确的”，而不是 “事实上正确的” 事情。&lt;/p&gt;
&lt;p&gt;前些年我写《把时间当作朋友》的时候，多少对它的传播是悲观的，因为我知道那些文字里所传递的绝大多数是这种道理、这类知识──它们的本质决定了其传播的困难程度。所以，那时候，我觉得只要有零星那么几个人能够被那些文字所改变，就已经万幸了。互联网时代充满了奇迹，那些文字在网上以每个月几万点击的数量被浏览。而 2009 年印刷成书出版后，竟然可以在一年之内重印 11 次，再次出乎我的意料。哪怕真正接受那些道理的读者比率再低，由于基数巨大，我知道我还是结结实实地改变了很多人的。&lt;/p&gt;
&lt;p&gt;正是这样的动力，使我甘心、耐心地写下这本书里的文字。知道它们无论如何都会再次改变一些人──尽管我自己永远没办法知道最终改变的究竟是哪些人。生活中充满了无奈，然而有些人幸运如我，毕竟能够改变点什么。于是，那些无奈，那些不幸，就多少淡了一些。&lt;/p&gt;
&lt;p&gt;事实上，这本书也是《把时间当做朋友》的具体延续。《把时间当做朋友》的主旨很简单：时间不会听从我们的管理，我们最多只能与时间做朋友；与时间做朋友的方法只不过是 “用正确的方式做正确的事情”。而这本书，只不过是 把 “正确的事情” 聚焦在 “用英语” 上而已，而后再看看可能的 “正确的方式” 究竟是什么。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-李笑来" class="anchor" aria-hidden="true" href="#李笑来"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;李笑来&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2010 年春于上海初稿&lt;/li&gt;
&lt;li&gt;2010 年冬于北京修改&lt;/li&gt;
&lt;li&gt;2015 年于北京重新制作网络开放版本&lt;/li&gt;
&lt;li&gt;2019 年于北京上传至 Github&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>xiaolai</author><guid isPermaLink="false">https://github.com/xiaolai/everyone-can-use-english</guid><pubDate>Tue, 24 Dec 2019 00:09:00 GMT</pubDate></item><item><title>BlameKidd/BaiduYunVIP #10 in Unknown languages, Today</title><link>https://github.com/BlameKidd/BaiduYunVIP</link><description>&lt;p&gt;&lt;i&gt;百度云超级会员账号分享, 另分享多款百度云不限速下载工具.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-百度云账号注意事项" class="anchor" aria-hidden="true" href="#百度云账号注意事项"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;百度云账号注意事项&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/BlameKidd/BaiduYunVIP/blob/master/BaiduYunVIP.md"&gt;点击查看百度云账号&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;所有账号均为微博登录.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;登录时验证码全部为大写. (如果不大写, 有时会提示验证码错误, 即使你的验证码填写正确)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用鼠标点击确定按钮登录, 不要用回车键. (回车键有时会提示验证码错误, 即使你的验证码填写正确)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;配合pandownload使用体验更佳&lt;/p&gt;
&lt;p&gt;pandownload官网: &lt;a href="http://pandownload.com/" rel="nofollow"&gt;http://pandownload.com/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;IP地址被限速拉黑了怎么办 ？可以试试重启路由器，重启光猫来解决此问题，如果IP地址被限速拉黑一般2-3天百度网盘官方会自动解除了不用担心。&lt;/li&gt;
&lt;li&gt;提示：不管有没有拉黑限速的账号及IP地址在大量下载百度网盘文件后肯定都会被官方检测到并且限速的，目前好像开通VIP会员以及SVIP高级会员都无法解除限制，基本开来都没用了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-百度云不限速下载工具汇总" class="anchor" aria-hidden="true" href="#百度云不限速下载工具汇总"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;百度云不限速下载工具汇总&lt;/h2&gt;
&lt;p&gt;大家如果有一些不错的不限速下载工具也可以发在issues, 拒绝破解版本.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#pandownload"&gt;pandownload&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bnd"&gt;BND&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%80%9F%E7%9B%98"&gt;速盘&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B"&gt;百度网盘直链下载助手&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BA%BF%E5%AF%BB"&gt;亿寻&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#high-speed-downloader"&gt;High Speed Downloader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#enfi"&gt;ENFI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#baiducdp"&gt;baiduCDP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#baidupcs-web"&gt;baidupcs-web&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-pandownload" class="anchor" aria-hidden="true" href="#pandownload"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pandownload:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://pandownload.com/" rel="nofollow"&gt;http://pandownload.com/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pan Download 是一款 Windows 下的百度盘第三方下载工具&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基于 aria2，可以实现“满速”下载。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更多介绍请看官网:  &lt;a href="http://pandownload.com/" rel="nofollow"&gt;http://pandownload.com/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-bnd" class="anchor" aria-hidden="true" href="#bnd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BND:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/b3log/baidu-netdisk-downloaderx/releases"&gt;https://github.com/b3log/baidu-netdisk-downloaderx/releases&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BND 是一款图形界面的百度网盘不限速下载器，支持 Windows、Linux 和 Mac.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BND 分为两个系列，BND1 和 BND2.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更多介绍请看官网: &lt;a href="https://github.com/b3log/baidu-netdisk-downloaderx"&gt;https://github.com/b3log/baidu-netdisk-downloaderx&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-速盘" class="anchor" aria-hidden="true" href="#速盘"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;速盘:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.speedpan.com/" rel="nofollow"&gt;https://www.speedpan.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;速盘 是一款被称作「度盘神器，使百度网盘保持全速下载免受限速困扰的」Windows 工具&lt;/li&gt;
&lt;li&gt;支持资源搜索、管理你自己的百度盘文件、查找重复文件等，并有黑科技加持。&lt;/li&gt;
&lt;li&gt;更多介绍请看官网: &lt;a href="https://www.speedpan.com/" rel="nofollow"&gt;https://www.speedpan.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-百度网盘直链下载助手" class="anchor" aria-hidden="true" href="#百度网盘直链下载助手"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;百度网盘直链下载助手&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/syhyz1990/baiduyun"&gt;https://github.com/syhyz1990/baiduyun&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;本脚本适用于多平台支持安装 Tampermonkey 或 暴力猴扩展的浏览器，如Chrome，360，QQ，UC，2345等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支持百度网盘PC端网页获取分享链接下载地址和我的网盘下载地址。安装后会在对应界面出现【下载助手】按钮, 配合多线程下载工具达到提速的效果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用说明: &lt;a href="https://www.baiduyun.wiki/zh-cn/" rel="nofollow"&gt;https://www.baiduyun.wiki/zh-cn/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-亿寻" class="anchor" aria-hidden="true" href="#亿寻"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;亿寻:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://nodeapi.yunser.com/tmp/2019-08-18/1566061324993.zip" rel="nofollow"&gt;https://nodeapi.yunser.com/tmp/2019-08-18/1566061324993.zip&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;亿寻是吾爱破解kud大神原创工具: &lt;a href="https://www.52pojie.cn/thread-959139-1-1.html" rel="nofollow"&gt;https://www.52pojie.cn/thread-959139-1-1.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;v0.1.0025 8月18 修复&lt;strong&gt;下载失效问题&lt;/strong&gt;、转存错误及日期等排序混乱问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载位置 设置改到了 工具\选项 里了，支持中文路径名了，也可以在 Yixun.ini 里修改。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;非会员账号每个账号每天大概能下10G多。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当程序显示“安全警报”时，应停止使用该帐号继续下载。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果显示无法连接 raw.githubusercontent.com，尝试在 Hosts 中添加下面&lt;strong&gt;任意一行&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;151.101.0.133          raw.githubusercontent.com
151.101.108.133      raw.githubusercontent.com
151.101.228.133      raw.githubusercontent.com
151.101.192.133      raw.githubusercontent.com&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;如果显示无法连接 ip-api.com，尝试在 Hosts 中添加下面&lt;strong&gt;任意一行&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;66.212.29.250        ip-api.com
139.99.8.58            ip-api.com
139.99.8.126          ip-api.com&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;已知问题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用队列下载时，文件名有中文时，下回来的文件名可能变成一串字符，而不是正确的文件名。这是因为 aria2 可能错误识别。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为了避免此问题，可以使用右键“下载”，而不是“新建下载队列"。或者重命名下回来的文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;避免每次登录都要安全验证的方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;登录时，勾选 记住我的凭证 ，下次用切换用户进行登录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;切换用户里没有时，可使用 Cookie 或扫描二维码进行登录。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何获取Cookie及如何用Cookie登录，请见 Cookie 登录对话窗口的左下角的链接。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;后续版本，免登录。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-high-speed-downloader" class="anchor" aria-hidden="true" href="#high-speed-downloader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;High Speed Downloader:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pan.baidu.com/s/1pSELNn8andcdr11kqTXcBw" rel="nofollow"&gt;https://pan.baidu.com/s/1pSELNn8andcdr11kqTXcBw&lt;/a&gt; 提取码: xbc2&lt;/li&gt;
&lt;li&gt;High Speed Downloader 是一款强大开源免费的跨平台第三方百度网盘不限速下载神器.&lt;/li&gt;
&lt;li&gt;使用方法&lt;/li&gt;
&lt;li&gt;下载High Speed Downloader 百度网盘不限速下载神器后解压运行程序，如果是使用谷歌浏览器的朋友请下载谷歌浏览器插件crx文件，如果是360浏览器下载对应的crx文件；&lt;/li&gt;
&lt;li&gt;在谷歌浏览器右上角找到“更多工具”然后“扩展程序”打开开发者模式后把crx文件托进去安装；&lt;/li&gt;
&lt;li&gt;安装我们的crx文件插件后谷歌浏览器打开百度网盘会出现一个高速下载的标识即配置成功了；配置成功后我们选择文件，点击高速下载就可以自由的调用我们的High Speed Downloader来实现百度网盘不限速下载文件了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-enfi" class="anchor" aria-hidden="true" href="#enfi"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ENFI:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://enfi.cloud/#/index" rel="nofollow"&gt;http://enfi.cloud/#/index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;能赚钱+超高速下载: 用你的闲置带宽给互联网内容加速，ENFI为你提供高速下载并赚取收入！&lt;/li&gt;
&lt;li&gt;下载送3gb流量，可通过挂机赚流量，也可购买流量0.99元10g，2.99元50g，4.99元100g&lt;/li&gt;
&lt;li&gt;挂机可以得积分然后换流量，挂一天大概能换5.7g流量，不是整天下载得应该够用.&lt;/li&gt;
&lt;li&gt;更多介绍请看官网: &lt;a href="http://enfi.cloud/#/index" rel="nofollow"&gt;http://enfi.cloud/#/index&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-baiducdp" class="anchor" aria-hidden="true" href="#baiducdp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;baiduCDP:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cool2528/baiduCDP/releases/"&gt;https://github.com/cool2528/baiduCDP/releases/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;BaiduCDP 是&lt;a href="https://github.com/cool2528"&gt;@cool2528&lt;/a&gt;工作业余时间使用 C/C++写的一个百度网盘高速下载工具.&lt;/li&gt;
&lt;li&gt;通过分析百度网盘 Web 接口 API 结合 aria2 实现多线程高速下载.&lt;/li&gt;
&lt;li&gt;目前只能在 Windows 平台下使用。&lt;/li&gt;
&lt;li&gt;更多介绍请看他的github: &lt;a href="https://github.com/cool2528/baiduCDP"&gt;https://github.com/cool2528/baiduCDP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-baidupcs-web" class="anchor" aria-hidden="true" href="#baidupcs-web"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;baidupcs-web:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/liuzhuoling2011/baidupcs-web/releases"&gt;https://github.com/liuzhuoling2011/baidupcs-web/releases&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这个项目基于BaiduPCS-Go, 可以让你高效的使用百度云&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;原网站里并没有详细教程，下面发一个较为简单的网页版BaiduPCS-Go使用方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用前设置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网页登录百度网盘：&lt;a href="https://pan.baidu.com/" rel="nofollow"&gt;https://pan.baidu.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;百度输入法生成：&lt;a href="http://pcs.baidu.com/rest/2.0/pcs/file?app_id=265486&amp;amp;method=list&amp;amp;path=%2F" rel="nofollow"&gt;http://pcs.baidu.com/rest/2.0/pcs/file?app_id=265486&amp;amp;method=list&amp;amp;path=%2F&lt;/a&gt;
打开这个链接会提示错误，不用管，此步会在你的网盘我的应用数据目录下生成一个baidu_shurufa的文件夹。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先下载BaiduPCS-Go-Web： &lt;a href="https://github.com/liuzhuoling2011/baidupcs-web/releases"&gt;https://github.com/liuzhuoling2011/baidupcs-web/releases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据自己系统选择相应版本的客户端，下载解压到本地硬盘。运行BaiduPCS-Go.exe。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：使用过程中不要退出本程序&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在浏览器输入程序提示的网址，登陆你的百度网盘账号。我用的是chrome，ie不知道为啥打不开这个链接。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击右上角你的用户名，下拉菜单——设置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PCS应用ID：265486，别问为什么，我也不知道。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置下载目录，不改这个会保存不了设置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;往下拉工作目录填：/apps/baidu_shurufa&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;保存，会提示成功。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以后下载文件的时候将文件保存在baidu_shurufa下就能在此网页看到文件并享受飞速下载了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>BlameKidd</author><guid isPermaLink="false">https://github.com/BlameKidd/BaiduYunVIP</guid><pubDate>Tue, 24 Dec 2019 00:10:00 GMT</pubDate></item><item><title>Atarity/deploy-your-own-saas #11 in Unknown languages, Today</title><link>https://github.com/Atarity/deploy-your-own-saas</link><description>&lt;p&gt;&lt;i&gt;List of "only yours" cloud services for everyday needs :black_flag:&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;strong&gt;[&lt;a href="https://github.com/Atarity/deploy-your-own-saas/issues/new?assignees=&amp;amp;labels=&amp;amp;template=submit-new-product.md"&gt;Submit product or tutorial&lt;/a&gt;]&lt;/strong&gt; or make it thru PR.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/scryer.jpg"&gt;&lt;img src="/scryer.jpg" alt="Scryer" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-vpn" class="anchor" aria-hidden="true" href="#-deploy-your-own-vpn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="speak_no_evil" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64a.png"&gt;🙊&lt;/g-emoji&gt; Deploy your own &lt;code&gt;VPN&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://openvpn.net/" rel="nofollow"&gt;OpenVPN&lt;/a&gt; — full-featured open source VPN solution. &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-an-openvpn-server-on-ubuntu-16-04" rel="nofollow"&gt;(Digital Ocean tutorial)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wireguard.com/" rel="nofollow"&gt;WireGuard&lt;/a&gt; —  faster, simpler, leaner, and more useful than IPsec. It intends to be considerably more performant than OpenVPN. &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-create-a-point-to-point-vpn-with-wireguard-on-ubuntu-16-04" rel="nofollow"&gt;(Digital Ocean tutorial)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/trailofbits/algo"&gt;Algo VPN&lt;/a&gt; — set of Ansible scripts that simplify the setup of a personal Wireguard and IPsec VPN.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/StreisandEffect/streisand"&gt;Streisand&lt;/a&gt; — another set of Ansible scripts to setup and run WireGuard, OpenConnect, OpenSSH, OpenVPN, Shadowsocks, sslh, Stunnel, or a Tor bridge.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-music-streaming-service" class="anchor" aria-hidden="true" href="#-deploy-your-own-music-streaming-service"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="headphones" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a7.png"&gt;🎧&lt;/g-emoji&gt; Deploy your own &lt;code&gt;Music streaming service&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ampache/ampache"&gt;Ampache&lt;/a&gt; — web based audio/video streaming application and file manager.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://beta.madsonic.org/pages/index.jsp" rel="nofollow"&gt;Madsonic&lt;/a&gt; — web-based media library and media streamer with jukebox functionality.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mopidy.com/" rel="nofollow"&gt;Mopidy&lt;/a&gt; — extensible music server.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://koel.phanan.net/" rel="nofollow"&gt;Koel&lt;/a&gt; — simple web-based personal audio streaming service. &lt;a href="https://github.com/phanan/koel"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://funkwhale.audio/" rel="nofollow"&gt;Funkwhale&lt;/a&gt; — web-based music library with Airsonic compatibility. &lt;a href="https://dev.funkwhale.audio/funkwhale/funkwhale" rel="nofollow"&gt;(GitLab)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-photo-hosting" class="anchor" aria-hidden="true" href="#-deploy-your-own-photo-hosting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4f7.png"&gt;📷&lt;/g-emoji&gt; Deploy your own &lt;code&gt;Photo hosting&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://chevereto.com/free" rel="nofollow"&gt;Chevereto&lt;/a&gt; — powerful and fast image hosting script that allows you to create your very own image hosting website in just minutes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sarthology.github.io/proGramCLI/" rel="nofollow"&gt;ProGram&lt;/a&gt; — self-hosted Instagram style gallery.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://piwigo.org/" rel="nofollow"&gt;Piwigo&lt;/a&gt; — PHP image gallery. &lt;a href="https://github.com/Piwigo"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-ebooks-catalog" class="anchor" aria-hidden="true" href="#-deploy-your-own-ebooks-catalog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="books" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png"&gt;📚&lt;/g-emoji&gt; Deploy your own &lt;code&gt;eBooks catalog&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kovidgoyal/calibre"&gt;Calibre&lt;/a&gt; — e-book manager, packed with all you need features (including server).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/seblucas/cops"&gt;COPS&lt;/a&gt; — Calibre OPDS and HTML server. &lt;a href="https://roll.urown.net/server/ebooks.html" rel="nofollow"&gt;(Urown tutorial)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janeczku/calibre-web"&gt;Calibre-Web&lt;/a&gt; — web UI for Calibre database.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-google-docs" class="anchor" aria-hidden="true" href="#-deploy-your-own-google-docs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="page_facing_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c4.png"&gt;📄&lt;/g-emoji&gt; Deploy your own &lt;code&gt;Google Docs&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.collaboraoffice.com/collabora-online/" rel="nofollow"&gt;Collabora&lt;/a&gt; — LibreOffice in the cloud with collaboration features. &lt;a href="https://www.collaboraoffice.com/code/docker/" rel="nofollow"&gt;(tutorial for OwnCloud)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.onlyoffice.com/" rel="nofollow"&gt;ONLYOFFICE CE&lt;/a&gt; — private cloud office with collaboration features. CE version distributed as &lt;a href="https://helpcenter.onlyoffice.com/server/docker/opensource/deploy-community-edition-in-digitalocean.aspx" rel="nofollow"&gt;Docker image&lt;/a&gt;. &lt;a href="https://github.com/ONLYOFFICE"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-bookmarks-service" class="anchor" aria-hidden="true" href="#-deploy-your-own-bookmarks-service"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="label" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3f7.png"&gt;🏷&lt;/g-emoji&gt; Deploy your own &lt;code&gt;Bookmarks service&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cdevroe/unmark"&gt;Unmark&lt;/a&gt; — application for bookmarks. &lt;a href="https://computers.tutsplus.com/tutorials/host-your-own-bookmarking-webapp-with-unmark--cms-21385" rel="nofollow"&gt;(Tutplus tutorial from 2014)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dyu/bookmarks"&gt;Bookmarks&lt;/a&gt; — self-hosted bookmarking app that can import bookmarks from delicious and chrome.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-url-shortener" class="anchor" aria-hidden="true" href="#-deploy-your-own-url-shortener"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="abc" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f524.png"&gt;🔤&lt;/g-emoji&gt; Deploy your own &lt;code&gt;URL shortener&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/YOURLS/YOURLS"&gt;Yourls&lt;/a&gt; — Your Own URL Shortener.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kutt.it/" rel="nofollow"&gt;Kutt&lt;/a&gt; — modern URL shortener with support for custom domains. &lt;a href="https://github.com/thedevs-network/kutt"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fosslife/delta"&gt;Delta&lt;/a&gt; — a file uploader and URL shortener packed with features and CLI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/commonshost/build-your-own-url-shortener-in-15-minutes-279n" rel="nofollow"&gt;CLI based approach&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-calendar" class="anchor" aria-hidden="true" href="#-deploy-your-own-calendar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="spiral_calendar" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f5d3.png"&gt;🗓&lt;/g-emoji&gt; Deploy your own &lt;code&gt;Calendar&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://radicale.org/" rel="nofollow"&gt;Radicale&lt;/a&gt; — CalDAV and CardDAV Server made with Python.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://sabre.io/" rel="nofollow"&gt;Sabre&lt;/a&gt; — CardDAV, CalDAV and WebDAV server made with PHP.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/ccs-calendarserver"&gt;Calendar Server&lt;/a&gt; — Calendar and contacts server made by Apple.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-cloud-storage" class="anchor" aria-hidden="true" href="#-deploy-your-own-cloud-storage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="file_cabinet" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f5c4.png"&gt;🗄&lt;/g-emoji&gt; Deploy your own &lt;code&gt;Cloud storage&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/owncloud/core"&gt;OwnCloud&lt;/a&gt; — personal cloud which runs on your own server. &lt;a href="https://doc.owncloud.org/server/10.2/admin_manual/installation/deployment_considerations.html" rel="nofollow"&gt;(tutorial)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nextcloud.com/" rel="nofollow"&gt;Nextcloud&lt;/a&gt; — enchanced OwnCloud fork with number of additional services like calendars, mail, contacts and video calls &lt;a href="https://github.com/nextcloud"&gt;(GitHub)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://syncthing.net/" rel="nofollow"&gt;Syncthing&lt;/a&gt; — continuous file synchronization program.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/minio/minio"&gt;MinIO&lt;/a&gt; — object storage server compatible with Amazon S3 APIs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-dns" class="anchor" aria-hidden="true" href="#-deploy-your-own-dns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="spider_web" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f578.png"&gt;🕸&lt;/g-emoji&gt; Deploy your own &lt;code&gt;DNS&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/NLnetLabs/unbound"&gt;Unbound&lt;/a&gt; — validating, recursive, caching DNS resolver. &lt;a href="https://roll.urown.net/server/dns/unbound.htm" rel="nofollow"&gt;(Urown tutorial)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-adblock" class="anchor" aria-hidden="true" href="#-deploy-your-own-adblock"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="stop_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6d1.png"&gt;🛑&lt;/g-emoji&gt; Deploy your own &lt;code&gt;AdBlock&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pi-hole.net/" rel="nofollow"&gt;Pi-hole&lt;/a&gt; — network-wide ad blocking software you can deploy to local Raspberry Pi or &lt;a href="https://github.com/n3m351d4/Pi-Hole-PiVPN-on-Google-Compute-Engine-Free-Tier-with-Full-Tunnel-and-Split-Tunnel-OpenVPN-Configs"&gt;always-free instance of Google Cloud&lt;/a&gt;. Yes, you've got the irony right. &lt;a href="https://github.com/pi-hole"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-️-deploy-your-own-email-server" class="anchor" aria-hidden="true" href="#️-deploy-your-own-email-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="email" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2709.png"&gt;✉️&lt;/g-emoji&gt; Deploy your own &lt;code&gt;Email server&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.dovecot.org/" rel="nofollow"&gt;Dovecot&lt;/a&gt; — IMAP and POP3 email server. &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-configure-a-mail-server-using-postfix-dovecot-mysql-and-spamassassin" rel="nofollow"&gt;(Digital Ocean tutorial)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mailcow.email/" rel="nofollow"&gt;Mailcow&lt;/a&gt; — dockerized mailserver suite based on  Postfix, Dovecot, Nginx, PHP, MariaDB, Rspamd and more. &lt;a href="https://github.com/mailcow/mailcow-dockerized"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.iredmail.org/" rel="nofollow"&gt;iRedMail&lt;/a&gt; — email server.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://roundcube.net/" rel="nofollow"&gt;Roundcube&lt;/a&gt; — browser-based IMAP client with an application-like user interface.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://postal.atech.media/" rel="nofollow"&gt;Postal&lt;/a&gt; —  a fully featured mail server with web UI. &lt;a href="https://github.com/postalhq/postal"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-chat-server" class="anchor" aria-hidden="true" href="#-deploy-your-own-chat-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="speech_balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png"&gt;💬&lt;/g-emoji&gt; Deploy your own &lt;code&gt;Chat server&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://prosody.im/" rel="nofollow"&gt;Prosody IM&lt;/a&gt; — modern XMPP communication server. &lt;a href="https://roll.urown.net/server/prosody.html" rel="nofollow"&gt;(Urown tutorial)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zulipchat.com/" rel="nofollow"&gt;Zulip&lt;/a&gt; — team chat which combined the immediacy of real-time chat with an email threading model. &lt;a href="https://github.com/zulip/zulip"&gt;(Github)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rocket.chat/" rel="nofollow"&gt;Rocket Chat&lt;/a&gt; — WebChat platform. &lt;a href="https://github.com/RocketChat/Rocket.Chat"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mattermost.com/" rel="nofollow"&gt;Mattermost&lt;/a&gt; — private cloud, Slack-alternative.  &lt;a href="https://github.com/mattermost/mattermost-server"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mumble.info" rel="nofollow"&gt;Mumble&lt;/a&gt; — low-latency, high quality &lt;strong&gt;voice chat&lt;/strong&gt; for gaming. &lt;a href="https://github.com/mumble-voip/mumble"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://matrix.org" rel="nofollow"&gt;Matrix&lt;/a&gt; — ecosystem for open federated Instant Messaging and VoIP. &lt;a href="https://github.com/matrix-org"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-video-calls" class="anchor" aria-hidden="true" href="#-deploy-your-own-video-calls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="video_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4f9.png"&gt;📹&lt;/g-emoji&gt; Deploy your own &lt;code&gt;Video calls&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jitsi.org/" rel="nofollow"&gt;Jitsi&lt;/a&gt; — Multi-platform open-source video conferencing. &lt;a href="https://github.com/jitsi"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-️-deploy-your-own-publishing-system" class="anchor" aria-hidden="true" href="#️-deploy-your-own-publishing-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="writing_hand" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/270d.png"&gt;✍️&lt;/g-emoji&gt; Deploy your own &lt;code&gt;Publishing system&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jekyllrb.com/" rel="nofollow"&gt;Jekyll&lt;/a&gt; — static websites and blogs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gohugo.io/" rel="nofollow"&gt;Hugo&lt;/a&gt; — static site generators with amazing speed.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TryGhost/Ghost"&gt;Ghost&lt;/a&gt; — headless Node.js CMS for professional publishing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gatsbyjs.org/" rel="nofollow"&gt;Gatsby&lt;/a&gt; — React-based framework that helps developers build fast websites and apps. &lt;a href="https://github.com/gatsbyjs/gatsby"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-disqus-comments" class="anchor" aria-hidden="true" href="#-deploy-your-own-disqus-comments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="speaking_head" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f5e3.png"&gt;🗣&lt;/g-emoji&gt; Deploy your own &lt;code&gt;Disqus&lt;/code&gt; comments&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://posativ.org/isso/" rel="nofollow"&gt;Isso&lt;/a&gt; — lightweight commenting server. It aims to be a drop-in replacement for Disqus. &lt;a href="https://github.com/posativ/isso"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.taniarascia.com/add-comments-to-static-site/" rel="nofollow"&gt;DIY approach by Tania Rascia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-web-analytics-engine" class="anchor" aria-hidden="true" href="#-deploy-your-own-web-analytics-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="chart_with_upwards_trend" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c8.png"&gt;📈&lt;/g-emoji&gt; Deploy your own &lt;code&gt;Web analytics engine&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ackee.electerious.com" rel="nofollow"&gt;Ackee&lt;/a&gt; — self-hosted, Node.js based analytics tool for those who care about privacy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matomo-org/matomo"&gt;Matomo&lt;/a&gt; — open analytics platform.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://goaccess.io/" rel="nofollow"&gt;GoAccess&lt;/a&gt; — real-time web log analyzer and interactive viewer that runs in a terminal or through browser. &lt;a href="https://github.com/allinurl/goaccess"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-cloud-backup" class="anchor" aria-hidden="true" href="#-deploy-your-own-cloud-backup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="package" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e6.png"&gt;📦&lt;/g-emoji&gt; Deploy your own &lt;code&gt;Cloud backup&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://duplicity.nongnu.org/" rel="nofollow"&gt;Duplicity&lt;/a&gt; — backs up directories by producing encrypted tar-format volumes and uploading them to a remote or local file server.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.borgbackup.org/" rel="nofollow"&gt;Borg&lt;/a&gt; — deduplicating archiver
with compression and encryption.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elkarbackup/elkarbackup"&gt;ElkarBackup&lt;/a&gt; — backup solution based on RSync/RSnapshot.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://restic.net/" rel="nofollow"&gt;Restic&lt;/a&gt; — encrypted, deduplicated &amp;amp; simple backups with an easy-to-use CLI. &lt;a href="https://github.com/restic/restic/"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-information-storing-and-organization-system" class="anchor" aria-hidden="true" href="#-deploy-your-own-information-storing-and-organization-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="open_file_folder" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c2.png"&gt;📂&lt;/g-emoji&gt; Deploy your own &lt;code&gt;Information storing and organization system&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/BookStackApp/BookStack"&gt;Bookstack&lt;/a&gt; — platform to create documentation/wiki content built with PHP &amp;amp; Laravel.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mediawiki.org/wiki/MediaWiki" rel="nofollow"&gt;MediaWiki&lt;/a&gt; — collaboration and documentation platform with enormous capabilities.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dokuwiki.org/" rel="nofollow"&gt;Dokuwiki&lt;/a&gt; — simple wiki that doesn't require a database. &lt;a href="https://github.com/splitbrain/dokuwiki"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.getoutline.com/" rel="nofollow"&gt;Outline&lt;/a&gt; — fastest wiki and knowledge base for growing teams with markdown support and clean UI. &lt;a href="https://github.com/outline/outline"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.js.org/" rel="nofollow"&gt;Wiki.js&lt;/a&gt; — lightweight and extensible wiki made with Node.js. &lt;a href="https://github.com/Requarks/wiki"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-password-manager" class="anchor" aria-hidden="true" href="#-deploy-your-own-password-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Deploy your own &lt;code&gt;Password manager&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bitwarden.com/" rel="nofollow"&gt;Bitwarden&lt;/a&gt; — easiest and safest way to store, share, and sync sensitive data. &lt;a href="https://github.com/bitwarden/server"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lesspass.com/" rel="nofollow"&gt;LessPass&lt;/a&gt; — stateless password manager. &lt;a href="https://github.com/lesspass/lesspass"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-read-it-later" class="anchor" aria-hidden="true" href="#-deploy-your-own-read-it-later"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="lying_face" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f925.png"&gt;🤥&lt;/g-emoji&gt; Deploy your own &lt;code&gt;Read it Later&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/go-shiori/shiori"&gt;Shiori&lt;/a&gt; — simple bookmarks manager written intended as a simple clone of Pocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wallabag.org/en" rel="nofollow"&gt;Wallabag&lt;/a&gt; — self hostable application for saving web pages.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-rss-reader" class="anchor" aria-hidden="true" href="#-deploy-your-own-rss-reader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="newspaper_roll" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f5de.png"&gt;🗞&lt;/g-emoji&gt; Deploy your own &lt;code&gt;RSS reader&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://selfoss.aditu.de/" rel="nofollow"&gt;Selfoss&lt;/a&gt; — multipurpose rss reader, live stream, mashup, aggregation web application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tt-rss.org/" rel="nofollow"&gt;Tiny Tiny RSS&lt;/a&gt; — web-based news feed reader and aggregator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://miniflux.app/" rel="nofollow"&gt;Miniflux&lt;/a&gt; — minimalist and opinionated feed reader.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-git-server" class="anchor" aria-hidden="true" href="#-deploy-your-own-git-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="finland" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1eb-1f1ee.png"&gt;🇫🇮&lt;/g-emoji&gt; Deploy your own &lt;code&gt;Git server&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gitlab.com/gitlab-org/gitlab-foss" rel="nofollow"&gt;Gitlab CE&lt;/a&gt; — turn-key git hosting solution. &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-gitlab-on-ubuntu-18-04" rel="nofollow"&gt;(Digital Ocean tutorial)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sitaramc/gitolite"&gt;Gitolight&lt;/a&gt; — git hosting on a server, with very fine-grained access control and many powerful features.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitea.io" rel="nofollow"&gt;Gitea&lt;/a&gt; — lightweight and powerful git server made with Go, so you can deploy it even on Raspberry Pi. &lt;a href="https://github.com/go-gitea"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pagure.io/pagure" rel="nofollow"&gt;Pagure&lt;/a&gt; — lightweight, powerful, and flexible git-centered forge with decentralization features.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-gistpastebin" class="anchor" aria-hidden="true" href="#-deploy-your-own-gistpastebin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="wastebasket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f5d1.png"&gt;🗑&lt;/g-emoji&gt; Deploy your own &lt;code&gt;Gist/PasteBin&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://privatebin.info/" rel="nofollow"&gt;Privatebin&lt;/a&gt; — minimalist, online pastebin where the server has zero knowledge of pasted data. &lt;a href="https://github.com/PrivateBin/PrivateBin"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://0bin.net/" rel="nofollow"&gt;0bin&lt;/a&gt; — client side encrypted pastebin that can run without a database. &lt;a href="https://github.com/sametmax/0bin"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-mailchimp" class="anchor" aria-hidden="true" href="#-deploy-your-own-mailchimp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="monkey_face" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f435.png"&gt;🐵&lt;/g-emoji&gt; Deploy your own &lt;code&gt;Mailchimp&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/knadh/listmonk"&gt;Listmonk&lt;/a&gt; — newsletter and mailing list manager with a modern dashboard.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-deploy-your-own-kanban-board" class="anchor" aria-hidden="true" href="#deploy-your-own-kanban-board"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="martial_arts_uniform" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f94b.png"&gt;🥋&lt;/g-emoji&gt;Deploy your own &lt;code&gt;Kanban board&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wekan/wekan"&gt;Wekan&lt;/a&gt; — collaborative Kanban board.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kanboard.org/" rel="nofollow"&gt;Kanboard&lt;/a&gt; — project management software that focuses on the Kanban methodology. &lt;a href="https://github.com/kanboard/kanboard"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-gps-tracking-system" class="anchor" aria-hidden="true" href="#-deploy-your-own-gps-tracking-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="artificial_satellite" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6f0.png"&gt;🛰&lt;/g-emoji&gt; Deploy your own &lt;code&gt;GPS tracking system&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/owntracks"&gt;OwnTracks&lt;/a&gt; — lightweight program for storing and accessing location data published via MQTT or HTTP by the OwnTracks apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bfabiszewski/ulogger-server"&gt;µlogger server&lt;/a&gt; — web application for real-time collection of geolocation data, tracks viewing and management.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--deploy-your-own-ifttt" class="anchor" aria-hidden="true" href="#-deploy-your-own-ifttt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="cyclone" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f300.png"&gt;🌀&lt;/g-emoji&gt; Deploy your own &lt;code&gt;IFTTT&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://n8n.io/" rel="nofollow"&gt;n8n&lt;/a&gt; — node-based Workflow Automation Tool with visual editor. &lt;a href="https://github.com/n8n-io/n8n"&gt;(GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muesli/beehive"&gt;Beehive&lt;/a&gt; — a flexible event/agent &amp;amp; automation system made with Go.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/huginn/huginn"&gt;Huginn&lt;/a&gt; — system for building agents that perform automated tasks for you online. Written in Ruby.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Totally worth to check:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/selfhosted/" rel="nofollow"&gt;https://www.reddit.com/r/selfhosted/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://geek-cookbook.funkypenguin.co.nz/" rel="nofollow"&gt;https://geek-cookbook.funkypenguin.co.nz/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sovereign/sovereign"&gt;https://github.com/sovereign/sovereign&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://roll.urown.net/about.html" rel="nofollow"&gt;https://roll.urown.net/about.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cover art pirated from &lt;a href="https://www.kadaburadraws.com/pixel-art#/text-rpg/" rel="nofollow"&gt;KADA★BURA&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Atarity</author><guid isPermaLink="false">https://github.com/Atarity/deploy-your-own-saas</guid><pubDate>Tue, 24 Dec 2019 00:11:00 GMT</pubDate></item><item><title>blaCCkHatHacEEkr/PENTESTING-BIBLE #12 in Unknown languages, Today</title><link>https://github.com/blaCCkHatHacEEkr/PENTESTING-BIBLE</link><description>&lt;p&gt;&lt;i&gt;This repository was created and developed by Ammar Amer @cry__pto Only. Updates to this repository will continue to arrive until the number of links reaches 10000 links &amp; 10000 pdf files .Learn Ethical Hacking and penetration testing .hundreds of ethical hacking &amp; penetration testing &amp; red team &amp; cyber security &amp; computer science resources.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-pentesting-bible" class="anchor" aria-hidden="true" href="#pentesting-bible"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PENTESTING-BIBLE&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-hundreds-of-ethical-hacking--penetration-testing--red-team--cyber-security--computer-science-resources" class="anchor" aria-hidden="true" href="#hundreds-of-ethical-hacking--penetration-testing--red-team--cyber-security--computer-science-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hundreds of ethical hacking &amp;amp; penetration testing &amp;amp; red team &amp;amp; cyber security &amp;amp; computer science resources.&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-almost-2000-links" class="anchor" aria-hidden="true" href="#almost-2000-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ALMOST 2000 LINKS.&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-almost-2000-pdf-files-about-different-fields-of-hacking-" class="anchor" aria-hidden="true" href="#almost-2000-pdf-files-about-different-fields-of-hacking-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ALMOST 2000 PDF FILES ABOUT DIFFERENT FIELDS OF HACKING .&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-notemost-of-the-pdf-files-is-different-than-the-links-which-means-there-is-now-almost-4000-links--pdf-files" class="anchor" aria-hidden="true" href="#notemost-of-the-pdf-files-is-different-than-the-links-which-means-there-is-now-almost-4000-links--pdf-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;note:most of the pdf files is different than the links which means there is now almost 4000 links &amp;amp; pdf files.&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support.&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Your generous donations will keep me motivated.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Paypal:&lt;/em&gt; &lt;a href="https://paypal.me/AmmarAmerHacker" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e09474eb76ef57ef742a134169a89393604eb272/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f656e5f47422f692f62746e2f62746e5f646f6e61746543435f4c472e676966" alt="Donate via Paypal" data-canonical-src="https://www.paypalobjects.com/en_GB/i/btn/btn_donateCC_LG.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1- 3 Ways Extract Password Hashes from NTDS.dit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/3-ways-extract-password-hashes-from-ntds-dit" rel="nofollow"&gt;https://www.hackingarticles.in/3-ways-extract-password-hashes-from-ntds-dit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-2- 3 ways to Capture HTTP Password in Network PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/3-ways-to-capture-http-password-in-network-pc/" rel="nofollow"&gt;https://www.hackingarticles.in/3-ways-to-capture-http-password-in-network-pc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-3- 3 Ways to Crack Wifi using Pyrit,oclHashcat and Cowpatty:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/3-ways-crack-wifi-using-pyrit-oclhashcat-cowpatty/" rel="nofollow"&gt;www.hackingarticles.in/3-ways-crack-wifi-using-pyrit-oclhashcat-cowpatty/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-4-BugBounty @ Linkedln-How I was able to bypass Open Redirection Protection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/2e143eb36941" rel="nofollow"&gt;https://medium.com/p/2e143eb36941&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-5-BugBounty — “Let me reset your password and login into your account “-How I was able to Compromise any User Account via Reset Password Functionality:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/a11bb5f863b3/share/twitter" rel="nofollow"&gt;https://medium.com/p/a11bb5f863b3/share/twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-6-“Journey from LFI to RCE!!!”-How I was able to get the same in one of the India’s popular property buy/sell company:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/a69afe5a0899" rel="nofollow"&gt;https://medium.com/p/a69afe5a0899&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-7-BugBounty — “I don’t need your current password to login into your account” - How could I completely takeover any user’s account in an online classi ed ads company:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/e51a945b083d" rel="nofollow"&gt;https://medium.com/p/e51a945b083d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-8-BugBounty — “How I was able to shop for free!”- Payment Price Manipulation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/b29355a8e68e" rel="nofollow"&gt;https://medium.com/p/b29355a8e68e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-9-Recon — my way:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/82b7e5f62e21" rel="nofollow"&gt;https://medium.com/p/82b7e5f62e21&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-10-Reconnaissance: a eulogy in three acts:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/7840824b9ef2" rel="nofollow"&gt;https://medium.com/p/7840824b9ef2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-11-Red-Teaming-Toolkit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/infosecn1nja/Red-Teaming-Toolkit"&gt;https://github.com/infosecn1nja/Red-Teaming-Toolkit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-12-Red Team Tips:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://vincentyiu.co.uk/" rel="nofollow"&gt;https://vincentyiu.co.uk/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-13-Shellcode: A reverse shell for Linux in C with support for TLS/SSL:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://modexp.wordpress.com/2019/04/24/glibc-shellcode/" rel="nofollow"&gt;https://modexp.wordpress.com/2019/04/24/glibc-shellcode/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-14-Shellcode: Encrypting traffic:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://modexp.wordpress.com/2018/08/17/shellcode-encrypting-traffic/" rel="nofollow"&gt;https://modexp.wordpress.com/2018/08/17/shellcode-encrypting-traffic/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-15-Penetration Testing of an FTP Server:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/19afe538be4b" rel="nofollow"&gt;https://medium.com/p/19afe538be4b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-16-Reverse Engineering of the Anubis Malware — Part 1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/741e12f5a6bd" rel="nofollow"&gt;https://medium.com/p/741e12f5a6bd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-17-Privilege Escalation on Linux with Live examples:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/privilege-escalation-linux-live-examples/" rel="nofollow"&gt;https://resources.infosecinstitute.com/privilege-escalation-linux-live-examples/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-18-Pentesting Cheatsheets:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ired.team/offensive-security-experiments/offensive-security-cheetsheets" rel="nofollow"&gt;https://ired.team/offensive-security-experiments/offensive-security-cheetsheets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-19-Powershell Payload Delivery via DNS using Invoke-PowerCloud:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ired.team/offensive-security-experiments/payload-delivery-via-dns-using-invoke-powercloud" rel="nofollow"&gt;https://ired.team/offensive-security-experiments/payload-delivery-via-dns-using-invoke-powercloud&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-20-SMART GOOGLE SEARCH QUERIES TO FIND VULNERABLE SITES – LIST OF 4500+ GOOGLE DORKS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sguru.org/ghdb-download-list-4500-google-dorks-free/" rel="nofollow"&gt;https://sguru.org/ghdb-download-list-4500-google-dorks-free/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-21-SQL Injection Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/" rel="nofollow"&gt;https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-22-SQLmap’s os-shell + Backdooring website with Weevely:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/8cb6dcf17fa4" rel="nofollow"&gt;https://medium.com/p/8cb6dcf17fa4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-23-SQLMap Tamper Scripts (SQL Injection and WAF bypass) Tips:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/c5a3f5764cb3" rel="nofollow"&gt;https://medium.com/p/c5a3f5764cb3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-24-Top 10 Essential NMAP Scripts for Web App Hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/c7829ff5ab7" rel="nofollow"&gt;https://medium.com/p/c7829ff5ab7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-25-BugBounty — How I was able to download the Source Code of India’s Largest Telecom Service Provider including dozens of more popular websites!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/52cf5c5640a1" rel="nofollow"&gt;https://medium.com/p/52cf5c5640a1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-26-Re ected XSS Bypass Filter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/de41d35239a3" rel="nofollow"&gt;https://medium.com/p/de41d35239a3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-27-XSS Payloads, getting past alert(1):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/217ab6c6ead7" rel="nofollow"&gt;https://medium.com/p/217ab6c6ead7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-28-XS-Searching Google’s bug tracker to find out vulnerable source code Or how side-channel timing attacks aren’t that impractical:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/50d8135b7549" rel="nofollow"&gt;https://medium.com/p/50d8135b7549&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-29-Web Application Firewall (WAF) Evasion Techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@themiddleblue/web-application-firewall-waf-evasion-techniques" rel="nofollow"&gt;https://medium.com/@themiddleblue/web-application-firewall-waf-evasion-techniques&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-30-OSINT Resources for 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/b15d55187c3f" rel="nofollow"&gt;https://medium.com/p/b15d55187c3f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-31-The OSINT Toolkit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/3b9233d1cdf9" rel="nofollow"&gt;https://medium.com/p/3b9233d1cdf9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-32-OSINT : Chasing Malware + C&amp;amp;C Servers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/3c893dc1e8cb" rel="nofollow"&gt;https://medium.com/p/3c893dc1e8cb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-33-OSINT tool for visualizing relationships between domains, IPs and email addresses:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/94377aa1f20a" rel="nofollow"&gt;https://medium.com/p/94377aa1f20a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-34-From OSINT to Internal – Gaining Access from outside the perimeter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.n00py.io/.../from-osint-to-internal-gaining-access-from-the-outside-the-perimeter" rel="nofollow"&gt;https://www.n00py.io/.../from-osint-to-internal-gaining-access-from-the-outside-the-perimeter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-35-Week in OSINT #2018–35:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/b2ab1765157b" rel="nofollow"&gt;https://medium.com/p/b2ab1765157b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-36-Week in OSINT #2019–14:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/df83f5b334b4" rel="nofollow"&gt;https://medium.com/p/df83f5b334b4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-37-Instagram OSINT | What A Nice Picture:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/8f4c7edfbcc6" rel="nofollow"&gt;https://medium.com/p/8f4c7edfbcc6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-38-awesome-osint:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jivoi/awesome-osint"&gt;https://github.com/jivoi/awesome-osint&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-39-OSINT_Team_Links:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/IVMachiavelli/OSINT_Team_Links"&gt;https://github.com/IVMachiavelli/OSINT_Team_Links&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-40-Open-Source Intelligence (OSINT) Reconnaissance:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/75edd7f7dada" rel="nofollow"&gt;https://medium.com/p/75edd7f7dada&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-41-Hacking Cryptocurrency Miners with OSINT Techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/677bbb3e0157" rel="nofollow"&gt;https://medium.com/p/677bbb3e0157&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-42-A penetration tester’s guide to sub- domain enumeration:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.appsecco.com/a-penetration-testers-guide-to-sub-domain-enumeration-7d842d5570f6?gi=f44ec9d8f4b5" rel="nofollow"&gt;https://blog.appsecco.com/a-penetration-testers-guide-to-sub-domain-enumeration-7d842d5570f6?gi=f44ec9d8f4b5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-43-Packages that actively seeks vulnerable exploits in the wild. More of an umbrella group for similar packages:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blackarch.org/recon.html" rel="nofollow"&gt;https://blackarch.org/recon.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-44-What tools I use for my recon during BugBounty:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/ec25f7f12e6d" rel="nofollow"&gt;https://medium.com/p/ec25f7f12e6d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-45-Command and Control – DNS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/09/06/command-and-control-dns/" rel="nofollow"&gt;https://pentestlab.blog/2017/09/06/command-and-control-dns/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-46-Command and Control – WebDAV:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/09/12/command-and-control-webdav/" rel="nofollow"&gt;https://pentestlab.blog/2017/09/12/command-and-control-webdav/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-47-Command and Control – Twitter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/09/26/command-and-control-twitter/" rel="nofollow"&gt;https://pentestlab.blog/2017/09/26/command-and-control-twitter/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-48-Command and Control – Kernel:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/10/02/command-and-control-kernel/" rel="nofollow"&gt;https://pentestlab.blog/2017/10/02/command-and-control-kernel/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-49-Source code disclosure via exposed .git folder:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentester.land/tutorials/.../source-code-disclosure-via-exposed-git-folder.html" rel="nofollow"&gt;https://pentester.land/tutorials/.../source-code-disclosure-via-exposed-git-folder.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-50-Pentesting Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hausec.com/pentesting-cheatsheet/" rel="nofollow"&gt;https://hausec.com/pentesting-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-51-Windows Userland Persistence Fundamentals:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fuzzysecurity.com/tutorials/19.html" rel="nofollow"&gt;https://www.fuzzysecurity.com/tutorials/19.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-52-A technique that a lot of SQL injection beginners don’t know | Atmanand Nagpure write-up:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/abdc7c269dd5" rel="nofollow"&gt;https://medium.com/p/abdc7c269dd5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-53-awesome-bug-bounty:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/djadmin/awesome-bug-bounty"&gt;https://github.com/djadmin/awesome-bug-bounty&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-54-dostoevsky-pentest-notes:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/dostoevskylabs/dostoevsky-pentest-notes"&gt;https://github.com/dostoevskylabs/dostoevsky-pentest-notes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-55-awesome-pentest:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/enaqx/awesome-pentest"&gt;https://github.com/enaqx/awesome-pentest&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-56-awesome-windows-exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/enddo/awesome-windows-exploitation"&gt;https://github.com/enddo/awesome-windows-exploitation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-57-awesome-exploit-development:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/FabioBaroni/awesome-exploit-development"&gt;https://github.com/FabioBaroni/awesome-exploit-development&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-58-BurpSuit + SqlMap = One Love:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/64451eb7b1e8" rel="nofollow"&gt;https://medium.com/p/64451eb7b1e8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-59-Crack WPA/WPA2 Wi-Fi Routers with Aircrack-ng and Hashcat:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/a5a5d3ffea46" rel="nofollow"&gt;https://medium.com/p/a5a5d3ffea46&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-60-DLL Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/04/04/dll-injection" rel="nofollow"&gt;https://pentestlab.blog/2017/04/04/dll-injection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-61-DLL Hijacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/03/27/dll-hijacking" rel="nofollow"&gt;https://pentestlab.blog/2017/03/27/dll-hijacking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-62-My Recon Process — DNS Enumeration:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/d0e288f81a8a" rel="nofollow"&gt;https://medium.com/p/d0e288f81a8a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-63-Google Dorks for nding Emails, Admin users etc:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://d4msec.wordpress.com/2015/09/03/google-dorks-for-finding-emails-admin-users-etc" rel="nofollow"&gt;https://d4msec.wordpress.com/2015/09/03/google-dorks-for-finding-emails-admin-users-etc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-64-Google Dorks List 2018:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/fb70d0cbc94" rel="nofollow"&gt;https://medium.com/p/fb70d0cbc94&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-65-Hack your own NMAP with a BASH one-liner:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/758352f9aece" rel="nofollow"&gt;https://medium.com/p/758352f9aece&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-66-UNIX / LINUX CHEAT SHEET:&lt;/p&gt;
&lt;p&gt;cheatsheetworld.com/programming/unix-linux-cheat-sheet/&lt;/p&gt;
&lt;p&gt;-67-Linux Capabilities Privilege Escalation via OpenSSL with SELinux Enabled and Enforced:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/74d2bec02099" rel="nofollow"&gt;https://medium.com/p/74d2bec02099&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-68- information gathering:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/category/information-gathering/" rel="nofollow"&gt;https://pentestlab.blog/category/information-gathering/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-69-post exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/category/post-exploitation/" rel="nofollow"&gt;https://pentestlab.blog/category/post-exploitation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-70-privilege  escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/category/privilege-escalation/" rel="nofollow"&gt;https://pentestlab.blog/category/privilege-escalation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-71-red team:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/category/red-team/" rel="nofollow"&gt;https://pentestlab.blog/category/red-team/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-72-The Ultimate Penetration Testing Command Cheat Sheet for Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/command-cheat-sheet-for-linux/" rel="nofollow"&gt;https://www.hackingloops.com/command-cheat-sheet-for-linux/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-73-Web Application Penetration Testing Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jdow.io/blog/2018/03/18/web-application-penetration-testing-methodology/" rel="nofollow"&gt;https://jdow.io/blog/2018/03/18/web-application-penetration-testing-methodology/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-74-Windows Kernel Exploits:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/04/24/windows-kernel-exploits" rel="nofollow"&gt;https://pentestlab.blog/2017/04/24/windows-kernel-exploits&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-75-Windows oneliners to download remote payload and execute arbitrary code:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://arno0x0x.wordpress.com/2017/11/20/windows-oneliners-to-download-remote-payload-and-execute-arbitrary-code/" rel="nofollow"&gt;https://arno0x0x.wordpress.com/2017/11/20/windows-oneliners-to-download-remote-payload-and-execute-arbitrary-code/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-76-Windows-Post-Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/emilyanncr/Windows-Post-Exploitation"&gt;https://github.com/emilyanncr/Windows-Post-Exploitation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-77-Windows Post Exploitation Shells and File Transfer with Netcat for Windows:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/a2ddc3557403" rel="nofollow"&gt;https://medium.com/p/a2ddc3557403&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-78-Windows Privilege Escalation Fundamentals:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fuzzysecurity.com/tutorials/16.html" rel="nofollow"&gt;https://www.fuzzysecurity.com/tutorials/16.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-79-Windows Privilege Escalation Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/" rel="nofollow"&gt;www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-80-Windows Active Directory Post Exploitation Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/48c2bd70388" rel="nofollow"&gt;https://medium.com/p/48c2bd70388&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-81-Windows Exploitation Tricks: Abusing the User-Mode Debugger:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://googleprojectzero.blogspot.com/2019/04/windows-exploitation-tricks-abusing.html" rel="nofollow"&gt;https://googleprojectzero.blogspot.com/2019/04/windows-exploitation-tricks-abusing.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-82-VNC Penetration Testing (Port 5901):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/vnc-penetration-testing" rel="nofollow"&gt;http://www.hackingarticles.in/vnc-penetration-testing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-83- Big List Of Google Dorks Hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://xspiyr.wordpress.com/2012/09/05/big-list-of-google-dorks-hacking" rel="nofollow"&gt;https://xspiyr.wordpress.com/2012/09/05/big-list-of-google-dorks-hacking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-84-List of google dorks for sql injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://deadlyhacker.wordpress.com/2013/05/09/list-of-google-dorks-for-sql-injection/" rel="nofollow"&gt;https://deadlyhacker.wordpress.com/2013/05/09/list-of-google-dorks-for-sql-injection/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-85-Download Google Dorks List 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/323c8067502c" rel="nofollow"&gt;https://medium.com/p/323c8067502c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-86-Comprehensive Guide to Sqlmap (Target Options):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/comprehensive-guide-to-sqlmap-target-options15249-2" rel="nofollow"&gt;http://www.hackingarticles.in/comprehensive-guide-to-sqlmap-target-options15249-2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-87-EMAIL RECONNAISSANCE AND PHISHING TEMPLATE GENERATION MADE SIMPLE:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.cybersyndicates.com/.../email-reconnaissance-phishing-template-generation-made-simple" rel="nofollow"&gt;www.cybersyndicates.com/.../email-reconnaissance-phishing-template-generation-made-simple&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-88-Comprehensive Guide on Gobuster Tool:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/comprehensive-guide-on-gobuster-tool/" rel="nofollow"&gt;https://www.hackingarticles.in/comprehensive-guide-on-gobuster-tool/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-89-My Top 5 Web Hacking Tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/e15b3c1f21e8" rel="nofollow"&gt;https://medium.com/p/e15b3c1f21e8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-90-[technical] Pen-testing resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/cd01de9036ad" rel="nofollow"&gt;https://medium.com/p/cd01de9036ad&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-91-File System Access on Webserver using Sqlmap:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/file-system-access-on-webserver-using-sqlmap" rel="nofollow"&gt;http://www.hackingarticles.in/file-system-access-on-webserver-using-sqlmap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-92-kali-linux-cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/NoorQureshi/kali-linux-cheatsheet"&gt;https://github.com/NoorQureshi/kali-linux-cheatsheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-93-Pentesting Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://anhtai.me/pentesting-cheatsheet/" rel="nofollow"&gt;https://anhtai.me/pentesting-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-94-Command Injection Exploitation through Sqlmap in DVWA (OS-cmd):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/command-injection-exploitation-through-sqlmap-in-dvwa" rel="nofollow"&gt;http://www.hackingarticles.in/command-injection-exploitation-through-sqlmap-in-dvwa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-95-XSS Payload List - Cross Site Scripting Vulnerability Payload List:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.kitploit.com/2018/05/xss-payload-list-cross-site-scripting.html" rel="nofollow"&gt;https://www.kitploit.com/2018/05/xss-payload-list-cross-site-scripting.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-96-Analyzing CVE-2018-6376 – Joomla!, Second Order SQL Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.notsosecure.com/analyzing-cve-2018-6376/" rel="nofollow"&gt;https://www.notsosecure.com/analyzing-cve-2018-6376/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-97-Exploiting Sql Injection with Nmap and Sqlmap:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/exploiting-sql-injection-nmap-sqlmap" rel="nofollow"&gt;http://www.hackingarticles.in/exploiting-sql-injection-nmap-sqlmap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-98-awesome-malware-analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rshipp/awesome-malware-analysis"&gt;https://github.com/rshipp/awesome-malware-analysis&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-99-Anatomy of UAC Attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fuzzysecurity.com/tutorials/27.html" rel="nofollow"&gt;https://www.fuzzysecurity.com/tutorials/27.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-100-awesome-cyber-skills:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/joe-shenouda/awesome-cyber-skills"&gt;https://github.com/joe-shenouda/awesome-cyber-skills&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-101-5 ways to Banner Grabbing:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-banner-grabbing" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-banner-grabbing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-102-6 Ways to Hack PostgresSQL Login:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/6-ways-to-hack-postgressql-login" rel="nofollow"&gt;http://www.hackingarticles.in/6-ways-to-hack-postgressql-login&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-103-6 Ways to Hack SSH Login Password:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/6-ways-to-hack-ssh-login-password" rel="nofollow"&gt;http://www.hackingarticles.in/6-ways-to-hack-ssh-login-password&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-104-10 Free Ways to Find Someone’s Email Address:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/e6f37f5fe10a" rel="nofollow"&gt;https://medium.com/p/e6f37f5fe10a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-105-USING A SCF FILE TO GATHER HASHES:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://1337red.wordpress.com/using-a-scf-file-to-gather-hashes" rel="nofollow"&gt;https://1337red.wordpress.com/using-a-scf-file-to-gather-hashes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-106-Hack Remote Windows PC using DLL Files (SMB Delivery Exploit):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-remote-windows-pc-using-dll-files-smb-delivery-exploit" rel="nofollow"&gt;http://www.hackingarticles.in/hack-remote-windows-pc-using-dll-files-smb-delivery-exploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;107-Hack Remote Windows PC using Office OLE Multiple DLL Hijack Vulnerabilities:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-remote-windows-pc-using-office-ole-multiple-dll-hijack-vulnerabilities" rel="nofollow"&gt;http://www.hackingarticles.in/hack-remote-windows-pc-using-office-ole-multiple-dll-hijack-vulnerabilities&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-108-BUG BOUNTY HUNTING (METHODOLOGY , TOOLKIT , TIPS &amp;amp; TRICKS , Blogs):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/ef6542301c65" rel="nofollow"&gt;https://medium.com/p/ef6542301c65&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-109-How To Perform External Black-box Penetration Testing in Organization with “ZERO” Information:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/external-black-box-penetration-testing" rel="nofollow"&gt;https://gbhackers.com/external-black-box-penetration-testing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-110-A Complete Penetration Testing &amp;amp; Hacking Tools List for Hackers &amp;amp; Security Professionals:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/hacking-tools-list" rel="nofollow"&gt;https://gbhackers.com/hacking-tools-list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-111-Most Important Considerations with Malware Analysis Cheats And Tools list:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/malware-analysis-cheat-sheet-and-tools-list" rel="nofollow"&gt;https://gbhackers.com/malware-analysis-cheat-sheet-and-tools-list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-112-Awesome-Hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Hack-with-Github/Awesome-Hacking"&gt;https://github.com/Hack-with-Github/Awesome-Hacking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-113-awesome-threat-intelligence:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/hslatman/awesome-threat-intelligence"&gt;https://github.com/hslatman/awesome-threat-intelligence&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-114-awesome-yara:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/InQuest/awesome-yara"&gt;https://github.com/InQuest/awesome-yara&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-115-Red-Team-Infrastructure-Wiki:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/bluscreenofjeff/Red-Team-Infrastructure-Wiki"&gt;https://github.com/bluscreenofjeff/Red-Team-Infrastructure-Wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-116-awesome-pentest:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/enaqx/awesome-pentest"&gt;https://github.com/enaqx/awesome-pentest&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-117-awesome-cyber-skills:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/joe-shenouda/awesome-cyber-skills"&gt;https://github.com/joe-shenouda/awesome-cyber-skills&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-118-pentest-wiki:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/nixawk/pentest-wiki"&gt;https://github.com/nixawk/pentest-wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-119-awesome-web-security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/qazbnm456/awesome-web-security"&gt;https://github.com/qazbnm456/awesome-web-security&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-120-Infosec_Reference:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rmusser01/Infosec_Reference"&gt;https://github.com/rmusser01/Infosec_Reference&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-121-awesome-iocs:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/sroberts/awesome-iocs"&gt;https://github.com/sroberts/awesome-iocs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-122-blackhat-arsenal-tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/toolswatch/blackhat-arsenal-tools"&gt;https://github.com/toolswatch/blackhat-arsenal-tools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-123-awesome-social-engineering:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/v2-dev/awesome-social-engineering"&gt;https://github.com/v2-dev/awesome-social-engineering&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-124-Penetration Testing Framework 0.59:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.vulnerabilityassessment.co.uk/Penetration%20Test.html" rel="nofollow"&gt;www.vulnerabilityassessment.co.uk/Penetration%20Test.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-125-Penetration Testing Tools Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://highon.coffee/blog/penetration-testing-tools-cheat-sheet/" rel="nofollow"&gt;https://highon.coffee/blog/penetration-testing-tools-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-126-SN1PER – A Detailed Explanation of Most Advanced Automated Information Gathering &amp;amp; Penetration Testing Tool:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/sn1per-a-detailed-explanation-of-most-advanced-automated-information-gathering-penetration-testing-tool" rel="nofollow"&gt;https://gbhackers.com/sn1per-a-detailed-explanation-of-most-advanced-automated-information-gathering-penetration-testing-tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-127-Spear Phishing 101:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.inspired-sec.com/archive/2017/05/07/Phishing.html" rel="nofollow"&gt;https://blog.inspired-sec.com/archive/2017/05/07/Phishing.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-128-100 ways to discover (part 1):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sylarsec.com/2019/01/11/100-ways-to-discover-part-1/" rel="nofollow"&gt;https://sylarsec.com/2019/01/11/100-ways-to-discover-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-129-Comprehensive Guide to SSH Tunnelling:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/comprehensive-guide-to-ssh-tunnelling/" rel="nofollow"&gt;http://www.hackingarticles.in/comprehensive-guide-to-ssh-tunnelling/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-130-Capture VNC Session of Remote PC using SetToolkit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/capture-vnc-session-remote-pc-using-settoolkit/" rel="nofollow"&gt;http://www.hackingarticles.in/capture-vnc-session-remote-pc-using-settoolkit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-131-Hack Remote PC using PSEXEC Injection in SET Toolkit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-remote-pc-using-psexec-injection-set-toolkit/" rel="nofollow"&gt;http://www.hackingarticles.in/hack-remote-pc-using-psexec-injection-set-toolkit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-132-Denial of Service Attack on Network PC using SET Toolkit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/denial-of-service-attack-on-network-pc-using-set-toolkit/" rel="nofollow"&gt;http://www.hackingarticles.in/denial-of-service-attack-on-network-pc-using-set-toolkit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-133-Hack Gmail and Facebook of Remote PC using DNS Spoofing and SET Toolkit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-gmail-and-facebook-of-remote-pc-using-dns-spoofing-and-set-toolkit/" rel="nofollow"&gt;http://www.hackingarticles.in/hack-gmail-and-facebook-of-remote-pc-using-dns-spoofing-and-set-toolkit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-134-Hack Any Android Phone with DroidJack (Beginner’s Guide):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-android-phone-droidjack-beginners-guide/" rel="nofollow"&gt;http://www.hackingarticles.in/hack-android-phone-droidjack-beginners-guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-135-HTTP RAT Tutorial for Beginners:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/http-rat-tutorial-beginners/" rel="nofollow"&gt;http://www.hackingarticles.in/http-rat-tutorial-beginners/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-136-5 ways to Create Permanent Backdoor in Remote PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-create-permanent-backdoor-remote-pc/" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-create-permanent-backdoor-remote-pc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-137-How to Enable and Monitor Firewall Log in Windows PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/enable-monitor-firewall-log-windows-pc/" rel="nofollow"&gt;http://www.hackingarticles.in/enable-monitor-firewall-log-windows-pc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-138-EMPIRE TIPS AND TRICKS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2015/08/26/empire-tips-and-tricks/" rel="nofollow"&gt;https://enigma0x3.net/2015/08/26/empire-tips-and-tricks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-139-CSRF account takeover Explained Automated/Manual:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/447e4b96485b" rel="nofollow"&gt;https://medium.com/p/447e4b96485b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-140-CSRF Exploitation using XSS:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/csrf-exploitation-using-xss" rel="nofollow"&gt;http://www.hackingarticles.in/csrf-exploitation-using-xss&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-141-Dumping Domain Password Hashes:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2018/07/04/dumping-domain-password-hashes/" rel="nofollow"&gt;https://pentestlab.blog/2018/07/04/dumping-domain-password-hashes/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-142-Empire Post Exploitation – Unprivileged Agent to DA Walkthrough:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bneg.io/2017/05/24/empire-post-exploitation/" rel="nofollow"&gt;https://bneg.io/2017/05/24/empire-post-exploitation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-143-Dropbox for the Empire:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bneg.io/2017/05/13/dropbox-for-the-empire/" rel="nofollow"&gt;https://bneg.io/2017/05/13/dropbox-for-the-empire/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-144-Empire without PowerShell.exe:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bneg.io/2017/07/26/empire-without-powershell-exe/" rel="nofollow"&gt;https://bneg.io/2017/07/26/empire-without-powershell-exe/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-145-REVIVING DDE: USING ONENOTE AND EXCEL FOR CODE EXECUTION:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2018/01/29/reviving-dde-using-onenote-and-excel-for-code-execution/" rel="nofollow"&gt;https://enigma0x3.net/2018/01/29/reviving-dde-using-onenote-and-excel-for-code-execution/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-146-PHISHING WITH EMPIRE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2016/03/15/phishing-with-empire/" rel="nofollow"&gt;https://enigma0x3.net/2016/03/15/phishing-with-empire/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-146-BYPASSING UAC ON WINDOWS 10 USING DISK CLEANUP:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2016/07/22/bypassing-uac-on-windows-10-using-disk-cleanup/" rel="nofollow"&gt;https://enigma0x3.net/2016/07/22/bypassing-uac-on-windows-10-using-disk-cleanup/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-147-“FILELESS” UAC BYPASS USING EVENTVWR.EXE AND REGISTRY HIJACKING:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/" rel="nofollow"&gt;https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-148-“FILELESS” UAC BYPASS USING SDCLT.EXE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe/" rel="nofollow"&gt;https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-149-PHISHING AGAINST PROTECTED VIEW:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2017/07/13/phishing-against-protected-view/" rel="nofollow"&gt;https://enigma0x3.net/2017/07/13/phishing-against-protected-view/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-150-LATERAL MOVEMENT USING EXCEL.APPLICATION AND DCOM:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2017/09/11/lateral-movement-using-excel-application-and-dcom/" rel="nofollow"&gt;https://enigma0x3.net/2017/09/11/lateral-movement-using-excel-application-and-dcom/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-151-enum4linux Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://highon.coffee/blog/enum4linux-cheat-sheet/" rel="nofollow"&gt;https://highon.coffee/blog/enum4linux-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-152-enumeration:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://technologyredefine.blogspot.com/2017/11/enumeration.html" rel="nofollow"&gt;https://technologyredefine.blogspot.com/2017/11/enumeration.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-153-Command and Control – WebSocket:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/12/06/command-and-control-websocket" rel="nofollow"&gt;https://pentestlab.blog/2017/12/06/command-and-control-websocket&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-154-Command and Control – WMI:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/11/20/command-and-control-wmi" rel="nofollow"&gt;https://pentestlab.blog/2017/11/20/command-and-control-wmi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-155-Dangerous Virus For Windows Crashes Everything Hack window Using Virus:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://thelearninghacking.com/create-virus-hack-windows/" rel="nofollow"&gt;http://thelearninghacking.com/create-virus-hack-windows/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-156-Comprehensive Guide to Nmap Port Status:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/comprehensive-guide-nmap-port-status" rel="nofollow"&gt;http://www.hackingarticles.in/comprehensive-guide-nmap-port-status&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-157-Commix – Automated All-in-One OS Command Injection and Exploitation Tool:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/commix-automated-all-in-one-os-command-injection-and-exploitation-tool" rel="nofollow"&gt;https://gbhackers.com/commix-automated-all-in-one-os-command-injection-and-exploitation-tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-158-Compromising Jenkins and extracting credentials:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.n00py.io/2017/01/compromising-jenkins-and-extracting-credentials/" rel="nofollow"&gt;https://www.n00py.io/2017/01/compromising-jenkins-and-extracting-credentials/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-159-footprinting:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://technologyredefine.blogspot.com/2017/09/footprinting_17.html" rel="nofollow"&gt;https://technologyredefine.blogspot.com/2017/09/footprinting_17.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-160-awesome-industrial-control-system-security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/hslatman/awesome-industrial-control-system-security"&gt;https://github.com/hslatman/awesome-industrial-control-system-security&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-161-xss-payload-list:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ismailtasdelen/xss-payload-list"&gt;https://github.com/ismailtasdelen/xss-payload-list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-162-awesome-vehicle-security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jaredthecoder/awesome-vehicle-security"&gt;https://github.com/jaredthecoder/awesome-vehicle-security&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-163-awesome-osint:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jivoi/awesome-osint"&gt;https://github.com/jivoi/awesome-osint&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-164-awesome-python:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/vinta/awesome-python"&gt;https://github.com/vinta/awesome-python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-165-Microsoft Windows - UAC Protection Bypass (Via Slui File Handler Hijack) (Metasploit):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/download/44830.rb" rel="nofollow"&gt;https://www.exploit-db.com/download/44830.rb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-166-nbtscan Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://highon.coffee/blog/nbtscan-cheat-sheet/" rel="nofollow"&gt;https://highon.coffee/blog/nbtscan-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-167-neat-tricks-to-bypass-csrfprotection:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.slideshare.net/0ang3el/neat-tricks-to-bypass-csrfprotection" rel="nofollow"&gt;www.slideshare.net/0ang3el/neat-tricks-to-bypass-csrfprotection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-168-ACCESSING CLIPBOAR D FROM THE LOC K SC REEN IN WI NDOWS 10 #2:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://oddvar.moe/2017/01/27/access-clipboard-from-lock-screen-in-windows-10-2/" rel="nofollow"&gt;https://oddvar.moe/2017/01/27/access-clipboard-from-lock-screen-in-windows-10-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-169-NMAP CHEAT-SHEET (Nmap Scanning Types, Scanning Commands , NSE Scripts):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/868a7bd7f692" rel="nofollow"&gt;https://medium.com/p/868a7bd7f692&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-170-Nmap Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://highon.coffee/blog/nmap-cheat-sheet/" rel="nofollow"&gt;https://highon.coffee/blog/nmap-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-171-Powershell Without Powershell – How To Bypass Application Whitelisting, Environment Restrictions &amp;amp; AV:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/powershell-without-powershell-how-to-bypass-application-whitelisting-environment-restrictions-av/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/powershell-without-powershell-how-to-bypass-application-whitelisting-environment-restrictions-av/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-172-Phishing with PowerPoint:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/phishing-with-powerpoint/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/phishing-with-powerpoint/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-173-hide-payload-ms-office-document-properties:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/hide-payload-ms-office-document-properties/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/hide-payload-ms-office-document-properties/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-174-How to Evade Application Whitelisting Using REGSVR32:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/evade-application-whitelisting-using-regsvr32/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/evade-application-whitelisting-using-regsvr32/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-175-How to Build a C2 Infrastructure with Digital Ocean – Part 1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/build-c2-infrastructure-digital-ocean-part-1/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/build-c2-infrastructure-digital-ocean-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-176-WordPress Penetration Testing using Symposium Plugin SQL Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/wordpress-penetration-testing-using-symposium-plugin-sql-injection" rel="nofollow"&gt;http://www.hackingarticles.in/wordpress-penetration-testing-using-symposium-plugin-sql-injection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-177-Manual SQL Injection Exploitation Step by Step:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/manual-sql-injection-exploitation-step-step" rel="nofollow"&gt;http://www.hackingarticles.in/manual-sql-injection-exploitation-step-step&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-178-MSSQL Penetration Testing with Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/mssql-penetration-testing-metasploit" rel="nofollow"&gt;http://www.hackingarticles.in/mssql-penetration-testing-metasploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-179-Multiple Ways to Get root through Writable File:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/multiple-ways-to-get-root-through-writable-file" rel="nofollow"&gt;http://www.hackingarticles.in/multiple-ways-to-get-root-through-writable-file&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-180-MySQL Penetration Testing with Nmap:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/mysql-penetration-testing-nmap" rel="nofollow"&gt;http://www.hackingarticles.in/mysql-penetration-testing-nmap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-181-NetBIOS and SMB Penetration Testing on Windows:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/netbios-and-smb-penetration-testing-on-windows" rel="nofollow"&gt;http://www.hackingarticles.in/netbios-and-smb-penetration-testing-on-windows&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-182-Network Packet Forensic using Wireshark:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/network-packet-forensic-using-wireshark" rel="nofollow"&gt;http://www.hackingarticles.in/network-packet-forensic-using-wireshark&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-183-Escape and Evasion Egressing Restricted Networks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.optiv.com/blog/escape-and-evasion-egressing-restricted-networks/" rel="nofollow"&gt;https://www.optiv.com/blog/escape-and-evasion-egressing-restricted-networks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-183-Awesome-Hacking-Resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/vitalysim/Awesome-Hacking-Resources"&gt;https://github.com/vitalysim/Awesome-Hacking-Resources&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-184-Hidden directories and les as a source of sensitive information about web application:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/84e5c534e5ad" rel="nofollow"&gt;https://medium.com/p/84e5c534e5ad&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-185-Hiding Registry keys with PSRe ect:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://posts.specterops.io/hiding-registry-keys-with-psreflect-b18ec5ac8353" rel="nofollow"&gt;https://posts.specterops.io/hiding-registry-keys-with-psreflect-b18ec5ac8353&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-186-awesome-cve-poc:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/qazbnm456/awesome-cve-poc"&gt;https://github.com/qazbnm456/awesome-cve-poc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-187-Linux Capabilities Privilege Escalation via OpenSSL with SELinux Enabled and Enforced:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/74d2bec02099" rel="nofollow"&gt;https://medium.com/p/74d2bec02099&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-188-Post Exploitation in Windows using dir Command:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/post-exploitation-windows-using-dir-command" rel="nofollow"&gt;http://www.hackingarticles.in/post-exploitation-windows-using-dir-command&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;189-Web Application Firewall (WAF) Evasion Techniques #2:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/secjuice/web-application-firewall-waf-evasion-techniques-2-125995f3e7b0" rel="nofollow"&gt;https://medium.com/secjuice/web-application-firewall-waf-evasion-techniques-2-125995f3e7b0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-190-Forensics Investigation of Remote PC (Part 1):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/forensics-investigation-of-remote-pc-part-1" rel="nofollow"&gt;http://www.hackingarticles.in/forensics-investigation-of-remote-pc-part-1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-191-CloudFront Hijacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.mindpointgroup.com/blog/pen-test/cloudfront-hijacking/" rel="nofollow"&gt;https://www.mindpointgroup.com/blog/pen-test/cloudfront-hijacking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-192-PowerPoint and Custom Actions:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cofense.com/powerpoint-and-custom-actions/" rel="nofollow"&gt;https://cofense.com/powerpoint-and-custom-actions/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-193-Privilege Escalation on Windows 7,8,10, Server 2008, Server 2012 using Potato:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/privilege-escalation-on-windows-7810-server-2008-server-2012-using-potato" rel="nofollow"&gt;http://www.hackingarticles.in/privilege-escalation-on-windows-7810-server-2008-server-2012-using-potato&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-194-How to intercept TOR hidden service requests with Burp:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/6214035963a0" rel="nofollow"&gt;https://medium.com/p/6214035963a0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-195-How to Make a Captive Portal of Death:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/48e82a1d81a/share/twitter" rel="nofollow"&gt;https://medium.com/p/48e82a1d81a/share/twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-196-How to find any CEO’s email address in minutes:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/70dcb96e02b0" rel="nofollow"&gt;https://medium.com/p/70dcb96e02b0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;197-Microsoft Windows 10 - Child Process Restriction Mitigation Bypass:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/download/44888.txt" rel="nofollow"&gt;https://www.exploit-db.com/download/44888.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-198-Microsoft Windows - Token Process Trust SID Access Check Bypass Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/download/44630.txt" rel="nofollow"&gt;https://www.exploit-db.com/download/44630.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-199-Microsoft Word upload to Stored XSS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.n00py.io/2018/03/microsoft-word-upload-to-stored-xss/" rel="nofollow"&gt;https://www.n00py.io/2018/03/microsoft-word-upload-to-stored-xss/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-200-MobileApp-Pentest-Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/tanprathan/MobileApp-Pentest-Cheatsheet"&gt;https://github.com/tanprathan/MobileApp-Pentest-Cheatsheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-201-awesome:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/sindresorhus/awesome"&gt;https://github.com/sindresorhus/awesome&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-201-writing arm shellcode:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://azeria-labs.com/writing-arm-shellcode/" rel="nofollow"&gt;https://azeria-labs.com/writing-arm-shellcode/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-202-debugging with gdb introduction:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://azeria-labs.com/debugging-with-gdb-introduction/" rel="nofollow"&gt;https://azeria-labs.com/debugging-with-gdb-introduction/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-203-emulate raspberrypi with qemu:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://azeria-labs.com/emulate-raspberry-pi-with-qemu/" rel="nofollow"&gt;https://azeria-labs.com/emulate-raspberry-pi-with-qemu/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-204-Bash One-Liner to Check Your Password(s) via pwnedpasswords.com’s API Using the k-Anonymity Method:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/a5807a9a8056" rel="nofollow"&gt;https://medium.com/p/a5807a9a8056&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-205-A Red Teamer's guide to pivoting:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://artkond.com/2017/03/23/pivoting-guide/" rel="nofollow"&gt;https://artkond.com/2017/03/23/pivoting-guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-206-Using WebDAV features as a covert channel:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://arno0x0x.wordpress.com/2017/09/07/using-webdav-features-as-a-covert-channel/" rel="nofollow"&gt;https://arno0x0x.wordpress.com/2017/09/07/using-webdav-features-as-a-covert-channel/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-207-A View of Persistence:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rastamouse.me/2018/03/a-view-of-persistence/" rel="nofollow"&gt;https://rastamouse.me/2018/03/a-view-of-persistence/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-208- pupy websocket transport:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bitrot.sh/post/28-11-2017-pupy-websocket-transport/" rel="nofollow"&gt;https://bitrot.sh/post/28-11-2017-pupy-websocket-transport/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-209-Subdomains Enumeration Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentester.land/cheatsheets/2018/11/.../subdomains-enumeration-cheatsheet.html" rel="nofollow"&gt;https://pentester.land/cheatsheets/2018/11/.../subdomains-enumeration-cheatsheet.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-210-DNS Reconnaissance – DNSRecon:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2012/11/13/dns-reconnaissance-dnsrecon/" rel="nofollow"&gt;https://pentestlab.blog/2012/11/13/dns-reconnaissance-dnsrecon/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-211-Cheatsheets:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bitrot.sh/cheatsheet" rel="nofollow"&gt;https://bitrot.sh/cheatsheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-212-Understanding Guide to Nmap Firewall Scan (Part 2):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/understanding-guide-nmap-firewall-scan-part-2" rel="nofollow"&gt;http://www.hackingarticles.in/understanding-guide-nmap-firewall-scan-part-2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-213-Exploit Office 2016 using CVE-2018-0802:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://technologyredefine.blogspot.com/2018/01/exploit-office-2016-using-cve-2018-0802.html" rel="nofollow"&gt;https://technologyredefine.blogspot.com/2018/01/exploit-office-2016-using-cve-2018-0802.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-214-windows-exploit-suggester:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://technologyredefine.blogspot.com/2018/01/windows-exploit-suggester.html" rel="nofollow"&gt;https://technologyredefine.blogspot.com/2018/01/windows-exploit-suggester.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-215-INSTALLING PRESISTENCE BACKDOOR IN WINDOWS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://technologyredefine.blogspot.com/2018/01/installing-presistence-backdoor-in.html" rel="nofollow"&gt;https://technologyredefine.blogspot.com/2018/01/installing-presistence-backdoor-in.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-216-IDS, IPS AND FIREWALL EVASION USING NMAP:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://technologyredefine.blogspot.com/2017/09/ids-ips-and-firewall-evasion-using-nmap.html" rel="nofollow"&gt;https://technologyredefine.blogspot.com/2017/09/ids-ips-and-firewall-evasion-using-nmap.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-217-Wireless Penetration Testing Checklist – A Detailed Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/wireless-penetration-testing-checklist-a-detailed-cheat-sheet" rel="nofollow"&gt;https://gbhackers.com/wireless-penetration-testing-checklist-a-detailed-cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;218-Most Important Web Application Security Tools &amp;amp; Resources for Hackers and Security Professionals:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/web-application-security-tools-resources" rel="nofollow"&gt;https://gbhackers.com/web-application-security-tools-resources&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-219-Web Application Penetration Testing Checklist – A Detailed Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/web-application-penetration-testing-checklist-a-detailed-cheat-sheet" rel="nofollow"&gt;https://gbhackers.com/web-application-penetration-testing-checklist-a-detailed-cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-220-Top 500 Most Important XSS Script Cheat Sheet for Web Application Penetration Testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/top-500-important-xss-cheat-sheet" rel="nofollow"&gt;https://gbhackers.com/top-500-important-xss-cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-221-USBStealer – Password Hacking Tool For Windows Machine Applications:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/pasword-hacking" rel="nofollow"&gt;https://gbhackers.com/pasword-hacking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-222-Most Important Mobile Application Penetration Testing Cheat sheet with Tools &amp;amp; Resources for Security Professionals:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/mobile-application-penetration-testing" rel="nofollow"&gt;https://gbhackers.com/mobile-application-penetration-testing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-223-Metasploit Can Be Directly Used For Hardware Penetration Testing Now:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/metasploit-can-be-directly-used-for-hardware-vulnerability-testing-now" rel="nofollow"&gt;https://gbhackers.com/metasploit-can-be-directly-used-for-hardware-vulnerability-testing-now&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-224-How to Perform Manual SQL Injection While Pentesting With Single quote Error Based Parenthesis Method:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/manual-sql-injection-2" rel="nofollow"&gt;https://gbhackers.com/manual-sql-injection-2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-225-Email Spoo ng – Exploiting Open Relay configured Public Mailservers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/email-spoofing-exploiting-open-relay" rel="nofollow"&gt;https://gbhackers.com/email-spoofing-exploiting-open-relay&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-226-Email Header Analysis – Received Email is Genuine or Spoofed:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/email-header-analysis" rel="nofollow"&gt;https://gbhackers.com/email-header-analysis&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-227-Most Important Cyber Threat Intelligence Tools List For Hackers and Security Professionals:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/cyber-threat-intelligence-tools" rel="nofollow"&gt;https://gbhackers.com/cyber-threat-intelligence-tools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-228-Creating and Analyzing a Malicious PDF File with PDF-Parser Tool:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/creating-and-analyzing-a-malicious-pdf-file-with-pdf-parser-tool" rel="nofollow"&gt;https://gbhackers.com/creating-and-analyzing-a-malicious-pdf-file-with-pdf-parser-tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-229-Commix – Automated All-in-One OS Command Injection and Exploitation Tool:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/commix-automated-all-in-one-os-command-injection-and-exploitation-tool" rel="nofollow"&gt;https://gbhackers.com/commix-automated-all-in-one-os-command-injection-and-exploitation-tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-230-Advanced ATM Penetration Testing Methods:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/advanced-atm-penetration-testing-methods" rel="nofollow"&gt;https://gbhackers.com/advanced-atm-penetration-testing-methods&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-231-A8-Cross-Site Request Forgery (CSRF):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/a8-cross-site-request-forgery-csrf" rel="nofollow"&gt;https://gbhackers.com/a8-cross-site-request-forgery-csrf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-232-Fully undetectable backdooring PE File:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://haiderm.com/fully-undetectable-backdooring-pe-file/" rel="nofollow"&gt;https://haiderm.com/fully-undetectable-backdooring-pe-file/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-233-backdooring exe files:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://haiderm.com/tag/backdooring-exe-files/" rel="nofollow"&gt;https://haiderm.com/tag/backdooring-exe-files/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-234-From PHP (s)HELL to Powershell Heaven:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/da40ce840da8" rel="nofollow"&gt;https://medium.com/p/da40ce840da8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-235-Forensic Investigation of Nmap Scan using Wireshark:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/forensic-investigation-of-nmap-scan-using-wireshark" rel="nofollow"&gt;http://www.hackingarticles.in/forensic-investigation-of-nmap-scan-using-wireshark&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-236-Unleashing an Ultimate XSS Polyglot:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/0xsobky/HackVault/wiki"&gt;https://github.com/0xsobky/HackVault/wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-237-wifi-arsenal:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/0x90/wifi-arsenal"&gt;https://github.com/0x90/wifi-arsenal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-238-XXE_payloads:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/staaldraad/01415b990939494879b4"&gt;https://gist.github.com/staaldraad/01415b990939494879b4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-239-xss_payloads_2016:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/7ioSecurity/XSS-Payloads/raw/master/xss_payloads_2016"&gt;https://github.com/7ioSecurity/XSS-Payloads/raw/master/xss_payloads_2016&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-240-A curated list of awesome command-line frameworks, toolkits, guides and gizmos. Inspired by awesome-php.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/alebcay/awesome-shell"&gt;https://github.com/alebcay/awesome-shell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-241-The goal of this repository is to document the most common techniques to bypass AppLocker.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/api0cradle/UltimateAppLockerByPassList"&gt;https://github.com/api0cradle/UltimateAppLockerByPassList&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-242-A curated list of CTF frameworks, libraries, resources and softwares:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/apsdehal/awesome-ctf"&gt;https://github.com/apsdehal/awesome-ctf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-243-A collection of android security related resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ashishb/android-security-awesome"&gt;https://github.com/ashishb/android-security-awesome&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-244-OSX and iOS related security tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ashishb/osx-and-ios-security-awesome"&gt;https://github.com/ashishb/osx-and-ios-security-awesome&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-245-regexp-security-cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/attackercan/regexp-security-cheatsheet"&gt;https://github.com/attackercan/regexp-security-cheatsheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-246-PowerView-2.0 tips and tricks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/HarmJ0y/3328d954607d71362e3c"&gt;https://gist.github.com/HarmJ0y/3328d954607d71362e3c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-247-A curated list of awesome awesomeness:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/bayandin/awesome-awesomeness"&gt;https://github.com/bayandin/awesome-awesomeness&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-248-Android App Security Checklist:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/b-mueller/android_app_security_checklist"&gt;https://github.com/b-mueller/android_app_security_checklist&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-249-Crack WPA/WPA2 Wi-Fi Routers with Airodump-ng and Aircrack-ng/Hashcat:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/brannondorsey/wifi-cracking"&gt;https://github.com/brannondorsey/wifi-cracking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-250-My-Gray-Hacker-Resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/bt3gl/My-Gray-Hacker-Resources"&gt;https://github.com/bt3gl/My-Gray-Hacker-Resources&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-251-A collection of tools developed by other researchers in the Computer Science area to process network traces:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/caesar0301/awesome-pcaptools"&gt;https://github.com/caesar0301/awesome-pcaptools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-252-A curated list of awesome Hacking tutorials, tools and resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/carpedm20/awesome-hacking"&gt;https://github.com/carpedm20/awesome-hacking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-253-RFSec-ToolKit is a collection of Radio Frequency Communication Protocol Hacktools.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/cn0xroot/RFSec-ToolKit"&gt;https://github.com/cn0xroot/RFSec-ToolKit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-254-Collection of the cheat sheets useful for pentesting:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/coreb1t/awesome-pentest-cheat-sheets"&gt;https://github.com/coreb1t/awesome-pentest-cheat-sheets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-255-Collection of the cheat sheets useful for pentesting:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/coreb1t/awesome-pentest-cheat-sheets"&gt;https://github.com/coreb1t/awesome-pentest-cheat-sheets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-256-Collection of the cheat sheets useful for pentesting:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/coreb1t/awesome-pentest-cheat-sheets"&gt;https://github.com/coreb1t/awesome-pentest-cheat-sheets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-257-A curated list of awesome forensic analysis tools and resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/cugu/awesome-forensics"&gt;https://github.com/cugu/awesome-forensics&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-258-Open-Redirect-Payloads:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/cujanovic/Open-Redirect-Payloads"&gt;https://github.com/cujanovic/Open-Redirect-Payloads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-259-A Threat hunter's playbook to aid the development of techniques and hypothesis for hunting campaigns.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Cyb3rWard0g/ThreatHunter-Playbook"&gt;https://github.com/Cyb3rWard0g/ThreatHunter-Playbook&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-260-Windows memory hacking library:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/DarthTon/Blackbone"&gt;https://github.com/DarthTon/Blackbone&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-261-A collective list of public JSON APIs for use in security.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/deralexxx/security-apis"&gt;https://github.com/deralexxx/security-apis&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-262-An authoritative list of awesome devsecops tools with the help from community experiments and contributions.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/devsecops/awesome-devsecops"&gt;https://github.com/devsecops/awesome-devsecops&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-263-List of Awesome Hacking places, organised by Country and City, listing if it features power and wifi:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/diasdavid/awesome-hacking-spots"&gt;https://github.com/diasdavid/awesome-hacking-spots&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-264-A comprehensive curated list of available Bug Bounty &amp;amp; Disclosure Programs and Write-ups:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/djadmin/awesome-bug-bounty"&gt;https://github.com/djadmin/awesome-bug-bounty&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-265-Notes for taking the OSCP in 2097:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/dostoevskylabs/dostoevsky-pentest-notes"&gt;https://github.com/dostoevskylabs/dostoevsky-pentest-notes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-266-A curated list of awesome Windows Exploitation resources, and shiny things. Inspired by awesom:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/enddo/awesome-windows-exploitation"&gt;https://github.com/enddo/awesome-windows-exploitation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-267-A curated list of resources (books, tutorials, courses, tools and vulnerable applications) for learning about Exploit Development:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/FabioBaroni/awesome-exploit-development"&gt;https://github.com/FabioBaroni/awesome-exploit-development&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-268-A curated list of awesome reversing resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/fdivrp/awesome-reversing"&gt;https://github.com/fdivrp/awesome-reversing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-269-Git All the Payloads! A collection of web attack payloads:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/foospidy/payloads"&gt;https://github.com/foospidy/payloads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-270-GitHub Project Resource List:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/FuzzySecurity/Resource-List"&gt;https://github.com/FuzzySecurity/Resource-List&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-271-Use your macOS terminal shell to do awesome things.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/herrbischoff/awesome-macos-command-line"&gt;https://github.com/herrbischoff/awesome-macos-command-line&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-272-Defeating Windows User Account Control:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/hfiref0x/UACME"&gt;https://github.com/hfiref0x/UACME&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-273-Free Security and Hacking eBooks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Hack-with-Github/Free-Security-eBooks"&gt;https://github.com/Hack-with-Github/Free-Security-eBooks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-274-Universal Radio Hacker: investigate wireless protocols like a boss:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jopohl/urh"&gt;https://github.com/jopohl/urh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-275-A curated list of movies every hacker &amp;amp; cyberpunk must watch:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/k4m4/movies-for-hackers"&gt;https://github.com/k4m4/movies-for-hackers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-276-Various public documents, whitepapers and articles about APT campaigns:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/kbandla/APTnotes"&gt;https://github.com/kbandla/APTnotes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-277-A database of common, interesting or useful commands, in one handy referable form:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/leostat/rtfm"&gt;https://github.com/leostat/rtfm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-278-A curated list of tools for incident response:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/meirwah/awesome-incident-response"&gt;https://github.com/meirwah/awesome-incident-response&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-279-A curated list of awesome guides, tools, and other resources related to the security and compromise of locks, safes, and keys:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/meitar/awesome-lockpicking"&gt;https://github.com/meitar/awesome-lockpicking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-280-A curated list of static analysis tools, linters and code quality checkers for various programming languages:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mre/awesome-static-analysis"&gt;https://github.com/mre/awesome-static-analysis&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-281-A Collection of Hacks in IoT Space so that we can address them (hopefully):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/nebgnahz/awesome-iot-hacks"&gt;https://github.com/nebgnahz/awesome-iot-hacks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-281-A Course on Intermediate Level Linux Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/nnamon/linux-exploitation-course"&gt;https://github.com/nnamon/linux-exploitation-course&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-282-Kali Linux Cheat Sheet for Penetration Testers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/NoorQureshi/kali-linux-cheatsheet"&gt;https://github.com/NoorQureshi/kali-linux-cheatsheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-283-A curated list of awesome infosec courses and training resources.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/onlurking/awesome-infosec"&gt;https://github.com/onlurking/awesome-infosec&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-284-A curated list of resources for learning about application security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/paragonie/awesome-appsec"&gt;https://github.com/paragonie/awesome-appsec&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-285-an awesome list of honeypot resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/paralax/awesome-honeypots"&gt;https://github.com/paralax/awesome-honeypots&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;286-GitHub Enterprise SQL Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blogger.com/share-post.g?blogID=2987759532072489303&amp;amp;postID=6980097238231152493" rel="nofollow"&gt;https://www.blogger.com/share-post.g?blogID=2987759532072489303&amp;amp;postID=6980097238231152493&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-287-A curated list of fuzzing resources ( Books, courses - free and paid, videos, tools, tutorials and vulnerable applications to practice on ) for learning Fuzzing and initial phases of Exploit Development like root cause analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/secfigo/Awesome-Fuzzing"&gt;https://github.com/secfigo/Awesome-Fuzzing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-288-PHP htaccess injection cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/sektioneins/pcc/wiki"&gt;https://github.com/sektioneins/pcc/wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-289-A curated list of the awesome resources about the Vulnerability Research:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/sergey-pronin/Awesome-Vulnerability-Research"&gt;https://github.com/sergey-pronin/Awesome-Vulnerability-Research&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-290-A list of useful payloads and bypass for Web Application Security and Pentest/CTF:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings"&gt;https://github.com/swisskyrepo/PayloadsAllTheThings&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-291-A collection of Red Team focused tools, scripts, and notes:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/threatexpress/red-team-scripts"&gt;https://github.com/threatexpress/red-team-scripts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-292-Awesome XSS stuff:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/UltimateHackers/AwesomeXSS"&gt;https://github.com/UltimateHackers/AwesomeXSS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-293-A collection of hacking / penetration testing resources to make you better!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/vitalysim/Awesome-Hacking-Resources"&gt;https://github.com/vitalysim/Awesome-Hacking-Resources&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-294-Docker Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/wsargent/docker-cheat-sheet"&gt;https://github.com/wsargent/docker-cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-295-Decrypted content of eqgrp-auction-file.tar.xz:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/x0rz/EQGRP"&gt;https://github.com/x0rz/EQGRP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-296-A bunch of links related to Linux kernel exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/xairy/linux-kernel-exploitation"&gt;https://github.com/xairy/linux-kernel-exploitation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-297-Penetration Testing 102 - Windows Privilege Escalation Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.exumbraops.com/penetration-testing-102-windows-privilege-escalation-cheatsheet" rel="nofollow"&gt;www.exumbraops.com/penetration-testing-102-windows-privilege-escalation-cheatsheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-298-Pentesting Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://anhtai.me/pentesting-cheatsheet/" rel="nofollow"&gt;https://anhtai.me/pentesting-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-299-Windows Privilege Escalation Methods for Pentesters:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/" rel="nofollow"&gt;https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-300-Penetration Testing Cheat Sheet For Windows Machine – Intrusion Detection:&lt;/p&gt;
&lt;p&gt;-301-Reading Your Way Around UAC (Part 1):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tyranidslair.blogspot.co.uk/2017/05/reading-your-way-around-uac-part-1.html" rel="nofollow"&gt;https://tyranidslair.blogspot.co.uk/2017/05/reading-your-way-around-uac-part-1.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-302--Reading Your Way Around UAC (Part 2):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tyranidslair.blogspot.co.uk/2017/05/reading-your-way-around-uac-part-2.html" rel="nofollow"&gt;https://tyranidslair.blogspot.co.uk/2017/05/reading-your-way-around-uac-part-2.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-303-Executing Metasploit &amp;amp; Empire Payloads from MS Office Document Properties (part 2 of 2):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stealingthe.network/executing-metasploit-empire-payloads-from-ms-office-document-properties-part-2-of-2/" rel="nofollow"&gt;https://stealingthe.network/executing-metasploit-empire-payloads-from-ms-office-document-properties-part-2-of-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-304-SSRF - Server Side Request Forgery (Types and ways to exploit it) Part-1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/29d034c27978" rel="nofollow"&gt;https://medium.com/p/29d034c27978&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-304-Automating Cobalt Strike,Aggressor Collection Scripts:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/bluscreenofjeff/AggressorScripts"&gt;https://github.com/bluscreenofjeff/AggressorScripts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/harleyQu1nn/AggressorScripts"&gt;https://github.com/harleyQu1nn/AggressorScripts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-305-Vi Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://highon.coffee/blog/vi-cheat-sheet/" rel="nofollow"&gt;https://highon.coffee/blog/vi-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-306-Network Recon Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cheatography.com/coffeefueled/cheat-sheets/network-recon/" rel="nofollow"&gt;https://www.cheatography.com/coffeefueled/cheat-sheets/network-recon/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-307-LFI Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://highon.coffee/blog/lfi-cheat-sheet/" rel="nofollow"&gt;https://highon.coffee/blog/lfi-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-308-Systemd Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://highon.coffee/blog/systemd-cheat-sheet/" rel="nofollow"&gt;https://highon.coffee/blog/systemd-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-309-Aircrack-ng Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securityonline.info/aircrack-ng-cheatsheet/" rel="nofollow"&gt;https://securityonline.info/aircrack-ng-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-310-Kali Linux Cheat Sheet for Penetration Testers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackmoreops.com/?p=7212" rel="nofollow"&gt;https://www.blackmoreops.com/?p=7212&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-311-Wifi Pentesting Command Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://randomkeystrokes.com/2016/07/01/wifi-pentesting-cheatsheet/" rel="nofollow"&gt;https://randomkeystrokes.com/2016/07/01/wifi-pentesting-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-312-Android Testing Environment Cheatsheet (Part 1):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://randomkeystrokes.com/2016/10/17/android-testing-environment-cheatsheet/" rel="nofollow"&gt;https://randomkeystrokes.com/2016/10/17/android-testing-environment-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-313-cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://randomkeystrokes.com/category/cheatsheet/" rel="nofollow"&gt;https://randomkeystrokes.com/category/cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-314-Reverse Shell Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://highon.coffee/blog/reverse-shell-cheat-sheet/" rel="nofollow"&gt;https://highon.coffee/blog/reverse-shell-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-315-Linux Commands Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://highon.coffee/blog/linux-commands-cheat-sheet/" rel="nofollow"&gt;https://highon.coffee/blog/linux-commands-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-316-Linux Privilege Escalation using Sudo Rights:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/linux-privilege-escalation-using-exploiting-sudo-rights" rel="nofollow"&gt;http://www.hackingarticles.in/linux-privilege-escalation-using-exploiting-sudo-rights&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-317-Linux Privilege Escalation using Misconfigured NFS:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/linux-privilege-escalation-using-misconfigured-nfs/" rel="nofollow"&gt;http://www.hackingarticles.in/linux-privilege-escalation-using-misconfigured-nfs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-318-Linux Privilege Escalation by Exploiting Cronjobs:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/linux-privilege-escalation-by-exploiting-cron-jobs/" rel="nofollow"&gt;http://www.hackingarticles.in/linux-privilege-escalation-by-exploiting-cron-jobs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-319-Web Penetration Testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/web-penetration-testing/" rel="nofollow"&gt;http://www.hackingarticles.in/web-penetration-testing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-320-Webshell to Meterpreter:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/webshell-to-meterpreter" rel="nofollow"&gt;http://www.hackingarticles.in/webshell-to-meterpreter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-321-WordPress Penetration Testing using WPScan &amp;amp; Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/wordpress-penetration-testing-using-wpscan-metasploit" rel="nofollow"&gt;http://www.hackingarticles.in/wordpress-penetration-testing-using-wpscan-metasploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-322-XSS Exploitation in DVWA (Bypass All Security):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/xss-exploitation-dvwa-bypass-security" rel="nofollow"&gt;http://www.hackingarticles.in/xss-exploitation-dvwa-bypass-security&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-323-Linux Privilege Escalation Using PATH Variable:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/" rel="nofollow"&gt;http://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-324-VNC tunneling over SSH:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/vnc-tunneling-ssh" rel="nofollow"&gt;http://www.hackingarticles.in/vnc-tunneling-ssh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-325-VNC Pivoting through Meterpreter:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/vnc-pivoting-meterpreter" rel="nofollow"&gt;http://www.hackingarticles.in/vnc-pivoting-meterpreter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-326-Week of Evading Microsoft ATA - Announcement and Day 1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.labofapenetrationtester.com/2017/08/week-of-evading-microsoft-ata-day1.html" rel="nofollow"&gt;https://www.labofapenetrationtester.com/2017/08/week-of-evading-microsoft-ata-day1.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-327-Abusing DNSAdmins privilege for escalation in Active Directory:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.labofapenetrationtester.com/2017/05/abusing-dnsadmins-privilege-for-escalation-in-active-directory.html" rel="nofollow"&gt;https://www.labofapenetrationtester.com/2017/05/abusing-dnsadmins-privilege-for-escalation-in-active-directory.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-328-Using SQL Server for attacking a Forest Trust:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.labofapenetrationtester.com/2017/03/using-sql-server-for-attacking-forest-trust.html" rel="nofollow"&gt;https://www.labofapenetrationtester.com/2017/03/using-sql-server-for-attacking-forest-trust.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-329-Empire :&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.harmj0y.net/blog/category/empire/" rel="nofollow"&gt;http://www.harmj0y.net/blog/category/empire/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-330-8 Deadly Commands You Should Never Run on Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.howtogeek.com/125157/8-deadly-commands-you-should-never-run-on-linux/" rel="nofollow"&gt;https://www.howtogeek.com/125157/8-deadly-commands-you-should-never-run-on-linux/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-331-External C2 framework for Cobalt Strike:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.insomniacsecurity.com/2018/01/11/externalc2.html" rel="nofollow"&gt;https://www.insomniacsecurity.com/2018/01/11/externalc2.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-332-How to use Public IP on Kali Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/use-public-ip-kali-linux" rel="nofollow"&gt;http://www.hackingarticles.in/use-public-ip-kali-linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-333-Bypass Admin access through guest Account in windows 10:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/bypass-admin-access-guest-account-windows-10" rel="nofollow"&gt;http://www.hackingarticles.in/bypass-admin-access-guest-account-windows-10&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-334-Bypass Firewall Restrictions with Metasploit (reverse_tcp_allports):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/bypass-firewall-restrictions-metasploit-reverse_tcp_allports" rel="nofollow"&gt;http://www.hackingarticles.in/bypass-firewall-restrictions-metasploit-reverse_tcp_allports&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-335-Bypass SSH Restriction by Port Relay:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/bypass-ssh-restriction-by-port-relay" rel="nofollow"&gt;http://www.hackingarticles.in/bypass-ssh-restriction-by-port-relay&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-336-Bypass UAC Protection of Remote Windows 10 PC (Via FodHelper Registry Key):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/bypass-uac-protection-remote-windows-10-pc-via-fodhelper-registry-key" rel="nofollow"&gt;http://www.hackingarticles.in/bypass-uac-protection-remote-windows-10-pc-via-fodhelper-registry-key&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-337-Bypass UAC in Windows 10 using bypass_comhijack Exploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/bypass-uac-windows-10-using-bypass_comhijack-exploit" rel="nofollow"&gt;http://www.hackingarticles.in/bypass-uac-windows-10-using-bypass_comhijack-exploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-338-Bind Payload using SFX archive with Trojanizer:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/bind-payload-using-sfx-archive-trojanizer" rel="nofollow"&gt;http://www.hackingarticles.in/bind-payload-using-sfx-archive-trojanizer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-339-Capture NTLM Hashes using PDF (Bad-Pdf):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/capture-ntlm-hashes-using-pdf-bad-pdf" rel="nofollow"&gt;http://www.hackingarticles.in/capture-ntlm-hashes-using-pdf-bad-pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-340-Best of Post Exploitation Exploits &amp;amp; Tricks:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/best-of-post-exploitation-exploits-tricks/" rel="nofollow"&gt;http://www.hackingarticles.in/best-of-post-exploitation-exploits-tricks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-341-Detect SQL Injection Attack using Snort IDS:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/detect-sql-injection-attack-using-snort-ids/" rel="nofollow"&gt;http://www.hackingarticles.in/detect-sql-injection-attack-using-snort-ids/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-342-Beginner Guide to Website Footprinting:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/beginner-guide-website-footprinting/" rel="nofollow"&gt;http://www.hackingarticles.in/beginner-guide-website-footprinting/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-343-How to Enable and Monitor Firewall Log in Windows PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/enable-monitor-firewall-log-windows-pc/" rel="nofollow"&gt;http://www.hackingarticles.in/enable-monitor-firewall-log-windows-pc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-344-Wifi Post Exploitation on Remote PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/wifi-post-exploitation-remote-pc/" rel="nofollow"&gt;http://www.hackingarticles.in/wifi-post-exploitation-remote-pc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-335-Check Meltdown Vulnerability in CPU:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/check-meltdown-vulnerability-cpu" rel="nofollow"&gt;http://www.hackingarticles.in/check-meltdown-vulnerability-cpu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-336-XXE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://phonexicum.github.io/infosec/xxe.html" rel="nofollow"&gt;https://phonexicum.github.io/infosec/xxe.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-337-[XSS] Re ected XSS Bypass Filter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/de41d35239a3" rel="nofollow"&gt;https://medium.com/p/de41d35239a3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-338-Engagement Tools Tutorial in Burp suite:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/engagement-tools-tutorial-burp-suite" rel="nofollow"&gt;http://www.hackingarticles.in/engagement-tools-tutorial-burp-suite&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-339-Wiping Out CSRF:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@jrozner/wiping-out-csrf-ded97ae7e83f" rel="nofollow"&gt;https://medium.com/@jrozner/wiping-out-csrf-ded97ae7e83f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-340-First entry: Welcome and fileless UAC bypass:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://winscripting.blog/2017/05/12/first-entry-welcome-and-uac-bypass/" rel="nofollow"&gt;https://winscripting.blog/2017/05/12/first-entry-welcome-and-uac-bypass/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-341-Writing a Custom Shellcode Encoder:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/31816e767611" rel="nofollow"&gt;https://medium.com/p/31816e767611&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-342-Security Harden CentOS 7 :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://highon.coffee/blog/security-harden-centos-7/" rel="nofollow"&gt;https://highon.coffee/blog/security-harden-centos-7/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-343-THE BIG BAD WOLF - XSS AND MAINTAINING ACCESS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.paulosyibelo.com/2018/06/the-big-bad-wolf-xss-and-maintaining.html" rel="nofollow"&gt;https://www.paulosyibelo.com/2018/06/the-big-bad-wolf-xss-and-maintaining.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-344-MySQL:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://websec.ca/kb/CHANGELOG.txt" rel="nofollow"&gt;https://websec.ca/kb/CHANGELOG.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-345-Deobfuscation of VM based software protection:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shell-storm.org/talks/SSTIC2017_Deobfuscation_of_VM_based_software_protection.pdf" rel="nofollow"&gt;http://shell-storm.org/talks/SSTIC2017_Deobfuscation_of_VM_based_software_protection.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-346-Online Assembler and Disassembler:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shell-storm.org/online/Online-Assembler-and-Disassembler/" rel="nofollow"&gt;http://shell-storm.org/online/Online-Assembler-and-Disassembler/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-347-Shellcodes database for study cases:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shell-storm.org/shellcode/" rel="nofollow"&gt;http://shell-storm.org/shellcode/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-348-Dynamic Binary Analysis and Obfuscated Codes:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shell-storm.org/talks/sthack2016-rthomas-jsalwan.pdf" rel="nofollow"&gt;http://shell-storm.org/talks/sthack2016-rthomas-jsalwan.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-349-How Triton may help to analyse obfuscated binaries:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://triton.quarkslab.com/files/misc82-triton.pdf" rel="nofollow"&gt;http://triton.quarkslab.com/files/misc82-triton.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-350-Triton: A Concolic Execution Framework:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shell-storm.org/talks/SSTIC2015_English_slide_detailed_version_Triton_Concolic_Execution_FrameWork_FSaudel_JSalwan.pdf" rel="nofollow"&gt;http://shell-storm.org/talks/SSTIC2015_English_slide_detailed_version_Triton_Concolic_Execution_FrameWork_FSaudel_JSalwan.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-351-Automatic deobfuscation of the Tigress binary protection using symbolic execution and LLVM:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/JonathanSalwan/Tigress_protection"&gt;https://github.com/JonathanSalwan/Tigress_protection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-352-What kind of semantics information Triton can provide?:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://triton.quarkslab.com/blog/What-kind-of-semantics-information-Triton-can-provide/" rel="nofollow"&gt;http://triton.quarkslab.com/blog/What-kind-of-semantics-information-Triton-can-provide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-353-Code coverage using a dynamic symbolic execution:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://triton.quarkslab.com/blog/Code-coverage-using-dynamic-symbolic-execution/" rel="nofollow"&gt;http://triton.quarkslab.com/blog/Code-coverage-using-dynamic-symbolic-execution/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-354-Triton (concolic execution framework) under the hood:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://triton.quarkslab.com/blog/first-approach-with-the-framework/" rel="nofollow"&gt;http://triton.quarkslab.com/blog/first-approach-with-the-framework/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-355-- Stack and heap overflow detection at runtime via behavior analysis and Pin:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shell-storm.org/blog/Stack-and-heap-overflow-detection-at-runtime-via-behavior-analysis-and-PIN/" rel="nofollow"&gt;http://shell-storm.org/blog/Stack-and-heap-overflow-detection-at-runtime-via-behavior-analysis-and-PIN/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-356-Binary analysis: Concolic execution with Pin and z3:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shell-storm.org/blog/Binary-analysis-Concolic-execution-with-Pin-and-z3/" rel="nofollow"&gt;http://shell-storm.org/blog/Binary-analysis-Concolic-execution-with-Pin-and-z3/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-357-In-Memory fuzzing with Pin:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shell-storm.org/blog/In-Memory-fuzzing-with-Pin/" rel="nofollow"&gt;http://shell-storm.org/blog/In-Memory-fuzzing-with-Pin/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-358-Hackover 2015 r150 (outdated solving for Triton use cases):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/JonathanSalwan/Triton/blob/master/src/examples/python/ctf-writeups/hackover-ctf-2015-r150/solve.py"&gt;https://github.com/JonathanSalwan/Triton/blob/master/src/examples/python/ctf-writeups/hackover-ctf-2015-r150/solve.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-359-Skip sh – Web Application Security Scanner for XSS, SQL Injection, Shell injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/skipfish-web-application-security-scanner" rel="nofollow"&gt;https://gbhackers.com/skipfish-web-application-security-scanner&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-360-Sublist3r – Tool for Penetration testers to Enumerate Sub-domains:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/sublist3r-penetration-testers" rel="nofollow"&gt;https://gbhackers.com/sublist3r-penetration-testers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-361-bypassing application whitelisting with bginfo:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://oddvar.moe/2017/05/18/bypassing-application-whitelisting-with-bginfo/" rel="nofollow"&gt;https://oddvar.moe/2017/05/18/bypassing-application-whitelisting-with-bginfo/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-362-accessing-clipboard-from-the-lock-screen-in-windows-10:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://oddvar.moe/2017/01/24/accessing-clipboard-from-the-lock-screen-in-windows-10/" rel="nofollow"&gt;https://oddvar.moe/2017/01/24/accessing-clipboard-from-the-lock-screen-in-windows-10/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-363-bypassing-device-guard-umci-using-chm-cve-2017-8625:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://oddvar.moe/2017/08/13/bypassing-device-guard-umci-using-chm-cve-2017-8625/" rel="nofollow"&gt;https://oddvar.moe/2017/08/13/bypassing-device-guard-umci-using-chm-cve-2017-8625/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-364-defense-in-depth-writeup:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://oddvar.moe/2017/09/13/defense-in-depth-writeup/" rel="nofollow"&gt;https://oddvar.moe/2017/09/13/defense-in-depth-writeup/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-365-applocker-case-study-how-insecure-is-it-really-part-1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://oddvar.moe/2017/12/13/applocker-case-study-how-insecure-is-it-really-part-1/" rel="nofollow"&gt;https://oddvar.moe/2017/12/13/applocker-case-study-how-insecure-is-it-really-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-366-empires-cross-platform-office-macro:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/empires-cross-platform-office-macro/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/empires-cross-platform-office-macro/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-367-recon tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blackarch.org/recon.html" rel="nofollow"&gt;https://blackarch.org/recon.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-368-Black Hat 2018 tools list:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/991fa38901da" rel="nofollow"&gt;https://medium.com/p/991fa38901da&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-369-Application Introspection &amp;amp; Hooking With Frida:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fuzzysecurity.com/tutorials/29.html" rel="nofollow"&gt;https://www.fuzzysecurity.com/tutorials/29.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-370-And I did OSCP!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/589babbfea19" rel="nofollow"&gt;https://medium.com/p/589babbfea19&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-371-CoffeeMiner: Hacking WiFi to inject cryptocurrency miner to HTML requests:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://arnaucube.com/blog/coffeeminer-hacking-wifi-cryptocurrency-miner.html" rel="nofollow"&gt;https://arnaucube.com/blog/coffeeminer-hacking-wifi-cryptocurrency-miner.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-372-Most Important Endpoint Security &amp;amp; Threat Intelligence Tools List for Hackers and Security Professionals:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/threat-intelligence-tools" rel="nofollow"&gt;https://gbhackers.com/threat-intelligence-tools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-373-Penetration Testing Cheat Sheet For Windows Machine – Intrusion Detection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://techincidents.com/penetration-testing-cheat-sheet/" rel="nofollow"&gt;https://techincidents.com/penetration-testing-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-374-privilege escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://toshellandback.com/category/privilege-escalation/" rel="nofollow"&gt;https://toshellandback.com/category/privilege-escalation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-375-The Complete List of Windows Post-Exploitation Commands (No Powershell):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/999b5433b61e" rel="nofollow"&gt;https://medium.com/p/999b5433b61e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-376-The Art of Subdomain Enumeration:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.sweepatic.com/tag/subdomain-enumeration/" rel="nofollow"&gt;https://blog.sweepatic.com/tag/subdomain-enumeration/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-377-The Principles of a Subdomain Takeover:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.sweepatic.com/subdomain-takeover-principles/" rel="nofollow"&gt;https://blog.sweepatic.com/subdomain-takeover-principles/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-378-The journey of Web Cache + Firewall Bypass to SSRF to AWS credentials compromise!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/b250fb40af82" rel="nofollow"&gt;https://medium.com/p/b250fb40af82&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-379-The Solution for Web for Pentester-I:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/4c21b3ae9673" rel="nofollow"&gt;https://medium.com/p/4c21b3ae9673&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-380-The Ultimate Penetration Testing Command Cheat Sheet for Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/command-cheat-sheet-for-linux/" rel="nofollow"&gt;https://www.hackingloops.com/command-cheat-sheet-for-linux/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-381-: Ethical Hacking, Hack Tools, Hacking Tricks, Information Gathering, Penetration Testing, Recommended:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/hacking-tricks/" rel="nofollow"&gt;https://www.hackingloops.com/hacking-tricks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-383-Introduction to Exploitation, Part 1: Introducing Concepts and Terminology:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/exploitation-terminology/" rel="nofollow"&gt;https://www.hackingloops.com/exploitation-terminology/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-384-How Hackers Kick Victims Off of Wireless Networks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/kick-victims-off-of-wireless-networks/" rel="nofollow"&gt;https://www.hackingloops.com/kick-victims-off-of-wireless-networks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-385-Maintaining Access Part 1: Introduction and Metasploit Example:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/maintaining-access-metasploit/" rel="nofollow"&gt;https://www.hackingloops.com/maintaining-access-metasploit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-386-How to Steal Windows Credentials with Mimikatz and Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/mimikatz/" rel="nofollow"&gt;https://www.hackingloops.com/mimikatz/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-387-Evading Anti-virus Part 2: Obfuscating Payloads with Msfvenom:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/msfvenom/" rel="nofollow"&gt;https://www.hackingloops.com/msfvenom/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-388-Evading Anti-virus Part 1: Infecting EXEs with Shellter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/evading-anti-virus-shellter/" rel="nofollow"&gt;https://www.hackingloops.com/evading-anti-virus-shellter/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-389-Mobile Hacking Part 4: Fetching Payloads via USB Rubber Ducky:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/payloads-via-usb-rubber-ducky/" rel="nofollow"&gt;https://www.hackingloops.com/payloads-via-usb-rubber-ducky/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-390-Ethical Hacking Practice Test 6 – Footprinting Fundamentals Level1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/ethical-hacking-practice-test-6-footprinting-fundamentals-level1/" rel="nofollow"&gt;https://www.hackingloops.com/ethical-hacking-practice-test-6-footprinting-fundamentals-level1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-391-Skip Cracking Responder Hashes and Relay Them:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://threat.tevora.com/quick-tip-skip-cracking-responder-hashes-and-replay-them/" rel="nofollow"&gt;https://threat.tevora.com/quick-tip-skip-cracking-responder-hashes-and-replay-them/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-392-Cracking NTLMv1 Handshakes with Crack.sh:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://threat.tevora.com/quick-tip-crack-ntlmv1-handshakes-with-crack-sh/" rel="nofollow"&gt;http://threat.tevora.com/quick-tip-crack-ntlmv1-handshakes-with-crack-sh/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-393-Top 3 Anti-Forensic OpSec Tips for Linux &amp;amp; A New Dead Man’s Switch:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/d5e92843e64a" rel="nofollow"&gt;https://medium.com/p/d5e92843e64a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-394-VNC Penetration Testing (Port 5901):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/vnc-penetration-testing" rel="nofollow"&gt;http://www.hackingarticles.in/vnc-penetration-testing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-395-Windows Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.bhafsec.com/wiki/index.php/Windows_Privilege_Escalation" rel="nofollow"&gt;http://www.bhafsec.com/wiki/index.php/Windows_Privilege_Escalation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-396-Removing Sender’s IP Address From Email’s Received: From Header:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.devside.net/wamp-server/removing-senders-ip-address-from-emails-received-from-header" rel="nofollow"&gt;https://www.devside.net/wamp-server/removing-senders-ip-address-from-emails-received-from-header&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-397-Dump Cleartext Password in Linux PC using MimiPenguin:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/dump-cleartext-password-linux-pc-using-mimipenguin" rel="nofollow"&gt;http://www.hackingarticles.in/dump-cleartext-password-linux-pc-using-mimipenguin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-398-Embedded Backdoor with Image using FakeImageExploiter:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/embedded-backdoor-image-using-fakeimageexploiter" rel="nofollow"&gt;http://www.hackingarticles.in/embedded-backdoor-image-using-fakeimageexploiter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-399-Exploit Command Injection Vulnearbility with Commix and Netcat:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/exploit-command-injection-vulnearbility-commix-netcat" rel="nofollow"&gt;http://www.hackingarticles.in/exploit-command-injection-vulnearbility-commix-netcat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-400-Exploiting Form Based Sql Injection using Sqlmap:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/exploiting-form-based-sql-injection-using-sqlmap" rel="nofollow"&gt;http://www.hackingarticles.in/exploiting-form-based-sql-injection-using-sqlmap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-401-Beginner Guide to impacket Tool kit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/beginner-guide-to-impacket-tool-kit" rel="nofollow"&gt;http://www.hackingarticles.in/beginner-guide-to-impacket-tool-kit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-402-Best of Post Exploitation Exploits &amp;amp; Tricks:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/best-of-post-exploitation-exploits-tricks" rel="nofollow"&gt;http://www.hackingarticles.in/best-of-post-exploitation-exploits-tricks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-403-Command Injection to Meterpreter using Commix:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/command-injection-meterpreter-using-commix" rel="nofollow"&gt;http://www.hackingarticles.in/command-injection-meterpreter-using-commix&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-404-Comprehensive Guide to Crunch Tool:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/comprehensive-guide-to-crunch-tool" rel="nofollow"&gt;http://www.hackingarticles.in/comprehensive-guide-to-crunch-tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-405-Compressive Guide to File Transfer (Post Exploitation):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/compressive-guide-to-file-transfer-post-exploitation" rel="nofollow"&gt;http://www.hackingarticles.in/compressive-guide-to-file-transfer-post-exploitation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-406-Crack Wifi Password using Aircrack-Ng (Beginner’s Guide):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/crack-wifi-password-using-aircrack-ng" rel="nofollow"&gt;http://www.hackingarticles.in/crack-wifi-password-using-aircrack-ng&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-407-How to Detect Meterpreter in Your PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/detect-meterpreter-pc" rel="nofollow"&gt;http://www.hackingarticles.in/detect-meterpreter-pc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-408-Easy way to Hack Database using Wizard switch in Sqlmap:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/easy-way-hack-database-using-wizard-switch-sqlmap" rel="nofollow"&gt;http://www.hackingarticles.in/easy-way-hack-database-using-wizard-switch-sqlmap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-409-Exploiting the Webserver using Sqlmap and Metasploit (OS-Pwn):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/exploiting-webserver-using-sqlmap-metasploit-os-pwn" rel="nofollow"&gt;http://www.hackingarticles.in/exploiting-webserver-using-sqlmap-metasploit-os-pwn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-410-Create SSL Certified Meterpreter Payload using MPM:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/exploit-remote-pc-ssl-certified-meterpreter-payload-using-mpm" rel="nofollow"&gt;http://www.hackingarticles.in/exploit-remote-pc-ssl-certified-meterpreter-payload-using-mpm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-411-Port forwarding: A practical hands-on guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.abatchy.com/2017/01/port-forwarding-practical-hands-on-guide" rel="nofollow"&gt;https://www.abatchy.com/2017/01/port-forwarding-practical-hands-on-guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-412-Exploit Dev 101: Jumping to Shellcode:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.abatchy.com/2017/05/jumping-to-shellcode.html" rel="nofollow"&gt;https://www.abatchy.com/2017/05/jumping-to-shellcode.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-413-Introduction to Manual Backdooring:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.abatchy.com/2017/05/introduction-to-manual-backdooring_24.html" rel="nofollow"&gt;https://www.abatchy.com/2017/05/introduction-to-manual-backdooring_24.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-414-Kernel Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.abatchy.com/2018/01/kernel-exploitation-1" rel="nofollow"&gt;https://www.abatchy.com/2018/01/kernel-exploitation-1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-415-Exploit Dev 101: Bypassing ASLR on Windows:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.abatchy.com/2017/06/exploit-dev-101-bypassing-aslr-on.html" rel="nofollow"&gt;https://www.abatchy.com/2017/06/exploit-dev-101-bypassing-aslr-on.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-416-Shellcode reduction tips (x86):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.abatchy.com/2017/04/shellcode-reduction-tips-x86" rel="nofollow"&gt;https://www.abatchy.com/2017/04/shellcode-reduction-tips-x86&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-417-OSCE Study Plan:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.abatchy.com/2017/03/osce-study-plan" rel="nofollow"&gt;https://www.abatchy.com/2017/03/osce-study-plan&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-418-[DefCamp CTF Qualification 2017] Don't net, kids! (Revexp 400):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.abatchy.com/2017/10/defcamp-dotnot" rel="nofollow"&gt;https://www.abatchy.com/2017/10/defcamp-dotnot&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-419-DRUPAL 7.X SERVICES MODULE UNSERIALIZE() TO RCE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ambionics.io/" rel="nofollow"&gt;https://www.ambionics.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-420-SQL VULNERABLE WEBSITES LIST 2017 [APPROX 2500 FRESH SQL VULNERABLE SITES]:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cityofhackerz.com/sql-vulnerable-websites-list-2017" rel="nofollow"&gt;https://www.cityofhackerz.com/sql-vulnerable-websites-list-2017&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-421-Windows IR Live Forensics Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cheatography.com/tag/forensics/" rel="nofollow"&gt;https://www.cheatography.com/tag/forensics/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-422-windows-kernel-logic-bug-class-access:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://googleprojectzero.blogspot.com/2019/03/windows-kernel-logic-bug-class-access.html" rel="nofollow"&gt;https://googleprojectzero.blogspot.com/2019/03/windows-kernel-logic-bug-class-access.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-423-injecting-code-into-windows-protected:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://googleprojectzero.blogspot.com/2018/11/injecting-code-into-windows-protected.html" rel="nofollow"&gt;https://googleprojectzero.blogspot.com/2018/11/injecting-code-into-windows-protected.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-424-USING THE DDE ATTACK WITH POWERSHELL EMPIRE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://1337red.wordpress.com/using-the-dde-attack-with-powershell-empire" rel="nofollow"&gt;https://1337red.wordpress.com/using-the-dde-attack-with-powershell-empire&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-425-Automated Derivative Administrator Search:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://wald0.com/?p=14" rel="nofollow"&gt;https://wald0.com/?p=14&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-426-A Red Teamer’s Guide to GPOs and OUs:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://wald0.com/?p=179" rel="nofollow"&gt;https://wald0.com/?p=179&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-427-Pen Testing and Active Directory, Part VI: The Final Case:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.varonis.com/pen-testing-active-directory-part-vi-final-case/" rel="nofollow"&gt;https://blog.varonis.com/pen-testing-active-directory-part-vi-final-case/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-428-Offensive Tools and Techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sec.uno/2017/03/01/offensive-tools-and-techniques/" rel="nofollow"&gt;https://www.sec.uno/2017/03/01/offensive-tools-and-techniques/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-429-Three penetration testing tips to out-hack hackers:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://infosechotspot.com/three-penetration-testing-tips-to-out-hack-hackers-betanews/" rel="nofollow"&gt;http://infosechotspot.com/three-penetration-testing-tips-to-out-hack-hackers-betanews/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-430-Introducing BloodHound:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://wald0.com/?p=68" rel="nofollow"&gt;https://wald0.com/?p=68&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-431-Red + Blue = Purple:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.blackhillsinfosec.com/?p=5368" rel="nofollow"&gt;http://www.blackhillsinfosec.com/?p=5368&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-432-Active Directory Access Control List – Attacks and Defense – Enterprise Mobility and Security Blog:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blogs.technet.microsoft.com/enterprisemobility/2017/09/18/active-directory-access-control-list-attacks-and-defense/" rel="nofollow"&gt;https://blogs.technet.microsoft.com/enterprisemobility/2017/09/18/active-directory-access-control-list-attacks-and-defense/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-433-PrivEsc: Unquoted Service Path:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gracefulsecurity.com/privesc-unquoted-service-path/" rel="nofollow"&gt;https://www.gracefulsecurity.com/privesc-unquoted-service-path/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-434-PrivEsc: Insecure Service Permissions:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gracefulsecurity.com/privesc-insecure-service-permissions/" rel="nofollow"&gt;https://www.gracefulsecurity.com/privesc-insecure-service-permissions/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-435-PrivEsc: DLL Hijacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gracefulsecurity.com/privesc-dll-hijacking/" rel="nofollow"&gt;https://www.gracefulsecurity.com/privesc-dll-hijacking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-436-Android Reverse Engineering 101 – Part 1:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.fasteque.com/android-reverse-engineering-101-part-1/" rel="nofollow"&gt;http://www.fasteque.com/android-reverse-engineering-101-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-437-Luckystrike: An Evil Office Document Generator:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.shellntel.com/blog/2016/9/13/luckystrike-a-database-backed-evil-macro-generator" rel="nofollow"&gt;https://www.shellntel.com/blog/2016/9/13/luckystrike-a-database-backed-evil-macro-generator&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-438-the-number-one-pentesting-tool-youre-not-using:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.shellntel.com/blog/2016/8/3/the-number-one-pentesting-tool-youre-not-using" rel="nofollow"&gt;https://www.shellntel.com/blog/2016/8/3/the-number-one-pentesting-tool-youre-not-using&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-439-uac-bypass:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.securitynewspaper.com/tag/uac-bypass/" rel="nofollow"&gt;http://www.securitynewspaper.com/tag/uac-bypass/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-440-XSSer – Automated Framework Tool to Detect and Exploit XSS vulnerabilities:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/xsser-automated-framework-detectexploit-report-xss-vulnerabilities" rel="nofollow"&gt;https://gbhackers.com/xsser-automated-framework-detectexploit-report-xss-vulnerabilities&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-441-Penetration Testing on X11 Server:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/penetration-testing-on-x11-server" rel="nofollow"&gt;http://www.hackingarticles.in/penetration-testing-on-x11-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-442-Always Install Elevated:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/02/28/always-install-elevated" rel="nofollow"&gt;https://pentestlab.blog/2017/02/28/always-install-elevated&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-443-Scanning for Active Directory Privileges &amp;amp; Privileged Accounts:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://adsecurity.org/?p=3658" rel="nofollow"&gt;https://adsecurity.org/?p=3658&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-444-Windows Server 2016 Active Directory Features:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://adsecurity.org/?p=3646" rel="nofollow"&gt;https://adsecurity.org/?p=3646&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-445-powershell:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://adsecurity.org/?tag=powershell" rel="nofollow"&gt;https://adsecurity.org/?tag=powershell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-446-PowerShell Security: PowerShell Attack Tools, Mitigation, &amp;amp; Detection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://adsecurity.org/?p=2921" rel="nofollow"&gt;https://adsecurity.org/?p=2921&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-447-DerbyCon 6 (2016) Talk – Attacking EvilCorp: Anatomy of a Corporate Hack:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://adsecurity.org/?p=3214" rel="nofollow"&gt;https://adsecurity.org/?p=3214&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-448-Real-World Example of How Active Directory Can Be Compromised (RSA Conference Presentation):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://adsecurity.org/?p=2085" rel="nofollow"&gt;https://adsecurity.org/?p=2085&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-449-Advanced ATM Penetration Testing Methods:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/advanced-atm-penetration-testing-methods" rel="nofollow"&gt;https://gbhackers.com/advanced-atm-penetration-testing-methods&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-450-Background: Microsoft Ofice  Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rhinosecuritylabs.com/research/abusing-microsoft-word-features-phishing-subdoc/" rel="nofollow"&gt;https://rhinosecuritylabs.com/research/abusing-microsoft-word-features-phishing-subdoc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-451-Automated XSS Finder:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/4236ed1c6457" rel="nofollow"&gt;https://medium.com/p/4236ed1c6457&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-452-Application whitelist bypass using XLL and embedded shellcode:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rileykidd.com/.../application-whitelist-bypass-using-XLL-and-embedded-shellc" rel="nofollow"&gt;https://rileykidd.com/.../application-whitelist-bypass-using-XLL-and-embedded-shellc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-453-AppLocker Bypass – Regsvr32:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/05/11/applocker-bypass-regsvr32" rel="nofollow"&gt;https://pentestlab.blog/2017/05/11/applocker-bypass-regsvr32&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-454-Nmap Scans using Hex Value of Flags:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/nmap-scans-using-hex-value-flags" rel="nofollow"&gt;http://www.hackingarticles.in/nmap-scans-using-hex-value-flags&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-455-Nmap Scan with Timing Parameters:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/nmap-scan-with-timing-parameters" rel="nofollow"&gt;http://www.hackingarticles.in/nmap-scan-with-timing-parameters&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-456-OpenSSH User Enumeration Time- Based Attack with Osueta:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/openssh-user-enumeration-time-based-attack-osueta" rel="nofollow"&gt;http://www.hackingarticles.in/openssh-user-enumeration-time-based-attack-osueta&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-457-Penetration Testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/web-penetration-testing/" rel="nofollow"&gt;http://www.hackingarticles.in/web-penetration-testing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-458-Penetration Testing on Remote Desktop (Port 3389):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/penetration-testing-remote-desktop-port-3389" rel="nofollow"&gt;http://www.hackingarticles.in/penetration-testing-remote-desktop-port-3389&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-459-Penetration Testing on Telnet (Port 23):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/penetration-testing-telnet-port-23" rel="nofollow"&gt;http://www.hackingarticles.in/penetration-testing-telnet-port-23&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-460-Penetration Testing in Windows/Active Directory with Crackmapexec:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/penetration-testing-windowsactive-directory-crackmapexec" rel="nofollow"&gt;http://www.hackingarticles.in/penetration-testing-windowsactive-directory-crackmapexec&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-461-Penetration Testing in WordPress Website using WordPress Exploit Framework:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/penetration-testing-wordpress-website-using-wordpress-exploit-framework" rel="nofollow"&gt;http://www.hackingarticles.in/penetration-testing-wordpress-website-using-wordpress-exploit-framework&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-462-Port Scanning using Metasploit with IPTables:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/port-scanning-using-metasploit-iptables" rel="nofollow"&gt;http://www.hackingarticles.in/port-scanning-using-metasploit-iptables&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-463-Post Exploitation Using WMIC (System Command):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/post-exploitation-using-wmic-system-command" rel="nofollow"&gt;http://www.hackingarticles.in/post-exploitation-using-wmic-system-command&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-464-Privilege Escalation in Linux using etc/passwd file:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/privilege-escalation-in-linux-using-etc-passwd-file" rel="nofollow"&gt;http://www.hackingarticles.in/privilege-escalation-in-linux-using-etc-passwd-file&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-465-RDP Pivoting with Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/rdp-pivoting-metasploit" rel="nofollow"&gt;http://www.hackingarticles.in/rdp-pivoting-metasploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-466-A New Way to Hack Remote PC using Xerosploit and Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/new-way-hack-remote-pc-using-xerosploit-metasploit" rel="nofollow"&gt;http://www.hackingarticles.in/new-way-hack-remote-pc-using-xerosploit-metasploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-467-Shell to Meterpreter using Session Command:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/shell-meterpreter-using-session-command" rel="nofollow"&gt;http://www.hackingarticles.in/shell-meterpreter-using-session-command&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-468-SMTP Pentest Lab Setup in Ubuntu (Port 25):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/smtp-pentest-lab-setup-ubuntu" rel="nofollow"&gt;http://www.hackingarticles.in/smtp-pentest-lab-setup-ubuntu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-469-SNMP Lab Setup and Penetration Testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/snmp-lab-setup-and-penetration-testing" rel="nofollow"&gt;http://www.hackingarticles.in/snmp-lab-setup-and-penetration-testing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-470-SQL Injection Exploitation in Multiple Targets using Sqlmap:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/sql-injection-exploitation-multiple-targets-using-sqlmap" rel="nofollow"&gt;http://www.hackingarticles.in/sql-injection-exploitation-multiple-targets-using-sqlmap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-471-Sql Injection Exploitation with Sqlmap and Burp Suite (Burp CO2 Plugin):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/sql-injection-exploitation-sqlmap-burp-suite-burp-co2-plugin" rel="nofollow"&gt;http://www.hackingarticles.in/sql-injection-exploitation-sqlmap-burp-suite-burp-co2-plugin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-472-SSH Penetration Testing (Port 22):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/ssh-penetration-testing-port-22" rel="nofollow"&gt;http://www.hackingarticles.in/ssh-penetration-testing-port-22&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-473-Manual Post Exploitation on Windows PC (System Command):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/manual-post-exploitation-windows-pc-system-command" rel="nofollow"&gt;http://www.hackingarticles.in/manual-post-exploitation-windows-pc-system-command&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-474-SSH Pivoting using Meterpreter:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/ssh-pivoting-using-meterpreter" rel="nofollow"&gt;http://www.hackingarticles.in/ssh-pivoting-using-meterpreter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-475-Stealing Windows Credentials of Remote PC with MS Office Document:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/stealing-windows-credentials-remote-pc-ms-office-document" rel="nofollow"&gt;http://www.hackingarticles.in/stealing-windows-credentials-remote-pc-ms-office-document&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-476-Telnet Pivoting through Meterpreter:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/telnet-pivoting-meterpreter" rel="nofollow"&gt;http://www.hackingarticles.in/telnet-pivoting-meterpreter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-477-Hack Password using Rogue Wi-Fi Access Point Attack (WiFi-Pumpkin):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-password-using-rogue-wi-fi-access-point-attack-wifi-pumpkin" rel="nofollow"&gt;http://www.hackingarticles.in/hack-password-using-rogue-wi-fi-access-point-attack-wifi-pumpkin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-478-Hack Remote PC using Fake Updates Scam with Ettercap and Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-remote-pc-using-fake-updates-scam-with-ettercap-and-metasploit" rel="nofollow"&gt;http://www.hackingarticles.in/hack-remote-pc-using-fake-updates-scam-with-ettercap-and-metasploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-479-Hack Remote Windows 10 Password in Plain Text using Wdigest Credential Caching Exploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-remote-windows-10-password-plain-text-using-wdigest-credential-caching-exploit" rel="nofollow"&gt;http://www.hackingarticles.in/hack-remote-windows-10-password-plain-text-using-wdigest-credential-caching-exploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-480-Hack Remote Windows 10 PC using TheFatRat:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-remote-windows-10-pc-using-thefatrat" rel="nofollow"&gt;http://www.hackingarticles.in/hack-remote-windows-10-pc-using-thefatrat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-481-2 Ways to Hack Windows 10 Password Easy Way:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-windows-10-password-easy-way" rel="nofollow"&gt;http://www.hackingarticles.in/hack-windows-10-password-easy-way&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-482-How to Change ALL Files Extension in Remote PC (Confuse File Extensions Attack):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/how-to-change-all-files-extension-in-remote-pc-confuse-file-extensions-attack" rel="nofollow"&gt;http://www.hackingarticles.in/how-to-change-all-files-extension-in-remote-pc-confuse-file-extensions-attack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-483-How to Delete ALL Files in Remote Windows PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/how-to-delete-all-files-in-remote-windows-pc-2" rel="nofollow"&gt;http://www.hackingarticles.in/how-to-delete-all-files-in-remote-windows-pc-2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-484-How to Encrypt Drive of Remote Victim PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/how-to-encrypt-drive-of-remote-victim-pc" rel="nofollow"&gt;http://www.hackingarticles.in/how-to-encrypt-drive-of-remote-victim-pc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-485-Post Exploitation in Linux With Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2013/01/04/post-exploitation-in-linux-with-metasploit" rel="nofollow"&gt;https://pentestlab.blog/2013/01/04/post-exploitation-in-linux-with-metasploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-486-Red Team:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://posts.specterops.io/tagged/red-team?source=post" rel="nofollow"&gt;https://posts.specterops.io/tagged/red-team?source=post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-487-Code Signing Certi cate Cloning Attacks and Defenses:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://posts.specterops.io/tagged/code-signing?source=post" rel="nofollow"&gt;https://posts.specterops.io/tagged/code-signing?source=post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-488-Phishing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://posts.specterops.io/tagged/phishing?source=post" rel="nofollow"&gt;https://posts.specterops.io/tagged/phishing?source=post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-489-PowerPick – A ClickOnce Adjunct:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.sixdub.net/?p=555" rel="nofollow"&gt;http://www.sixdub.net/?p=555&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-490-sql-injection-xss-playground:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ired.team/offensive-security-experiments/offensive-security-cheetsheets/sql-injection-xss-playground" rel="nofollow"&gt;https://ired.team/offensive-security-experiments/offensive-security-cheetsheets/sql-injection-xss-playground&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-491-Privilege Escalation &amp;amp; Post-Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rmusser01/Infosec_Reference/raw/master/Draft/Privilege%20Escalation%20%26%20Post-Exploitation.md"&gt;https://github.com/rmusser01/Infosec_Reference/raw/master/Draft/Privilege%20Escalation%20%26%20Post-Exploitation.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-492-https-payload-and-c2-redirectors:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://posts.specterops.io/https-payload-and-c2-redirectors-ff8eb6f87742?source=placement_card_footer_grid---------2-41" rel="nofollow"&gt;https://posts.specterops.io/https-payload-and-c2-redirectors-ff8eb6f87742?source=placement_card_footer_grid---------2-41&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-493-a-push-toward-transparency:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://posts.specterops.io/a-push-toward-transparency-c385a0dd1e34?source=placement_card_footer_grid---------0-41" rel="nofollow"&gt;https://posts.specterops.io/a-push-toward-transparency-c385a0dd1e34?source=placement_card_footer_grid---------0-41&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-494-bloodhound:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://posts.specterops.io/tagged/bloodhound?source=post" rel="nofollow"&gt;https://posts.specterops.io/tagged/bloodhound?source=post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-495-active directory:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://posts.specterops.io/tagged/active-directory?source=post" rel="nofollow"&gt;https://posts.specterops.io/tagged/active-directory?source=post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-496-Load &amp;amp; Execute Bundles with migrationTool:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://posts.specterops.io/load-execute-bundles-with-migrationtool-f952e276e1a6?source=placement_card_footer_grid---------1-41" rel="nofollow"&gt;https://posts.specterops.io/load-execute-bundles-with-migrationtool-f952e276e1a6?source=placement_card_footer_grid---------1-41&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-497-Outlook Forms and Shells:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sensepost.com/blog/2017/outlook-forms-and-shells/" rel="nofollow"&gt;https://sensepost.com/blog/2017/outlook-forms-and-shells/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-498-Tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sensepost.com/blog/tools/" rel="nofollow"&gt;https://sensepost.com/blog/tools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-499-2018 pentesting resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sensepost.com/blog/2018/" rel="nofollow"&gt;https://sensepost.com/blog/2018/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-500-network pentest:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securityonline.info/category/penetration-testing/network-pentest/" rel="nofollow"&gt;https://securityonline.info/category/penetration-testing/network-pentest/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-501-[technical] Pen-testing resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/cd01de9036ad" rel="nofollow"&gt;https://medium.com/p/cd01de9036ad&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-502-Stored XSS on Facebook:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opnsec.com/2018/03/stored-xss-on-facebook/" rel="nofollow"&gt;https://opnsec.com/2018/03/stored-xss-on-facebook/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-503-vulnerabilities:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.brokenbrowser.com/category/vulnerabilities/" rel="nofollow"&gt;https://www.brokenbrowser.com/category/vulnerabilities/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-504-Extending BloodHound: Track and Visualize Your Compromise:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://porterhau5.com/.../extending-bloodhound-track-and-visualize-your-compromise" rel="nofollow"&gt;https://porterhau5.com/.../extending-bloodhound-track-and-visualize-your-compromise&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-505-so-you-want-to-be-a-web-security-researcher:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://portswigger.net/blog/so-you-want-to-be-a-web-security-researcher" rel="nofollow"&gt;https://portswigger.net/blog/so-you-want-to-be-a-web-security-researcher&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-506-BugBounty — AWS S3 added to my “Bucket” list!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/f68dd7d0d1ce" rel="nofollow"&gt;https://medium.com/p/f68dd7d0d1ce&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-507-BugBounty — API keys leakage, Source code disclosure in India’s largest e-commerce health care company:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/c75967392c7e" rel="nofollow"&gt;https://medium.com/p/c75967392c7e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-508-BugBounty — Exploiting CRLF Injection can lands into a nice bounty:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/159525a9cb62" rel="nofollow"&gt;https://medium.com/p/159525a9cb62&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-509-BugBounty — How I was able to bypass rewall to get RCE and then went from server shell to get root user account:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/783f71131b94" rel="nofollow"&gt;https://medium.com/p/783f71131b94&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-510-BugBounty — “I don’t need your current password to login into youraccount” - How could I completely takeover any user’s account in an online classi ed ads company:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/e51a945b083d" rel="nofollow"&gt;https://medium.com/p/e51a945b083d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-511-Ping Power — ICMP Tunnel:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/ping-power-icmp-tunnel-31e2abb2aaea?source=placement_card_footer_grid---------1-41" rel="nofollow"&gt;https://medium.com/bugbountywriteup/ping-power-icmp-tunnel-31e2abb2aaea?source=placement_card_footer_grid---------1-41&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-512-hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.nextleveltricks.com/hacking/" rel="nofollow"&gt;https://www.nextleveltricks.com/hacking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-513-Top 8 Best YouTube Channels To Learn Ethical Hacking Online !:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.nextleveltricks.com/youtube-channels-to-learn-hacking/" rel="nofollow"&gt;https://www.nextleveltricks.com/youtube-channels-to-learn-hacking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-514-Google Dorks List 2018 | Fresh Google Dorks 2018 for SQLi:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.nextleveltricks.com/latest-google-dorks-list/" rel="nofollow"&gt;https://www.nextleveltricks.com/latest-google-dorks-list/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-515-Art of Shellcoding: Basic AES Shellcode Crypter:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.nipunjaswal.com/2018/02/shellcode-crypter.html" rel="nofollow"&gt;http://www.nipunjaswal.com/2018/02/shellcode-crypter.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-516-Big List Of Google Dorks Hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://xspiyr.wordpress.com/2012/09/05/big-list-of-google-dorks-hacking/" rel="nofollow"&gt;https://xspiyr.wordpress.com/2012/09/05/big-list-of-google-dorks-hacking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-517-nmap-cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bitrot.sh/cheatsheet/09-12-2017-nmap-cheatsheet/" rel="nofollow"&gt;https://bitrot.sh/cheatsheet/09-12-2017-nmap-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-518-Aws Recon:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enciphers.com/tag/aws-recon/" rel="nofollow"&gt;https://enciphers.com/tag/aws-recon/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-519-Recon:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enciphers.com/tag/recon/" rel="nofollow"&gt;https://enciphers.com/tag/recon/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-520-Subdomain Enumeration:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enciphers.com/tag/subdomain-enumeration/" rel="nofollow"&gt;https://enciphers.com/tag/subdomain-enumeration/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-521-Shodan:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enciphers.com/tag/shodan/" rel="nofollow"&gt;https://enciphers.com/tag/shodan/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-522-Dump LAPS passwords with ldapsearch:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://malicious.link/post/2017/dump-laps-passwords-with-ldapsearch/" rel="nofollow"&gt;https://malicious.link/post/2017/dump-laps-passwords-with-ldapsearch/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-523-peepdf - PDF Analysis Tool:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://eternal-todo.com/tools/peepdf-pdf-analysis-tool" rel="nofollow"&gt;http://eternal-todo.com/tools/peepdf-pdf-analysis-tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-524-Evilginx 2 - Next Generation of Phishing 2FA Tokens:&lt;/p&gt;
&lt;p&gt;breakdev.org/evilginx-2-next-generation-of-phishing-2fa-tokens/&lt;/p&gt;
&lt;p&gt;-526-Evil XML with two encodings:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mohemiv.com/all/evil-xml/" rel="nofollow"&gt;https://mohemiv.com/all/evil-xml/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-527-create-word-macros-with-powershell:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://4sysops.com/archives/create-word-macros-with-powershell/" rel="nofollow"&gt;https://4sysops.com/archives/create-word-macros-with-powershell/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-528-Excess XSS A comprehensive tutorial on cross-site scripting:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://excess-xss.com/" rel="nofollow"&gt;https://excess-xss.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-529-Executing Commands and Bypassing AppLocker with PowerShell Diagnostic Scripts:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2018/01/07/executing-commands-and-bypassing-applocker-with-powershell-diagnostic-scripts/" rel="nofollow"&gt;https://bohops.com/2018/01/07/executing-commands-and-bypassing-applocker-with-powershell-diagnostic-scripts/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-530-Abusing DCOM For Yet Another Lateral Movement Technique:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2018/04/28/abusing-dcom-for-yet-another-lateral-movement-technique/" rel="nofollow"&gt;https://bohops.com/2018/04/28/abusing-dcom-for-yet-another-lateral-movement-technique/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-531-Trust Direction: An Enabler for Active Directory Enumeration and Trust Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2017/12/02/trust-direction-an-enabler-for-active-directory-enumeration-and-trust-exploitation/" rel="nofollow"&gt;https://bohops.com/2017/12/02/trust-direction-an-enabler-for-active-directory-enumeration-and-trust-exploitation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-532-Abusing DCOM For Yet Another Lateral Movement Technique:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2018/04/28/abusing-dcom-for-yet-another-lateral-movement-technique/" rel="nofollow"&gt;https://bohops.com/2018/04/28/abusing-dcom-for-yet-another-lateral-movement-technique/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-533-“Practical recon techniques for bug hunters &amp;amp; pen testers”:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.appsecco.com/practical-recon-techniques-for-bug-hunters-pen-testers-at-levelup-0x02-b72c15641972?source=placement_card_footer_grid---------2-41" rel="nofollow"&gt;https://blog.appsecco.com/practical-recon-techniques-for-bug-hunters-pen-testers-at-levelup-0x02-b72c15641972?source=placement_card_footer_grid---------2-41&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-534-Exploiting Node.js deserialization bug for Remote Code Execution:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/" rel="nofollow"&gt;https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-535-Exploiting System Shield AntiVirus Arbitrary Write Vulnerability using SeTakeOwnershipPrivilege:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.greyhathacker.net/?p=1006" rel="nofollow"&gt;http://www.greyhathacker.net/?p=1006&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-536-Running Macros via ActiveX Controls:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.greyhathacker.net/?p=948" rel="nofollow"&gt;http://www.greyhathacker.net/?p=948&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-537-all=BUG+MALWARE+EXPLOITS&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.greyhathacker.net/?cat=18" rel="nofollow"&gt;http://www.greyhathacker.net/?cat=18&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-538-“FILELESS” UAC BYPASS USING EVENTVWR.EXE AND:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking" rel="nofollow"&gt;https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-539-BYPASSING UAC ON WINDOWS 10 USING DISK CLEANUP:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2016/07/22/bypassing-uac-on-windows-10-using-disk-cleanup/" rel="nofollow"&gt;https://enigma0x3.net/2016/07/22/bypassing-uac-on-windows-10-using-disk-cleanup/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-540-A Look at CVE-2017-8715: Bypassing CVE-2017-0218 using PowerShell Module Manifests:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2017/11/06/a-look-at-cve-2017-8715-bypassing-cve-2017-0218-using-powershell-module-manifests/" rel="nofollow"&gt;https://enigma0x3.net/2017/11/06/a-look-at-cve-2017-8715-bypassing-cve-2017-0218-using-powershell-module-manifests/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-541-“FILELESS” UAC BYPASS USING SDCLT.EXE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe" rel="nofollow"&gt;https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-542-File Upload XSS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/83ea55bb9a55" rel="nofollow"&gt;https://medium.com/p/83ea55bb9a55&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-543-Firebase Databases:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/f651a7d49045" rel="nofollow"&gt;https://medium.com/p/f651a7d49045&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-544-Safe Red Team Infrastructure:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@malcomvetter/safe-red-team-infrastructure-c5d6a0f13fac" rel="nofollow"&gt;https://medium.com/@malcomvetter/safe-red-team-infrastructure-c5d6a0f13fac&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-545-RED-TEAM:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cybersyndicates.com/tags/red-team/" rel="nofollow"&gt;https://cybersyndicates.com/tags/red-team/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-546-Egressing Bluecoat with Cobaltstike &amp;amp; Let's Encrypt:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=cgwfjCmKQwM" rel="nofollow"&gt;https://www.youtube.com/watch?v=cgwfjCmKQwM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-547-Veil-Evasion:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cybersyndicates.com/tags/veil-evasion/" rel="nofollow"&gt;https://cybersyndicates.com/tags/veil-evasion/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-548-Dangerous Virus For Windows Crashes Everything Hack window Using Virus:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://thelearninghacking.com/create-virus-hack-windows/" rel="nofollow"&gt;http://thelearninghacking.com/create-virus-hack-windows/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-549-Download Google Dorks List 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/323c8067502c" rel="nofollow"&gt;https://medium.com/p/323c8067502c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-550-Don’t leak sensitive data via security scanning tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/7d1f715f0486" rel="nofollow"&gt;https://medium.com/p/7d1f715f0486&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-551-CRLF Injection Into PHP’s cURL Options:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@tomnomnom/crlf-injection-into-phps-curl-options-e2e0d7cfe545?source=placement_card_footer_grid---------0-60" rel="nofollow"&gt;https://medium.com/@tomnomnom/crlf-injection-into-phps-curl-options-e2e0d7cfe545?source=placement_card_footer_grid---------0-60&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-552-Open Redirects &amp;amp; Security Done Right!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@AkshaySharmaUS/open-redirects-security-done-right-e524a3185496?source=placement_card_footer_grid---------2-60" rel="nofollow"&gt;https://medium.com/@AkshaySharmaUS/open-redirects-security-done-right-e524a3185496?source=placement_card_footer_grid---------2-60&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-553-DOM XSS – auth.uber.com:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stamone-bug-bounty.blogspot.com/2017/10/dom-xss-auth_14.html" rel="nofollow"&gt;https://stamone-bug-bounty.blogspot.com/2017/10/dom-xss-auth_14.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-554-PowerPoint and Custom Actions:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cofense.com/powerpoint-and-custom-actions/" rel="nofollow"&gt;https://cofense.com/powerpoint-and-custom-actions/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-555-exploiting-adobe-coldfusion:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://codewhitesec.blogspot.com/2018/03/exploiting-adobe-coldfusion.html" rel="nofollow"&gt;https://codewhitesec.blogspot.com/2018/03/exploiting-adobe-coldfusion.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-556-Command and Control – HTTPS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/10/04/command-and-control-https" rel="nofollow"&gt;https://pentestlab.blog/2017/10/04/command-and-control-https&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-557-Command and Control – Images:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2018/01/02/command-and-control-images" rel="nofollow"&gt;https://pentestlab.blog/2018/01/02/command-and-control-images&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-558-Command and Control – JavaScript:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2018/01/08/command-and-control-javascript" rel="nofollow"&gt;https://pentestlab.blog/2018/01/08/command-and-control-javascript&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-559-XSS-Payloads:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Pgaijin66/XSS-Payloads"&gt;https://github.com/Pgaijin66/XSS-Payloads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-560-Command and Control – Web Interface:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2018/01/03/command-and-control-web-interface" rel="nofollow"&gt;https://pentestlab.blog/2018/01/03/command-and-control-web-interface&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-561-Command and Control – Website:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/11/14/command-and-control-website" rel="nofollow"&gt;https://pentestlab.blog/2017/11/14/command-and-control-website&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-562-Command and Control – WebSocket:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/12/06/command-and-control-websocket" rel="nofollow"&gt;https://pentestlab.blog/2017/12/06/command-and-control-websocket&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-563-atomic-red-team:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/redcanaryco/atomic-red-team"&gt;https://github.com/redcanaryco/atomic-red-team&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-564-PowerView-3.0-tricks.ps1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/HarmJ0y/184f9822b195c52dd50c379ed3117993"&gt;https://gist.github.com/HarmJ0y/184f9822b195c52dd50c379ed3117993&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-565-awesome-sec-talks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/PaulSec/awesome-sec-talks"&gt;https://github.com/PaulSec/awesome-sec-talks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-566-Awesome-Red-Teaming:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/yeyintminthuhtut/Awesome-Red-Teaming"&gt;https://github.com/yeyintminthuhtut/Awesome-Red-Teaming&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-567-awesome-php:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ziadoz/awesome-php"&gt;https://github.com/ziadoz/awesome-php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-568-latest-hacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackercool.com/latest-hacks/" rel="nofollow"&gt;https://hackercool.com/latest-hacks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-569-GraphQL NoSQL Injection Through JSON Types:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.east5th.co/blog/2017/06/12/graphql-nosql-injection-through-json-types/" rel="nofollow"&gt;http://www.east5th.co/blog/2017/06/12/graphql-nosql-injection-through-json-types/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-570-Writing .NET Executables for Pentesters:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.peew.pw/blog/2017/12/4/writing-net-executables-for-penteters-part-2" rel="nofollow"&gt;https://www.peew.pw/blog/2017/12/4/writing-net-executables-for-penteters-part-2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-571-A curated list of fuzzing resources ( Books, courses - free and paid, videos, tools, tutorials and vulnerable applications to practice on ) for learning Fuzzing and initial phases of Exploit Development like root cause analysis.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/secfigo/Awesome-Fuzzing"&gt;https://github.com/secfigo/Awesome-Fuzzing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-572-How to Shutdown, Restart, Logoff, and Hibernate Remote Windows PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/how-to-shutdown-restart-logoff-and-hibernate-remote-windows-pc" rel="nofollow"&gt;http://www.hackingarticles.in/how-to-shutdown-restart-logoff-and-hibernate-remote-windows-pc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-572-Injecting Metasploit Payloads into Android Applications – Manually:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/06/26/injecting-metasploit-payloads-into-android-applications-manually" rel="nofollow"&gt;https://pentestlab.blog/2017/06/26/injecting-metasploit-payloads-into-android-applications-manually&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-573-Google Dorks For Carding [Huge List] - Part 1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hacker-arena.blogspot.com/2014/03/google-dorks-for-carding-huge-list-part.html" rel="nofollow"&gt;https://hacker-arena.blogspot.com/2014/03/google-dorks-for-carding-huge-list-part.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-574-Google dorks for growth hackers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/7f83c8107057" rel="nofollow"&gt;https://medium.com/p/7f83c8107057&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-575-Google Dorks For Carding (HUGE LIST):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leetpedia.blogspot.com/2013/01/google-dorks-for-carding-huge-list.html" rel="nofollow"&gt;https://leetpedia.blogspot.com/2013/01/google-dorks-for-carding-huge-list.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-576-BIGGEST SQL Injection Dorks List ~ 20K+ Dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leetpedia.blogspot.com/2013/05/biggest-sql-injection-dorks-list-20k.html" rel="nofollow"&gt;https://leetpedia.blogspot.com/2013/05/biggest-sql-injection-dorks-list-20k.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-577-Pastebin Accounts Hacking (Facebook/Paypal/LR/Gmail/Yahoo, etc):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leetpedia.blogspot.com/2013/01/pastebin-accounts-hacking.html" rel="nofollow"&gt;https://leetpedia.blogspot.com/2013/01/pastebin-accounts-hacking.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-578-How I Chained 4 vulnerabilities on GitHub Enterprise, From SSRF Execution Chain to RCE!:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.orange.tw/2017/07/how-i-chained-4-vulnerabilities-on.html" rel="nofollow"&gt;http://blog.orange.tw/2017/07/how-i-chained-4-vulnerabilities-on.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-579-Hijacking VNC (Enum, Brute, Access and Crack):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/d3d18a4601cc" rel="nofollow"&gt;https://medium.com/p/d3d18a4601cc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-580-Linux Post Exploitation Command List:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mubix/post-exploitation/wiki"&gt;https://github.com/mubix/post-exploitation/wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-581-List of google dorks for sql injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://deadlyhacker.wordpress.com/2013/05/09/list-of-google-dorks-for-sql-injection/" rel="nofollow"&gt;https://deadlyhacker.wordpress.com/2013/05/09/list-of-google-dorks-for-sql-injection/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-582-Microsoft Office – NTLM Hashes via Frameset:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/12/18/microsoft-office-ntlm-hashes-via-frameset" rel="nofollow"&gt;https://pentestlab.blog/2017/12/18/microsoft-office-ntlm-hashes-via-frameset&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-583-Microsoft Windows 10 - Child Process Restriction Mitigation Bypass:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/download/44888.txt" rel="nofollow"&gt;https://www.exploit-db.com/download/44888.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-584-Microsoft Windows CVE-2018-8210 Remote Code Execution Vulnerability:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.securityfocus.com/bid/104407" rel="nofollow"&gt;https://www.securityfocus.com/bid/104407&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-585-Microsoft Windows Kernel CVE-2018-0982 Local Privilege Escalation Vulnerability:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.securityfocus.com/bid/104382" rel="nofollow"&gt;https://www.securityfocus.com/bid/104382&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-586-miSafes Mi-Cam Device Hijacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://packetstormsecurity.com/files/146504/SA-20180221-0.txt" rel="nofollow"&gt;https://packetstormsecurity.com/files/146504/SA-20180221-0.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-587-Low-Level Windows API Access From PowerShell:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fuzzysecurity.com/tutorials/24.html" rel="nofollow"&gt;https://www.fuzzysecurity.com/tutorials/24.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-588-Linux Kernel 'mm/hugetlb.c' Local Denial of Service Vulnerability:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.securityfocus.com/bid/103316" rel="nofollow"&gt;https://www.securityfocus.com/bid/103316&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-589-Lateral Movement – RDP:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2018/04/24/lateral-movement-rdp/" rel="nofollow"&gt;https://pentestlab.blog/2018/04/24/lateral-movement-rdp/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-590-Snagging creds from locked machines:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://malicious.link/post/2016/snagging-creds-from-locked-machines/" rel="nofollow"&gt;https://malicious.link/post/2016/snagging-creds-from-locked-machines/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-591-Making a Blind SQL Injection a Little Less Blind:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/428dcb614ba8" rel="nofollow"&gt;https://medium.com/p/428dcb614ba8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-592-VulnHub — Kioptrix: Level 5:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@bondo.mike/vulnhub-kioptrix-level-5-88ab65146d48?source=placement_card_footer_grid---------1-60" rel="nofollow"&gt;https://medium.com/@bondo.mike/vulnhub-kioptrix-level-5-88ab65146d48?source=placement_card_footer_grid---------1-60&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-593-Unauthenticated Account Takeover Through HTTP Leak:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/33386bb0ba0b" rel="nofollow"&gt;https://medium.com/p/33386bb0ba0b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-594-Hakluke’s Ultimate OSCP Guide: Part 1 — Is OSCP for you?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@hakluke/haklukes-ultimate-oscp-guide-part-1-is-oscp-for-you-b57cbcce7440?source=placement_card_footer_grid---------2-43" rel="nofollow"&gt;https://medium.com/@hakluke/haklukes-ultimate-oscp-guide-part-1-is-oscp-for-you-b57cbcce7440?source=placement_card_footer_grid---------2-43&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-595-Finding Target-relevant Domain Fronts:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@vysec.private/finding-target-relevant-domain-fronts-7f4ad216c223?source=placement_card_footer_grid---------0-44" rel="nofollow"&gt;https://medium.com/@vysec.private/finding-target-relevant-domain-fronts-7f4ad216c223?source=placement_card_footer_grid---------0-44&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-596-Safe Red Team Infrastructure:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@malcomvetter/safe-red-team-infrastructure-c5d6a0f13fac?source=placement_card_footer_grid---------1-60" rel="nofollow"&gt;https://medium.com/@malcomvetter/safe-red-team-infrastructure-c5d6a0f13fac?source=placement_card_footer_grid---------1-60&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-597-Cobalt Strike Visualizations:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@001SPARTaN/cobalt-strike-visualizations-e6a6e841e16b?source=placement_card_footer_grid---------2-60" rel="nofollow"&gt;https://medium.com/@001SPARTaN/cobalt-strike-visualizations-e6a6e841e16b?source=placement_card_footer_grid---------2-60&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-598-OWASP Top 10 2017 — Web Application Security Risks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/31f356491712" rel="nofollow"&gt;https://medium.com/p/31f356491712&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-599-XSS-Auditor — the protector of unprotected:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/xss-auditor-the-protector-of-unprotected-f900a5e15b7b?source=placement_card_footer_grid---------0-60" rel="nofollow"&gt;https://medium.com/bugbountywriteup/xss-auditor-the-protector-of-unprotected-f900a5e15b7b?source=placement_card_footer_grid---------0-60&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-600-Netcat vs Cryptcat – Remote Shell to Control Kali Linux from Windows machine:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/netcat-vs-cryptcat" rel="nofollow"&gt;https://gbhackers.com/netcat-vs-cryptcat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-601-Jenkins Servers Infected With Miner.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/e370a900ab2e" rel="nofollow"&gt;https://medium.com/p/e370a900ab2e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-602-cheat-sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pentestmonkey.net/category/cheat-sheet" rel="nofollow"&gt;http://pentestmonkey.net/category/cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-603-Command and Control – Website Keyword:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/09/14/command-and-control-website-keyword/" rel="nofollow"&gt;https://pentestlab.blog/2017/09/14/command-and-control-website-keyword/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-604-Command and Control – Twitter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/09/26/command-and-control-twitter/" rel="nofollow"&gt;https://pentestlab.blog/2017/09/26/command-and-control-twitter/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-605-Command and Control – Windows COM:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/09/01/command-and-control-windows-com/" rel="nofollow"&gt;https://pentestlab.blog/2017/09/01/command-and-control-windows-com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-606-Microsoft Office – NTLM Hashes via Frameset:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/12/18/microsoft-office-ntlm-hashes-via-frameset/" rel="nofollow"&gt;https://pentestlab.blog/2017/12/18/microsoft-office-ntlm-hashes-via-frameset/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-607-PHISHING AGAINST PROTECTED VIEW:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2017/07/13/phishing-against-protected-view/" rel="nofollow"&gt;https://enigma0x3.net/2017/07/13/phishing-against-protected-view/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-608-PHISHING WITH EMPIRE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2016/03/15/phishing-with-empire/" rel="nofollow"&gt;https://enigma0x3.net/2016/03/15/phishing-with-empire/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-609-Reverse Engineering Android Applications:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/02/06/reverse-engineering-android-applications/" rel="nofollow"&gt;https://pentestlab.blog/2017/02/06/reverse-engineering-android-applications/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-610-HTML Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2013/06/26/html-injection/" rel="nofollow"&gt;https://pentestlab.blog/2013/06/26/html-injection/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-611-Meterpreter stage AV/IDS evasion with powershell:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://arno0x0x.wordpress.com/2016/04/13/meterpreter-av-ids-evasion-powershell/" rel="nofollow"&gt;https://arno0x0x.wordpress.com/2016/04/13/meterpreter-av-ids-evasion-powershell/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-612-Windows Atomic Tests by ATT&amp;amp;CK Tactic &amp;amp; Technique:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/windows-index.md"&gt;https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/windows-index.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-613-Windows Active Directory Post Exploitation Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/48c2bd70388" rel="nofollow"&gt;https://medium.com/p/48c2bd70388&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-614-Windows 10 UAC Loophole Can Be Used to Infect Systems with Malware:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://news.softpedia.com/news/windows-10-uac-loophole-can-be-used-to-infect-systems-with-malware-513996.shtml" rel="nofollow"&gt;http://news.softpedia.com/news/windows-10-uac-loophole-can-be-used-to-infect-systems-with-malware-513996.shtml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-615-How to Bypass Anti-Virus to Run Mimikatz:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/bypass-anti-virus-run-mimikatz/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/bypass-anti-virus-run-mimikatz/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-616-Userland API Monitoring and Code Injection Detection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0x00sec.org/t/userland-api-monitoring-and-code-injection-detection/5565" rel="nofollow"&gt;https://0x00sec.org/t/userland-api-monitoring-and-code-injection-detection/5565&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-617-USE TOR. USE EMPIRE.:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://secureallthethings.blogspot.com/2016/11/use-tor-use-empire.html" rel="nofollow"&gt;http://secureallthethings.blogspot.com/2016/11/use-tor-use-empire.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-617-ADVANCED CROSS SITE SCRIPTING (XSS) CHEAT SHEET:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.muhaddis.info/advanced-cross-site-scripting-xss-cheat-sheet/" rel="nofollow"&gt;https://www.muhaddis.info/advanced-cross-site-scripting-xss-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-618-Empire without PowerShell.exe:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bneg.io/2017/07/26/empire-without-powershell-exe/" rel="nofollow"&gt;https://bneg.io/2017/07/26/empire-without-powershell-exe/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-619-RED TEAM:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bneg.io/category/red-team/" rel="nofollow"&gt;https://bneg.io/category/red-team/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-620-PDF Tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.didierstevens.com/programs/pdf-tools/" rel="nofollow"&gt;https://blog.didierstevens.com/programs/pdf-tools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-621-DNS Data ex ltration — What is this and How to use?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.fosec.vn/dns-data-exfiltration-what-is-this-and-how-to-use-2f6c69998822" rel="nofollow"&gt;https://blog.fosec.vn/dns-data-exfiltration-what-is-this-and-how-to-use-2f6c69998822&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-621-Google Dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/7cfd432e0cf3" rel="nofollow"&gt;https://medium.com/p/7cfd432e0cf3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-622-Hacking with JSP Shells:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.netspi.com/hacking-with-jsp-shells/" rel="nofollow"&gt;https://blog.netspi.com/hacking-with-jsp-shells/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-623-Malware Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/RPISEC/Malware/raw/master/README.md"&gt;https://github.com/RPISEC/Malware/raw/master/README.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-624-A curated list of Capture The Flag (CTF) frameworks, libraries, resources and softwares.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/SandySekharan/CTF-tool"&gt;https://github.com/SandySekharan/CTF-tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-625-Group Policy Preferences:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/03/20/group-policy-preferences" rel="nofollow"&gt;https://pentestlab.blog/2017/03/20/group-policy-preferences&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-627-CHECKING FOR MALICIOUSNESS IN AC OFORM OBJECTS ON PDF FILES:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://furoner.wordpress.com/2017/11/15/checking-for-maliciousness-in-acroform-objects-on-pdf-files" rel="nofollow"&gt;https://furoner.wordpress.com/2017/11/15/checking-for-maliciousness-in-acroform-objects-on-pdf-files&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-628-deobfuscation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://furoner.wordpress.com/tag/deobfuscation/" rel="nofollow"&gt;https://furoner.wordpress.com/tag/deobfuscation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-629-POWERSHELL EMPIRE STAGERS 1: PHISHING WITH AN OFFICE
MACRO AND EVADING AVS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://fzuckerman.wordpress.com/2016/10/06/powershell-empire-stagers-1-phishing-with-an-office-macro-and-evading-avs/" rel="nofollow"&gt;https://fzuckerman.wordpress.com/2016/10/06/powershell-empire-stagers-1-phishing-with-an-office-macro-and-evading-avs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-630-A COMPREHENSIVE TUTORIAL ON CROSS-SITE SCRIPTING:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://fzuckerman.wordpress.com/2016/10/06/a-comprehensive-tutorial-on-cross-site-scripting/" rel="nofollow"&gt;https://fzuckerman.wordpress.com/2016/10/06/a-comprehensive-tutorial-on-cross-site-scripting/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-631-GCAT – BACKDOOR EM PYTHON:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://fzuckerman.wordpress.com/2016/10/06/gcat-backdoor-em-python/" rel="nofollow"&gt;https://fzuckerman.wordpress.com/2016/10/06/gcat-backdoor-em-python/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-632-Latest Carding Dorks List for Sql njection 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://latestechnews.com/carding-dorks/" rel="nofollow"&gt;https://latestechnews.com/carding-dorks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-633-google docs for credit card:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://latestechnews.com/tag/google-docs-for-credit-card/" rel="nofollow"&gt;https://latestechnews.com/tag/google-docs-for-credit-card/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-634-How To Scan Multiple Organizations
With Shodan and Golang (OSINT):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/d994ba6a9587" rel="nofollow"&gt;https://medium.com/p/d994ba6a9587&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-635-How to Evade Application
Whitelisting Using REGSVR32:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/evade-application-whitelisting-using-regsvr32/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/evade-application-whitelisting-using-regsvr32/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-636-phishing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/tag/phishing/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/tag/phishing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-637-Merlin in action: Intro to Merlin:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://asciinema.org/a/ryljo8qNjHz1JFcFDK7wP6e9I" rel="nofollow"&gt;https://asciinema.org/a/ryljo8qNjHz1JFcFDK7wP6e9I&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-638-IP Cams from around the world:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/a6f269f56805" rel="nofollow"&gt;https://medium.com/p/a6f269f56805&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-639-Advanced Cross Site Scripting(XSS) Cheat Sheet by
Jaydeep Dabhi:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jaydeepdabhi.wordpress.com/2016/01/12/advanced-cross-site-scriptingxss-cheat-sheet-by-jaydeep-dabhi/" rel="nofollow"&gt;https://jaydeepdabhi.wordpress.com/2016/01/12/advanced-cross-site-scriptingxss-cheat-sheet-by-jaydeep-dabhi/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-640-Just how easy it is to do a domain or
subdomain take over!?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/265d635b43d8" rel="nofollow"&gt;https://medium.com/p/265d635b43d8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-641-How to Create hidden user in Remote PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/create-hidden-remote-metaspolit" rel="nofollow"&gt;http://www.hackingarticles.in/create-hidden-remote-metaspolit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-642-Process Doppelgänging – a new way to impersonate a process:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hshrzd.wordpress.com/2017/12/18/process-doppelganging-a-new-way-to-impersonate-a-process/" rel="nofollow"&gt;https://hshrzd.wordpress.com/2017/12/18/process-doppelganging-a-new-way-to-impersonate-a-process/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-643-How to turn a DLL into astandalone EXE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hshrzd.wordpress.com/2016/07/21/how-to-turn-a-dll-into-a-standalone-exe/" rel="nofollow"&gt;https://hshrzd.wordpress.com/2016/07/21/how-to-turn-a-dll-into-a-standalone-exe/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-644-Hijacking extensions handlers as a malware persistence method:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hshrzd.wordpress.com/2017/05/25/hijacking-extensions-handlers-as-a-malware-persistence-method/" rel="nofollow"&gt;https://hshrzd.wordpress.com/2017/05/25/hijacking-extensions-handlers-as-a-malware-persistence-method/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-645-I'll Get Your Credentials ... Later!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fuzzysecurity.com/tutorials/18.html" rel="nofollow"&gt;https://www.fuzzysecurity.com/tutorials/18.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-646-Game Over: CanYouPwnMe &amp;gt; Kevgir-1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fuzzysecurity.com/tutorials/26.html" rel="nofollow"&gt;https://www.fuzzysecurity.com/tutorials/26.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-647-IKARUS anti.virus and its 9 exploitable kernel vulnerabilities:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.greyhathacker.net/?p=995" rel="nofollow"&gt;http://www.greyhathacker.net/?p=995&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-648-Getting started in Bug Bounty:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/7052da28445a" rel="nofollow"&gt;https://medium.com/p/7052da28445a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-649-Union SQLi Challenges (Zixem Write-up):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/ctf-writeups/union-sqli-challenges-zixem-write-up-4e74ad4e88b4?source=placement_card_footer_grid---------2-60" rel="nofollow"&gt;https://medium.com/ctf-writeups/union-sqli-challenges-zixem-write-up-4e74ad4e88b4?source=placement_card_footer_grid---------2-60&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-650-scanless – A Tool for Perform Anonymous Port Scan on Target Websites:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/scanless-port-scans-websites-behalf" rel="nofollow"&gt;https://gbhackers.com/scanless-port-scans-websites-behalf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-651-WEBAPP PENTEST:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securityonline.info/category/penetration-testing/webapp-pentest/" rel="nofollow"&gt;https://securityonline.info/category/penetration-testing/webapp-pentest/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-652-Cross-Site Scripting (XSS) Payloads:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securityonline.info/tag/cross-site-scripting-xss-payloads/" rel="nofollow"&gt;https://securityonline.info/tag/cross-site-scripting-xss-payloads/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-653-sg1: swiss army knife for data encryption, exfiltration &amp;amp; covert communication:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securityonline.info/tag/sg1/" rel="nofollow"&gt;https://securityonline.info/tag/sg1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-654-NETWORK PENTEST:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securityonline.info/category/penetration-testing/network-pentest/" rel="nofollow"&gt;https://securityonline.info/category/penetration-testing/network-pentest/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-655-SQL injection in an UPDATE query - a bug bounty story!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://zombiehelp54.blogspot.com/2017/02/sql-injection-in-update-query-bug.html" rel="nofollow"&gt;https://zombiehelp54.blogspot.com/2017/02/sql-injection-in-update-query-bug.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-656-Cross-site Scripting:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.netsparker.com/blog/web-security/cross-site-scripting-xss/" rel="nofollow"&gt;https://www.netsparker.com/blog/web-security/cross-site-scripting-xss/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-657-Local File Inclusion:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.netsparker.com/blog/web-security/local-file-inclusion-vulnerability/" rel="nofollow"&gt;https://www.netsparker.com/blog/web-security/local-file-inclusion-vulnerability/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-658-Command Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.netsparker.com/blog/web-security/command-injection-vulnerability/" rel="nofollow"&gt;https://www.netsparker.com/blog/web-security/command-injection-vulnerability/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-659-a categorized list of Windows CMD commands:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ss64.com/nt/commands.html" rel="nofollow"&gt;https://ss64.com/nt/commands.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-660-Understanding Guide for Nmap Timing Scan (Firewall Bypass):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/understanding-guide-nmap-timing-scan-firewall-bypass" rel="nofollow"&gt;http://www.hackingarticles.in/understanding-guide-nmap-timing-scan-firewall-bypass&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-661-RFID Hacking with The Proxmark 3:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.kchung.co/tag/rfid/" rel="nofollow"&gt;https://blog.kchung.co/tag/rfid/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-662-A practical guide to RFID badge copying:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.nviso.be/2017/01/11/a-practical-guide-to-rfid-badge-copying" rel="nofollow"&gt;https://blog.nviso.be/2017/01/11/a-practical-guide-to-rfid-badge-copying&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-663-Denial of Service using Cookie Bombing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/55c2d0ef808c" rel="nofollow"&gt;https://medium.com/p/55c2d0ef808c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-664-Vultr Domain Hijacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://vincentyiu.co.uk/red-team/cloud-security/vultr-domain-hijacking" rel="nofollow"&gt;https://vincentyiu.co.uk/red-team/cloud-security/vultr-domain-hijacking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-665-Command and Control:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://vincentyiu.co.uk/red-team/domain-fronting" rel="nofollow"&gt;https://vincentyiu.co.uk/red-team/domain-fronting&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-666-Cisco Auditing Tool &amp;amp; Cisco Global Exploiter to Exploit 14 Vulnerabilities in Cisco Switches and Routers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/cisco-global-exploiter-cge" rel="nofollow"&gt;https://gbhackers.com/cisco-global-exploiter-cge&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-667-CHECKING FOR MALICIOUSNESS IN ACROFORM  OBJECTS ON PDF FILES:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://furoner.wordpress.com/2017/11/15/checking-for-maliciousness-in-acroform-objects-on-pdf-files" rel="nofollow"&gt;https://furoner.wordpress.com/2017/11/15/checking-for-maliciousness-in-acroform-objects-on-pdf-files&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-668-Situational Awareness:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2018/05/28/situational-awareness/" rel="nofollow"&gt;https://pentestlab.blog/2018/05/28/situational-awareness/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-669-Unquoted Service Path:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/03/09/unquoted-service-path" rel="nofollow"&gt;https://pentestlab.blog/2017/03/09/unquoted-service-path&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-670-NFS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestacademy.wordpress.com/2017/09/20/nfs/" rel="nofollow"&gt;https://pentestacademy.wordpress.com/2017/09/20/nfs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-671-List of Tools for Pentest Rookies:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestacademy.wordpress.com/2016/09/20/list-of-tools-for-pentest-rookies/" rel="nofollow"&gt;https://pentestacademy.wordpress.com/2016/09/20/list-of-tools-for-pentest-rookies/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-672-Common Windows Commands for Pentesters:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestacademy.wordpress.com/2016/06/21/common-windows-commands-for-pentesters/" rel="nofollow"&gt;https://pentestacademy.wordpress.com/2016/06/21/common-windows-commands-for-pentesters/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-673-Open-Source Intelligence (OSINT) Reconnaissance:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/75edd7f7dada" rel="nofollow"&gt;https://medium.com/p/75edd7f7dada&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-674-OSINT x UCCU Workshop on Open Source Intelligence:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/miaoski/osint-x-uccu-workshop-on-open-source-intelligence" rel="nofollow"&gt;https://www.slideshare.net/miaoski/osint-x-uccu-workshop-on-open-source-intelligence&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-675-Advanced Attack Techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cyberark.com/threat-research-category/advanced-attack-techniques/" rel="nofollow"&gt;https://www.cyberark.com/threat-research-category/advanced-attack-techniques/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-676-Credential Theft:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cyberark.com/threat-research-category/credential-theft/" rel="nofollow"&gt;https://www.cyberark.com/threat-research-category/credential-theft/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-678-The Cloud Shadow Admin Threat: 10 Permissions to Protect:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cyberark.com/threat-research-blog/cloud-shadow-admin-threat-10-permissions-protect/" rel="nofollow"&gt;https://www.cyberark.com/threat-research-blog/cloud-shadow-admin-threat-10-permissions-protect/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-679-Online Credit Card Theft: Today’s Browsers Store Sensitive Information Deficiently, Putting User Data at Risk:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cyberark.com/threat-research-blog/online-credit-card-theft-todays-browsers-store-sensitive-information-deficiently-putting-user-data-risk/" rel="nofollow"&gt;https://www.cyberark.com/threat-research-blog/online-credit-card-theft-todays-browsers-store-sensitive-information-deficiently-putting-user-data-risk/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-680-Weakness Within: Kerberos Delegation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cyberark.com/threat-research-blog/weakness-within-kerberos-delegation/" rel="nofollow"&gt;https://www.cyberark.com/threat-research-blog/weakness-within-kerberos-delegation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-681-Simple Domain Fronting PoC with GAE C2 server:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.securityartwork.es/2017/01/31/simple-domain-fronting-poc-with-gae-c2-server/" rel="nofollow"&gt;https://www.securityartwork.es/2017/01/31/simple-domain-fronting-poc-with-gae-c2-server/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-682-Find Critical Information about a Host using DMitry:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.thehackr.com/find-critical-information-host-using-dmitry/" rel="nofollow"&gt;https://www.thehackr.com/find-critical-information-host-using-dmitry/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-683-How To Do OS Fingerprinting In Kali Using Xprobe2:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://disq.us/?url=http%3A%2F%2Fwww.thehackr.com%2Fos-fingerprinting-kali%2F&amp;amp;key=scqgRVMQacpzzrnGSOPySA" rel="nofollow"&gt;http://disq.us/?url=http%3A%2F%2Fwww.thehackr.com%2Fos-fingerprinting-kali%2F&amp;amp;key=scqgRVMQacpzzrnGSOPySA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-684-Crack SSH, FTP, Telnet Logins Using Hydra:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.thehackr.com/crack-ssh-ftp-telnet-logins-using-hydra/" rel="nofollow"&gt;https://www.thehackr.com/crack-ssh-ftp-telnet-logins-using-hydra/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-685-Reveal Saved Passwords in Browser using JavaScript Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.thehackr.com/reveal-saved-passwords-browser-using-javascript-injection/" rel="nofollow"&gt;https://www.thehackr.com/reveal-saved-passwords-browser-using-javascript-injection/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-686-Nmap Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://s3-us-west-2.amazonaws.com/stationx-public-download/nmap_cheet_sheet_0.6.pdf" rel="nofollow"&gt;https://s3-us-west-2.amazonaws.com/stationx-public-download/nmap_cheet_sheet_0.6.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-687-Manual Post Exploitation on Windows PC (Network Command):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/manual-post-exploitation-windows-pc-network-command" rel="nofollow"&gt;http://www.hackingarticles.in/manual-post-exploitation-windows-pc-network-command&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-688-Hack Gmail or Facebook Password of Remote PC using NetRipper Exploitation Tool:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-gmail-or-facebook-password-of-remote-pc-using-netripper-exploitation-tool" rel="nofollow"&gt;http://www.hackingarticles.in/hack-gmail-or-facebook-password-of-remote-pc-using-netripper-exploitation-tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-689-Hack Locked Workstation Password in Clear Text:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-locked-workstation-password-clear-text" rel="nofollow"&gt;http://www.hackingarticles.in/hack-locked-workstation-password-clear-text&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-690-How to Find ALL Excel, Office, PDF, and Images in Remote PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/how-to-find-all-excel-office-pdf-images-files-in-remote-pc" rel="nofollow"&gt;http://www.hackingarticles.in/how-to-find-all-excel-office-pdf-images-files-in-remote-pc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-691-red-teaming:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.redteamsecure.com/category/red-teaming/" rel="nofollow"&gt;https://www.redteamsecure.com/category/red-teaming/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-692-Create a Fake AP and Sniff Data mitmAP:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.uaeinfosec.com/create-fake-ap-sniff-data-mitmap/" rel="nofollow"&gt;http://www.uaeinfosec.com/create-fake-ap-sniff-data-mitmap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-693-Bruteforcing From Nmap Output BruteSpray:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.uaeinfosec.com/bruteforcing-nmap-output-brutespray/" rel="nofollow"&gt;http://www.uaeinfosec.com/bruteforcing-nmap-output-brutespray/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-694-Reverse Engineering Framework radare2:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.uaeinfosec.com/reverse-engineering-framework-radare2/" rel="nofollow"&gt;http://www.uaeinfosec.com/reverse-engineering-framework-radare2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-695-Automated ettercap TCP/IP Hijacking Tool Morpheus:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.uaeinfosec.com/automated-ettercap-tcpip-hijacking-tool-morpheus/" rel="nofollow"&gt;http://www.uaeinfosec.com/automated-ettercap-tcpip-hijacking-tool-morpheus/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-696-List Of Vulnerable SQL Injection Sites:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blogger.com/share-post.g?blogID=1175829128367570667&amp;amp;postID=4652029420701251199" rel="nofollow"&gt;https://www.blogger.com/share-post.g?blogID=1175829128367570667&amp;amp;postID=4652029420701251199&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-697-Command and Control – Gmail:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/08/03/command-and-control-gmail/" rel="nofollow"&gt;https://pentestlab.blog/2017/08/03/command-and-control-gmail/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-698-Command and Control – DropBox:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/08/29/command-and-control-dropbox/" rel="nofollow"&gt;https://pentestlab.blog/2017/08/29/command-and-control-dropbox/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-699-Skeleton Key:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2018/04/10/skeleton-key/" rel="nofollow"&gt;https://pentestlab.blog/2018/04/10/skeleton-key/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-700-Secondary Logon Handle:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/04/07/secondary-logon-handle" rel="nofollow"&gt;https://pentestlab.blog/2017/04/07/secondary-logon-handle&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-701-Hot Potato:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/04/13/hot-potato" rel="nofollow"&gt;https://pentestlab.blog/2017/04/13/hot-potato&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-702-Leveraging INF-SCT Fetch &amp;amp; Execute Techniques For Bypass, Evasion, &amp;amp; Persistence (Part 2):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2018/03/10/leveraging-inf-sct-fetch-execute-techniques-for-bypass-evasion-persistence-part-2/" rel="nofollow"&gt;https://bohops.com/2018/03/10/leveraging-inf-sct-fetch-execute-techniques-for-bypass-evasion-persistence-part-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-703-Linux-Kernel-exploits:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://tacxingxing.com/category/exploit/kernel-exploit/" rel="nofollow"&gt;http://tacxingxing.com/category/exploit/kernel-exploit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-704-Linux-Kernel-Exploit Stack Smashing:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://tacxingxing.com/2018/02/26/linuxkernelexploit-stack-smashing/" rel="nofollow"&gt;http://tacxingxing.com/2018/02/26/linuxkernelexploit-stack-smashing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-705-Linux Kernel Exploit Environment:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://tacxingxing.com/2018/02/15/linuxkernelexploit-huan-jing-da-jian/" rel="nofollow"&gt;http://tacxingxing.com/2018/02/15/linuxkernelexploit-huan-jing-da-jian/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-706-Linux-Kernel-Exploit NULL dereference:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://tacxingxing.com/2018/02/22/linuxkernelexploit-null-dereference/" rel="nofollow"&gt;http://tacxingxing.com/2018/02/22/linuxkernelexploit-null-dereference/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-707-Apache mod_python for red teams:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.nettitude.com/blog/apache-mod_python-for-red-teams/" rel="nofollow"&gt;https://labs.nettitude.com/blog/apache-mod_python-for-red-teams/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-708-Bounty Write-up (HTB):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/9b01c934dfd2/" rel="nofollow"&gt;https://medium.com/p/9b01c934dfd2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;709-CTF Writeups:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/ctf-writeups" rel="nofollow"&gt;https://medium.com/ctf-writeups&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-710-Detecting Malicious Microsoft Office Macro Documents:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.greyhathacker.net/?p=872" rel="nofollow"&gt;http://www.greyhathacker.net/?p=872&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-711-SQL injection in Drupal:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/31756" rel="nofollow"&gt;https://hackerone.com/reports/31756&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-712-XSS and open redirect on Twitter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/260744" rel="nofollow"&gt;https://hackerone.com/reports/260744&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-713-Shopify login open redirect:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/55546" rel="nofollow"&gt;https://hackerone.com/reports/55546&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-714-HackerOne interstitial redirect:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/111968" rel="nofollow"&gt;https://hackerone.com/reports/111968&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-715-Ubiquiti sub-domain takeovers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/181665" rel="nofollow"&gt;https://hackerone.com/reports/181665&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-716-Scan.me pointing to Zendesk:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/114134" rel="nofollow"&gt;https://hackerone.com/reports/114134&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-717-Starbucks' sub-domain takeover:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/325336" rel="nofollow"&gt;https://hackerone.com/reports/325336&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-718-Vine's sub-domain takeover:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/32825" rel="nofollow"&gt;https://hackerone.com/reports/32825&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-719-Uber's sub-domain takeover:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/175070" rel="nofollow"&gt;https://hackerone.com/reports/175070&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-720-Read access to Google:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.detectify.com/2014/04/11/how-we-got-read-access-on-googles-production-servers/" rel="nofollow"&gt;https://blog.detectify.com/2014/04/11/how-we-got-read-access-on-googles-production-servers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-721-A Facebook XXE with Word:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.bram.us/2014/12/29/how-i-hacked-facebook-with-a-word-document/" rel="nofollow"&gt;https://www.bram.us/2014/12/29/how-i-hacked-facebook-with-a-word-document/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-722-The Wikiloc XXE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.davidsopas.com/wikiloc-xxe-vulnerability/" rel="nofollow"&gt;https://www.davidsopas.com/wikiloc-xxe-vulnerability/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-723-Uber Jinja2 TTSI:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/125980" rel="nofollow"&gt;https://hackerone.com/reports/125980&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-724-Uber Angular template injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/125027" rel="nofollow"&gt;https://hackerone.com/reports/125027&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-725-Yahoo Mail stored XSS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://klikki.fi/adv/yahoo2.html" rel="nofollow"&gt;https://klikki.fi/adv/yahoo2.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-726-Google image search XSS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mahmoudsec.blogspot.com/2015/09/how-i-found-xss-vulnerability-in-google.html" rel="nofollow"&gt;https://mahmoudsec.blogspot.com/2015/09/how-i-found-xss-vulnerability-in-google.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-727-Shopify Giftcard Cart XSS :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/95089" rel="nofollow"&gt;https://hackerone.com/reports/95089&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-728-Shopify wholesale XSS :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/106293" rel="nofollow"&gt;https://hackerone.com/reports/106293&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-729-Bypassing the Shopify admin authentication:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/270981" rel="nofollow"&gt;https://hackerone.com/reports/270981&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-730-Starbucks race conditions:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sakurity.com/blog/2015/05/21/starbucks.html" rel="nofollow"&gt;https://sakurity.com/blog/2015/05/21/starbucks.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-731-Binary.com vulnerability – stealing a user's money:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/98247" rel="nofollow"&gt;https://hackerone.com/reports/98247&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-732-HackerOne signal manipulation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/106305" rel="nofollow"&gt;https://hackerone.com/reports/106305&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-733-Shopify S buckets open:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/98819" rel="nofollow"&gt;https://hackerone.com/reports/98819&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-734-HackerOne S buckets open:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/209223" rel="nofollow"&gt;https://hackerone.com/reports/209223&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-735-Bypassing the GitLab 2F authentication:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitlab.com/gitlab-org/gitlab-ce/issues/14900" rel="nofollow"&gt;https://gitlab.com/gitlab-org/gitlab-ce/issues/14900&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-736-Yahoo PHP info disclosure:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.it-securityguard.com/bugbounty-yahoo-phpinfo-php-disclosure-2/" rel="nofollow"&gt;https://blog.it-securityguard.com/bugbounty-yahoo-phpinfo-php-disclosure-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-737-Shopify for exporting installed users:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/96470" rel="nofollow"&gt;https://hackerone.com/reports/96470&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-738-Shopify Twitter disconnect:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/111216" rel="nofollow"&gt;https://hackerone.com/reports/111216&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-739-Badoo full account takeover:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/127703" rel="nofollow"&gt;https://hackerone.com/reports/127703&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-740-Disabling PS Logging:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/leechristensen/Random/blob/master/CSharp/DisablePSLogging.cs"&gt;https://github.com/leechristensen/Random/blob/master/CSharp/DisablePSLogging.cs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-741-macro-less-code-exec-in-msword:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sensepost.com/blog/2017/macro-less-code-exec-in-msword/" rel="nofollow"&gt;https://sensepost.com/blog/2017/macro-less-code-exec-in-msword/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-742-5 ways to Exploiting PUT Vulnerability:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-to-exploiting-put-vulnerabilit" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-to-exploiting-put-vulnerabilit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-743-5 Ways to Exploit Verb Tempering Vulnerability:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-to-exploit-verb-tempering-vulnerability" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-to-exploit-verb-tempering-vulnerability&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-744-5 Ways to Hack MySQL Login Password:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-to-hack-mysql-login-password" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-to-hack-mysql-login-password&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-745-5 Ways to Hack SMB Login Password:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-to-hack-smb-login-password" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-to-hack-smb-login-password&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-746-6 Ways to Hack FTP Login Password:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/6-ways-to-hack-ftp-login-password" rel="nofollow"&gt;http://www.hackingarticles.in/6-ways-to-hack-ftp-login-password&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-746-6 Ways to Hack SNMP Password:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/6-ways-to-hack-snmp-password" rel="nofollow"&gt;http://www.hackingarticles.in/6-ways-to-hack-snmp-password&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-747-6 Ways to Hack VNC Login Password:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/6-ways-to-hack-vnc-login-password" rel="nofollow"&gt;http://www.hackingarticles.in/6-ways-to-hack-vnc-login-password&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-748-Access Sticky keys Backdoor on Remote PC with Sticky Keys Hunter:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/access-sticky-keys-backdoor-remote-pc-sticky-keys-hunter" rel="nofollow"&gt;http://www.hackingarticles.in/access-sticky-keys-backdoor-remote-pc-sticky-keys-hunter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-749-Beginner Guide to IPtables:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/beginner-guide-iptables" rel="nofollow"&gt;http://www.hackingarticles.in/beginner-guide-iptables&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-750-Beginner Guide to impacket Tool kit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/beginner-guide-to-impacket-tool-kit" rel="nofollow"&gt;http://www.hackingarticles.in/beginner-guide-to-impacket-tool-kit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-751-Exploit Remote Windows 10 PC using Discover Tool:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/exploit-remote-windows-10-pc-using-discover-tool" rel="nofollow"&gt;http://www.hackingarticles.in/exploit-remote-windows-10-pc-using-discover-tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-752-Forensics Investigation of Remote PC (Part 2):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/forensics-investigation-of-remote-pc-part-2" rel="nofollow"&gt;http://www.hackingarticles.in/forensics-investigation-of-remote-pc-part-2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-753-5 ways to File upload vulnerability Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-file-upload-vulnerability-exploitation" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-file-upload-vulnerability-exploitation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-754-FTP Penetration Testing in Ubuntu (Port 21):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/ftp-penetration-testing-in-ubuntu-port-21" rel="nofollow"&gt;http://www.hackingarticles.in/ftp-penetration-testing-in-ubuntu-port-21&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-755-FTP Penetration Testing on Windows (Port 21):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/ftp-penetration-testing-windows" rel="nofollow"&gt;http://www.hackingarticles.in/ftp-penetration-testing-windows&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-756-FTP Pivoting through RDP:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/ftp-pivoting-rdp" rel="nofollow"&gt;http://www.hackingarticles.in/ftp-pivoting-rdp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-757-Fun with Metasploit Payloads:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/fun-metasploit-payloads" rel="nofollow"&gt;http://www.hackingarticles.in/fun-metasploit-payloads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-758-Gather Cookies and History of Mozilla Firefox in Remote Windows, Linux or MAC PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/gather-cookies-and-history-of-mozilla-firefox-in-remote-windows-linux-or-mac-pc" rel="nofollow"&gt;http://www.hackingarticles.in/gather-cookies-and-history-of-mozilla-firefox-in-remote-windows-linux-or-mac-pc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-759-Generating Reverse Shell using Msfvenom (One Liner Payload):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/generating-reverse-shell-using-msfvenom-one-liner-payload" rel="nofollow"&gt;http://www.hackingarticles.in/generating-reverse-shell-using-msfvenom-one-liner-payload&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-760-Generating Scan Reports Using Nmap (Output Scan):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/generating-scan-reports-using-nmap-output-scan" rel="nofollow"&gt;http://www.hackingarticles.in/generating-scan-reports-using-nmap-output-scan&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-761-Get Meterpreter Session of Locked PC Remotely (Remote Desktop Enabled):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/get-meterpreter-session-locked-pc-remotely-remote-desktop-enabled" rel="nofollow"&gt;http://www.hackingarticles.in/get-meterpreter-session-locked-pc-remotely-remote-desktop-enabled&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-762-Hack ALL Security Features in Remote Windows 7 PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-all-security-features-in-remote-windows-7-pc" rel="nofollow"&gt;http://www.hackingarticles.in/hack-all-security-features-in-remote-windows-7-pc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-763-5 ways to Exploit LFi Vulnerability:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-exploit-lfi-vulnerability" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-exploit-lfi-vulnerability&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-764-5 Ways to Directory Bruteforcing on Web Server:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-directory-bruteforcing-web-server" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-directory-bruteforcing-web-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-765-Hack Call Logs, SMS, Camera of Remote Android Phone using Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-call-logs-sms-camera-remote-android-phone-using-metasploit" rel="nofollow"&gt;http://www.hackingarticles.in/hack-call-logs-sms-camera-remote-android-phone-using-metasploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-766-Hack Gmail and Facebook Password in Network using Bettercap:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-gmail-facebook-password-network-using-bettercap" rel="nofollow"&gt;http://www.hackingarticles.in/hack-gmail-facebook-password-network-using-bettercap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-767-ICMP Penetration Testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/icmp-penetration-testing" rel="nofollow"&gt;http://www.hackingarticles.in/icmp-penetration-testing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-768-Understanding Guide to Mimikatz:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/understanding-guide-mimikatz" rel="nofollow"&gt;http://www.hackingarticles.in/understanding-guide-mimikatz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-769-5 Ways to Create Dictionary for Bruteforcing:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-create-dictionary-bruteforcing" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-create-dictionary-bruteforcing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-770-Linux Privilege Escalation using LD_Preload:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/linux-privilege-escalation-using-ld_preload/" rel="nofollow"&gt;http://www.hackingarticles.in/linux-privilege-escalation-using-ld_preload/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-771-2 Ways to Hack Remote Desktop Password using kali Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/2-ways-to-hack-remote-desktop-password-using-kali-linux" rel="nofollow"&gt;http://www.hackingarticles.in/2-ways-to-hack-remote-desktop-password-using-kali-linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-772-2 ways to use Msfvenom Payload with Netcat:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/2-ways-use-msfvenom-payload-netcat" rel="nofollow"&gt;http://www.hackingarticles.in/2-ways-use-msfvenom-payload-netcat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-773-4 ways to Connect Remote PC using SMB Port:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/4-ways-connect-remote-pc-using-smb-port" rel="nofollow"&gt;http://www.hackingarticles.in/4-ways-connect-remote-pc-using-smb-port&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-774-4 Ways to DNS Enumeration:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/4-ways-dns-enumeration" rel="nofollow"&gt;http://www.hackingarticles.in/4-ways-dns-enumeration&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-775-4 Ways to get Linux Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/4-ways-get-linux-privilege-escalation" rel="nofollow"&gt;http://www.hackingarticles.in/4-ways-get-linux-privilege-escalation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-776-101+ OSINT Resources for Investigators [2019]:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://i-sight.com/resources/101-osint-resources-for-investigators/" rel="nofollow"&gt;https://i-sight.com/resources/101-osint-resources-for-investigators/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-777-Week in OSINT #2019–02:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/week-in-osint/week-in-osint-2019-02-d4009c27e85f" rel="nofollow"&gt;https://medium.com/week-in-osint/week-in-osint-2019-02-d4009c27e85f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-778-OSINT Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hack2interesting.com/osint-cheat-sheet/" rel="nofollow"&gt;https://hack2interesting.com/osint-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-779-OSINT Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://infoskirmish.com/osint-cheat-sheet/" rel="nofollow"&gt;https://infoskirmish.com/osint-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-780-OSINT Links for Investigators:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://i-sight.com/resources/osint-links-for-investigators/" rel="nofollow"&gt;https://i-sight.com/resources/osint-links-for-investigators/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-781- Metasploit Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.kitploit.com/2019/02/metasploit-cheat-sheet.html" rel="nofollow"&gt;https://www.kitploit.com/2019/02/metasploit-cheat-sheet.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-782- Exploit Development Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/coreb1t/awesome-pentest-cheat-sheets/commit/5b83fa9cfb05f4774eb5e1be2cde8dbb04d011f4"&gt;https://github.com/coreb1t/awesome-pentest-cheat-sheets/commit/5b83fa9cfb05f4774eb5e1be2cde8dbb04d011f4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-783-Building Profiles for a Social Engineering Attack:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2012/04/19/building-profiles-for-a-social-engineering-attack/" rel="nofollow"&gt;https://pentestlab.blog/2012/04/19/building-profiles-for-a-social-engineering-attack/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-784-Practical guide to NTLM Relaying in 2017 (A.K.A getting a foothold in under 5 minutes):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://byt3bl33d3r.github.io/practical-guide-to-ntlm-relaying-in-2017-aka-getting-a-foothold-in-under-5-minutes.html" rel="nofollow"&gt;https://byt3bl33d3r.github.io/practical-guide-to-ntlm-relaying-in-2017-aka-getting-a-foothold-in-under-5-minutes.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-785-Getting the goods with CrackMapExec: Part 2:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://byt3bl33d3r.github.io/tag/crackmapexec.html" rel="nofollow"&gt;https://byt3bl33d3r.github.io/tag/crackmapexec.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-786-Bug Hunting Methodology (part-1):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/91295b2d2066" rel="nofollow"&gt;https://medium.com/p/91295b2d2066&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-787-Exploring Cobalt Strike's ExternalC2 framework:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.xpnsec.com/exploring-cobalt-strikes-externalc2-framework/" rel="nofollow"&gt;https://blog.xpnsec.com/exploring-cobalt-strikes-externalc2-framework/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-788-Airbnb – When Bypassing JSON Encoding, XSS Filter, WAF, CSP, and Auditor turns into Eight Vulnerabilities:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://buer.haus/2017/03/08/airbnb-when-bypassing-json-encoding-xss-filter-waf-csp-and-auditor-turns-into-eight-vulnerabilities/" rel="nofollow"&gt;https://buer.haus/2017/03/08/airbnb-when-bypassing-json-encoding-xss-filter-waf-csp-and-auditor-turns-into-eight-vulnerabilities/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-789-Adversarial Tactics, Techniques &amp;amp; Common Knowledge:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://attack.mitre.org/wiki/Main_Page" rel="nofollow"&gt;https://attack.mitre.org/wiki/Main_Page&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-790-Bug Bounty — Tips / Tricks / JS (JavaScript Files):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/bdde412ea49d" rel="nofollow"&gt;https://medium.com/p/bdde412ea49d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-791-Bug Bounty Hunting Tips #2 —Target their mobile apps (Android Edition):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/f88a9f383fcc" rel="nofollow"&gt;https://medium.com/p/f88a9f383fcc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-792-DiskShadow: The Return of VSS Evasion, Persistence, and Active Directory
Database Extraction:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/" rel="nofollow"&gt;https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-793-Executing Commands and Bypassing AppLocker with PowerShell Diagnostic Scripts:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2018/01/07/executing-commands-and-bypassing-applocker-with-powershell-diagnostic-scripts/" rel="nofollow"&gt;https://bohops.com/2018/01/07/executing-commands-and-bypassing-applocker-with-powershell-diagnostic-scripts/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-794-ClickOnce (Twice or Thrice): A Technique for Social Engineering and (Un)trusted Command Execution:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2017/12/02/clickonce-twice-or-thrice-a-technique-for-social-engineering-and-untrusted-command-execution/" rel="nofollow"&gt;https://bohops.com/2017/12/02/clickonce-twice-or-thrice-a-technique-for-social-engineering-and-untrusted-command-execution/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-795-Leveraging INF-SCT Fetch &amp;amp; Execute Techniques For Bypass, Evasion, &amp;amp; Persistence (Part 2):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2018/03/10/leveraging-inf-sct-fetch-execute-techniques-for-bypass-evasion-persistence-part-2/" rel="nofollow"&gt;https://bohops.com/2018/03/10/leveraging-inf-sct-fetch-execute-techniques-for-bypass-evasion-persistence-part-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-796-DiskShadow: The Return of VSS Evasion, Persistence, and Active Directory Database Extraction:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/" rel="nofollow"&gt;https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-797-Trust Direction: An Enabler for Active Directory Enumeration and Trust Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2017/12/02/trust-direction-an-enabler-for-active-directory-enumeration-and-trust-exploitation/" rel="nofollow"&gt;https://bohops.com/2017/12/02/trust-direction-an-enabler-for-active-directory-enumeration-and-trust-exploitation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-798-DiskShadow: The Return of VSS Evasion, Persistence, and Active Directory Database Extraction:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/" rel="nofollow"&gt;https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-799-Abusing Exported Functions and Exposed DCOM Interfaces for Pass-Thru Command Execution and Lateral Movement:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2018/03/17/abusing-exported-functions-and-exposed-dcom-interfaces-for-pass-thru-command-execution-and-lateral-movement/" rel="nofollow"&gt;https://bohops.com/2018/03/17/abusing-exported-functions-and-exposed-dcom-interfaces-for-pass-thru-command-execution-and-lateral-movement/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-800-Capcom Rootkit Proof-Of-Concept:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fuzzysecurity.com/tutorials/28.html" rel="nofollow"&gt;https://www.fuzzysecurity.com/tutorials/28.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-801-Linux Privilege Escalation using Misconfigured NFS:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/linux-privilege-escalation-using-misconfigured-nfs/" rel="nofollow"&gt;http://www.hackingarticles.in/linux-privilege-escalation-using-misconfigured-nfs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-802-Beginners Guide for John the Ripper (Part 1):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/beginner-guide-john-the-ripper-part-1/" rel="nofollow"&gt;http://www.hackingarticles.in/beginner-guide-john-the-ripper-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-803-Working of Traceroute using Wireshark:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/working-of-traceroute-using-wireshark/" rel="nofollow"&gt;http://www.hackingarticles.in/working-of-traceroute-using-wireshark/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-804-Multiple Ways to Get root through Writable File:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/multiple-ways-to-get-root-through-writable-file/" rel="nofollow"&gt;http://www.hackingarticles.in/multiple-ways-to-get-root-through-writable-file/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-805-4 ways to SMTP Enumeration:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/4-ways-smtp-enumeration" rel="nofollow"&gt;http://www.hackingarticles.in/4-ways-smtp-enumeration&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-806-4 ways to Hack MS SQL Login Password:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/4-ways-to-hack-ms-sql-login-password" rel="nofollow"&gt;http://www.hackingarticles.in/4-ways-to-hack-ms-sql-login-password&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-807-4 Ways to Hack Telnet Passsword:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/4-ways-to-hack-telnet-passsword" rel="nofollow"&gt;http://www.hackingarticles.in/4-ways-to-hack-telnet-passsword&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-808-5 ways to Brute Force Attack on WordPress Website:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-brute-force-attack-wordpress-website" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-brute-force-attack-wordpress-website&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-809-5 Ways to Crawl a Website:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-crawl-website" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-crawl-website&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-810-Local Linux Enumeration &amp;amp; Privilege Escalation Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.rebootuser.com/?p=1623" rel="nofollow"&gt;https://www.rebootuser.com/?p=1623&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-811-The Drebin Dataset:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sec.cs.tu-bs.de/~danarp/drebin/download.html" rel="nofollow"&gt;https://www.sec.cs.tu-bs.de/~danarp/drebin/download.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-812-ECMAScript 6 from an Attacker's Perspective - Breaking Frameworks, Sandboxes, and everything else:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/x00mario/es6-en" rel="nofollow"&gt;https://www.slideshare.net/x00mario/es6-en&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-813-IT and Information Security Cheat Sheets:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://zeltser.com/cheat-sheets/" rel="nofollow"&gt;https://zeltser.com/cheat-sheets/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-814-Cheat Sheets - DFIR Training:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.dfir.training/cheat-sheets" rel="nofollow"&gt;https://www.dfir.training/cheat-sheets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-815-WinDbg Malware Analysis Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://oalabs.openanalysis.net/2019/02/18/windbg-for-malware-analysis/" rel="nofollow"&gt;https://oalabs.openanalysis.net/2019/02/18/windbg-for-malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-819-Cheat Sheet for Analyzing Malicious Software:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.prodefence.org/cheat-sheet-for-analyzing-malicious-software/" rel="nofollow"&gt;https://www.prodefence.org/cheat-sheet-for-analyzing-malicious-software/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-820-Analyzing Malicious Documents Cheat Sheet - Prodefence:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.prodefence.org/analyzing-malicious-documents-cheat-sheet-2/" rel="nofollow"&gt;https://www.prodefence.org/analyzing-malicious-documents-cheat-sheet-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-821-Cheat Sheets - SANS Digital Forensics:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://digital-forensics.sans.org/community/cheat-sheets" rel="nofollow"&gt;https://digital-forensics.sans.org/community/cheat-sheets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-822-Linux Command Line Forensics and Intrusion Detection Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sandflysecurity.com/blog/compromised-linux-cheat-sheet/" rel="nofollow"&gt;https://www.sandflysecurity.com/blog/compromised-linux-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-823-Windows Registry Auditing Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/Hackerhurricane/windows-registry-auditing-cheat-sheet-ver-jan-2016-malwarearchaeology" rel="nofollow"&gt;https://www.slideshare.net/Hackerhurricane/windows-registry-auditing-cheat-sheet-ver-jan-2016-malwarearchaeology&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-824-Cheat Sheet of Useful Commands Every Kali Linux User Needs To Know:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://kennyvn.com/cheatsheet-useful-bash-commands-linux/" rel="nofollow"&gt;https://kennyvn.com/cheatsheet-useful-bash-commands-linux/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-825-kali-linux-cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/NoorQureshi/kali-linux-cheatsheet"&gt;https://github.com/NoorQureshi/kali-linux-cheatsheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-826-8 Best Kali Linux Terminal Commands used by Hackers (2019 Edition):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securedyou.com/best-kali-linux-commands-terminal-hacking/" rel="nofollow"&gt;https://securedyou.com/best-kali-linux-commands-terminal-hacking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-827-Kali Linux Commands Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.pinterest.com/pin/393431717429496576/" rel="nofollow"&gt;https://www.pinterest.com/pin/393431717429496576/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-827-Kali Linux Commands Cheat Sheet A To Z:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://officialhacker.com/linux-commands-cheat-sheet/" rel="nofollow"&gt;https://officialhacker.com/linux-commands-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-828-Linux commands CHEATSHEET for HACKERS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.reddit.com/r/Kalilinux/.../linux_commands_cheatsheet_for_hackers/" rel="nofollow"&gt;https://www.reddit.com/r/Kalilinux/.../linux_commands_cheatsheet_for_hackers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-829-100 Linux Commands – A Brief Outline With Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://fosslovers.com/100-linux-commands-cheatsheet/" rel="nofollow"&gt;https://fosslovers.com/100-linux-commands-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-830-Kali Linux – Penetration Testing Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://uwnthesis.wordpress.com/2016/06/.../kali-linux-penetration-testing-cheat-sheet/" rel="nofollow"&gt;https://uwnthesis.wordpress.com/2016/06/.../kali-linux-penetration-testing-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-831-Basic Linux Terminal Shortcuts Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://computingforgeeks.com/basic-linux-terminal-shortcuts-cheat-sheet/" rel="nofollow"&gt;https://computingforgeeks.com/basic-linux-terminal-shortcuts-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-832-List Of 220+ Kali Linux and Linux Commands Line {Free PDF} :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://itechhacks.com/kali-linux-and-linux-commands/" rel="nofollow"&gt;https://itechhacks.com/kali-linux-and-linux-commands/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-833-Transferring files from Kali to Windows (post exploitation):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.ropnop.com/transferring-files-from-kali-to-windows/" rel="nofollow"&gt;https://blog.ropnop.com/transferring-files-from-kali-to-windows/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-834-The Ultimate Penetration Testing Command Cheat Sheet for Kali Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hostingland.com/.../the-ultimate-penetration-testing-command-cheat-sheet" rel="nofollow"&gt;https://www.hostingland.com/.../the-ultimate-penetration-testing-command-cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-835-What is penetration testing? 10 hacking tools the pros use:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.csoonline.com/article/.../17-penetration-testing-tools-the-pros-use.html" rel="nofollow"&gt;https://www.csoonline.com/article/.../17-penetration-testing-tools-the-pros-use.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-836-Best Hacking Tools List for Hackers &amp;amp; Security Professionals in 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/hacking-tools-list/" rel="nofollow"&gt;https://gbhackers.com/hacking-tools-list/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-837-ExploitedBunker PenTest Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://exploitedbunker.com/articles/pentest-cheatsheet/" rel="nofollow"&gt;https://exploitedbunker.com/articles/pentest-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-838-How to use Zarp for penetration testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.techrepublic.com/article/how-to-use-zarp-for-penetration-testing/" rel="nofollow"&gt;https://www.techrepublic.com/article/how-to-use-zarp-for-penetration-testing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-839-Wireless Penetration Testing Cheat Sheet;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://uceka.com/2014/05/12/wireless-penetration-testing-cheat-sheet/" rel="nofollow"&gt;https://uceka.com/2014/05/12/wireless-penetration-testing-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-840-Pentest Cheat Sheets:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cheatography.com/tag/pentest/" rel="nofollow"&gt;https://www.cheatography.com/tag/pentest/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-841-40 Best Penetration Testing (Pen Testing) Tools in 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.guru99.com/top-5-penetration-testing-tools.html" rel="nofollow"&gt;https://www.guru99.com/top-5-penetration-testing-tools.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-842-Metasploit Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hacking.land/2019/02/metasploit-cheat-sheet.html" rel="nofollow"&gt;https://www.hacking.land/2019/02/metasploit-cheat-sheet.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-843-OSCP useful resources and tools;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://acknak.fr/en/articles/oscp-tools/" rel="nofollow"&gt;https://acknak.fr/en/articles/oscp-tools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-844-Pentest + Exploit dev Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ehackings.com/all-posts/pentest-exploit-dev-cheatsheet/" rel="nofollow"&gt;https://ehackings.com/all-posts/pentest-exploit-dev-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-845-What is Penetration Testing? A Quick Guide for 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cloudwards.net/penetration-testing/" rel="nofollow"&gt;https://www.cloudwards.net/penetration-testing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-846-Recon resource:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentester.land/cheatsheets/2019/04/15/recon-resources.html" rel="nofollow"&gt;https://pentester.land/cheatsheets/2019/04/15/recon-resources.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-847-Network Recon Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cheatography.com/coffeefueled/cheat-sheets/network-recon/" rel="nofollow"&gt;https://www.cheatography.com/coffeefueled/cheat-sheets/network-recon/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-848-Recon Cheat Sheets:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cheatography.com/tag/recon/" rel="nofollow"&gt;https://www.cheatography.com/tag/recon/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-849-Penetration Testing Active Directory, Part II:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hausec.com/2019/03/12/penetration-testing-active-directory-part-ii/" rel="nofollow"&gt;https://hausec.com/2019/03/12/penetration-testing-active-directory-part-ii/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-850-Reverse-engineering Cheat Sheets:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cheatography.com/tag/reverse-engineering/" rel="nofollow"&gt;https://www.cheatography.com/tag/reverse-engineering/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-851-Reverse Engineering Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.scribd.com/doc/38163906/Reverse-Engineering-Cheat-Sheet" rel="nofollow"&gt;https://www.scribd.com/doc/38163906/Reverse-Engineering-Cheat-Sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-852-ATOMBOMBING: BRAND NEW CODE INJECTION FOR WINDOWS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.ensilo.com/atombombing-brand-new-code-injection-for-windows" rel="nofollow"&gt;https://blog.ensilo.com/atombombing-brand-new-code-injection-for-windows&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-853-PROPagate:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hexacorn.com/blog/2017/10/26/propagate-a-new-code-injection-trick/" rel="nofollow"&gt;http://www.hexacorn.com/blog/2017/10/26/propagate-a-new-code-injection-trick/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-854-Process Doppelgänging, by Tal Liberman and Eugene Kogan::&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhat.com/docs/eu-17/materials/eu-17-Liberman-Lost-In-Transaction-Process-Doppelganging.pdf" rel="nofollow"&gt;https://www.blackhat.com/docs/eu-17/materials/eu-17-Liberman-Lost-In-Transaction-Process-Doppelganging.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-855-Gargoyle:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jlospinoso.github.io/security/assembly/c/cpp/developing/software/2017/03/04/gargoyle-memory-analysis-evasion.html" rel="nofollow"&gt;https://jlospinoso.github.io/security/assembly/c/cpp/developing/software/2017/03/04/gargoyle-memory-analysis-evasion.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-856-GHOSTHOOK:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cyberark.com/threat-research-blog/ghosthook-bypassing-patchguard-processor-trace-based-hooking/" rel="nofollow"&gt;https://www.cyberark.com/threat-research-blog/ghosthook-bypassing-patchguard-processor-trace-based-hooking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-857-Learn C:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.programiz.com/c-programming" rel="nofollow"&gt;https://www.programiz.com/c-programming&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-858-x86 Assembly Programming Tutorial:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.tutorialspoint.com/assembly_programming/" rel="nofollow"&gt;https://www.tutorialspoint.com/assembly_programming/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-859-Dr. Paul Carter's PC Assembly Language:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pacman128.github.io/pcasm/" rel="nofollow"&gt;http://pacman128.github.io/pcasm/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-860-Introductory Intel x86 - Architecture, Assembly, Applications, and Alliteration:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://opensecuritytraining.info/IntroX86.html" rel="nofollow"&gt;http://opensecuritytraining.info/IntroX86.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-861-x86 Disassembly:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikibooks.org/wiki/X86_Disassembly" rel="nofollow"&gt;https://en.wikibooks.org/wiki/X86_Disassembly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-862-use-of-dns-tunneling-for-cc-communications-malware:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securelist.com/use-of-dns-tunneling-for-cc-communications/78203/" rel="nofollow"&gt;https://securelist.com/use-of-dns-tunneling-for-cc-communications/78203/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-863-Using IDAPython to Make Your Life Easier (Series)::&lt;/p&gt;
&lt;p&gt;&lt;a href="https://researchcenter.paloaltonetworks.com/2015/12/using-idapython-to-make-your-life-easier-part-1/" rel="nofollow"&gt;https://researchcenter.paloaltonetworks.com/2015/12/using-idapython-to-make-your-life-easier-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-864-NET binary analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cysinfo.com/cyber-attack-targeting-cbi-and-possibly-indian-army-officials/" rel="nofollow"&gt;https://cysinfo.com/cyber-attack-targeting-cbi-and-possibly-indian-army-officials/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-865-detailed analysis of the BlackEnergy3 big dropper:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cysinfo.com/blackout-memory-analysis-of-blackenergy-big-dropper/" rel="nofollow"&gt;https://cysinfo.com/blackout-memory-analysis-of-blackenergy-big-dropper/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-866-detailed analysis of Uroburos rootkit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gdatasoftware.com/blog/2014/06/23953-analysis-of-uroburos-using-windbg" rel="nofollow"&gt;https://www.gdatasoftware.com/blog/2014/06/23953-analysis-of-uroburos-using-windbg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-867-TCP/IP and tcpdump Pocket Reference Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/security-resources/tcpip.pdf" rel="nofollow"&gt;https://www.sans.org/security-resources/tcpip.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-868-TCPDUMP Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packetlife.net/media/library/12/tcpdump.pdf" rel="nofollow"&gt;http://packetlife.net/media/library/12/tcpdump.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-869-Scapy Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packetlife.net/media/library/36/scapy.pdf" rel="nofollow"&gt;http://packetlife.net/media/library/36/scapy.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-870-WIRESHARK DISPLAY FILTERS:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packetlife.net/media/library/13/Wireshark_Display_Filters.pdf" rel="nofollow"&gt;http://packetlife.net/media/library/13/Wireshark_Display_Filters.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-871-Windows command line sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/security-resources/sec560/windows_command_line_sheet_v1.pdf" rel="nofollow"&gt;https://www.sans.org/security-resources/sec560/windows_command_line_sheet_v1.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-872-Metasploit cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/security-resources/sec560/misc_tools_sheet_v1.pdf" rel="nofollow"&gt;https://www.sans.org/security-resources/sec560/misc_tools_sheet_v1.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-873-IPv6 Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packetlife.net/media/library/8/IPv6.pdf" rel="nofollow"&gt;http://packetlife.net/media/library/8/IPv6.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-874-IPv4 Subnetting:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packetlife.net/media/library/15/IPv4_Subnetting.pdf" rel="nofollow"&gt;http://packetlife.net/media/library/15/IPv4_Subnetting.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-875-IOS IPV4 ACCESS LISTS:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packetlife.net/media/library/14/IOS_IPv4_Access_Lists.pdf" rel="nofollow"&gt;http://packetlife.net/media/library/14/IOS_IPv4_Access_Lists.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-876-Common Ports List:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packetlife.net/media/library/23/common_ports.pdf" rel="nofollow"&gt;http://packetlife.net/media/library/23/common_ports.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-877-WLAN:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packetlife.net/media/library/4/IEEE_802.11_WLAN.pdf" rel="nofollow"&gt;http://packetlife.net/media/library/4/IEEE_802.11_WLAN.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-878-VLANs Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packetlife.net/media/library/20/VLANs.pdf" rel="nofollow"&gt;http://packetlife.net/media/library/20/VLANs.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-879-VoIP Basics CheatSheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packetlife.net/media/library/34/VOIP_Basics.pdf" rel="nofollow"&gt;http://packetlife.net/media/library/34/VOIP_Basics.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-880-Google hacking and defense cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/security-resources/GoogleCheatSheet.pdf" rel="nofollow"&gt;https://www.sans.org/security-resources/GoogleCheatSheet.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-881-Nmap CheatSheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pen-testing.sans.org/blog/2013/10/08/nmap-cheat-sheet-1-0" rel="nofollow"&gt;https://pen-testing.sans.org/blog/2013/10/08/nmap-cheat-sheet-1-0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-882-Netcat cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf" rel="nofollow"&gt;https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-883-PowerShell cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blogs.sans.org/pen-testing/files/2016/05/PowerShellCheatSheet_v41.pdf" rel="nofollow"&gt;https://blogs.sans.org/pen-testing/files/2016/05/PowerShellCheatSheet_v41.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-884-Scapy cheat sheet POCKET REFERENCE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blogs.sans.org/pen-testing/files/2016/04/ScapyCheatSheet_v0.2.pdf" rel="nofollow"&gt;https://blogs.sans.org/pen-testing/files/2016/04/ScapyCheatSheet_v0.2.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-885-SQL injection cheat sheet.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://information.rapid7.com/sql-injection-cheat-sheet-download.html" rel="nofollow"&gt;https://information.rapid7.com/sql-injection-cheat-sheet-download.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-886-Injection cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://information.rapid7.com/injection-non-sql-cheat-sheet-download.html" rel="nofollow"&gt;https://information.rapid7.com/injection-non-sql-cheat-sheet-download.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-887-Symmetric Encryption Algorithms cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cheatography.com/rubberdragonfarts/cheat-sheets/symmetric-encryption-algorithms/" rel="nofollow"&gt;https://www.cheatography.com/rubberdragonfarts/cheat-sheets/symmetric-encryption-algorithms/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-888-Intrusion Discovery Cheat Sheet v2.0 for Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pen-testing.sans.org/retrieve/linux-cheat-sheet.pdf" rel="nofollow"&gt;https://pen-testing.sans.org/retrieve/linux-cheat-sheet.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-889-Intrusion Discovery Cheat Sheet v2.0 for Window:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pen-testing.sans.org/retrieve/windows-cheat-sheet.pdf" rel="nofollow"&gt;https://pen-testing.sans.org/retrieve/windows-cheat-sheet.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-890-Memory Forensics Cheat Sheet v1.2:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://digital-forensics.sans.org/media/memory-forensics-cheat-sheet.pdf" rel="nofollow"&gt;https://digital-forensics.sans.org/media/memory-forensics-cheat-sheet.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-891-CRITICAL LOG REVIEW CHECKLIST FOR SECURITY INCIDENTS G E N E R AL APPROACH:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/brochure/course/log-management-in-depth/6" rel="nofollow"&gt;https://www.sans.org/brochure/course/log-management-in-depth/6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-892-Evidence collection cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://digital-forensics.sans.org/media/evidence_collection_cheat_sheet.pdf" rel="nofollow"&gt;https://digital-forensics.sans.org/media/evidence_collection_cheat_sheet.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-893-Hex file and regex cheat sheet v1.0:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://digital-forensics.sans.org/media/hex_file_and_regex_cheat_sheet.pdf" rel="nofollow"&gt;https://digital-forensics.sans.org/media/hex_file_and_regex_cheat_sheet.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-894-Rekall Memory Forensic Framework Cheat Sheet v1.2.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://digital-forensics.sans.org/media/rekall-memory-forensics-cheatsheet.pdf" rel="nofollow"&gt;https://digital-forensics.sans.org/media/rekall-memory-forensics-cheatsheet.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-895-SIFT WORKSTATION Cheat Sheet v3.0.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://digital-forensics.sans.org/media/sift_cheat_sheet.pdf" rel="nofollow"&gt;https://digital-forensics.sans.org/media/sift_cheat_sheet.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-896-Volatility Memory Forensic Framework Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://digital-forensics.sans.org/media/volatility-memory-forensics-cheat-sheet.pdf" rel="nofollow"&gt;https://digital-forensics.sans.org/media/volatility-memory-forensics-cheat-sheet.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-897-Hands - on Network Forensics.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.first.org/resources/papers/conf2015/first_2015_-_hjelmvik-_erik_-_hands-on_network_forensics_20150604.pdf" rel="nofollow"&gt;https://www.first.org/resources/papers/conf2015/first_2015_-_hjelmvik-_erik_-_hands-on_network_forensics_20150604.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-898-VoIP Security Vulnerabilities.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/voip/voip-security-vulnerabilities-2036" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/voip/voip-security-vulnerabilities-2036&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-899-Incident Response: How to Fight Back:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/analyst/incident-response-fight-35342" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/analyst/incident-response-fight-35342&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-900-BI-7_VoIP_Analysis_Fundamentals:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sharkfest.wireshark.org/sharkfest.12/presentations/BI-7_VoIP_Analysis_Fundamentals.pdf" rel="nofollow"&gt;https://sharkfest.wireshark.org/sharkfest.12/presentations/BI-7_VoIP_Analysis_Fundamentals.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-901-Bug Hunting Guide:&lt;/p&gt;
&lt;p&gt;cybertheta.blogspot.com/2018/08/bug-hunting-guide.html&lt;/p&gt;
&lt;p&gt;-902-Guide 001 |Getting Started in Bug Bounty Hunting:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://whoami.securitybreached.org/2019/.../guide-getting-started-in-bug-bounty-hun" rel="nofollow"&gt;https://whoami.securitybreached.org/2019/.../guide-getting-started-in-bug-bounty-hun&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-903-SQL injection cheat sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://portswigger.net" rel="nofollow"&gt;https://portswigger.net&lt;/a&gt; › Web Security Academy › SQL injection › Cheat sheet&lt;/p&gt;
&lt;p&gt;-904-RSnake's XSS Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.in-secure.org/2018/08/22/rsnakes-xss-cheat-sheet/" rel="nofollow"&gt;https://www.in-secure.org/2018/08/22/rsnakes-xss-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-905-Bug Bounty Tips (2):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ctrsec.io/index.php/2019/03/20/bug-bounty-tips-2/" rel="nofollow"&gt;https://ctrsec.io/index.php/2019/03/20/bug-bounty-tips-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-906-A Review of my Bug Hunting Journey:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://kongwenbin.com/a-review-of-my-bug-hunting-journey/" rel="nofollow"&gt;https://kongwenbin.com/a-review-of-my-bug-hunting-journey/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-907-Meet the First Hacker Millionaire on HackerOne:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://itblogr.com/meet-the-first-hacker-millionaire-on-hackerone/" rel="nofollow"&gt;https://itblogr.com/meet-the-first-hacker-millionaire-on-hackerone/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-908-XSS Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.reddit.com/r/programming/comments/4sn54s/xss_cheat_sheet/" rel="nofollow"&gt;https://www.reddit.com/r/programming/comments/4sn54s/xss_cheat_sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-909-Bug Bounty Hunter Methodology:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/bugcrowd/bug-bounty-hunter-methodology-nullcon-2016" rel="nofollow"&gt;https://www.slideshare.net/bugcrowd/bug-bounty-hunter-methodology-nullcon-2016&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-910-#10 Rules of Bug Bounty:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackernoon.com/10-rules-of-bug-bounty-65082473ab8c" rel="nofollow"&gt;https://hackernoon.com/10-rules-of-bug-bounty-65082473ab8c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-911-Bugbounty Checklist:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.excis3.be/bugbounty-checklist/21/" rel="nofollow"&gt;https://www.excis3.be/bugbounty-checklist/21/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-912-FireBounty | The Ultimate Bug Bounty List!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://firebounty.com/" rel="nofollow"&gt;https://firebounty.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-913-Brutelogic xss cheat sheet 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://brutelogic.com.br/blog/ebook/xss-cheat-sheet/" rel="nofollow"&gt;https://brutelogic.com.br/blog/ebook/xss-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-914-XSS Cheat Sheet by Rodolfo Assis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanpub.com/xss" rel="nofollow"&gt;https://leanpub.com/xss&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-915-Cross-Site-Scripting (XSS) – Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ironhackers.es/en/cheatsheet/cross-site-scripting-xss-cheat-sheet/" rel="nofollow"&gt;https://ironhackers.es/en/cheatsheet/cross-site-scripting-xss-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-916-XSS Cheat Sheet V. 2018 :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerconnected.wordpress.com/2018/03/15/xss-cheat-sheet-v-2018/" rel="nofollow"&gt;https://hackerconnected.wordpress.com/2018/03/15/xss-cheat-sheet-v-2018/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-917-Cross-site Scripting Payloads Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://exploit.linuxsec.org/xss-payloads-list" rel="nofollow"&gt;https://exploit.linuxsec.org/xss-payloads-list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-918-Xss Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.in-secure.org/tag/xss-cheat-sheet/" rel="nofollow"&gt;https://www.in-secure.org/tag/xss-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-919-Open Redirect Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentester.land/cheatsheets/2018/11/02/open-redirect-cheatsheet.html" rel="nofollow"&gt;https://pentester.land/cheatsheets/2018/11/02/open-redirect-cheatsheet.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-920-XSS, SQL Injection and Fuzzing Bar Code Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.irongeek.com/xss-sql-injection-fuzzing-barcode-generator.php" rel="nofollow"&gt;https://www.irongeek.com/xss-sql-injection-fuzzing-barcode-generator.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-921-XSS Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tools.paco.bg/13/" rel="nofollow"&gt;https://tools.paco.bg/13/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-922-XSS for ASP.net developers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gosecure.net/blog/2016/03/22/xss-for-asp-net-developers" rel="nofollow"&gt;https://www.gosecure.net/blog/2016/03/22/xss-for-asp-net-developers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-923-Cross-Site Request Forgery Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://trustfoundry.net/cross-site-request-forgery-cheat-sheet/" rel="nofollow"&gt;https://trustfoundry.net/cross-site-request-forgery-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-924-CSRF Attacks: Anatomy, Prevention, and XSRF Tokens:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.acunetix.com/websitesecurity/csrf-attacks/" rel="nofollow"&gt;https://www.acunetix.com/websitesecurity/csrf-attacks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-925-Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mamchenkov.net/.../05/.../cross-site-request-forgery-csrf-prevention-cheat-shee" rel="nofollow"&gt;https://mamchenkov.net/.../05/.../cross-site-request-forgery-csrf-prevention-cheat-shee&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-926-Guide to CSRF (Cross-Site Request Forgery):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.veracode.com/security/csrf" rel="nofollow"&gt;https://www.veracode.com/security/csrf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-927-Cross-site Request Forgery - Exploitation &amp;amp; Prevention:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.netsparker.com/blog/web-security/csrf-cross-site-request-forgery/" rel="nofollow"&gt;https://www.netsparker.com/blog/web-security/csrf-cross-site-request-forgery/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-928-SQL Injection Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/" rel="nofollow"&gt;https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-929-MySQL SQL Injection Practical Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.perspectiverisk.com/mysql-sql-injection-practical-cheat-sheet/" rel="nofollow"&gt;https://www.perspectiverisk.com/mysql-sql-injection-practical-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-930-SQL Injection (SQLi) - Cheat Sheet, Attack Examples &amp;amp; Protection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.checkmarx.com/knowledge/knowledgebase/SQLi" rel="nofollow"&gt;https://www.checkmarx.com/knowledge/knowledgebase/SQLi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-931-SQL injection attacks: A cheat sheet for business pros:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.techrepublic.com/.../sql-injection-attacks-a-cheat-sheet-for-business-pros/" rel="nofollow"&gt;https://www.techrepublic.com/.../sql-injection-attacks-a-cheat-sheet-for-business-pros/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-932-The SQL Injection Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://biztechmagazine.com/article/.../guide-combatting-sql-injection-attacks-perfcon" rel="nofollow"&gt;https://biztechmagazine.com/article/.../guide-combatting-sql-injection-attacks-perfcon&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-933-SQL Injection Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/sql-injection-cheat-sheet/" rel="nofollow"&gt;https://resources.infosecinstitute.com/sql-injection-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-934-Comprehensive SQL Injection Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.darknet.org.uk/2007/05/comprehensive-sql-injection-cheat-sheet/" rel="nofollow"&gt;https://www.darknet.org.uk/2007/05/comprehensive-sql-injection-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-935-MySQL SQL Injection Cheat Sheet:&lt;/p&gt;
&lt;p&gt;pentestmonkey.net/cheat-sheet/sql-injection/mysql-sql-injection-cheat-sheet&lt;/p&gt;
&lt;p&gt;-936-SQL Injection Cheat Sheet: MySQL:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gracefulsecurity.com/sql-injection-cheat-sheet-mysql/" rel="nofollow"&gt;https://www.gracefulsecurity.com/sql-injection-cheat-sheet-mysql/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-937- MySQL Injection Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.asafety.fr/mysql-injection-cheat-sheet/" rel="nofollow"&gt;https://www.asafety.fr/mysql-injection-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-938-SQL Injection Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.reddit.com/r/netsec/comments/7l449h/sql_injection_cheat_sheet/" rel="nofollow"&gt;https://www.reddit.com/r/netsec/comments/7l449h/sql_injection_cheat_sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-939-Google dorks cheat sheet 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sanfrantokyo.com/pph5/yxo7.php?xxx=5&amp;amp;lf338=google...cheat-sheet-2019" rel="nofollow"&gt;https://sanfrantokyo.com/pph5/yxo7.php?xxx=5&amp;amp;lf338=google...cheat-sheet-2019&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-940-Command Injection Cheatsheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackersonlineclub.com/command-injection-cheatsheet/" rel="nofollow"&gt;https://hackersonlineclub.com/command-injection-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-941-OS Command Injection Vulnerability:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.immuniweb.com/vulnerability/os-command-injection.html" rel="nofollow"&gt;https://www.immuniweb.com/vulnerability/os-command-injection.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-942-OS Command Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.checkmarx.com/knowledge/knowledgebase/OS-Command_Injection" rel="nofollow"&gt;https://www.checkmarx.com/knowledge/knowledgebase/OS-Command_Injection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-943-Command Injection: The Good, the Bad and the Blind:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gracefulsecurity.com/command-injection-the-good-the-bad-and-the-blind/" rel="nofollow"&gt;https://www.gracefulsecurity.com/command-injection-the-good-the-bad-and-the-blind/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-944-OS command injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://portswigger.net" rel="nofollow"&gt;https://portswigger.net&lt;/a&gt; › Web Security Academy › OS command injection&lt;/p&gt;
&lt;p&gt;-945-How to Test for Command Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.securityinnovation.com/blog/.../how-to-test-for-command-injection.html" rel="nofollow"&gt;https://blog.securityinnovation.com/blog/.../how-to-test-for-command-injection.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-946-Data Exfiltration via Blind OS Command Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.contextis.com/en/blog/data-exfiltration-via-blind-os-command-injection" rel="nofollow"&gt;https://www.contextis.com/en/blog/data-exfiltration-via-blind-os-command-injection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-947-XXE Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gracefulsecurity.com/xxe-cheatsheet/" rel="nofollow"&gt;https://www.gracefulsecurity.com/xxe-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-948-bugbounty-cheatsheet/xxe.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/EdOverflow/bugbounty-cheatsheet/blob/master/cheatsheets/xxe.md"&gt;https://github.com/EdOverflow/bugbounty-cheatsheet/blob/master/cheatsheets/xxe.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-949-XXE - Information Security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://phonexicum.github.io/infosec/xxe.html" rel="nofollow"&gt;https://phonexicum.github.io/infosec/xxe.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-950-XXE Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hahwul.com/p/xxe-cheat-sheet.html" rel="nofollow"&gt;https://www.hahwul.com/p/xxe-cheat-sheet.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-951-Advice From A Researcher: Hunting XXE For Fun and Profit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.bugcrowd.com/blog/advice-from-a-bug-hunter-xxe/" rel="nofollow"&gt;https://www.bugcrowd.com/blog/advice-from-a-bug-hunter-xxe/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-952-Out of Band Exploitation (OOB) CheatSheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.notsosecure.com/oob-exploitation-cheatsheet/" rel="nofollow"&gt;https://www.notsosecure.com/oob-exploitation-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-953-Web app penentration testing checklist and cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.malwrforensics.com/.../web-app-penentration-testing-checklist-and-cheatsheet-with-example" rel="nofollow"&gt;www.malwrforensics.com/.../web-app-penentration-testing-checklist-and-cheatsheet-with-example&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-954-Useful Resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lsdsecurity.com/useful-resources/" rel="nofollow"&gt;https://lsdsecurity.com/useful-resources/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-955-Exploiting XXE Vulnerabilities in IIS/.NET:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pen-testing.sans.org/.../entity-inception-exploiting-iis-net-with-xxe-vulnerabiliti" rel="nofollow"&gt;https://pen-testing.sans.org/.../entity-inception-exploiting-iis-net-with-xxe-vulnerabiliti&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-956-Top 65 OWASP Cheat Sheet Collections - ALL IN ONE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.yeahhub.com/top-65-owasp-cheat-sheet-collections-all-in-one/" rel="nofollow"&gt;https://www.yeahhub.com/top-65-owasp-cheat-sheet-collections-all-in-one/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-957-Hacking Resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.torontowebsitedeveloper.com/hacking-resources" rel="nofollow"&gt;https://www.torontowebsitedeveloper.com/hacking-resources&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-958-Out of Band XML External Entity Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.netsparker.com/web...scanner/.../out-of-band-xml-external-entity-injectio" rel="nofollow"&gt;https://www.netsparker.com/web...scanner/.../out-of-band-xml-external-entity-injectio&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-959-XXE - ZeroSec - Adventures In Information Security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.zsec.uk/out-of-band-xxe-2/" rel="nofollow"&gt;https://blog.zsec.uk/out-of-band-xxe-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-960-Blog - Automated Data Exfiltration with XXE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.gdssecurity.com/labs/2015/4/.../automated-data-exfiltration-with-xxe.html" rel="nofollow"&gt;https://blog.gdssecurity.com/labs/2015/4/.../automated-data-exfiltration-with-xxe.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-961-My Experience during Infosec Interviews:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/.../my-experience-during-infosec-interviews-ed1f74ce41b8" rel="nofollow"&gt;https://medium.com/.../my-experience-during-infosec-interviews-ed1f74ce41b8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-962-Top 10 Security Risks on the Web (OWASP):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sensedia.com/.../top-10-security-risks-on-the-web-owasp-and-how-to-mitigate-t" rel="nofollow"&gt;https://sensedia.com/.../top-10-security-risks-on-the-web-owasp-and-how-to-mitigate-t&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-963-Antivirus Evasion Tools [Updated 2019] :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/antivirus-evasion-tools/" rel="nofollow"&gt;https://resources.infosecinstitute.com/antivirus-evasion-tools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-964-Adventures in Anti-Virus Evasion:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gracefulsecurity.com/anti-virus-evasion/" rel="nofollow"&gt;https://www.gracefulsecurity.com/anti-virus-evasion/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-965-Antivirus Bypass Phantom Evasion - 2019 :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.reddit.com/r/Kalilinux/.../antivirus_bypass_phantom_evasion_2019/" rel="nofollow"&gt;https://www.reddit.com/r/Kalilinux/.../antivirus_bypass_phantom_evasion_2019/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-966-Antivirus Evasion with Python:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/antivirus-evasion-with-python-49185295caf1" rel="nofollow"&gt;https://medium.com/bugbountywriteup/antivirus-evasion-with-python-49185295caf1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-967-Windows oneliners to get shell:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ironhackers.es/en/cheatsheet/comandos-en-windows-para-obtener-shell/" rel="nofollow"&gt;https://ironhackers.es/en/cheatsheet/comandos-en-windows-para-obtener-shell/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-968-Does Veil Evasion Still Work Against Modern AntiVirus?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/veil-evasion-virustotal/" rel="nofollow"&gt;https://www.hackingloops.com/veil-evasion-virustotal/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-969-Google dorks cheat sheet 2019 :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sanfrantokyo.com/pph5/yxo7.php?xxx=5&amp;amp;lf338=google...cheat-sheet-2019" rel="nofollow"&gt;https://sanfrantokyo.com/pph5/yxo7.php?xxx=5&amp;amp;lf338=google...cheat-sheet-2019&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-970-Malware Evasion Techniques :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/ThomasRoccia/malware-evasion-techniques" rel="nofollow"&gt;https://www.slideshare.net/ThomasRoccia/malware-evasion-techniques&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-971-How to become a cybersecurity pro: A cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.techrepublic.com/article/cheat-sheet-how-to-become-a-cybersecurity-pro/" rel="nofollow"&gt;https://www.techrepublic.com/article/cheat-sheet-how-to-become-a-cybersecurity-pro/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-972-Bypassing Antivirus With Ten Lines of Code:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackingandsecurity.blogspot.com/.../bypassing-antivirus-with-ten-lines-of.html" rel="nofollow"&gt;https://hackingandsecurity.blogspot.com/.../bypassing-antivirus-with-ten-lines-of.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-973-Bypassing antivirus detection on a PDF exploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.digital.security/en/blog/bypassing-antivirus-detection-pdf-exploit" rel="nofollow"&gt;https://www.digital.security/en/blog/bypassing-antivirus-detection-pdf-exploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-974-Generating Payloads &amp;amp; Anti-Virus Bypass Methods:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://uceka.com/2014/02/19/generating-payloads-anti-virus-bypass-methods/" rel="nofollow"&gt;https://uceka.com/2014/02/19/generating-payloads-anti-virus-bypass-methods/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-975-Apkwash Android Antivirus Evasion For Msfvemon:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackingarise.com/apkwash-android-antivirus-evasion-for-msfvemon/" rel="nofollow"&gt;https://hackingarise.com/apkwash-android-antivirus-evasion-for-msfvemon/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-976-Penetration Testing with Windows Computer &amp;amp; Bypassing an Antivirus:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.prodefence.org/penetration-testing-with-windows-computer-bypassing-antivirus" rel="nofollow"&gt;https://www.prodefence.org/penetration-testing-with-windows-computer-bypassing-antivirus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-978-Penetration Testing: The Quest For Fully UnDetectable Malware:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.foregenix.com/.../penetration-testing-the-quest-for-fully-undetectable-malware" rel="nofollow"&gt;https://www.foregenix.com/.../penetration-testing-the-quest-for-fully-undetectable-malware&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-979-AVET: An AntiVirus Bypassing tool working with Metasploit Framework :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://githacktools.blogspot.com" rel="nofollow"&gt;https://githacktools.blogspot.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-980-Creating an undetectable payload using Veil-Evasion Toolkit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.yeahhub.com/creating-undetectable-payload-using-veil-evasion-toolkit/" rel="nofollow"&gt;https://www.yeahhub.com/creating-undetectable-payload-using-veil-evasion-toolkit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-981-Evading Antivirus :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sathisharthars.com/tag/evading-antivirus/" rel="nofollow"&gt;https://sathisharthars.com/tag/evading-antivirus/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-982-AVPASS – All things in moderation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hydrasky.com/mobile-security/avpass/" rel="nofollow"&gt;https://hydrasky.com/mobile-security/avpass/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-983-Complete Penetration Testing &amp;amp; Hacking Tools List:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cybarrior.com/blog/2019/03/31/hacking-tools-list/" rel="nofollow"&gt;https://cybarrior.com/blog/2019/03/31/hacking-tools-list/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-984-Modern red teaming: 21 resources for your security team:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://techbeacon.com/security/modern-red-teaming-21-resources-your-security-team" rel="nofollow"&gt;https://techbeacon.com/security/modern-red-teaming-21-resources-your-security-team&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-985-BloodHound and CypherDog Cheatsheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hausec.com/2019/04/15/bloodhound-and-cypherdog-cheatsheet/" rel="nofollow"&gt;https://hausec.com/2019/04/15/bloodhound-and-cypherdog-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-986-Redteam Archives:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ethicalhackingguru.com/category/redteam/" rel="nofollow"&gt;https://ethicalhackingguru.com/category/redteam/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-987-NMAP Commands Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.networkstraining.com/nmap-commands-cheat-sheet/" rel="nofollow"&gt;https://www.networkstraining.com/nmap-commands-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-988-Nmap Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dhound.io/blog/nmap-cheatsheet" rel="nofollow"&gt;https://dhound.io/blog/nmap-cheatsheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-989-Nmap Cheat Sheet: From Discovery to Exploits:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/nmap-cheat-sheet/" rel="nofollow"&gt;https://resources.infosecinstitute.com/nmap-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-990-Nmap Cheat Sheet and Pro Tips:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackertarget.com/nmap-cheatsheet-a-quick-reference-guide/" rel="nofollow"&gt;https://hackertarget.com/nmap-cheatsheet-a-quick-reference-guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-991-Nmap Tutorial: from the Basics to Advanced Tips:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackertarget.com/nmap-tutorial/" rel="nofollow"&gt;https://hackertarget.com/nmap-tutorial/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-992-How to run a complete network scan with OpenVAS;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.techrepublic.com/.../how-to-run-a-complete-network-scan-with-openvas/" rel="nofollow"&gt;https://www.techrepublic.com/.../how-to-run-a-complete-network-scan-with-openvas/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-993-Nmap: my own cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/2018/03/12/nmap-my-own-cheatsheet/" rel="nofollow"&gt;https://www.andreafortuna.org/2018/03/12/nmap-my-own-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-994-Top 32 Nmap Command Examples For Linux Sys/Network Admins:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cyberciti.biz/security/nmap-command-examples-tutorials/" rel="nofollow"&gt;https://www.cyberciti.biz/security/nmap-command-examples-tutorials/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-995-35+ Best Free NMap Tutorials and Courses to Become Pro Hacker:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fromdev.com/2019/01/best-free-nmap-tutorials-courses.html" rel="nofollow"&gt;https://www.fromdev.com/2019/01/best-free-nmap-tutorials-courses.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-996-Scanning Tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://widesecurity.net/kali-linux/kali-linux-tools-scanning/" rel="nofollow"&gt;https://widesecurity.net/kali-linux/kali-linux-tools-scanning/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-997-Nmap - Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ivoidwarranties.tech/posts/pentesting-tuts/nmap/cheatsheet/" rel="nofollow"&gt;https://www.ivoidwarranties.tech/posts/pentesting-tuts/nmap/cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-998-Linux for Network Engineers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://netbeez.net/blog/linux-how-to-use-nmap/" rel="nofollow"&gt;https://netbeez.net/blog/linux-how-to-use-nmap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-999-Nmap Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/nmap-cheat-sheet-port-scanning-basics-ethical-hackers/" rel="nofollow"&gt;https://www.hackingloops.com/nmap-cheat-sheet-port-scanning-basics-ethical-hackers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1000-Tactical Nmap for Beginner Network Reconnaissance:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://null-byte.wonderhowto.com/.../tactical-nmap-for-beginner-network-reconnaiss" rel="nofollow"&gt;https://null-byte.wonderhowto.com/.../tactical-nmap-for-beginner-network-reconnaiss&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-1001-A Guide For Google Hacking Database:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackgentips.com/google-hacking-database/" rel="nofollow"&gt;https://www.hackgentips.com/google-hacking-database/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1002-2019 Data Breaches - The Worst Breaches, So Far:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.identityforce.com/blog/2019-data-breaches" rel="nofollow"&gt;https://www.identityforce.com/blog/2019-data-breaches&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1003-15 Vulnerable Sites To (Legally) Practice Your Hacking Skills:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.checkmarx.com/.../15-vulnerable-sites-to-legally-practice-your-hacking-skills" rel="nofollow"&gt;https://www.checkmarx.com/.../15-vulnerable-sites-to-legally-practice-your-hacking-skills&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1004-Google Hacking Master List :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://it.toolbox.com/blogs/rmorril/google-hacking-master-list-111408" rel="nofollow"&gt;https://it.toolbox.com/blogs/rmorril/google-hacking-master-list-111408&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1005-Smart searching with googleDorking | Exposing the Invisible:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://exposingtheinvisible.org/guides/google-dorking/" rel="nofollow"&gt;https://exposingtheinvisible.org/guides/google-dorking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1006-Google Dorks 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://korben.info/google-dorks-2019-liste.html" rel="nofollow"&gt;https://korben.info/google-dorks-2019-liste.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1007-Google Dorks List and how to use it for Good;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://edgy.app/google-dorks-list" rel="nofollow"&gt;https://edgy.app/google-dorks-list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1008-How to Use Google to Hack(Googledorks):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://null-byte.wonderhowto.com/how-to/use-google-hack-googledorks-0163566/" rel="nofollow"&gt;https://null-byte.wonderhowto.com/how-to/use-google-hack-googledorks-0163566/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1009-Using google as hacking tool:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cybertechies007.blogspot.com/.../using-google-as-hacking-tool-googledorks.ht" rel="nofollow"&gt;https://cybertechies007.blogspot.com/.../using-google-as-hacking-tool-googledorks.ht&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-1010-#googledorks hashtag on Twitter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/hashtag/googledorks" rel="nofollow"&gt;https://twitter.com/hashtag/googledorks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1011-Top Five Open Source Intelligence (OSINT) Tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/top-five-open-source-intelligence-osint-tools/" rel="nofollow"&gt;https://resources.infosecinstitute.com/top-five-open-source-intelligence-osint-tools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1012-What is open-source intelligence (OSINT)?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.microfocus.com/en-us/what-is/open-source-intelligence-osint" rel="nofollow"&gt;https://www.microfocus.com/en-us/what-is/open-source-intelligence-osint&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1013-A Guide to Open Source Intelligence Gathering (OSINT):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/a-guide-to-open-source-intelligence-gathering-osint-ca831e13f29c" rel="nofollow"&gt;https://medium.com/bugbountywriteup/a-guide-to-open-source-intelligence-gathering-osint-ca831e13f29c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1014-OSINT: How to find information on anyone:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@Peter_UXer/osint-how-to-find-information-on-anyone-5029a3c7fd56" rel="nofollow"&gt;https://medium.com/@Peter_UXer/osint-how-to-find-information-on-anyone-5029a3c7fd56&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1015-What is OSINT? How can I make use of it?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securitytrails.com/blog/what-is-osint-how-can-i-make-use-of-it" rel="nofollow"&gt;https://securitytrails.com/blog/what-is-osint-how-can-i-make-use-of-it&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1016-OSINT Tools for the Dark Web:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jakecreps.com/2019/05/16/osint-tools-for-the-dark-web/" rel="nofollow"&gt;https://jakecreps.com/2019/05/16/osint-tools-for-the-dark-web/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1017-A Guide to Open Source Intelligence (OSINT):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cjr.org/tow_center_reports/guide-to-osint-and-hostile-communities.php" rel="nofollow"&gt;https://www.cjr.org/tow_center_reports/guide-to-osint-and-hostile-communities.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1018-An Introduction To Open Source Intelligence (OSINT):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.secjuice.com/introduction-to-open-source-intelligence-osint/" rel="nofollow"&gt;https://www.secjuice.com/introduction-to-open-source-intelligence-osint/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1019-SSL &amp;amp; TLS HTTPS Testing [Definitive Guide] - Aptive:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.aptive.co.uk/blog/tls-ssl-security-testing/" rel="nofollow"&gt;https://www.aptive.co.uk/blog/tls-ssl-security-testing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1020-Exploit Title: [Files Containing E-mail and Associated Password Lists]:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/ghdb/4262/?source=ghdbid" rel="nofollow"&gt;https://www.exploit-db.com/ghdb/4262/?source=ghdbid&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1021-cheat_sheets:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://zachgrace.com/cheat_sheets/" rel="nofollow"&gt;http://zachgrace.com/cheat_sheets/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1022-Intel SYSRET:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/06/14/intel-sysret" rel="nofollow"&gt;https://pentestlab.blog/2017/06/14/intel-sysret&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1023-Windows Preventive Maintenance Best Practices:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.professormesser.com/free-a-plus-training/220-902/windows-preventive-maintenance-best-practices/" rel="nofollow"&gt;http://www.professormesser.com/free-a-plus-training/220-902/windows-preventive-maintenance-best-practices/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1024-An Overview of Storage Devices:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.professormesser.com/?p=19367" rel="nofollow"&gt;http://www.professormesser.com/?p=19367&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1025-An Overview of RAID:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.professormesser.com/?p=19373" rel="nofollow"&gt;http://www.professormesser.com/?p=19373&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1026-How to Troubleshoot:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.professormesser.com/free-a-plus-training/220-902/how-to-troubleshoot/" rel="nofollow"&gt;http://www.professormesser.com/free-a-plus-training/220-902/how-to-troubleshoot/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1027-Mobile Device Security Troubleshooting:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.professormesser.com/free-a-plus-training/220-902/mobile-device-security-troubleshooting/" rel="nofollow"&gt;http://www.professormesser.com/free-a-plus-training/220-902/mobile-device-security-troubleshooting/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1028-Using Wireshark: Identifying Hosts and Users:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://unit42.paloaltonetworks.com/using-wireshark-identifying-hosts-and-users/" rel="nofollow"&gt;https://unit42.paloaltonetworks.com/using-wireshark-identifying-hosts-and-users/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1029-Using Wireshark - Display Filter Expressions:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://unit42.paloaltonetworks.com/using-wireshark-display-filter-expressions/" rel="nofollow"&gt;https://unit42.paloaltonetworks.com/using-wireshark-display-filter-expressions/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1030-Decrypting SSL/TLS traffic with Wireshark:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/decrypting-ssl-tls-traffic-with-wireshark/" rel="nofollow"&gt;https://resources.infosecinstitute.com/decrypting-ssl-tls-traffic-with-wireshark/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1031-A collection of handy Bash One-Liners and terminal tricks for data processing and Linux system maintenance.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://onceupon.github.io/Bash-Oneliner/" rel="nofollow"&gt;https://onceupon.github.io/Bash-Oneliner/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1032- Bash One-Liners Explained, Part I: Working with files :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://catonmat.net/bash-one-liners-explained-part-one" rel="nofollow"&gt;https://catonmat.net/bash-one-liners-explained-part-one&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1033-Bash One-Liners Explained, Part IV: Working with history:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://catonmat.net/bash-one-liners-explained-part-four" rel="nofollow"&gt;https://catonmat.net/bash-one-liners-explained-part-four&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1034-Useful bash one-liners :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/stephenturner/oneliners"&gt;https://github.com/stephenturner/oneliners&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1035-Some Random One-liner Linux Commands [Part 1]:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ostechnix.com/random-one-liner-linux-commands-part-1/" rel="nofollow"&gt;https://www.ostechnix.com/random-one-liner-linux-commands-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1036-The best terminal one-liners from and for smart admins + devs.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ssdnodes.com/tools/one-line-wise/" rel="nofollow"&gt;https://www.ssdnodes.com/tools/one-line-wise/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1037-Shell one-liner:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rosettacode.org/wiki/Shell_one-liner#Racket" rel="nofollow"&gt;https://rosettacode.org/wiki/Shell_one-liner#Racket&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1038-SSH Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pentestmonkey.net/tag/ssh" rel="nofollow"&gt;http://pentestmonkey.net/tag/ssh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1039-7000 Google Dork List:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/raw/Tdvi8vgK" rel="nofollow"&gt;https://pastebin.com/raw/Tdvi8vgK&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1040-GOOGLE HACKİNG DATABASE – GHDB:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/raw/1ndqG7aq" rel="nofollow"&gt;https://pastebin.com/raw/1ndqG7aq&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1041-STEALING PASSWORD WITH GOOGLE HACK:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/raw/x6BNZ7NN" rel="nofollow"&gt;https://pastebin.com/raw/x6BNZ7NN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1042-Hack Remote PC with PHP File using PhpSploit Stealth Post-Exploitation Framework:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-remote-pc-with-php-file-using-phpsploit-stealth-post-exploitation-framework" rel="nofollow"&gt;http://www.hackingarticles.in/hack-remote-pc-with-php-file-using-phpsploit-stealth-post-exploitation-framework&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1043-Open Source database of android malware:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.code.google.com/archive/p/androguard/wikis/DatabaseAndroidMalwares.wiki" rel="nofollow"&gt;www.code.google.com/archive/p/androguard/wikis/DatabaseAndroidMalwares.wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1044-big-list-of-naughty-strings:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/minimaxir/big-list-of-naughty-strings/blob/master/blns.txt"&gt;https://github.com/minimaxir/big-list-of-naughty-strings/blob/master/blns.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1045-publicly available cap files:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.netresec.com/?page=PcapFiles" rel="nofollow"&gt;http://www.netresec.com/?page=PcapFiles&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1046-“Insertion, Evasion, and Denial of Service: Eluding Network Intrusion Detection”:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.119.399&amp;amp;rep=rep1&amp;amp;type=pdf" rel="nofollow"&gt;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.119.399&amp;amp;rep=rep1&amp;amp;type=pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1047-Building a malware analysis toolkit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://zeltser.com/build-malware-analysis-toolkit/" rel="nofollow"&gt;https://zeltser.com/build-malware-analysis-toolkit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1048-Netcat Reverse Shell Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet" rel="nofollow"&gt;http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1049-Packers and crypters:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://securityblog.gr/2950/detect-packers-cryptors-and-compilers/" rel="nofollow"&gt;http://securityblog.gr/2950/detect-packers-cryptors-and-compilers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1050-Evading antivirus:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.blackhillsinfosec.com/?p=5094" rel="nofollow"&gt;http://www.blackhillsinfosec.com/?p=5094&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1051-cheat sheets and information,The Art of Hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/The-Art-of-Hacking"&gt;https://github.com/The-Art-of-Hacking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1052-Error-based SQL injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/37953.pdf" rel="nofollow"&gt;https://www.exploit-db.com/docs/37953.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1053-XSS cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.veracode.com/security/xss" rel="nofollow"&gt;https://www.veracode.com/security/xss&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1054-Active Directory Enumeration with PowerShell:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/46990" rel="nofollow"&gt;https://www.exploit-db.com/docs/46990&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1055-Buffer Overflows, C Programming, NSA GHIDRA and More:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/47032" rel="nofollow"&gt;https://www.exploit-db.com/docs/47032&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1056-Analysis of CVE-2019-0708 (BlueKeep):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/46947" rel="nofollow"&gt;https://www.exploit-db.com/docs/46947&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1057-Windows Privilege Escalations:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/46131" rel="nofollow"&gt;https://www.exploit-db.com/docs/46131&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1058-The Ultimate Guide For Subdomain Takeover with Practical:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/46415" rel="nofollow"&gt;https://www.exploit-db.com/docs/46415&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1059-File transfer skills in the red team post penetration test:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/46515" rel="nofollow"&gt;https://www.exploit-db.com/docs/46515&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1060-How To Exploit PHP Remotely To Bypass Filters &amp;amp; WAF Rules:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/46049" rel="nofollow"&gt;https://www.exploit-db.com/docs/46049&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1061-Flying under the radar:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/45898" rel="nofollow"&gt;https://www.exploit-db.com/docs/45898&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1062-what is google hacking? and why it is useful ?and how you can learn how  to use  it:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/cry__pto/status/1142497470825545729?s=20" rel="nofollow"&gt;https://twitter.com/cry__pto/status/1142497470825545729?s=20&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1063-useful blogs for penetration testers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/cry__pto/status/1142497470825545729?s=20" rel="nofollow"&gt;https://twitter.com/cry__pto/status/1142497470825545729?s=20&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1064-useful #BugBounty resources &amp;amp; links &amp;amp; tutorials &amp;amp; explanations &amp;amp; writeups ::&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/cry__pto/status/1143965322233483265?s=20" rel="nofollow"&gt;https://twitter.com/cry__pto/status/1143965322233483265?s=20&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1065-Union- based SQL injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://securityidiots.com/Web-Pentest/SQL-Injection/Basic-Union-Based-SQL-Injection.html" rel="nofollow"&gt;http://securityidiots.com/Web-Pentest/SQL-Injection/Basic-Union-Based-SQL-Injection.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1066-Broken access control:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.happybearsoftware.com/quick-check-for-access-control-vulnerabilities-in-rails" rel="nofollow"&gt;https://www.happybearsoftware.com/quick-check-for-access-control-vulnerabilities-in-rails&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1067-Understanding firewall types and configurations:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://searchsecurity.techtarget.com/feature/The-five-different-types-of-firewalls" rel="nofollow"&gt;http://searchsecurity.techtarget.com/feature/The-five-different-types-of-firewalls&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1068-5 Kali Linux tricks that you may not know:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentester.land/tips-n-tricks/2018/11/09/5-kali-linux-tricks-that-you-may-not-know.html" rel="nofollow"&gt;https://pentester.land/tips-n-tricks/2018/11/09/5-kali-linux-tricks-that-you-may-not-know.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1069-5 tips to make the most of Twitter as a pentester or bug bounty hunter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentester.land/tips-n-tricks/2018/10/23/5-tips-to-make-the-most-of-twitter-as-a-pentester-or-bug-bounty-hunter.html" rel="nofollow"&gt;https://pentester.land/tips-n-tricks/2018/10/23/5-tips-to-make-the-most-of-twitter-as-a-pentester-or-bug-bounty-hunter.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1060-A Guide To Subdomain Takeovers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackerone.com/blog/Guide-Subdomain-Takeovers" rel="nofollow"&gt;https://www.hackerone.com/blog/Guide-Subdomain-Takeovers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1061-Advanced Recon Automation (Subdomains) case 1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/9ffc4baebf70" rel="nofollow"&gt;https://medium.com/p/9ffc4baebf70&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1062-Security testing for REST API with w3af:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/quick-code/security-testing-for-rest-api-with-w3af-2c43b452e457?source=post_recirc---------0------------------" rel="nofollow"&gt;https://medium.com/quick-code/security-testing-for-rest-api-with-w3af-2c43b452e457?source=post_recirc---------0------------------&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1062-The Lazy Hacker:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securit.ie/blog/?p=86" rel="nofollow"&gt;https://securit.ie/blog/?p=86&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1063-Practical recon techniques for bug hunters &amp;amp; pen testers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/appsecco/practical-recon-levelup0x02/raw/200c43b58e9bf528a33c9dfa826fda89b229606c/practical_recon.md"&gt;https://github.com/appsecco/practical-recon-levelup0x02/raw/200c43b58e9bf528a33c9dfa826fda89b229606c/practical_recon.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1064-A More Advanced Recon Automation #1 (Subdomains):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://poc-server.com/blog/2019/01/18/advanced-recon-subdomains/" rel="nofollow"&gt;https://poc-server.com/blog/2019/01/18/advanced-recon-subdomains/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1065-Expanding your scope (Recon automation #2):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://poc-server.com/blog/2019/01/31/expanding-your-scope-recon-automation/" rel="nofollow"&gt;https://poc-server.com/blog/2019/01/31/expanding-your-scope-recon-automation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1066-RCE by uploading a web.config:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://poc-server.com/blog/2018/05/22/rce-by-uploading-a-web-config/" rel="nofollow"&gt;https://poc-server.com/blog/2018/05/22/rce-by-uploading-a-web-config/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1067-Finding and exploiting Blind XSS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enciphers.com/finding-and-exploiting-blind-xss/" rel="nofollow"&gt;https://enciphers.com/finding-and-exploiting-blind-xss/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1068-Google dorks list 2018:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://conzu.de/en/google-dork-liste-2018-conzu" rel="nofollow"&gt;http://conzu.de/en/google-dork-liste-2018-conzu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1096-Out of Band Exploitation (OOB) CheatSheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.notsosecure.com/oob-exploitation-cheatsheet/" rel="nofollow"&gt;https://www.notsosecure.com/oob-exploitation-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1070-Metasploit Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nitesculucian.github.io/2018/12/01/metasploit-cheat-sheet/" rel="nofollow"&gt;https://nitesculucian.github.io/2018/12/01/metasploit-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1071-Linux Post Exploitation Cheat Sheet :&lt;/p&gt;
&lt;p&gt;red-orbita.com/?p=8455&lt;/p&gt;
&lt;p&gt;-1072-OSCP/Pen Testing Resources :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@sdgeek/oscp-pen-testing-resources-271e9e570d45" rel="nofollow"&gt;https://medium.com/@sdgeek/oscp-pen-testing-resources-271e9e570d45&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1073-Out Of Band Exploitation (OOB) CheatSheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://packetstormsecurity.com/files/149290/Out-Of-Band-Exploitation-OOB-CheatSheet.html" rel="nofollow"&gt;https://packetstormsecurity.com/files/149290/Out-Of-Band-Exploitation-OOB-CheatSheet.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1074-HTML5 Security Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://html5sec.org/" rel="nofollow"&gt;https://html5sec.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1075-Kali Linux Cheat Sheet for Penetration Testers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackmoreops.com/2016/12/20/kali-linux-cheat-sheet-for-penetration-testers/" rel="nofollow"&gt;https://www.blackmoreops.com/2016/12/20/kali-linux-cheat-sheet-for-penetration-testers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1076-Responder - CheatSheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ivoidwarranties.tech/posts/pentesting-tuts/responder/cheatsheet/" rel="nofollow"&gt;https://www.ivoidwarranties.tech/posts/pentesting-tuts/responder/cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1076-Windows Post-Exploitation Command List:&lt;/p&gt;
&lt;p&gt;pentest.tonyng.net/windows-post-exploitation-command-list/&lt;/p&gt;
&lt;p&gt;-1077-Transfer files (Post explotation) - CheatSheet&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ironhackers.es/en/cheatsheet/transferir-archivos-post-explotacion-cheatsheet/" rel="nofollow"&gt;https://ironhackers.es/en/cheatsheet/transferir-archivos-post-explotacion-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1078-SQL Injection Cheat Sheet: MSSQL — GracefulSecurity:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gracefulsecurity.com/sql-injection-cheat-sheet-mssql/" rel="nofollow"&gt;https://www.gracefulsecurity.com/sql-injection-cheat-sheet-mssql/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1079-OSCP useful resources and tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://acknak.fr/en/articles/oscp-tools/" rel="nofollow"&gt;https://acknak.fr/en/articles/oscp-tools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1080-Penetration Testing 102 - Windows Privilege Escalation - Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.exumbraops.com/penetration-testing-102-windows-privilege-escalation-cheatsheet" rel="nofollow"&gt;www.exumbraops.com/penetration-testing-102-windows-privilege-escalation-cheatsheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1081-Transferring files from Kali to Windows (post exploitation) :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.ropnop.com/transferring-files-from-kali-to-windows/" rel="nofollow"&gt;https://blog.ropnop.com/transferring-files-from-kali-to-windows/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1082-Hack Like a Pro: The Ultimate Command Cheat Sheet for Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://null-byte.wonderhowto.com/.../hack-like-pro-ultimate-command-cheat-sheet-f" rel="nofollow"&gt;https://null-byte.wonderhowto.com/.../hack-like-pro-ultimate-command-cheat-sheet-f&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-1083-OSCP Goldmine (not clickbait):&lt;/p&gt;
&lt;p&gt;0xc0ffee.io/blog/OSCP-Goldmine&lt;/p&gt;
&lt;p&gt;-1084-Privilege escalation: Linux :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://vulp3cula.gitbook.io/hackers-grimoire/post-exploitation/privesc-linux" rel="nofollow"&gt;https://vulp3cula.gitbook.io/hackers-grimoire/post-exploitation/privesc-linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1085-Exploitation Tools Archives :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentesttools.net/category/exploitationtools/" rel="nofollow"&gt;https://pentesttools.net/category/exploitationtools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1086-From Local File Inclusion to Remote Code Execution - Part 1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outpost24.com/blog/from-local-file-inclusion-to-remote-code-execution-part-1" rel="nofollow"&gt;https://outpost24.com/blog/from-local-file-inclusion-to-remote-code-execution-part-1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1087-Basic Linux Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/" rel="nofollow"&gt;https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1088-Title: Ultimate Directory Traversal &amp;amp; Path Traversal Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.vulnerability-lab.com/resources/documents/587.txt" rel="nofollow"&gt;www.vulnerability-lab.com/resources/documents/587.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1089-Binary Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pwndevils.com/hacking/howtwohack.html" rel="nofollow"&gt;https://pwndevils.com/hacking/howtwohack.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1090-A guide to Linux Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://payatu.com/guide-linux-privilege-escalation/" rel="nofollow"&gt;https://payatu.com/guide-linux-privilege-escalation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1091-Penetration Testing Tools Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://news.ycombinator.com/item?id=11977304" rel="nofollow"&gt;https://news.ycombinator.com/item?id=11977304&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1092-List of Metasploit Commands - Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://thehacktoday.com/metasploit-commands/" rel="nofollow"&gt;https://thehacktoday.com/metasploit-commands/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1093-A journey into Radare 2 – Part 2: Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.megabeets.net/a-journey-into-radare-2-part-2/" rel="nofollow"&gt;https://www.megabeets.net/a-journey-into-radare-2-part-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1094-Remote Code Evaluation (Execution) Vulnerability:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.netsparker.com/blog/web-security/remote-code-evaluation-execution/" rel="nofollow"&gt;https://www.netsparker.com/blog/web-security/remote-code-evaluation-execution/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1095-Exploiting Python Code Injection in Web Applications:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.securitynewspaper.com/.../exploiting-python-code-injection-web-applicat" rel="nofollow"&gt;https://www.securitynewspaper.com/.../exploiting-python-code-injection-web-applicat&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-1096-Shells · Total OSCP Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sushant747.gitbooks.io/total-oscp-guide/reverse-shell.html" rel="nofollow"&gt;https://sushant747.gitbooks.io/total-oscp-guide/reverse-shell.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1097-MongoDB Injection cheat sheet Archives:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.securelayer7.net/tag/mongodb-injection-cheat-sheet/" rel="nofollow"&gt;https://blog.securelayer7.net/tag/mongodb-injection-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1098-Basic Shellshock Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.knapsy.com/blog/2014/10/07/basic-shellshock-exploitation/" rel="nofollow"&gt;https://blog.knapsy.com/blog/2014/10/07/basic-shellshock-exploitation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1099-Wireshark Tutorial and Tactical Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackertarget.com/wireshark-tutorial-and-cheat-sheet/" rel="nofollow"&gt;https://hackertarget.com/wireshark-tutorial-and-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1100-Windows Command Line cheatsheet (part 2):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/2017/.../windows-command-line-cheatsheet-part-2-wm" rel="nofollow"&gt;https://www.andreafortuna.org/2017/.../windows-command-line-cheatsheet-part-2-wm&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-1101-Detecting WMI exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.irongeek.com/i.php?page=videos/derbycon8/track-3-03...exploitation" rel="nofollow"&gt;www.irongeek.com/i.php?page=videos/derbycon8/track-3-03...exploitation&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;1102-Metasploit Cheat Sheet - Hacking Land :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hacking.land/2019/02/metasploit-cheat-sheet.html" rel="nofollow"&gt;https://www.hacking.land/2019/02/metasploit-cheat-sheet.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1103-5 Practical Scenarios for XSS Attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentest-tools.com/blog/xss-attacks-practical-scenarios/" rel="nofollow"&gt;https://pentest-tools.com/blog/xss-attacks-practical-scenarios/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1104-Ultimate gdb cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://nadavclaudecohen.com/2017/10/10/ultimate-gdb-cheat-sheet/" rel="nofollow"&gt;http://nadavclaudecohen.com/2017/10/10/ultimate-gdb-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1105-Reverse Engineering Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.scribd.com/doc/38163906/Reverse-Engineering-Cheat-Sheet" rel="nofollow"&gt;https://www.scribd.com/doc/38163906/Reverse-Engineering-Cheat-Sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1106-Reverse Engineering Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.scribd.com/document/94575179/Reverse-Engineering-Cheat-Sheet" rel="nofollow"&gt;https://www.scribd.com/document/94575179/Reverse-Engineering-Cheat-Sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1107-Reverse Engineering For Malware Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://eforensicsmag.com/reverse_engi_cheatsheet/" rel="nofollow"&gt;https://eforensicsmag.com/reverse_engi_cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1108-Reverse-engineering Cheat Sheets :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cheatography.com/tag/reverse-engineering/" rel="nofollow"&gt;https://www.cheatography.com/tag/reverse-engineering/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1109-Shortcuts for Understanding Malicious Scripts:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.linkedin.com/pulse/shortcuts-understanding-malicious-scripts-viviana-ross" rel="nofollow"&gt;https://www.linkedin.com/pulse/shortcuts-understanding-malicious-scripts-viviana-ross&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1110-WinDbg Malware Analysis Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://oalabs.openanalysis.net/2019/02/18/windbg-for-malware-analysis/" rel="nofollow"&gt;https://oalabs.openanalysis.net/2019/02/18/windbg-for-malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1111-Cheat Sheet for Malware Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/2016/08/16/cheat-sheet-for-malware-analysis/" rel="nofollow"&gt;https://www.andreafortuna.org/2016/08/16/cheat-sheet-for-malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1112-Tips for Reverse-Engineering Malicious Code :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.digitalmunition.me/tips-reverse-engineering-malicious-code-new-cheat-sheet" rel="nofollow"&gt;https://www.digitalmunition.me/tips-reverse-engineering-malicious-code-new-cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1113-Cheatsheet for radare2 :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leungs.xyz/reversing/2018/04/16/radare2-cheatsheet.html" rel="nofollow"&gt;https://leungs.xyz/reversing/2018/04/16/radare2-cheatsheet.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1114-Reverse Engineering Cheat Sheets:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.pinterest.com/pin/576390452300827323/" rel="nofollow"&gt;https://www.pinterest.com/pin/576390452300827323/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1115-Reverse Engineering Resources-Beginners to intermediate Guide/Links:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@vignesh4303/reverse-engineering-resources-beginners-to-intermediate-guide-links-f64c207505ed" rel="nofollow"&gt;https://medium.com/@vignesh4303/reverse-engineering-resources-beginners-to-intermediate-guide-links-f64c207505ed&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1116-Malware Resources :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.professor.bike/malware-resources" rel="nofollow"&gt;https://www.professor.bike/malware-resources&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1117-Zero-day exploits: A cheat sheet for professionals:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.techrepublic.com/article/zero-day-exploits-the-smart-persons-guide/" rel="nofollow"&gt;https://www.techrepublic.com/article/zero-day-exploits-the-smart-persons-guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1118-Getting cozy with exploit development:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0x00sec.org/t/getting-cozy-with-exploit-development/5311" rel="nofollow"&gt;https://0x00sec.org/t/getting-cozy-with-exploit-development/5311&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1119-appsec - Web Security Cheatsheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://security.stackexchange.com/questions/2985/web-security-cheatsheet-todo-list" rel="nofollow"&gt;https://security.stackexchange.com/questions/2985/web-security-cheatsheet-todo-list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1120-PEDA - Python Exploit Development Assistance For GDB:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.pinterest.ru/pin/789044797190775841/" rel="nofollow"&gt;https://www.pinterest.ru/pin/789044797190775841/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1121-Exploit Development Introduction (part 1) :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cybrary.it/video/exploit-development-introduction-part-1/" rel="nofollow"&gt;https://www.cybrary.it/video/exploit-development-introduction-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1122-Windows Exploit Development: A simple buffer overflow example:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/windows-expliot-dev-101-e5311ac284a" rel="nofollow"&gt;https://medium.com/bugbountywriteup/windows-expliot-dev-101-e5311ac284a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1123-Exploit Development-Everything You Need to Know:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://null-byte.wonderhowto.com/how-to/exploit-development-everything-you-need-know-0167801/" rel="nofollow"&gt;https://null-byte.wonderhowto.com/how-to/exploit-development-everything-you-need-know-0167801/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1124-Exploit Development :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0x00sec.org/c/exploit-development" rel="nofollow"&gt;https://0x00sec.org/c/exploit-development&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1125-Exploit Development - Infosec Resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/category/exploit-development/" rel="nofollow"&gt;https://resources.infosecinstitute.com/category/exploit-development/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1126-Exploit Development :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.reddit.com/r/ExploitDev/" rel="nofollow"&gt;https://www.reddit.com/r/ExploitDev/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1127-A Study in Exploit Development - Part 1: Setup and Proof of Concept :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.anitian.com/a-study-in-exploit-development-part-1-setup-and-proof-of-concept" rel="nofollow"&gt;https://www.anitian.com/a-study-in-exploit-development-part-1-setup-and-proof-of-concept&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1128-Exploit Development for Beginners:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=tVDuuz60KKc" rel="nofollow"&gt;https://www.youtube.com/watch?v=tVDuuz60KKc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1129-Introduction to Exploit Development:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fuzzysecurity.com/tutorials/expDev/1.html" rel="nofollow"&gt;https://www.fuzzysecurity.com/tutorials/expDev/1.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1130-Exploit Development And Reverse Engineering:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.immunitysec.com/services/exploit-dev-reverse-engineering.html" rel="nofollow"&gt;https://www.immunitysec.com/services/exploit-dev-reverse-engineering.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1131-wireless forensics:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/wireless/80211-network-forensic-analysis-33023" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/wireless/80211-network-forensic-analysis-33023&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1132-fake AP Detection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/detection/detecting-preventing-rogue-devices-network-1866" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/detection/detecting-preventing-rogue-devices-network-1866&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1133-In-Depth analysis of SamSam Ransomware:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.crowdstrike.com/blog/an-in-depth-analysis-of-samsam-ransomware-and-boss-spider/" rel="nofollow"&gt;https://www.crowdstrike.com/blog/an-in-depth-analysis-of-samsam-ransomware-and-boss-spider/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1134-WannaCry ransomware:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.endgame.com/blog/technical-blog/wcrywanacry-ransomware-technical-analysis" rel="nofollow"&gt;https://www.endgame.com/blog/technical-blog/wcrywanacry-ransomware-technical-analysis&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1135-malware analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/malicious/paper/2103" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/malicious/paper/2103&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1136-Metasploit's detailed communication and protocol writeup:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/english/27935-metasploit---the-exploit-learning-tree.pdf" rel="nofollow"&gt;https://www.exploit-db.com/docs/english/27935-metasploit---the-exploit-learning-tree.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1137-Metasploit's SSL-generation module::&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rapid7/metasploit-framework/blob/76954957c740525cff2db5a60bcf936b4ee06c42/lib/rex/post/meterpreter/client.rb"&gt;https://github.com/rapid7/metasploit-framework/blob/76954957c740525cff2db5a60bcf936b4ee06c42/lib/rex/post/meterpreter/client.rb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1139-Empire IOCs::&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/detection/disrupting-empire-identifying-powershell-empire-command-control-activity-38315" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/detection/disrupting-empire-identifying-powershell-empire-command-control-activity-38315&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1140-excellent free training on glow analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://opensecuritytraining.info/Flow.html" rel="nofollow"&gt;http://opensecuritytraining.info/Flow.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1141-NetFlow using Silk:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tools.netsa.cert.org/silk/analysis-handbook.pdf" rel="nofollow"&gt;https://tools.netsa.cert.org/silk/analysis-handbook.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1142-Deep Packet Inspection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://is.muni.cz/th/ql57c/dp-svoboda.pdf" rel="nofollow"&gt;https://is.muni.cz/th/ql57c/dp-svoboda.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1143-Detecting Behavioral Personas with OSINT and Datasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/45543" rel="nofollow"&gt;https://www.exploit-db.com/docs/45543&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1144-WordPress Penetration Testing using WPScan and MetaSploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/45556" rel="nofollow"&gt;https://www.exploit-db.com/docs/45556&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1145-Bulk SQL Injection using Burp-to-SQLMap:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/45428" rel="nofollow"&gt;https://www.exploit-db.com/docs/45428&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1146-XML External Entity Injection - Explanation and Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/45374" rel="nofollow"&gt;https://www.exploit-db.com/docs/45374&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1147-	Web Application Firewall (WAF) Evasion Techniques #3 (CloudFlare and ModSecurity OWASP CRS3):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/45368" rel="nofollow"&gt;https://www.exploit-db.com/docs/45368&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1148-File Upload Restrictions Bypass:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/45074" rel="nofollow"&gt;https://www.exploit-db.com/docs/45074&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1149-VLAN Hopping Attack:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/45050" rel="nofollow"&gt;https://www.exploit-db.com/docs/45050&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1150-Jigsaw Ransomware Analysis using Volatility:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@0xINT3/jigsaw-ransomware-analysis-using-volatility-2047fc3d9be9" rel="nofollow"&gt;https://medium.com/@0xINT3/jigsaw-ransomware-analysis-using-volatility-2047fc3d9be9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1151-Ransomware early detection by the analysis of file sharing traffic:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sciencedirect.com/science/article/pii/S108480451830300X" rel="nofollow"&gt;https://www.sciencedirect.com/science/article/pii/S108480451830300X&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1152-Do You Think You Can Analyse Ransomware?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/asecuritysite-when-bob-met-alice/do-you-think-you-can-analyse-ransomware-bbc813b95529" rel="nofollow"&gt;https://medium.com/asecuritysite-when-bob-met-alice/do-you-think-you-can-analyse-ransomware-bbc813b95529&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1153-Analysis of LockerGoga Ransomware :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labsblog.f-secure.com/2019/03/27/analysis-of-lockergoga-ransomware/" rel="nofollow"&gt;https://labsblog.f-secure.com/2019/03/27/analysis-of-lockergoga-ransomware/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1154-Detection and Forensic Analysis of Ransomware Attacks :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.netfort.com/assets/NetFort-Ransomware-White-Paper.pdf" rel="nofollow"&gt;https://www.netfort.com/assets/NetFort-Ransomware-White-Paper.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1155-Bad Rabbit Ransomware Technical Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://logrhythm.com/blog/bad-rabbit-ransomware-technical-analysis/" rel="nofollow"&gt;https://logrhythm.com/blog/bad-rabbit-ransomware-technical-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1156-NotPetya Ransomware analysis :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://safe-cyberdefense.com/notpetya-ransomware-analysis/" rel="nofollow"&gt;https://safe-cyberdefense.com/notpetya-ransomware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1157-Identifying WannaCry on Your Server Using Logs:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.loggly.com/blog/identifying-wannacry-server-using-logs/" rel="nofollow"&gt;https://www.loggly.com/blog/identifying-wannacry-server-using-logs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1158-The past, present, and future of ransomware:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.itproportal.com/features/the-past-present-and-future-of-ransomware/" rel="nofollow"&gt;https://www.itproportal.com/features/the-past-present-and-future-of-ransomware/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1159-The dynamic analysis of WannaCry ransomware :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ieeexplore.ieee.org/iel7/8318543/8323471/08323682.pdf" rel="nofollow"&gt;https://ieeexplore.ieee.org/iel7/8318543/8323471/08323682.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1160-Malware Analysis: Ransomware - SlideShare:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/davidepiccardi/malware-analysis-ransomware" rel="nofollow"&gt;https://www.slideshare.net/davidepiccardi/malware-analysis-ransomware&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1161-Article: Anatomy of ransomware malware: detection, analysis :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.inderscience.com/info/inarticle.php?artid=84399" rel="nofollow"&gt;https://www.inderscience.com/info/inarticle.php?artid=84399&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1162-Tracking desktop ransomware payments :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhat.com/docs/us-17/wednesday/us-17-Invernizzi-Tracking-Ransomware-End-To-End.pdf" rel="nofollow"&gt;https://www.blackhat.com/docs/us-17/wednesday/us-17-Invernizzi-Tracking-Ransomware-End-To-End.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1163-What is Ransomware? Defined, Explained, and Explored:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.forcepoint.com/cyber-edu/ransomware" rel="nofollow"&gt;https://www.forcepoint.com/cyber-edu/ransomware&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1164-Detect and Recover from Ransomware Attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.indexengines.com/ransomware" rel="nofollow"&gt;https://www.indexengines.com/ransomware&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1165-Wingbird rootkit analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://artemonsecurity.blogspot.com/2017/01/wingbird-rootkit-analysis.html" rel="nofollow"&gt;https://artemonsecurity.blogspot.com/2017/01/wingbird-rootkit-analysis.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1166-Windows Kernel Rootkits: Techniques and Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.offensivecon.org/trainings/2019/windows-kernel-rootkits-techniques-and-analysis.html" rel="nofollow"&gt;https://www.offensivecon.org/trainings/2019/windows-kernel-rootkits-techniques-and-analysis.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1167-Rootkit: What is a Rootkit and How to Detect It :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.veracode.com/security/rootkit" rel="nofollow"&gt;https://www.veracode.com/security/rootkit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1168-Dissecting Turla Rootkit Malware Using Dynamic Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.lastline.com/.../dissecting-turla-rootkit-malware-using-dynamic-analysis/" rel="nofollow"&gt;https://www.lastline.com/.../dissecting-turla-rootkit-malware-using-dynamic-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1169-Rootkits and Rootkit Detection (Windows Forensic Analysis) Part 2:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://what-when-how.com/windows-forensic-analysis/rootkits-and-rootkit-detection-windows-forensic-analysis-part-2/" rel="nofollow"&gt;https://what-when-how.com/windows-forensic-analysis/rootkits-and-rootkit-detection-windows-forensic-analysis-part-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1170-ZeroAccess – an advanced kernel mode rootkit :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.botnetlegalnotice.com/ZeroAccess/files/Ex_12_Decl_Anselmi.pdf" rel="nofollow"&gt;https://www.botnetlegalnotice.com/ZeroAccess/files/Ex_12_Decl_Anselmi.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1171-Rootkit Analysis Identification Elimination:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://acronyms.thefreedictionary.com/Rootkit+Analysis+Identification+Elimination" rel="nofollow"&gt;https://acronyms.thefreedictionary.com/Rootkit+Analysis+Identification+Elimination&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1172-TDL3: The Rootkit of All Evil?:&lt;/p&gt;
&lt;p&gt;static1.esetstatic.com/us/resources/white-papers/TDL3-Analysis.pdf&lt;/p&gt;
&lt;p&gt;-1173-Avatar Rootkit: Dropper Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/avatar-rootkit-dropper-analysis-part-1/" rel="nofollow"&gt;https://resources.infosecinstitute.com/avatar-rootkit-dropper-analysis-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1174-Sality rootkit analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.prodefence.org/sality-rootkit-analysis/" rel="nofollow"&gt;https://www.prodefence.org/sality-rootkit-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1175-RootKit Hook Analyzer:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.resplendence.com/hookanalyzer/" rel="nofollow"&gt;https://www.resplendence.com/hookanalyzer/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1176-Behavioral Analysis of Rootkit Malware:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://isc.sans.edu/forums/diary/Behavioral+Analysis+of+Rootkit+Malware/1487/" rel="nofollow"&gt;https://isc.sans.edu/forums/diary/Behavioral+Analysis+of+Rootkit+Malware/1487/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1177-Malware Memory Analysis of the IVYL Linux Rootkit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://apps.dtic.mil/docs/citations/AD1004349" rel="nofollow"&gt;https://apps.dtic.mil/docs/citations/AD1004349&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1178-Analysis of the KNARK rootkit :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://linuxsecurity.com/news/intrusion-detection/analysis-of-the-knark-rootkit" rel="nofollow"&gt;https://linuxsecurity.com/news/intrusion-detection/analysis-of-the-knark-rootkit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1179-32 Bit Windows Kernel Mode Rootkit Lab Setup with INetSim :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@eaugusto/32-bit-windows-kernel-mode-rootkit-lab-setup-with-inetsim-e49c22e9fcd1" rel="nofollow"&gt;https://medium.com/@eaugusto/32-bit-windows-kernel-mode-rootkit-lab-setup-with-inetsim-e49c22e9fcd1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1180-Ten Process Injection Techniques: A Technical Survey of Common and Trending Process Injection Techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process" rel="nofollow"&gt;https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1181-Code &amp;amp; Process Injection - Red Teaming Experiments:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ired.team/offensive-security/code-injection-process-injection" rel="nofollow"&gt;https://ired.team/offensive-security/code-injection-process-injection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1182-What Malware Authors Don't want you to know:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhat.com/.../asia-17-KA-What-Malware-Authors-Don't-Want-You-To-Know" rel="nofollow"&gt;https://www.blackhat.com/.../asia-17-KA-What-Malware-Authors-Don't-Want-You-To-Know&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1183-.NET Process Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@malcomvetter/net-process-injection-1a1af00359bc" rel="nofollow"&gt;https://medium.com/@malcomvetter/net-process-injection-1a1af00359bc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1184-Memory Injection like a Boss :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.countercept.com/blog/memory-injection-like-a-boss/" rel="nofollow"&gt;https://www.countercept.com/blog/memory-injection-like-a-boss/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1185-Process injection - Malware style:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/demeester1/process-injection" rel="nofollow"&gt;https://www.slideshare.net/demeester1/process-injection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1186-Userland API Monitoring and Code Injection Detection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0x00sec.org/t/userland-api-monitoring-and-code-injection-detection/5565" rel="nofollow"&gt;https://0x00sec.org/t/userland-api-monitoring-and-code-injection-detection/5565&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1187-Unpacking Redaman Malware &amp;amp; Basics of Self-Injection Packers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://liveoverflow.com/unpacking-buhtrap-malware-basics-of-self-injection-packers-ft-oalabs-2/" rel="nofollow"&gt;https://liveoverflow.com/unpacking-buhtrap-malware-basics-of-self-injection-packers-ft-oalabs-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1188-Code injection on macOS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://knight.sc/malware/2019/03/15/code-injection-on-macos.html" rel="nofollow"&gt;https://knight.sc/malware/2019/03/15/code-injection-on-macos.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1189-(Shell)Code Injection In Linux Userland :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.sektor7.net/#!res/2018/pure-in-memory-linux.md" rel="nofollow"&gt;https://blog.sektor7.net/#!res/2018/pure-in-memory-linux.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1190-Code injection on Windows using Python:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/2018/08/06/code-injection-on-windows-using-python-a-simple-example/" rel="nofollow"&gt;https://www.andreafortuna.org/2018/08/06/code-injection-on-windows-using-python-a-simple-example/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1191-What is Reflective DLL Injection and how can be detected?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/cybersecurity/what-is-reflective-dll-injection-and-how-can-be-detected/" rel="nofollow"&gt;https://www.andreafortuna.org/cybersecurity/what-is-reflective-dll-injection-and-how-can-be-detected/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1192-Windows Process Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://modexp.wordpress.com/2018/08/23/process-injection-propagate/" rel="nofollow"&gt;https://modexp.wordpress.com/2018/08/23/process-injection-propagate/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1193-A+ cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/abnmi/a-cheat-sheet" rel="nofollow"&gt;https://www.slideshare.net/abnmi/a-cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1194-A Bettercap Tutorial — From Installation to Mischief:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://danielmiessler.com/study/bettercap/" rel="nofollow"&gt;https://danielmiessler.com/study/bettercap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1195-Debugging Malware with WinDbg:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ixiacom.com/company/blog/debugging-malware-windbg" rel="nofollow"&gt;https://www.ixiacom.com/company/blog/debugging-malware-windbg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1195-Malware analysis, my own list of tools and resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/2016/08/05/malware-analysis-my-own-list-of-tools-and-resources/" rel="nofollow"&gt;https://www.andreafortuna.org/2016/08/05/malware-analysis-my-own-list-of-tools-and-resources/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1196-Getting Started with Reverse Engineering:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lospi.net/developing/software/.../assembly/2015/03/.../reversing-with-ida.html" rel="nofollow"&gt;https://lospi.net/developing/software/.../assembly/2015/03/.../reversing-with-ida.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1197-Debugging malicious windows scriptlets with Google chrome:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@0xamit/debugging-malicious-windows-scriptlets-with-google-chrome-c31ba409975c" rel="nofollow"&gt;https://medium.com/@0xamit/debugging-malicious-windows-scriptlets-with-google-chrome-c31ba409975c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1198-Intro to Radare2 for Malware Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://malwology.com/2018/11/30/intro-to-radare2-for-malware-analysis/" rel="nofollow"&gt;https://malwology.com/2018/11/30/intro-to-radare2-for-malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1199-Intro to Malware Analysis and Reverse Engineering:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cybrary.it/course/malware-analysis/" rel="nofollow"&gt;https://www.cybrary.it/course/malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1200-Common Malware Persistence Mechanisms:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/common-malware-persistence-mechanisms/" rel="nofollow"&gt;https://resources.infosecinstitute.com/common-malware-persistence-mechanisms/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1201-Finding Registry Malware Persistence with RECmd:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://digital-forensics.sans.org/blog/2019/05/07/malware-persistence-recmd" rel="nofollow"&gt;https://digital-forensics.sans.org/blog/2019/05/07/malware-persistence-recmd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1202-Windows Malware Persistence Mechanisms :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.swordshield.com/blog/windows-malware-persistence-mechanisms/" rel="nofollow"&gt;https://www.swordshield.com/blog/windows-malware-persistence-mechanisms/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1203-  persistence techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/2017/07/06/malware-persistence-techniques/" rel="nofollow"&gt;https://www.andreafortuna.org/2017/07/06/malware-persistence-techniques/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1204- Persistence Mechanism - an overview | ScienceDirect Topics:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sciencedirect.com/topics/computer-science/persistence-mechanism" rel="nofollow"&gt;https://www.sciencedirect.com/topics/computer-science/persistence-mechanism&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1205-Malware analysis for Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sothis.tech/en/malware-analysis-for-linux-wirenet/" rel="nofollow"&gt;https://www.sothis.tech/en/malware-analysis-for-linux-wirenet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1206-Linux Malware Persistence with Cron:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sandflysecurity.com/blog/linux-malware-persistence-with-cron/" rel="nofollow"&gt;https://www.sandflysecurity.com/blog/linux-malware-persistence-with-cron/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1207-What is advanced persistent threat (APT)? :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://searchsecurity.techtarget.com/definition/advanced-persistent-threat-APT" rel="nofollow"&gt;https://searchsecurity.techtarget.com/definition/advanced-persistent-threat-APT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1208-Malware Analysis, Part 1: Understanding Code Obfuscation :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.vadesecure.com/en/malware-analysis-understanding-code-obfuscation-techniques/" rel="nofollow"&gt;https://www.vadesecure.com/en/malware-analysis-understanding-code-obfuscation-techniques/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1209-Top 6 Advanced Obfuscation Techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sensorstechforum.com/advanced-obfuscation-techniques-malware/" rel="nofollow"&gt;https://sensorstechforum.com/advanced-obfuscation-techniques-malware/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1210-Malware Obfuscation Techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dl.acm.org/citation.cfm?id=1908903" rel="nofollow"&gt;https://dl.acm.org/citation.cfm?id=1908903&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1211-How Hackers Hide Their Malware: Advanced Obfuscation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.darkreading.com/attacks-breaches/how-hackers-hide-their-malware-advanced-obfuscation/a/d-id/1329723" rel="nofollow"&gt;https://www.darkreading.com/attacks-breaches/how-hackers-hide-their-malware-advanced-obfuscation/a/d-id/1329723&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1212-Malware obfuscation techniques: four simple examples:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/2016/10/13/malware-obfuscation-techniques-four-simple-examples/" rel="nofollow"&gt;https://www.andreafortuna.org/2016/10/13/malware-obfuscation-techniques-four-simple-examples/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1213-Malware Monday: Obfuscation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@bromiley/malware-monday-obfuscation-f65239146db0" rel="nofollow"&gt;https://medium.com/@bromiley/malware-monday-obfuscation-f65239146db0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1213-Challenge of Malware Analysis: Malware obfuscation Techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ijiss.org/ijiss/index.php/ijiss/article/view/327" rel="nofollow"&gt;https://www.ijiss.org/ijiss/index.php/ijiss/article/view/327&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1214-Static Malware Analysis - Infosec Resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/malware-analysis-basics-static-analysis/" rel="nofollow"&gt;https://resources.infosecinstitute.com/malware-analysis-basics-static-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1215-Malware Basic Static Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@jain.sm/malware-basic-static-analysis-cf19b4600725" rel="nofollow"&gt;https://medium.com/@jain.sm/malware-basic-static-analysis-cf19b4600725&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1216-Difference Between Static Malware Analysis and Dynamic Malware Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.differencebetween.net/technology/difference-between-static-malware-analysis-and-dynamic-malware-analysis/" rel="nofollow"&gt;http://www.differencebetween.net/technology/difference-between-static-malware-analysis-and-dynamic-malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1217-What is Malware Analysis | Different Tools for Malware Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.comodo.com/different-techniques-for-malware-analysis/" rel="nofollow"&gt;https://blog.comodo.com/different-techniques-for-malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1218-Detecting Malware Pre-execution with Static Analysis and Machine Learning:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sentinelone.com/blog/detecting-malware-pre-execution-static-analysis-machine-learning/" rel="nofollow"&gt;https://www.sentinelone.com/blog/detecting-malware-pre-execution-static-analysis-machine-learning/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1219-Limits of Static Analysis for Malware Detection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ieeexplore.ieee.org/document/4413008" rel="nofollow"&gt;https://ieeexplore.ieee.org/document/4413008&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1220-Kernel mode versus user mode:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.codinghorror.com/understanding-user-and-kernel-mode/" rel="nofollow"&gt;https://blog.codinghorror.com/understanding-user-and-kernel-mode/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1221-Understanding the ELF:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@MrJamesFisher/understanding-the-elf-4bd60daac571" rel="nofollow"&gt;https://medium.com/@MrJamesFisher/understanding-the-elf-4bd60daac571&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1222-Windows Privilege Abuse: Auditing, Detection, and Defense:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/palantir/windows-privilege-abuse-auditing-detection-and-defense-3078a403d74e" rel="nofollow"&gt;https://medium.com/palantir/windows-privilege-abuse-auditing-detection-and-defense-3078a403d74e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1223-First steps to volatile memory analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@zemelusa/first-steps-to-volatile-memory-analysis-dcbd4d2d56a1" rel="nofollow"&gt;https://medium.com/@zemelusa/first-steps-to-volatile-memory-analysis-dcbd4d2d56a1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1224-Maliciously Mobile: A Brief History of Mobile Malware:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/threat-intel/mobile-malware-infosec-history-70f3fcaa61c8" rel="nofollow"&gt;https://medium.com/threat-intel/mobile-malware-infosec-history-70f3fcaa61c8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1225-Modern Binary Exploitation Writeups 0x01:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/binary-exploitation-5fe810db3ed4" rel="nofollow"&gt;https://medium.com/bugbountywriteup/binary-exploitation-5fe810db3ed4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1226-Exploit Development 01 — Terminology:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@MKahsari/exploit-development-01-terminology-db8c19db80d5" rel="nofollow"&gt;https://medium.com/@MKahsari/exploit-development-01-terminology-db8c19db80d5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1227-Zero-day exploits: A cheat sheet for professionals:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.techrepublic.com/article/zero-day-exploits-the-smart-persons-guide/" rel="nofollow"&gt;https://www.techrepublic.com/article/zero-day-exploits-the-smart-persons-guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1228-Best google hacking list on the net:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/x5LVJu9T" rel="nofollow"&gt;https://pastebin.com/x5LVJu9T&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1229-Google Hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/6nsVK5Xi" rel="nofollow"&gt;https://pastebin.com/6nsVK5Xi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1230-OSCP links:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/AiYV80uQ" rel="nofollow"&gt;https://pastebin.com/AiYV80uQ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1231-Pentesting 1 Information gathering:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/qLitw9eT" rel="nofollow"&gt;https://pastebin.com/qLitw9eT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1232-OSCP-Survival-Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/kdc6th08" rel="nofollow"&gt;https://pastebin.com/kdc6th08&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1233-Googledork:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/qKwU37BK" rel="nofollow"&gt;https://pastebin.com/qKwU37BK&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1234-Exploit DB:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/De4DNNKK" rel="nofollow"&gt;https://pastebin.com/De4DNNKK&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1235-Dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/cfVcqknA" rel="nofollow"&gt;https://pastebin.com/cfVcqknA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1236-GOOGLE HACKİNG DATABASE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/1ndqG7aq" rel="nofollow"&gt;https://pastebin.com/1ndqG7aq&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1237-Carding Dorks 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/Hqsxu6Nn" rel="nofollow"&gt;https://pastebin.com/Hqsxu6Nn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1238-17k Carding Dorks 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/fgdZxy74" rel="nofollow"&gt;https://pastebin.com/fgdZxy74&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1239-CARDING DORKS 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/Y7KvzZqg" rel="nofollow"&gt;https://pastebin.com/Y7KvzZqg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1240-sqli dork 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/8gdeLYvU" rel="nofollow"&gt;https://pastebin.com/8gdeLYvU&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1241-Private Carding Dorks 2018:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/F0KxkMMD" rel="nofollow"&gt;https://pastebin.com/F0KxkMMD&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1242-20K dorks list fresh full carding 2018:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/LgCh0NRJ" rel="nofollow"&gt;https://pastebin.com/LgCh0NRJ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1243-8k Carding Dorks :):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/2bjBPiEm" rel="nofollow"&gt;https://pastebin.com/2bjBPiEm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1244-8500 SQL DORKS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/yeREBFzp" rel="nofollow"&gt;https://pastebin.com/yeREBFzp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1245-REAL CARDING DORKS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/0kMhA0Gb" rel="nofollow"&gt;https://pastebin.com/0kMhA0Gb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1246-15k btc dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/zbbBXSfG" rel="nofollow"&gt;https://pastebin.com/zbbBXSfG&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1247-Sqli dorks 2016-2017:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/7TQiMj3A" rel="nofollow"&gt;https://pastebin.com/7TQiMj3A&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1248-Here is kind of a tutorial on how to write google dorks.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/hZCXrAFK" rel="nofollow"&gt;https://pastebin.com/hZCXrAFK&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1249-10k Private Fortnite Dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/SF9UmG1Y" rel="nofollow"&gt;https://pastebin.com/SF9UmG1Y&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1250-find login panel dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/9FGUPqZc" rel="nofollow"&gt;https://pastebin.com/9FGUPqZc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1251-Shell dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/iZBFQ5yp" rel="nofollow"&gt;https://pastebin.com/iZBFQ5yp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1252-HQ PAID GAMING DORKS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/vNYnyW09" rel="nofollow"&gt;https://pastebin.com/vNYnyW09&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1253-10K HQ Shopping DORKS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/HTP6rAt4" rel="nofollow"&gt;https://pastebin.com/HTP6rAt4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1254-Exploit Dorks for Joomla,FCK and others 2015 Old but gold:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/ttxAJbdW" rel="nofollow"&gt;https://pastebin.com/ttxAJbdW&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1255-Gain access to unsecured IP cameras with these Google dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/93aPbwwE" rel="nofollow"&gt;https://pastebin.com/93aPbwwE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1256-new fresh dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/ZjdxBbNB" rel="nofollow"&gt;https://pastebin.com/ZjdxBbNB&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1257-SQL DORKS FOR CC:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/ZQTHwk2S" rel="nofollow"&gt;https://pastebin.com/ZQTHwk2S&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1258-Wordpress uploadify Dorks Priv8:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/XAGmHVUr" rel="nofollow"&gt;https://pastebin.com/XAGmHVUr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1259-650 DORKS CC:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/xZHARTyz" rel="nofollow"&gt;https://pastebin.com/xZHARTyz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1260-3k Dorks Shopping:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/e1XiNa8M" rel="nofollow"&gt;https://pastebin.com/e1XiNa8M&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1261-DORKS 2018 :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/YAZkPJ0j" rel="nofollow"&gt;https://pastebin.com/YAZkPJ0j&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1262-HQ FORTNITE DORKS LIST:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/rzhiNad8" rel="nofollow"&gt;https://pastebin.com/rzhiNad8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1263-HQ PAID DORKS MIXED GAMING LOL STEAM ..MUSIC SHOPING:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/VwVpAvj2" rel="nofollow"&gt;https://pastebin.com/VwVpAvj2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1264-Camera dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/fsARft2j" rel="nofollow"&gt;https://pastebin.com/fsARft2j&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1265-Admin Login Dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/HWWNZCph" rel="nofollow"&gt;https://pastebin.com/HWWNZCph&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1266-sql gov dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/C8wqyNW8" rel="nofollow"&gt;https://pastebin.com/C8wqyNW8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1267-10k hq gaming dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/cDLN8edi" rel="nofollow"&gt;https://pastebin.com/cDLN8edi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1268-HQ SQLI Google Dorks For Shops/Amazon! Enjoy! :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/y59kK2h0" rel="nofollow"&gt;https://pastebin.com/y59kK2h0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1269-Dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/PKvZYMAa" rel="nofollow"&gt;https://pastebin.com/PKvZYMAa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1270-10k btc dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/vRnxvbCu" rel="nofollow"&gt;https://pastebin.com/vRnxvbCu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1271-7,000 Dorks for hacking into various sites:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/n8JVQv3X" rel="nofollow"&gt;https://pastebin.com/n8JVQv3X&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1272-List of information gathering search engines/tools etc:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/GTX9X5tF" rel="nofollow"&gt;https://pastebin.com/GTX9X5tF&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1273-FBOSINT:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/5KqnFS0B" rel="nofollow"&gt;https://pastebin.com/5KqnFS0B&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1274-Ultimate Penetration Testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/4EEeEnXe" rel="nofollow"&gt;https://pastebin.com/4EEeEnXe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1275-massive list of information gathering search engines/tools :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/GZ9TVxzh" rel="nofollow"&gt;https://pastebin.com/GZ9TVxzh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1276-CEH Class:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/JZdCHrN4" rel="nofollow"&gt;https://pastebin.com/JZdCHrN4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1277-CEH/CHFI Bundle Study Group Sessions:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/XTwksPK7" rel="nofollow"&gt;https://pastebin.com/XTwksPK7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1278-OSINT - Financial:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/LtxkUi0Y" rel="nofollow"&gt;https://pastebin.com/LtxkUi0Y&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1279-Most Important Security Tools and Resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/cGE8rG04" rel="nofollow"&gt;https://pastebin.com/cGE8rG04&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1280-OSINT resources from inteltechniques.com:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/Zbdz7wit" rel="nofollow"&gt;https://pastebin.com/Zbdz7wit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1281-Red Team Tips:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/AZDBAr1m" rel="nofollow"&gt;https://pastebin.com/AZDBAr1m&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1282-OSCP Notes by Ash:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/wFWx3a7U" rel="nofollow"&gt;https://pastebin.com/wFWx3a7U&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1283-OSCP Prep:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/98JG5f2v" rel="nofollow"&gt;https://pastebin.com/98JG5f2v&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1284-OSCP Review/Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/JMMM7t4f" rel="nofollow"&gt;https://pastebin.com/JMMM7t4f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1285-OSCP Prep class:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/s59GPJrr" rel="nofollow"&gt;https://pastebin.com/s59GPJrr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1286-Complete Anti-Forensics Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/6V6wZK0i" rel="nofollow"&gt;https://pastebin.com/6V6wZK0i&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1287-The Linux Command Line Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/PUtWDKX5" rel="nofollow"&gt;https://pastebin.com/PUtWDKX5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1288-Command-Line Log Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/WEDwpcz9" rel="nofollow"&gt;https://pastebin.com/WEDwpcz9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1289-An A-Z Index of the Apple macOS command line (OS X):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/RmPLQA5f" rel="nofollow"&gt;https://pastebin.com/RmPLQA5f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1290-San Diego Exploit Development 2018:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/VfwhT8Yd" rel="nofollow"&gt;https://pastebin.com/VfwhT8Yd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1291-Windows Exploit Development Megaprimer:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/DvdEW4Az" rel="nofollow"&gt;https://pastebin.com/DvdEW4Az&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1292-Some Free Reverse engineering resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/si2ThQPP" rel="nofollow"&gt;https://pastebin.com/si2ThQPP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1293-Sans:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/MKiSnjLm" rel="nofollow"&gt;https://pastebin.com/MKiSnjLm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1294-Metasploit Next Level:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/0jC1BUiv" rel="nofollow"&gt;https://pastebin.com/0jC1BUiv&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1295-Just playing around....:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/gHXPzf6B" rel="nofollow"&gt;https://pastebin.com/gHXPzf6B&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1296-Red Team Course:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/YUYSXNpG" rel="nofollow"&gt;https://pastebin.com/YUYSXNpG&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1297-New Exploit Development 2018:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/xaRxgYqQ" rel="nofollow"&gt;https://pastebin.com/xaRxgYqQ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1298-Good reviews of CTP/OSCE (in no particular order)::&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/RSPbatip" rel="nofollow"&gt;https://pastebin.com/RSPbatip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1299-Vulnerability Research Engineering Bookmarks Collection v1.0:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/8mUhjGSU" rel="nofollow"&gt;https://pastebin.com/8mUhjGSU&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1300-Professional-hacker's Pastebin :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/u/Professional-hacker" rel="nofollow"&gt;https://pastebin.com/u/Professional-hacker&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1301-Google Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.googleguide.com/print/adv_op_ref.pdf" rel="nofollow"&gt;http://www.googleguide.com/print/adv_op_ref.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1302-Shodan for penetration testers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.defcon.org/images/defcon-18/dc-18-presentations/Schearer/DEFCON-18-Schearer-SHODAN.pdf" rel="nofollow"&gt;https://www.defcon.org/images/defcon-18/dc-18-presentations/Schearer/DEFCON-18-Schearer-SHODAN.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1303-Linux networking tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/miglen/70765e663c48ae0544da08c07006791f"&gt;https://gist.github.com/miglen/70765e663c48ae0544da08c07006791f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1304-DNS spoofing with NetHunter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cyberarms.wordpress.com/category/nethunter-tutorial/" rel="nofollow"&gt;https://cyberarms.wordpress.com/category/nethunter-tutorial/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1305-Tips on writing a penetration testing report:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/bestprac/writing-penetration-testing-report-33343" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/bestprac/writing-penetration-testing-report-33343&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1306-Technical penetration report sample:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tbgsecurity.com/wordpress/wp-content/uploads/2016/11/Sample-Penetration-Test-Report.pdf" rel="nofollow"&gt;https://tbgsecurity.com/wordpress/wp-content/uploads/2016/11/Sample-Penetration-Test-Report.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1307-Nessus sample reports:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.tenable.com/products/nessus/sample-reports" rel="nofollow"&gt;https://www.tenable.com/products/nessus/sample-reports&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1308-Sample penetration testing report:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.offensive-security.com/reports/sample-penetration-testing-report.pdf" rel="nofollow"&gt;https://www.offensive-security.com/reports/sample-penetration-testing-report.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1309-jonh-the-ripper-cheat-sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://countuponsecurity.com/2015/06/14/jonh-the-ripper-cheat-sheet/" rel="nofollow"&gt;https://countuponsecurity.com/2015/06/14/jonh-the-ripper-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1310-ultimate guide to cracking foreign character passwords using hashcat:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.netmux.com/blog/ultimate-guide-to-cracking-foreign-character-passwords-using-has" rel="nofollow"&gt;http://www.netmux.com/blog/ultimate-guide-to-cracking-foreign-character-passwords-using-has&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1311-Building_a_Password_Cracking_Rig_for_Hashcat_-_Part_III:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.unix-ninja.com/p/Building_a_Password_Cracking_Rig_for_Hashcat_-_Part_III" rel="nofollow"&gt;https://www.unix-ninja.com/p/Building_a_Password_Cracking_Rig_for_Hashcat_-_Part_III&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1312-cracking story how i cracked over 122 million sha1 and md5 hashed passwords:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.thireus.com/cracking-story-how-i-cracked-over-122-million-sha1-and-md5-hashed-passwords/" rel="nofollow"&gt;http://blog.thireus.com/cracking-story-how-i-cracked-over-122-million-sha1-and-md5-hashed-passwords/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1313-CSA (Cloud Security Alliance) Security White Papers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cloudsecurityalliance.org/download/" rel="nofollow"&gt;https://cloudsecurityalliance.org/download/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1314-NIST Security Considerations in the System Development Life Cycle:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nvlpubs.nist.gov/nistpubs/legacy/sp/nistspecialpublication800-64r2.pdf" rel="nofollow"&gt;https://nvlpubs.nist.gov/nistpubs/legacy/sp/nistspecialpublication800-64r2.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1315-ISO 29100 information technology security techniques privacy framework:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.iso.org/standard/45123.html" rel="nofollow"&gt;https://www.iso.org/standard/45123.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1316-NIST National Checklist Program:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nvd.nist.gov/ncp/repository" rel="nofollow"&gt;https://nvd.nist.gov/ncp/repository&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1317-OWASP Guide to Cryptography:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Guide_to_Cryptography" rel="nofollow"&gt;https://www.owasp.org/index.php/Guide_to_Cryptography&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1318-NVD (National Vulnerability Database):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nvd.nist.gov/" rel="nofollow"&gt;https://nvd.nist.gov/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1319-CVE details:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cvedetails.com/" rel="nofollow"&gt;https://cvedetails.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1320-CIS Cybersecurity Tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cisecurity.org/cybersecurity-tools/" rel="nofollow"&gt;https://www.cisecurity.org/cybersecurity-tools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1321-Security aspects of virtualization by ENISA:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.enisa.europa.eu/publications/security-aspects-of-virtualization/" rel="nofollow"&gt;https://www.enisa.europa.eu/publications/security-aspects-of-virtualization/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1322-CIS Benchmarks also provides a security guide for VMware, Docker, and Kubernetes:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cisecurity.org/cis-benchmarks/" rel="nofollow"&gt;https://www.cisecurity.org/cis-benchmarks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1323-OpenStack's hardening of the virtualization layer provides a secure guide to building the virtualization layer:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.openstack.org/security-guide/compute/hardening-the-virtualization-layers.html" rel="nofollow"&gt;https://docs.openstack.org/security-guide/compute/hardening-the-virtualization-layers.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1324-Docker security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.docker.com/engine/security/security/" rel="nofollow"&gt;https://docs.docker.com/engine/security/security/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1325-Microsoft Security Development Lifecycle:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.microsoft.com/en-us/SDL/" rel="nofollow"&gt;http://www.microsoft.com/en-us/SDL/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1326-OWASP SAMM Project:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/OWASP_SAMM_Project" rel="nofollow"&gt;https://www.owasp.org/index.php/OWASP_SAMM_Project&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1327-CWE/SANS Top 25 Most Dangerous Software Errors:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cwe.mitre.org/top25/" rel="nofollow"&gt;https://cwe.mitre.org/top25/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1329-OWASP Vulnerable Web Applications Directory Project:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/OWASP_Vulnerable_Web_Applications_Directory_Project" rel="nofollow"&gt;https://www.owasp.org/index.php/OWASP_Vulnerable_Web_Applications_Directory_Project&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1330-CERT Secure Coding Standards:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://wiki.sei.cmu.edu/confluence/display/seccode/SEI+CERT+Coding+Standards" rel="nofollow"&gt;https://wiki.sei.cmu.edu/confluence/display/seccode/SEI+CERT+Coding+Standards&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1331-NIST Special Publication 800-53:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nvd.nist.gov/800-53" rel="nofollow"&gt;https://nvd.nist.gov/800-53&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1332-SAFECode Security White Papers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://safecode.org/publications/" rel="nofollow"&gt;https://safecode.org/publications/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1333-Microsoft Threat Modeling tool 2016:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://aka.ms/tmt2016/" rel="nofollow"&gt;https://aka.ms/tmt2016/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1334-Apache Metron for real-time big data security:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://metron.apache.org/documentation/" rel="nofollow"&gt;http://metron.apache.org/documentation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1335-Introducing OCTAVE Allegro: Improving the Information Security Risk Assessment Process:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.sei.cmu.edu/asset_files/TechnicalReport/2007_005_001_14885.pdf" rel="nofollow"&gt;https://resources.sei.cmu.edu/asset_files/TechnicalReport/2007_005_001_14885.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1336-NIST 800-18 Guide for Developing Security Plans for Federal Information Systems:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://nvlpubs.nist.gov/nistpubs/legacy/sp/nistspecialpublication800-18r1.pdf" rel="nofollow"&gt;http://nvlpubs.nist.gov/nistpubs/legacy/sp/nistspecialpublication800-18r1.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1337-ITU-T X.805 (10/2003) Security architecture for systems providing end- to-end communications:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.itu.int/rec/dologin_pub.asp?lang=e&amp;amp;id=T-REC-X.805-200310-I!!PDF-E&amp;amp;type=items" rel="nofollow"&gt;https://www.itu.int/rec/dologin_pub.asp?lang=e&amp;amp;id=T-REC-X.805-200310-I!!PDF-E&amp;amp;type=items&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1338-ETSI TS 102 165-1 V4.2.1 (2006-12) : Method and proforma for Threat, Risk, Vulnerability Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.etsi.org/deliver/etsi_ts/102100_102199/10216501/04.02.01_60/ts_10216501v040201p.pdf" rel="nofollow"&gt;http://www.etsi.org/deliver/etsi_ts/102100_102199/10216501/04.02.01_60/ts_10216501v040201p.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1339-SAFECode Fundamental Practices for Secure Software Development:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://safecode.org/wp-content/uploads/2018/03/SAFECode_Fundamental_Practices_for_Secure_Software_Development_March_2018.pdf" rel="nofollow"&gt;https://safecode.org/wp-content/uploads/2018/03/SAFECode_Fundamental_Practices_for_Secure_Software_Development_March_2018.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1340-NIST 800-64 Security Considerations in the System Development Life Cycle:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://csrc.nist.gov/publications/detail/sp/800-64/rev-2/final" rel="nofollow"&gt;https://csrc.nist.gov/publications/detail/sp/800-64/rev-2/final&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1341-SANS A Security Checklist for Web Application Design:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/securecode/security-checklist-web-application-design-1389" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/securecode/security-checklist-web-application-design-1389&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1342-Best Practices for implementing a Security Awareness Program:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.pcisecuritystandards.org/documents/PCI_DSS_V1.0_Best_Practices_for_Implementing_Security_Awareness_Program.pdf" rel="nofollow"&gt;https://www.pcisecuritystandards.org/documents/PCI_DSS_V1.0_Best_Practices_for_Implementing_Security_Awareness_Program.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1343-ETSI TS 102 165-1 V4.2.1 (2006-12): Method and proforma for Threat, Risk, Vulnerability Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.etsi.org/deliver/etsi_ts/102100_102199/10216501/04.02.03_60/ts_10216501v040203p.pdf" rel="nofollow"&gt;http://www.etsi.org/deliver/etsi_ts/102100_102199/10216501/04.02.03_60/ts_10216501v040203p.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1344-NIST 800-18 Guide for Developing Security Plans for Federal Information Systems:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://csrc.nist.gov/publications/detail/sp/800-18/rev-1/final" rel="nofollow"&gt;https://csrc.nist.gov/publications/detail/sp/800-18/rev-1/final&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1345-SafeCode Tactical Threat Modeling:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://safecode.org/safecodepublications/tactical-threat-modeling/" rel="nofollow"&gt;https://safecode.org/safecodepublications/tactical-threat-modeling/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1346-SANS Web Application Security Design Checklist:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/securecode/security-checklist-web-application-design-1389" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/securecode/security-checklist-web-application-design-1389&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1347-Data Anonymization for production data dumps:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/sunitparekh/data-anonymization"&gt;https://github.com/sunitparekh/data-anonymization&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1348-SANS Continuous Monitoring—What It Is, Why It Is Needed, and How to Use It:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/analyst/continuous-monitoring-is-needed-35030" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/analyst/continuous-monitoring-is-needed-35030&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1349-Guide to Computer Security Log Management:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ws680.nist.gov/publication/get_pdf.cfm?pub_id=50881" rel="nofollow"&gt;https://ws680.nist.gov/publication/get_pdf.cfm?pub_id=50881&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1350-Malware Indicators:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/citizenlab/malware-indicators"&gt;https://github.com/citizenlab/malware-indicators&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1351-OSINT Threat Feeds:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.circl.lu/doc/misp/feed-osint/" rel="nofollow"&gt;https://www.circl.lu/doc/misp/feed-osint/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1352-SANS How to Use Threat Intelligence effectively:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/analyst/threat-intelligence-is-effectively-37282" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/analyst/threat-intelligence-is-effectively-37282&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1353-NIST 800-150 Guide to Cyber Threat Information Sharing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nvlpubs.nist.gov/nistpubs/specialpublications/nist.sp.800-150.pdf" rel="nofollow"&gt;https://nvlpubs.nist.gov/nistpubs/specialpublications/nist.sp.800-150.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1354-Securing Web Application Technologies Checklist:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://software-security.sans.org/resources/swat" rel="nofollow"&gt;https://software-security.sans.org/resources/swat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1355-Firmware Security Training:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/advanced-threat-research/firmware-security-training"&gt;https://github.com/advanced-threat-research/firmware-security-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1356-Burp Suite Bootcamp:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/5sG7Rpg5" rel="nofollow"&gt;https://pastebin.com/5sG7Rpg5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1357-Web app hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/ANsw7WRx" rel="nofollow"&gt;https://pastebin.com/ANsw7WRx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1358-XSS Payload:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/EdxzE4P1" rel="nofollow"&gt;https://pastebin.com/EdxzE4P1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1359-XSS Filter Evasion Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/bUutGfSy" rel="nofollow"&gt;https://pastebin.com/bUutGfSy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1360-Persistence using RunOnceEx – Hidden from Autoruns.exe:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://oddvar.moe/2018/03/21/persistence-using-runonceex-hidden-from-autoruns-exe/" rel="nofollow"&gt;https://oddvar.moe/2018/03/21/persistence-using-runonceex-hidden-from-autoruns-exe/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1361-Windows Operating System Archaeology:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/enigma0x3/windows-operating-system-archaeology" rel="nofollow"&gt;https://www.slideshare.net/enigma0x3/windows-operating-system-archaeology&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1362-How to Backdoor Windows 10 Using an Android Phone &amp;amp; USB Rubber Ducky:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.prodefence.org/how-to-backdoor-windows-10-using-an-android-phone-usb-rubber-ducky/" rel="nofollow"&gt;https://www.prodefence.org/how-to-backdoor-windows-10-using-an-android-phone-usb-rubber-ducky/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1363-Malware Analysis using Osquery :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackernoon.com/malware-analysis-using-osquery-part-2-69f08ec2ecec" rel="nofollow"&gt;https://hackernoon.com/malware-analysis-using-osquery-part-2-69f08ec2ecec&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1364-Tales of a Blue Teamer: Detecting Powershell Empire shenanigans with Sysinternals :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://holdmybeersecurity.com/2019/02/27/sysinternals-for-windows-incident-response/" rel="nofollow"&gt;https://holdmybeersecurity.com/2019/02/27/sysinternals-for-windows-incident-response/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1365-Userland registry hijacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://3gstudent.github.io/Userland-registry-hijacking/" rel="nofollow"&gt;https://3gstudent.github.io/Userland-registry-hijacking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1366-Malware Hiding Techniques to Watch for: AlienVault Labs:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.alienvault.com/blogs/labs-research/malware-hiding-techniques-to-watch-for-alienvault-labs" rel="nofollow"&gt;https://www.alienvault.com/blogs/labs-research/malware-hiding-techniques-to-watch-for-alienvault-labs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1367- Full text of "Google hacking for penetration testers" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/pdfy-TPtNL6_ERVnbod0r/Google+Hacking+-+For+Penetration+Tester_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/pdfy-TPtNL6_ERVnbod0r/Google+Hacking+-+For+Penetration+Tester_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1368- Full text of "Long, Johnny Google Hacking For Penetration Testers" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/LongJohnnyGoogleHackingForPenetrationTesters/Long%2C%20Johnny%20-%20Google%20Hacking%20for%20Penetration%20Testers_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/LongJohnnyGoogleHackingForPenetrationTesters/Long%2C%20Johnny%20-%20Google%20Hacking%20for%20Penetration%20Testers_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1369- Full text of "Coding For Penetration Testers" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/CodingForPenetrationTesters/Coding%20for%20Penetration%20Testers_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/CodingForPenetrationTesters/Coding%20for%20Penetration%20Testers_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1370- Full text of "Hacking For Dummies" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/HackingForDummies/Hacking%20For%20Dummies_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/HackingForDummies/Hacking%20For%20Dummies_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1371-Full text of "Wiley. Hacking. 5th. Edition. Jan. 2016. ISBN. 1119154685. Profescience.blogspot.com" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/Wiley.Hacking.5th.Edition.Jan.2016.ISBN.1119154685.Profescience.blogspot.com/Wiley.Hacking.5th.Edition.Jan.2016.ISBN.1119154685.Profescience.blogspot.com_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/Wiley.Hacking.5th.Edition.Jan.2016.ISBN.1119154685.Profescience.blogspot.com/Wiley.Hacking.5th.Edition.Jan.2016.ISBN.1119154685.Profescience.blogspot.com_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1372- Full text of "Social Engineering The Art Of Human Hacking" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/SocialEngineeringTheArtOfHumanHacking/Social%20Engineering%20-%20The%20Art%20of%20Human%20Hacking_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/SocialEngineeringTheArtOfHumanHacking/Social%20Engineering%20-%20The%20Art%20of%20Human%20Hacking_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1373- Full text of "CYBER WARFARE" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/CYBERWARFARE/CYBER%20WARFARE_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/CYBERWARFARE/CYBER%20WARFARE_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1374-Full text of "NSA DOCID: 4046925 Untangling The Web: A Guide To Internet Research" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/Untangling_the_Web/Untangling_the_Web_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/Untangling_the_Web/Untangling_the_Web_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1375- Full text of "sectools" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/sectools/hack-the-stack-network-security_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/sectools/hack-the-stack-network-security_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1376- Full text of "Aggressive network self-defense" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/pdfy-YNtvDJueGZb1DCDA/Aggressive%20Network%20Self-Defense_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/pdfy-YNtvDJueGZb1DCDA/Aggressive%20Network%20Self-Defense_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1377-Community Texts:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/details/opensource?and%5B%5D=%28language%3Aeng+OR+language%3A%22English%22%29+AND+subject%3A%22google%22" rel="nofollow"&gt;https://archive.org/details/opensource?and%5B%5D=%28language%3Aeng+OR+language%3A%22English%22%29+AND+subject%3A%22google%22&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1378- Full text of "Cyber Spying - Tracking (sometimes).PDF (PDFy mirror)" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/pdfy-5-Ln_yPZ22ondBJ8/Cyber%20Spying%20-%20Tracking%20%28sometimes%29_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/pdfy-5-Ln_yPZ22ondBJ8/Cyber%20Spying%20-%20Tracking%20%28sometimes%29_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1379- Full text of "Enzyclopedia Of Cybercrime" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/EnzyclopediaOfCybercrime/Enzyclopedia%20Of%20Cybercrime_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/EnzyclopediaOfCybercrime/Enzyclopedia%20Of%20Cybercrime_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1380- Full text of "Information Security Management Handbook" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/InformationSecurityManagementHandbook/Information%20Security%20Management%20Handbook_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/InformationSecurityManagementHandbook/Information%20Security%20Management%20Handbook_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1381- Full text of "ARMArchitecture Reference Manual" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/ARMArchitectureReferenceManual/DetectionOfIntrusionsAndMalwareAndVulnerabilityAssessment2016_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/ARMArchitectureReferenceManual/DetectionOfIntrusionsAndMalwareAndVulnerabilityAssessment2016_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1382- Full text of "Metasploit The Penetration Tester S Guide" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/MetasploitThePenetrationTesterSGuide/Metasploit-The+Penetration+Tester+s+Guide_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/MetasploitThePenetrationTesterSGuide/Metasploit-The+Penetration+Tester+s+Guide_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1383-Tips &amp;amp; tricks to master Google’s search engine:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/infosec-adventures/google-hacking-39599373be7d" rel="nofollow"&gt;https://medium.com/infosec-adventures/google-hacking-39599373be7d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1384-Ethical Google Hacking - Sensitive Doc Dork (Part 2) :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securing-the-stack.teachable.com/courses/ethical-google-hacking-1/lectures/3877866" rel="nofollow"&gt;https://securing-the-stack.teachable.com/courses/ethical-google-hacking-1/lectures/3877866&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1385- Google Hacking Secrets:the Hidden Codes of Google :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ma-no.org/en/security/google-hacking-secrets-the-hidden-codes-of-google" rel="nofollow"&gt;https://www.ma-no.org/en/security/google-hacking-secrets-the-hidden-codes-of-google&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1386-google hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/SamNizam/3-google-hacking" rel="nofollow"&gt;https://www.slideshare.net/SamNizam/3-google-hacking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1387-How Penetration Testers Use Google Hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cqure.nl/kennisplatform/how-penetration-testers-use-google-hacking" rel="nofollow"&gt;https://www.cqure.nl/kennisplatform/how-penetration-testers-use-google-hacking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1388-Free Automated Malware Analysis Sandboxes and Services:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://zeltser.com/automated-malware-analysis/" rel="nofollow"&gt;https://zeltser.com/automated-malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1389-How to get started with Malware Analysis and Reverse Engineering:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0ffset.net/miscellaneous/how-to-get-started-with-malware-analysis/" rel="nofollow"&gt;https://0ffset.net/miscellaneous/how-to-get-started-with-malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1390-Handy Tools And Websites For Malware Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.informationsecuritybuzz.com/articles/handy-tools-and-websites/" rel="nofollow"&gt;https://www.informationsecuritybuzz.com/articles/handy-tools-and-websites/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1391-Dynamic Malware Analysis:&lt;/p&gt;
&lt;p&gt;prasannamundas.com/share/dynamic-malware-analysis/&lt;/p&gt;
&lt;p&gt;-1392-Intro to Radare2 for Malware Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://malwology.com/2018/11/30/intro-to-radare2-for-malware-analysis/" rel="nofollow"&gt;https://malwology.com/2018/11/30/intro-to-radare2-for-malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1393-Detecting malware through static and dynamic techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://technical.nttsecurity.com/.../detecting-malware-through-static-and-dynamic-tec" rel="nofollow"&gt;https://technical.nttsecurity.com/.../detecting-malware-through-static-and-dynamic-tec&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-1394-Malware Analysis Tutorial : Tricks for Confusing Static Analysis Tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.prodefence.org/malware-analysis-tutorial-tricks-confusing-static-analysis-tools" rel="nofollow"&gt;https://www.prodefence.org/malware-analysis-tutorial-tricks-confusing-static-analysis-tools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1395-Malware Analysis Lab At Home In 5 Steps:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ethicalhackingguru.com/malware-analysis-lab-at-home-in-5-steps/" rel="nofollow"&gt;https://ethicalhackingguru.com/malware-analysis-lab-at-home-in-5-steps/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1396-Malware Forensics Guide - Static and Dynamic Approach:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.yeahhub.com/malware-forensics-guide-static-dynamic-approach/" rel="nofollow"&gt;https://www.yeahhub.com/malware-forensics-guide-static-dynamic-approach/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1397-Top 30 Bug Bounty Programs in 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.guru99.com/bug-bounty-programs.html" rel="nofollow"&gt;https://www.guru99.com/bug-bounty-programs.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1398-Introduction - Book of BugBounty Tips:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gowsundar.gitbook.io/book-of-bugbounty-tips/" rel="nofollow"&gt;https://gowsundar.gitbook.io/book-of-bugbounty-tips/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1399-List of bug bounty writeups:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentester.land/list-of-bug-bounty-writeups.html" rel="nofollow"&gt;https://pentester.land/list-of-bug-bounty-writeups.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1400-Tips From A Bugbounty Hunter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.secjuice.com/bugbounty-hunter/" rel="nofollow"&gt;https://www.secjuice.com/bugbounty-hunter/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1401-Cross Site Scripting (XSS) - Book of BugBounty Tips:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gowsundar.gitbook.io/book-of-bugbounty-tips/cross-site-scripting-xss" rel="nofollow"&gt;https://gowsundar.gitbook.io/book-of-bugbounty-tips/cross-site-scripting-xss&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1402-BugBountyTips:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://null0xp.wordpress.com/tag/bugbountytips/" rel="nofollow"&gt;https://null0xp.wordpress.com/tag/bugbountytips/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1403-Xss Filter Bypass Payloads:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.oroazteca.net/mq67/xss-filter-bypass-payloads.html" rel="nofollow"&gt;www.oroazteca.net/mq67/xss-filter-bypass-payloads.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1404-Bug Bounty Methodology:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://eforensicsmag.com/bug-bounty-methodology-ttp-tacticstechniques-and-procedures-v-2-0" rel="nofollow"&gt;https://eforensicsmag.com/bug-bounty-methodology-ttp-tacticstechniques-and-procedures-v-2-0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1405-GDB cheat-sheet for exploit development:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.mannulinux.org/2017/01/gdb-cheat-sheet-for-exploit-development.html" rel="nofollow"&gt;www.mannulinux.org/2017/01/gdb-cheat-sheet-for-exploit-development.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1406-A Study in Exploit Development - Part 1: Setup and Proof of Concept :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.anitian.com/a-study-in-exploit-development-part-1-setup-and-proof-of-concept" rel="nofollow"&gt;https://www.anitian.com/a-study-in-exploit-development-part-1-setup-and-proof-of-concept&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1407-Exploit development tutorial :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.computerweekly.com/tutorial/Exploit-development-tutorial-Part-Deux" rel="nofollow"&gt;https://www.computerweekly.com/tutorial/Exploit-development-tutorial-Part-Deux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1408-exploit code development:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.phreedom.org/presentations/exploit-code-development/exploit-code-development.pdf" rel="nofollow"&gt;http://www.phreedom.org/presentations/exploit-code-development/exploit-code-development.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1409-“Help Defeat Denial of Service Attacks: Step-by-Step”:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.sans.org/dosstep/" rel="nofollow"&gt;http://www.sans.org/dosstep/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1410-Internet Firewalls: Frequently Asked Questions:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.interhack.net/pubs/fwfaq/" rel="nofollow"&gt;http://www.interhack.net/pubs/fwfaq/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1411-Service Name and Transport Protocol Port Number:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.iana.org/assignments/port-numbers" rel="nofollow"&gt;http://www.iana.org/assignments/port-numbers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1412-10 Useful Open Source Security Firewalls for Linux Systems:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.tecmint.com/open-source-security-firewalls-for-linux-systems/" rel="nofollow"&gt;https://www.tecmint.com/open-source-security-firewalls-for-linux-systems/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1413-40 Linux Server Hardening Security Tips:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cyberciti.biz/tips/linux-security.html" rel="nofollow"&gt;https://www.cyberciti.biz/tips/linux-security.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1414-Linux hardening: A 15-step checklist for a secure Linux server :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.computerworld.com/.../linux-hardening-a-15-step-checklist-for-a-secure-linux-server" rel="nofollow"&gt;https://www.computerworld.com/.../linux-hardening-a-15-step-checklist-for-a-secure-linux-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1415-25 Hardening Security Tips for Linux Servers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.tecmint.com/linux-server-hardening-security-tips/" rel="nofollow"&gt;https://www.tecmint.com/linux-server-hardening-security-tips/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1416-How to Harden Unix/Linux Systems &amp;amp; Close Security Gaps:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.beyondtrust.com/blog/entry/harden-unix-linux-systems-close-security-gaps" rel="nofollow"&gt;https://www.beyondtrust.com/blog/entry/harden-unix-linux-systems-close-security-gaps&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1417-34 Linux Server Security Tips &amp;amp; Checklists for Sysadmins:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.process.st/server-security/" rel="nofollow"&gt;https://www.process.st/server-security/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1418-Linux Hardening:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/MichaelBoelen/linux-hardening" rel="nofollow"&gt;https://www.slideshare.net/MichaelBoelen/linux-hardening&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1419-23 Hardening Tips to Secure your Linux Server:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.rootusers.com/23-hardening-tips-to-secure-your-linux-server/" rel="nofollow"&gt;https://www.rootusers.com/23-hardening-tips-to-secure-your-linux-server/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1420-What is the Windows Registry? :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.computerhope.com/jargon/r/registry.htm" rel="nofollow"&gt;https://www.computerhope.com/jargon/r/registry.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1421-Windows Registry, Everything You Need To Know:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gammadyne.com/registry.htm" rel="nofollow"&gt;https://www.gammadyne.com/registry.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1422-Windows Registry Tutorial:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.akadia.com/services/windows_registry_tutorial.html" rel="nofollow"&gt;https://www.akadia.com/services/windows_registry_tutorial.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1423-5 Tools to Scan a Linux Server for Malware and Rootkits:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.tecmint.com/scan-linux-for-malware-and-rootkits/" rel="nofollow"&gt;https://www.tecmint.com/scan-linux-for-malware-and-rootkits/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1424-Subdomain takeover dew to missconfigured project settings for Custom domain .:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/subdomain-takeover-dew-to-missconfigured-project-settings-for-custom-domain-46e90e702969" rel="nofollow"&gt;https://medium.com/bugbountywriteup/subdomain-takeover-dew-to-missconfigured-project-settings-for-custom-domain-46e90e702969&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1425-Massive Subdomains p0wned:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/massive-subdomains-p0wned-80374648336e" rel="nofollow"&gt;https://medium.com/bugbountywriteup/massive-subdomains-p0wned-80374648336e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1426-Subdomain Takeover: Basics:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0xpatrik.com/subdomain-takeover-basics/" rel="nofollow"&gt;https://0xpatrik.com/subdomain-takeover-basics/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1427-Subdomain Takeover: Finding Candidates:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0xpatrik.com/subdomain-takeover-candidates/" rel="nofollow"&gt;https://0xpatrik.com/subdomain-takeover-candidates/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1428-Bugcrowd's Domain &amp;amp; Subdomain Takeover!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bugbountypoc.com/bugcrowds-domain-takeover/" rel="nofollow"&gt;https://bugbountypoc.com/bugcrowds-domain-takeover/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1429-What Are Subdomain Takeovers, How to Test and Avoid Them?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dzone.com/articles/what-are-subdomain-takeovers-how-to-test-and-avoid" rel="nofollow"&gt;https://dzone.com/articles/what-are-subdomain-takeovers-how-to-test-and-avoid&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1430-Finding Candidates for Subdomain Takeovers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jarv.is/notes/finding-candidates-subdomain-takeovers/" rel="nofollow"&gt;https://jarv.is/notes/finding-candidates-subdomain-takeovers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1431-Subdomain takeover of blog.snapchat.com:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackernoon.com/subdomain-takeover-of-blog-snapchat-com-60860de02fe7" rel="nofollow"&gt;https://hackernoon.com/subdomain-takeover-of-blog-snapchat-com-60860de02fe7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1432-Hostile Subdomain takeove:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.detectify.com/tag/hostile-subdomain-takeover/" rel="nofollow"&gt;https://labs.detectify.com/tag/hostile-subdomain-takeover/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1433-Microsoft Account Takeover Vulnerability Affecting 400 Million Users:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.safetydetective.com/blog/microsoft-outlook/" rel="nofollow"&gt;https://www.safetydetective.com/blog/microsoft-outlook/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1434-What is Subdomain Hijack/Takeover Vulnerability? How to Identify? &amp;amp; Exploit It?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.securitybreached.org/2017/10/11/what-is-subdomain-takeover-vulnerability/" rel="nofollow"&gt;https://blog.securitybreached.org/2017/10/11/what-is-subdomain-takeover-vulnerability/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1435-Subdomain takeover detection with AQUATONE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://michenriksen.com/blog/subdomain-takeover-detection-with-aquatone/" rel="nofollow"&gt;https://michenriksen.com/blog/subdomain-takeover-detection-with-aquatone/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1436-A hostile subdomain takeover! – Breaking application security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://evilenigma.blog/2019/03/12/a-hostile-subdomain-takeover/" rel="nofollow"&gt;https://evilenigma.blog/2019/03/12/a-hostile-subdomain-takeover/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1437-Web Development Reading List:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.smashingmagazine.com/2017/03/web-development-reading-list-172/" rel="nofollow"&gt;https://www.smashingmagazine.com/2017/03/web-development-reading-list-172/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1438-CSRF Attack can lead to Stored XSS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/csrf-attack-can-lead-to-stored-xss-f40ba91f1e4f" rel="nofollow"&gt;https://medium.com/bugbountywriteup/csrf-attack-can-lead-to-stored-xss-f40ba91f1e4f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1439-What is Mimikatz: The Beginner's Guide | Varonis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.varonis.com/bog/what-is-mimikatz" rel="nofollow"&gt;https://www.varonis.com/bog/what-is-mimikatz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1440-Preventing Mimikatz Attacks :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/blue-team/preventing-mimikatz-attacks-ed283e7ebdd5" rel="nofollow"&gt;https://medium.com/blue-team/preventing-mimikatz-attacks-ed283e7ebdd5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1441-Mimikatz tutorial: How it hacks Windows passwords, credentials:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://searchsecurity.techtarget.com/.../Mimikatz-tutorial-How-it-hacks-Windows-passwords-credentials" rel="nofollow"&gt;https://searchsecurity.techtarget.com/.../Mimikatz-tutorial-How-it-hacks-Windows-passwords-credentials&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1442-Mimikatz: Walkthrough [Updated 2019]:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/mimikatz-walkthrough/" rel="nofollow"&gt;https://resources.infosecinstitute.com/mimikatz-walkthrough/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1443-Mimikatz -Windows Tutorial for Beginner:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hacknpentest.com/mimikatz-windows-tutorial-beginners-guide-part-1/" rel="nofollow"&gt;https://hacknpentest.com/mimikatz-windows-tutorial-beginners-guide-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1444-Mitigations against Mimikatz Style Attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://isc.sans.edu/forums/diary/Mitigations+against+Mimikatz+Style+Attacks" rel="nofollow"&gt;https://isc.sans.edu/forums/diary/Mitigations+against+Mimikatz+Style+Attacks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1445-Exploring Mimikatz - Part 1 :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.xpnsec.com/exploring-mimikatz-part-1/" rel="nofollow"&gt;https://blog.xpnsec.com/exploring-mimikatz-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1446-Powershell AV Evasion. Running Mimikatz with PowerLine:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jlajara.gitlab.io/posts/2019/01/27/Mimikatz-AV-Evasion.html" rel="nofollow"&gt;https://jlajara.gitlab.io/posts/2019/01/27/Mimikatz-AV-Evasion.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1447-How to Steal Windows Credentials with Mimikatz and Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/mimikatz/" rel="nofollow"&gt;https://www.hackingloops.com/mimikatz/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1448-Retrieving NTLM Hashes without touching LSASS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/2018/03/26/retrieving-ntlm-hashes-without-touching-lsass-the-internal-monologue-attack/" rel="nofollow"&gt;https://www.andreafortuna.org/2018/03/26/retrieving-ntlm-hashes-without-touching-lsass-the-internal-monologue-attack/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1449-From Responder to NT Authority\SYSTEM:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/from-responder-to-nt-authority-system-39abd3593319" rel="nofollow"&gt;https://medium.com/bugbountywriteup/from-responder-to-nt-authority-system-39abd3593319&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1450-Getting Creds via NTLMv2:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0xdf.gitlab.io/2019/01/13/getting-net-ntlm-hases-from-windows.html" rel="nofollow"&gt;https://0xdf.gitlab.io/2019/01/13/getting-net-ntlm-hases-from-windows.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1451-Living off the land: stealing NetNTLM hashes:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.securify.nl/blog/SFY20180501/living-off-the-land_-stealing-netntlm-hashes.html" rel="nofollow"&gt;https://www.securify.nl/blog/SFY20180501/living-off-the-land_-stealing-netntlm-hashes.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1452-(How To) Using Responder to capture passwords on a Windows:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.securityflux.com/?p=303" rel="nofollow"&gt;www.securityflux.com/?p=303&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1453-Pwning with Responder - A Pentester's Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.notsosecure.com/pwning-with-responder-a-pentesters-guide/" rel="nofollow"&gt;https://www.notsosecure.com/pwning-with-responder-a-pentesters-guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1454-LLMNR and NBT-NS Poisoning Using Responder:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.4armed.com/blog/llmnr-nbtns-poisoning-using-responder/" rel="nofollow"&gt;https://www.4armed.com/blog/llmnr-nbtns-poisoning-using-responder/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1455-Responder - Ultimate Guide :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ivoidwarranties.tech/posts/pentesting-tuts/responder/guide/" rel="nofollow"&gt;https://www.ivoidwarranties.tech/posts/pentesting-tuts/responder/guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1456-Responder - CheatSheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ivoidwarranties.tech/posts/pentesting-tuts/responder/cheatsheet/" rel="nofollow"&gt;https://www.ivoidwarranties.tech/posts/pentesting-tuts/responder/cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1457-LM, NTLM, Net-NTLMv2, oh my! :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@petergombos/lm-ntlm-net-ntlmv2-oh-my-a9b235c58ed4" rel="nofollow"&gt;https://medium.com/@petergombos/lm-ntlm-net-ntlmv2-oh-my-a9b235c58ed4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1458-SMB Relay Attack Tutorial:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://intrinium.com/smb-relay-attack-tutorial" rel="nofollow"&gt;https://intrinium.com/smb-relay-attack-tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1459-Cracking NTLMv2 responses captured using responder:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://zone13.io/post/cracking-ntlmv2-responses-captured-using-responder/" rel="nofollow"&gt;https://zone13.io/post/cracking-ntlmv2-responses-captured-using-responder/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1460-Skip Cracking Responder Hashes and Relay Them:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://threat.tevora.com/quick-tip-skip-cracking-responder-hashes-and-replay-them/" rel="nofollow"&gt;https://threat.tevora.com/quick-tip-skip-cracking-responder-hashes-and-replay-them/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1461-Metasploit's First Antivirus Evasion Modules:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.rapid7.com/2018/10/09/introducing-metasploits-first-evasion-module/" rel="nofollow"&gt;https://blog.rapid7.com/2018/10/09/introducing-metasploits-first-evasion-module/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1462-Evading Anti-virus Part 1: Infecting EXEs with Shellter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/evading-anti-virus-shellter/" rel="nofollow"&gt;https://www.hackingloops.com/evading-anti-virus-shellter/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1463-Evading AV with Shellter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.securityartwork.es/2018/11/02/evading-av-with-shellter-i-also-have-sysmon-and-wazuh-i/" rel="nofollow"&gt;https://www.securityartwork.es/2018/11/02/evading-av-with-shellter-i-also-have-sysmon-and-wazuh-i/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1464-Shellter-A Shellcode Injecting Tool :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/shellter-a-shellcode-injecting-tool/" rel="nofollow"&gt;https://www.hackingarticles.in/shellter-a-shellcode-injecting-tool/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1465-Bypassing antivirus programs using SHELLTER:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://myhackstuff.com/shellter-bypassing-antivirus-programs/" rel="nofollow"&gt;https://myhackstuff.com/shellter-bypassing-antivirus-programs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1466-John the Ripper step-by-step tutorials for end-users :&lt;/p&gt;
&lt;p&gt;openwall.info/wiki/john/tutorials&lt;/p&gt;
&lt;p&gt;-1467-Beginners Guide for John the Ripper (Part 1):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/beginner-guide-john-the-ripper-part-1/" rel="nofollow"&gt;https://www.hackingarticles.in/beginner-guide-john-the-ripper-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1468-John the Ripper Basics Tutorial:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ultimatepeter.com/john-the-ripper-basics-tutorial/" rel="nofollow"&gt;https://ultimatepeter.com/john-the-ripper-basics-tutorial/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1469-Crack Windows password with john the ripper:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.securitynewspaper.com/2018/11/27/crack-windows-password-with-john-the-ripper/" rel="nofollow"&gt;https://www.securitynewspaper.com/2018/11/27/crack-windows-password-with-john-the-ripper/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1470-Getting Started Cracking Password Hashes with John the Ripper :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.tunnelsup.com/getting-started-cracking-password-hashes/" rel="nofollow"&gt;https://www.tunnelsup.com/getting-started-cracking-password-hashes/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1471-Shell code exploit with Buffer overflow:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@jain.sm/shell-code-exploit-with-buffer-overflow-8d78cc11f89b" rel="nofollow"&gt;https://medium.com/@jain.sm/shell-code-exploit-with-buffer-overflow-8d78cc11f89b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1472-Shellcoding for Linux and Windows Tutorial :&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.vividmachines.com/shellcode/shellcode.html" rel="nofollow"&gt;www.vividmachines.com/shellcode/shellcode.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1473-Buffer Overflow Practical Examples :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0xrick.github.io/binary-exploitation/bof5/" rel="nofollow"&gt;https://0xrick.github.io/binary-exploitation/bof5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1474-Msfvenom shellcode analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://snowscan.io/msfvenom-shellcode-analysis/" rel="nofollow"&gt;https://snowscan.io/msfvenom-shellcode-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1475-Process Continuation Shellcode:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://azeria-labs.com/process-continuation-shellcode/" rel="nofollow"&gt;https://azeria-labs.com/process-continuation-shellcode/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1476-Dynamic Shellcode Execution:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.countercept.com/blog/dynamic-shellcode-execution/" rel="nofollow"&gt;https://www.countercept.com/blog/dynamic-shellcode-execution/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1477-Tutorials: Writing shellcode to binary files:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fuzzysecurity.com/tutorials/7.html" rel="nofollow"&gt;https://www.fuzzysecurity.com/tutorials/7.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1478-Creating Shellcode for an Egg Hunter :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securitychops.com/2018/05/26/slae-assignment-3-egghunter-shellcode.html" rel="nofollow"&gt;https://securitychops.com/2018/05/26/slae-assignment-3-egghunter-shellcode.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1479-How to: Shellcode to reverse bind a shell with netcat :&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackerfall.com/story/shellcode-to-reverse-bind-a-shell-with-netcat" rel="nofollow"&gt;www.hackerfall.com/story/shellcode-to-reverse-bind-a-shell-with-netcat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1480-Bashing the Bash — Replacing Shell Scripts with Python:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/capital-one-tech/bashing-the-bash-replacing-shell-scripts-with-python-d8d201bc0989" rel="nofollow"&gt;https://medium.com/capital-one-tech/bashing-the-bash-replacing-shell-scripts-with-python-d8d201bc0989&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1481-How to See All Devices on Your Network With nmap on Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.howtogeek.com/.../how-to-see-all-devices-on-your-network-with-nmap-on-linux" rel="nofollow"&gt;https://www.howtogeek.com/.../how-to-see-all-devices-on-your-network-with-nmap-on-linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1482-A Complete Guide to Nmap:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.edureka.co/blog/nmap-tutorial/" rel="nofollow"&gt;https://www.edureka.co/blog/nmap-tutorial/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1483-Nmap from Beginner to Advanced :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/nmap/" rel="nofollow"&gt;https://resources.infosecinstitute.com/nmap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1484-Using Wireshark: Identifying Hosts and Users:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://unit42.paloaltonetworks.com/using-wireshark-identifying-hosts-and-users/" rel="nofollow"&gt;https://unit42.paloaltonetworks.com/using-wireshark-identifying-hosts-and-users/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1485-tshark tutorial and filter examples:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackertarget.com/tshark-tutorial-and-filter-examples/" rel="nofollow"&gt;https://hackertarget.com/tshark-tutorial-and-filter-examples/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1486-Fuzz Testing(Fuzzing) Tutorial: What is, Types, Tools &amp;amp; Example:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.guru99.com/fuzz-testing.html" rel="nofollow"&gt;https://www.guru99.com/fuzz-testing.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1487-Tutorial: Dumb Fuzzing - Peach Community Edition:&lt;/p&gt;
&lt;p&gt;community.peachfuzzer.com/v3/TutorialDumbFuzzing.html&lt;/p&gt;
&lt;p&gt;-1488-HowTo: ExploitDev Fuzzing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hansesecure.de/2018/03/howto-exploitdev-fuzzing/" rel="nofollow"&gt;https://hansesecure.de/2018/03/howto-exploitdev-fuzzing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1489-Fuzzing with Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.corelan.be/?s=fuzzing" rel="nofollow"&gt;https://www.corelan.be/?s=fuzzing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1490-Fuzzing – how to find bugs automagically using AFL:&lt;/p&gt;
&lt;p&gt;9livesdata.com/fuzzing-how-to-find-bugs-automagically-using-afl/&lt;/p&gt;
&lt;p&gt;-1491-Introduction to File Format Fuzzing &amp;amp; Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@DanielC7/introduction-to-file-format-fuzzing-exploitation-922143ab2ab3" rel="nofollow"&gt;https://medium.com/@DanielC7/introduction-to-file-format-fuzzing-exploitation-922143ab2ab3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1492-0x3 Python Tutorial: Fuzzer:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.primalsecurity.net/0x3-python-tutorial-fuzzer/" rel="nofollow"&gt;https://www.primalsecurity.net/0x3-python-tutorial-fuzzer/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1493-Hunting For Bugs With AFL:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://research.aurainfosec.io/hunting-for-bugs-101/" rel="nofollow"&gt;https://research.aurainfosec.io/hunting-for-bugs-101/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1494-Fuzzing: The New Unit Testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/DmitryVyukov/fuzzing-the-new-unit-testing" rel="nofollow"&gt;https://www.slideshare.net/DmitryVyukov/fuzzing-the-new-unit-testing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1495-Fuzzing With Peach Framework:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.terminatio.org/fuzzing-peach-framework-full-tutorial-download/" rel="nofollow"&gt;https://www.terminatio.org/fuzzing-peach-framework-full-tutorial-download/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1496-How we found a tcpdump vulnerability using cloud fuzzing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.softscheck.com/en/identifying-security-vulnerabilities-with-cloud-fuzzing/" rel="nofollow"&gt;https://www.softscheck.com/en/identifying-security-vulnerabilities-with-cloud-fuzzing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1497-Finding a Fuzzer: Peach Fuzzer vs. Sulley:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@jtpereyda/finding-a-fuzzer-peach-fuzzer-vs-sulley-1fcd6baebfd4" rel="nofollow"&gt;https://medium.com/@jtpereyda/finding-a-fuzzer-peach-fuzzer-vs-sulley-1fcd6baebfd4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1498-Android malware analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/rossja/android-malware-analysis-71109948" rel="nofollow"&gt;https://www.slideshare.net/rossja/android-malware-analysis-71109948&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1499-15+ Malware Analysis Tools &amp;amp; Techniques :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.template.net/business/tools/malware-analysis/" rel="nofollow"&gt;https://www.template.net/business/tools/malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1500-30 Online Malware Analysis Sandboxes / Static Analyzers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@su13ym4n/15-online-sandboxes-for-malware-analysis-f8885ecb8a35" rel="nofollow"&gt;https://medium.com/@su13ym4n/15-online-sandboxes-for-malware-analysis-f8885ecb8a35&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1501-Linux Command Line Forensics and Intrusion Detection Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sandflysecurity.com/blog/compromised-linux-cheat-sheet/" rel="nofollow"&gt;https://www.sandflysecurity.com/blog/compromised-linux-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1502-Cheat Sheets - SANS Digital Forensics:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://digital-forensics.sans.org/community/cheat-sheets" rel="nofollow"&gt;https://digital-forensics.sans.org/community/cheat-sheets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1503-Breach detection with Linux filesystem forensics:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opensource.com/article/18/4/linux-filesystem-forensics" rel="nofollow"&gt;https://opensource.com/article/18/4/linux-filesystem-forensics&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1504-Digital Forensics Cheat Sheets Collection :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://neverendingsecurity.wordpress.com/digital-forensics-cheat-sheets-collection/" rel="nofollow"&gt;https://neverendingsecurity.wordpress.com/digital-forensics-cheat-sheets-collection/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1505-Security Incident Survey Cheat Sheet for Server Administrators:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://zeltser.com/security-incident-survey-cheat-sheet/" rel="nofollow"&gt;https://zeltser.com/security-incident-survey-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1506-Digital forensics: A cheat sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.techrepublic.com/article/digital-forensics-the-smart-persons-guide/" rel="nofollow"&gt;https://www.techrepublic.com/article/digital-forensics-the-smart-persons-guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1507-Windows Registry Forensics using 'RegRipper' Command-Line on Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.pinterest.cl/pin/794815034207804059/" rel="nofollow"&gt;https://www.pinterest.cl/pin/794815034207804059/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1508-Windows IR Live Forensics Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cheatography.com/koriley/cheat-sheets/windows-ir-live-forensics/" rel="nofollow"&gt;https://www.cheatography.com/koriley/cheat-sheets/windows-ir-live-forensics/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1509-10 Best Known Forensics Tools That Works on Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://linoxide.com/linux-how-to/forensics-tools-linux/" rel="nofollow"&gt;https://linoxide.com/linux-how-to/forensics-tools-linux/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1510-Top 20 Free Digital Forensic Investigation Tools for SysAdmins:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://techtalk.gfi.com/top-20-free-digital-forensic-investigation-tools-for-sysadmins/" rel="nofollow"&gt;https://techtalk.gfi.com/top-20-free-digital-forensic-investigation-tools-for-sysadmins/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1511-Windows Volatile Memory Acquisition &amp;amp; Forensics 2018:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@lucideus/windows-volatile-memory-acquisition-forensics-2018-lucideus-forensics-3f297d0e5bfd" rel="nofollow"&gt;https://medium.com/@lucideus/windows-volatile-memory-acquisition-forensics-2018-lucideus-forensics-3f297d0e5bfd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1512-PowerShell Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.digitalforensics.com/blog/powershell-cheat-sheet-2/" rel="nofollow"&gt;https://www.digitalforensics.com/blog/powershell-cheat-sheet-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1513-Forensic Artifacts: evidences of program execution on Windows systems:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/forensic-artifacts-evidences-of-program-execution-on-windows-systems" rel="nofollow"&gt;https://www.andreafortuna.org/forensic-artifacts-evidences-of-program-execution-on-windows-systems&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1514-How to install a CPU?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.computer-hardware-explained.com/how-to-install-a-cpu.html" rel="nofollow"&gt;https://www.computer-hardware-explained.com/how-to-install-a-cpu.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1515-How To Upgrade and Install a New CPU or Motherboard:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.howtogeek.com/.../how-to-upgrade-and-install-a-new-cpu-or-motherboard-or-both" rel="nofollow"&gt;https://www.howtogeek.com/.../how-to-upgrade-and-install-a-new-cpu-or-motherboard-or-both&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1516-Installing and Troubleshooting CPUs:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.pearsonitcertification.com/articles/article.aspx?p=1681054&amp;amp;seqNum=2" rel="nofollow"&gt;www.pearsonitcertification.com/articles/article.aspx?p=1681054&amp;amp;seqNum=2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1517-15 FREE Pastebin Alternatives You Can Use Right Away:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.rootreport.com/pastebin-alternatives/" rel="nofollow"&gt;https://www.rootreport.com/pastebin-alternatives/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1518-Basic computer troubleshooting steps:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.computerhope.com/basic.htm" rel="nofollow"&gt;https://www.computerhope.com/basic.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1519-18 Best Websites to Learn Computer Troubleshooting and Tech support:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://transcosmos.co.uk/best-websites-to-learn-computer-troubleshooting-and-tech-support" rel="nofollow"&gt;http://transcosmos.co.uk/best-websites-to-learn-computer-troubleshooting-and-tech-support&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1520-Post Exploitation with PowerShell Empire 2.3.0 :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.yeahhub.com/post-exploitation-powershell-empire-2-3-0-detailed-tutorial/" rel="nofollow"&gt;https://www.yeahhub.com/post-exploitation-powershell-empire-2-3-0-detailed-tutorial/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1521-Windows Persistence with PowerShell Empire :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/windows-persistence-with-powershell-empire/" rel="nofollow"&gt;https://www.hackingarticles.in/windows-persistence-with-powershell-empire/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1522-powershell-empire-tutorials-empire-to-meterpreter-shellcode-injection-ssl-tutorial:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.dudeworks.com/powershell-empire-tutorials-empire-to-meterpreter-shellcode-injection-ssl-tutorial" rel="nofollow"&gt;https://www.dudeworks.com/powershell-empire-tutorials-empire-to-meterpreter-shellcode-injection-ssl-tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1523-Bypassing Anti-Virtus &amp;amp; Hacking Windows 10 Using Empire :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://zsecurity.org/bypassing-anti-virtus-hacking-windows-10-using-empire/" rel="nofollow"&gt;https://zsecurity.org/bypassing-anti-virtus-hacking-windows-10-using-empire/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1524-Hacking with Empire – PowerShell Post-Exploitation Agent :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.prodefence.org/hacking-with-empire-powershell-post-exploitation-agent/" rel="nofollow"&gt;https://www.prodefence.org/hacking-with-empire-powershell-post-exploitation-agent/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1525-Hacking Windows Active Directory Full guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.kalitut.com/hacking-windows-active-directory-full.html" rel="nofollow"&gt;www.kalitut.com/hacking-windows-active-directory-full.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1526-PowerShell Empire for Post-Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/powershell-empire/" rel="nofollow"&gt;https://www.hackingloops.com/powershell-empire/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1527-Generate A One-Liner – Welcome To LinuxPhilosophy!:&lt;/p&gt;
&lt;p&gt;linuxphilosophy.com/rtfm/more/empire/generate-a-one-liner/&lt;/p&gt;
&lt;p&gt;-1528-CrackMapExec - Ultimate Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ivoidwarranties.tech/posts/pentesting-tuts/cme/crackmapexec/" rel="nofollow"&gt;https://www.ivoidwarranties.tech/posts/pentesting-tuts/cme/crackmapexec/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1529-PowerShell Logging and Security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.secjuice.com/enterprise-powershell-protection-logging/" rel="nofollow"&gt;https://www.secjuice.com/enterprise-powershell-protection-logging/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1530-Create your own FUD Backdoors with Empire:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.extremehacking.org/blog/2016/08/25/create-fud-backdoors-empire/" rel="nofollow"&gt;http://blog.extremehacking.org/blog/2016/08/25/create-fud-backdoors-empire/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1531-PowerShell Empire Complete Tutorial For Beginners:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://video.hacking.reviews/2019/06/powershell-empire-complete-tutorial-for.html" rel="nofollow"&gt;https://video.hacking.reviews/2019/06/powershell-empire-complete-tutorial-for.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1532-Bash Bunny: Windows Remote Shell using Metasploit &amp;amp; PowerShell:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cyberarms.wordpress.com/.../bash-bunny-windows-remote-shell-using-metasploit-powershell" rel="nofollow"&gt;https://cyberarms.wordpress.com/.../bash-bunny-windows-remote-shell-using-metasploit-powershell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1533-Kerberoasting - Stealing Service Account Credentials:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.scip.ch/en/?labs.20181011" rel="nofollow"&gt;https://www.scip.ch/en/?labs.20181011&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1534-Automating Mimikatz with Empire and DeathStar :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.stealthbits.com/automating-mimikatz-with-empire-and-deathstar/" rel="nofollow"&gt;https://blog.stealthbits.com/automating-mimikatz-with-empire-and-deathstar/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1535-Windows oneliners to get shell :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ironhackers.es/en/cheatsheet/comandos-en-windows-para-obtener-shell/" rel="nofollow"&gt;https://ironhackers.es/en/cheatsheet/comandos-en-windows-para-obtener-shell/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1536-ObfuscatedEmpire :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cobbr.io/ObfuscatedEmpire.html" rel="nofollow"&gt;https://cobbr.io/ObfuscatedEmpire.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1537-Pentesting with PowerShell in six steps:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://periciacomputacional.com/pentesting-with-powershell-in-six-steps/" rel="nofollow"&gt;https://periciacomputacional.com/pentesting-with-powershell-in-six-steps/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1538-Using Credentials to Own Windows Boxes - Part 3 (WMI and WinRM):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-3-wmi-and-winrm" rel="nofollow"&gt;https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-3-wmi-and-winrm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1539-PowerShell Security Best Practices:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.digitalshadows.com/blog-and-research/powershell-security-best-practices/" rel="nofollow"&gt;https://www.digitalshadows.com/blog-and-research/powershell-security-best-practices/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1540-You can detect PowerShell attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/Hackerhurricane/you-can-detect-powershell-attacks" rel="nofollow"&gt;https://www.slideshare.net/Hackerhurricane/you-can-detect-powershell-attacks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1541-Detecting and Preventing PowerShell Attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.eventsentry.com/.../powershell-pw3rh311-detecting-preventing-powershell-attacks" rel="nofollow"&gt;https://www.eventsentry.com/.../powershell-pw3rh311-detecting-preventing-powershell-attacks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1542-Detecting Offensive PowerShell Attack Tools – Active Directory Security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://adsecurity.org/?p=2604" rel="nofollow"&gt;https://adsecurity.org/?p=2604&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1543-An Internal Pentest Audit Against Active Directory:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/46019" rel="nofollow"&gt;https://www.exploit-db.com/docs/46019&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1544-A complete Active Directory Penetration Testing Checklist :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/active-directory-penetration-testing-checklist/" rel="nofollow"&gt;https://gbhackers.com/active-directory-penetration-testing-checklist/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1545-Active Directory | Penetration Testing Lab:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/tag/active-directory/" rel="nofollow"&gt;https://pentestlab.blog/tag/active-directory/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1546-Building and Attacking an Active Directory lab with PowerShell :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://1337red.wordpress.com/building-and-attacking-an-active-directory-lab-with-powershell" rel="nofollow"&gt;https://1337red.wordpress.com/building-and-attacking-an-active-directory-lab-with-powershell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1547-Penetration Testing in Windows Server Active Directory using Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/penetration-testing-windows-server-active-directory-using-metasploit-part-1" rel="nofollow"&gt;https://www.hackingarticles.in/penetration-testing-windows-server-active-directory-using-metasploit-part-1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1548-Red Team Penetration Testing – Going All the Way (Part 2 of 3) :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.anitian.com/red-team-testing-going-all-the-way-part2/" rel="nofollow"&gt;https://www.anitian.com/red-team-testing-going-all-the-way-part2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1549-Penetration Testing Active Directory, Part II:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.jishuwen.com/d/2Mtq" rel="nofollow"&gt;https://www.jishuwen.com/d/2Mtq&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1550-Gaining Domain Admin from Outside Active Directory:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://markitzeroday.com/pass-the-hash/crack-map-exec/2018/03/04/da-from-outside-the-domain.html" rel="nofollow"&gt;https://markitzeroday.com/pass-the-hash/crack-map-exec/2018/03/04/da-from-outside-the-domain.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1551-Post Exploitation Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0xsecurity.com/blog/some-hacking-techniques/post-exploitation-cheat-sheet" rel="nofollow"&gt;https://0xsecurity.com/blog/some-hacking-techniques/post-exploitation-cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1552-Windows post-exploitation :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/emilyanncr/Windows-Post-Exploitation"&gt;https://github.com/emilyanncr/Windows-Post-Exploitation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1553-OSCP - Windows Post Exploitation :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackingandsecurity.blogspot.com/2017/9/oscp-windows-post-exploitation.html" rel="nofollow"&gt;https://hackingandsecurity.blogspot.com/2017/9/oscp-windows-post-exploitation.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1554-Windows Post-Exploitation Command List:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pentest.tonyng.net/windows-post-exploitation-command-list/" rel="nofollow"&gt;http://pentest.tonyng.net/windows-post-exploitation-command-list/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1555-Windows Post-Exploitation Command List:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://tim3warri0r.blogspot.com/2012/09/windows-post-exploitation-command-list.html" rel="nofollow"&gt;http://tim3warri0r.blogspot.com/2012/09/windows-post-exploitation-command-list.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1556-Linux Post-Exploitation · OSCP - Useful Resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://backdoorshell.gitbooks.io/oscp-useful-links/content/linux-post-exploitation.html" rel="nofollow"&gt;https://backdoorshell.gitbooks.io/oscp-useful-links/content/linux-post-exploitation.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1557-Pentesting Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://anhtai.me/pentesting-cheatsheet/" rel="nofollow"&gt;https://anhtai.me/pentesting-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1558-Pentesting Cheatsheets - Red Teaming Experiments:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ired.team/offensive-security-experiments/offensive-security-cheetsheets" rel="nofollow"&gt;https://ired.team/offensive-security-experiments/offensive-security-cheetsheets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1559-OSCP Goldmine:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://0xc0ffee.io/blog/OSCP-Goldmine" rel="nofollow"&gt;http://0xc0ffee.io/blog/OSCP-Goldmine&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1560-Linux Post Exploitation Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://red-orbita.com/?p=8455" rel="nofollow"&gt;http://red-orbita.com/?p=8455&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1562-OSCP useful resources and tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://acknak.fr/en/articles/oscp-tools/" rel="nofollow"&gt;https://acknak.fr/en/articles/oscp-tools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1563-Windows Post-Exploitation Command List :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://es.scribd.com/document/100182787/Windows-Post-Exploitation-Command-List" rel="nofollow"&gt;https://es.scribd.com/document/100182787/Windows-Post-Exploitation-Command-List&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1564-Metasploit Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentesttools.net/metasploit-cheat-sheet/" rel="nofollow"&gt;https://pentesttools.net/metasploit-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1565-Windows Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://awansec.com/windows-priv-esc.html" rel="nofollow"&gt;https://awansec.com/windows-priv-esc.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1566-Linux Unix Bsd Post Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://attackerkb.com/Unix/LinuxUnixBSD_Post_Exploitation" rel="nofollow"&gt;https://attackerkb.com/Unix/LinuxUnixBSD_Post_Exploitation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1567-Privilege Escalation &amp;amp; Post-Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://movaxbx.ru/2018/09/16/privilege-escalation-post-exploitation/" rel="nofollow"&gt;https://movaxbx.ru/2018/09/16/privilege-escalation-post-exploitation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1568-Metasploit Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://vk-intel.org/2016/12/28/metasploit-cheat-sheet/" rel="nofollow"&gt;https://vk-intel.org/2016/12/28/metasploit-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1569-Metasploit Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nitesculucian.github.io/2018/12/01/metasploit-cheat-sheet/" rel="nofollow"&gt;https://nitesculucian.github.io/2018/12/01/metasploit-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1570-Privilege escalation: Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://vulp3cula.gitbook.io/hackers-grimoire/post-exploitation/privesc-linux" rel="nofollow"&gt;https://vulp3cula.gitbook.io/hackers-grimoire/post-exploitation/privesc-linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1571-Cheat Sheets — Amethyst Security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ssddcyber.com/cheatsheets" rel="nofollow"&gt;https://www.ssddcyber.com/cheatsheets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1572-Responder - CheatSheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ivoidwarranties.tech/posts/pentesting-tuts/responder/cheatsheet/" rel="nofollow"&gt;https://www.ivoidwarranties.tech/posts/pentesting-tuts/responder/cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1573-Cheatsheets:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://h4ck.co/wp-content/uploads/2018/06/cheatsheet.txt" rel="nofollow"&gt;https://h4ck.co/wp-content/uploads/2018/06/cheatsheet.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1574-Are you ready for OSCP?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hacktoday.io/t/are-you-ready-for-oscp/59" rel="nofollow"&gt;https://www.hacktoday.io/t/are-you-ready-for-oscp/59&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1575-Windows Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.p64cyber.com/windows-privilege-escalation/" rel="nofollow"&gt;https://labs.p64cyber.com/windows-privilege-escalation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1576-A guide to Linux Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://payatu.com/guide-linux-privilege-escalation/" rel="nofollow"&gt;https://payatu.com/guide-linux-privilege-escalation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1577-Windows Post-Exploitation-Cheat-Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pentestpanther.com/2019/07/01/windows-post-exploitation-cheat-sheet/" rel="nofollow"&gt;http://pentestpanther.com/2019/07/01/windows-post-exploitation-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1578-Windows Privilege Escalation (privesc) Resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.willchatham.com/security/windows-privilege-escalation-privesc-resources/" rel="nofollow"&gt;https://www.willchatham.com/security/windows-privilege-escalation-privesc-resources/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1579-Dissecting Mobile Malware:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://slideplayer.com/slide/3434519/" rel="nofollow"&gt;https://slideplayer.com/slide/3434519/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1580-Android malware analysis with Radare: Dissecting the Triada Trojan:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.nowsecure.com/blog/2016/11/21/android-malware-analysis-radare-triad/" rel="nofollow"&gt;www.nowsecure.com/blog/2016/11/21/android-malware-analysis-radare-triad/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1581-Dissecting Mobile Native Code Packers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.zimperium.com/dissecting-mobile-native-code-packers-case-study/" rel="nofollow"&gt;https://blog.zimperium.com/dissecting-mobile-native-code-packers-case-study/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1582-What is Mobile Malware? Defined, Explained, and Explored:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.forcepoint.com/cyber-edu/mobile-malware" rel="nofollow"&gt;https://www.forcepoint.com/cyber-edu/mobile-malware&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1583-Malware Development — Professionalization of an Ancient Art:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/scip/malware-development-professionalization-of-an-ancient-art-4dfb3f10f34b" rel="nofollow"&gt;https://medium.com/scip/malware-development-professionalization-of-an-ancient-art-4dfb3f10f34b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1584-Weaponizing Malware Code Sharing with Cythereal MAGIC:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@arun_73782/cythereal-magic-e68b0c943b1d" rel="nofollow"&gt;https://medium.com/@arun_73782/cythereal-magic-e68b0c943b1d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1585-Web App Pentest Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@muratkaraoz/web-app-pentest-cheat-sheet-c17394af773" rel="nofollow"&gt;https://medium.com/@muratkaraoz/web-app-pentest-cheat-sheet-c17394af773&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1586-The USB Threat is [Still] Real — Pentest Tools for Sysadmins, Continued:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@jeremy.trinka/the-usb-threat-is-still-real-pentest-tools-for-sysadmins-continued-88560af447bf" rel="nofollow"&gt;https://medium.com/@jeremy.trinka/the-usb-threat-is-still-real-pentest-tools-for-sysadmins-continued-88560af447bf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1587-How to Run An External Pentest:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@_jayhill/how-to-run-an-external-pentest-dd76ed14bb6a" rel="nofollow"&gt;https://medium.com/@_jayhill/how-to-run-an-external-pentest-dd76ed14bb6a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1588-Advice for new pentesters:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@PentesterLab/advice-for-new-pentesters-a5f7d75a3aea" rel="nofollow"&gt;https://medium.com/@PentesterLab/advice-for-new-pentesters-a5f7d75a3aea&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1589-NodeJS Application Pentest Tips:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/nodejs-application-pentest-tips-improper-uri-handling-in-express-390b3a07cb3e" rel="nofollow"&gt;https://medium.com/bugbountywriteup/nodejs-application-pentest-tips-improper-uri-handling-in-express-390b3a07cb3e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1590-How to combine Pentesting with Automation to improve your security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/how-to-combine-pentest-with-automation-to-improve-your-security" rel="nofollow"&gt;https://medium.com/how-to-combine-pentest-with-automation-to-improve-your-security&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1591-Day 79: FTP Pentest Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@int0x33/day-79-ftp-pentest-guide-5106967bd50a" rel="nofollow"&gt;https://medium.com/@int0x33/day-79-ftp-pentest-guide-5106967bd50a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1592-SigintOS: A Wireless Pentest Distro Review:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@tomac/sigintos-a-wireless-pentest-distro-review-a7ea93ee8f8b" rel="nofollow"&gt;https://medium.com/@tomac/sigintos-a-wireless-pentest-distro-review-a7ea93ee8f8b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1593-Conducting an IoT Pentest :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/6fa573ac6668?source=user_profile" rel="nofollow"&gt;https://medium.com/p/6fa573ac6668?source=user_profile&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-1594-Efficient way to pentest Android Chat Applications:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/android-tamer/efficient-way-to-pentest-android-chat-applications-46221d8a040f" rel="nofollow"&gt;https://medium.com/android-tamer/efficient-way-to-pentest-android-chat-applications-46221d8a040f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1595-APT2 - Automated PenTest Toolkit :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/media/f1cf43d92a17d5c4c6e2e572133bfeed/href" rel="nofollow"&gt;https://medium.com/media/f1cf43d92a17d5c4c6e2e572133bfeed/href&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1596-Pentest Tools and Distros:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/hacker-toolbelt/pentest-tools-and-distros-9d738d83f82d" rel="nofollow"&gt;https://medium.com/hacker-toolbelt/pentest-tools-and-distros-9d738d83f82d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1597-Keeping notes during a pentest/security assessment/code review:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.pentesterlab.com/keeping-notes-during-a-pentest-security-assessment-code-review-7e6db8091a66?gi=4c290731e24b" rel="nofollow"&gt;https://blog.pentesterlab.com/keeping-notes-during-a-pentest-security-assessment-code-review-7e6db8091a66?gi=4c290731e24b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1598-An intro to pentesting an Android phone:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@tnvo/an-intro-to-pentesting-an-android-phone-464ec4860f39" rel="nofollow"&gt;https://medium.com/@tnvo/an-intro-to-pentesting-an-android-phone-464ec4860f39&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1599-The Penetration Testing Report:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@mtrdesign/the-penetration-testing-report-38a0a0b25cf2" rel="nofollow"&gt;https://medium.com/@mtrdesign/the-penetration-testing-report-38a0a0b25cf2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1600-VA vs Pentest:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@play.threepetsirikul/va-vs-pentest-cybersecurity-2a17250d5e03" rel="nofollow"&gt;https://medium.com/@play.threepetsirikul/va-vs-pentest-cybersecurity-2a17250d5e03&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1601-Pentest: Hacking WPA2 WiFi using Aircrack on Kali Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@digitalmunition/pentest-hacking-wpa2-wifi-using-aircrack-on-kali-linux-99519fee946f" rel="nofollow"&gt;https://medium.com/@digitalmunition/pentest-hacking-wpa2-wifi-using-aircrack-on-kali-linux-99519fee946f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1602-Pentesting Ethereum dApps:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@brandonarvanaghi/pentesting-ethereum-dapps-2a84c8dfee19" rel="nofollow"&gt;https://medium.com/@brandonarvanaghi/pentesting-ethereum-dapps-2a84c8dfee19&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1603-Android pentest lab in a nutshell :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@dortz/android-pentest-lab-in-a-nutshell-ee60be8638d3" rel="nofollow"&gt;https://medium.com/@dortz/android-pentest-lab-in-a-nutshell-ee60be8638d3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1604-Pentest Magazine: Web Scraping with Python :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@heavenraiza/web-scraping-with-python-170145fd90d3" rel="nofollow"&gt;https://medium.com/@heavenraiza/web-scraping-with-python-170145fd90d3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1605-Pentesting iOS apps without jailbreak:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/securing/pentesting-ios-apps-without-jailbreak-91809d23f64e" rel="nofollow"&gt;https://medium.com/securing/pentesting-ios-apps-without-jailbreak-91809d23f64e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1606-OSCP/Pen Testing Resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@sdgeek/oscp-pen-testing-resources-271e9e570d45" rel="nofollow"&gt;https://medium.com/@sdgeek/oscp-pen-testing-resources-271e9e570d45&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1607-Web Application Security &amp;amp; Bug Bounty (Methodology, Reconnaissance, Vulnerabilities, Reporting):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.usejournal.com/web-application-security-bug-bounty-methodology-reconnaissance-vulnerabilities-reporting-635073cddcf2?gi=4a578db171dc" rel="nofollow"&gt;https://blog.usejournal.com/web-application-security-bug-bounty-methodology-reconnaissance-vulnerabilities-reporting-635073cddcf2?gi=4a578db171dc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1608-Local File Inclusion (LFI) — Web Application Penetration Testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@Aptive/local-file-inclusion-lfi-web-application-penetration-testing-cc9dc8dd3601" rel="nofollow"&gt;https://medium.com/@Aptive/local-file-inclusion-lfi-web-application-penetration-testing-cc9dc8dd3601&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1609-Local File Inclusion (Basic):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@kamransaifullah786/local-file-inclusion-basic-242669a7af3" rel="nofollow"&gt;https://medium.com/@kamransaifullah786/local-file-inclusion-basic-242669a7af3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1610-PHP File Inclusion Vulnerability:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.immuniweb.com/vulnerability/php-file-inclusion.html" rel="nofollow"&gt;https://www.immuniweb.com/vulnerability/php-file-inclusion.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1611-Local File Inclusion:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://teambi0s.gitlab.io/bi0s-wiki/web/lfi/" rel="nofollow"&gt;https://teambi0s.gitlab.io/bi0s-wiki/web/lfi/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1612-Web Application Penetration Testing: Local File Inclusion:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hakin9.org/web-application-penetration-testing-local-file-inclusion-lfi-testing/" rel="nofollow"&gt;https://hakin9.org/web-application-penetration-testing-local-file-inclusion-lfi-testing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1613-From Local File Inclusion to Code Execution :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/local-file-inclusion-code-execution/" rel="nofollow"&gt;https://resources.infosecinstitute.com/local-file-inclusion-code-execution/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1614-RFI / LFI:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://security.radware.com/ddos-knowledge-center/DDoSPedia/rfi-lfi/" rel="nofollow"&gt;https://security.radware.com/ddos-knowledge-center/DDoSPedia/rfi-lfi/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1615-From Local File Inclusion to Remote Code Execution - Part 2:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outpost24.com/blog/from-local-file-inclusion-to-remote-code-execution-part-2" rel="nofollow"&gt;https://outpost24.com/blog/from-local-file-inclusion-to-remote-code-execution-part-2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1616-Local File Inclusion:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://xapax.gitbooks.io/security/content/local_file_inclusion.html" rel="nofollow"&gt;https://xapax.gitbooks.io/security/content/local_file_inclusion.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1617-Beginner Guide to File Inclusion Attack (LFI/RFI) :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/beginner-guide-file-inclusion-attack-lfirfi/" rel="nofollow"&gt;https://www.hackingarticles.in/beginner-guide-file-inclusion-attack-lfirfi/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1618-LFI / RFI:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://secf00tprint.github.io/blog/payload-tester/lfirfi/en" rel="nofollow"&gt;https://secf00tprint.github.io/blog/payload-tester/lfirfi/en&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1619-LFI and RFI Attacks - All You Need to Know:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.getastra.com/blog/your-guide-to-defending-against-lfi-and-rfi-attacks/" rel="nofollow"&gt;https://www.getastra.com/blog/your-guide-to-defending-against-lfi-and-rfi-attacks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1620-Log Poisoning - LFI to RCE :&lt;/p&gt;
&lt;p&gt;&lt;a href="http://liberty-shell.com/sec/2018/05/19/poisoning/" rel="nofollow"&gt;http://liberty-shell.com/sec/2018/05/19/poisoning/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1621-LFI:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/cyber-punk/lfi-63050678" rel="nofollow"&gt;https://www.slideshare.net/cyber-punk/lfi-63050678&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1622-Hand Guide To Local File Inclusion(LFI):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.securityidiots.com/Web-Pentest/LFI/guide-to-lfi.html" rel="nofollow"&gt;www.securityidiots.com/Web-Pentest/LFI/guide-to-lfi.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1623-Local File Inclusion (LFI) - Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ironhackers.es/herramientas/lfi-cheat-sheet/" rel="nofollow"&gt;https://ironhackers.es/herramientas/lfi-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1624-Web Application Penetration Testing Local File Inclusion (LFI):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cnblogs.com/Primzahl/p/6258149.html" rel="nofollow"&gt;https://www.cnblogs.com/Primzahl/p/6258149.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1625-File Inclusion Vulnerability Prevention:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.pivotpointsecurity.com/blog/file-inclusion-vulnerabilities/" rel="nofollow"&gt;https://www.pivotpointsecurity.com/blog/file-inclusion-vulnerabilities/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1626-The Most In-depth Hacker's Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://books.google.com/books?isbn=1329727681" rel="nofollow"&gt;https://books.google.com/books?isbn=1329727681&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1627-Hacking Essentials: The Beginner's Guide To Ethical Hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://books.google.com/books?id=e6CHDwAAQBAJ" rel="nofollow"&gt;https://books.google.com/books?id=e6CHDwAAQBAJ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1628-Web App Hacking, Part 11: Local File Inclusion:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackers-arise.com/.../Web-App-Hacking-Part-11-Local-File-Inclusion-LFI" rel="nofollow"&gt;https://www.hackers-arise.com/.../Web-App-Hacking-Part-11-Local-File-Inclusion-LFI&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1629-Local and remote file inclusion :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://vulp3cula.gitbook.io/hackers-grimoire/exploitation/web-application/lfi-rfi" rel="nofollow"&gt;https://vulp3cula.gitbook.io/hackers-grimoire/exploitation/web-application/lfi-rfi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1630-Upgrade from LFI to RCE via PHP Sessions :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.rcesecurity.com/2017/08/from-lfi-to-rce-via-php-sessions/" rel="nofollow"&gt;https://www.rcesecurity.com/2017/08/from-lfi-to-rce-via-php-sessions/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1631-CVV #1: Local File Inclusion:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/cvv-1-local-file-inclusion-ebc48e0e479a" rel="nofollow"&gt;https://medium.com/bugbountywriteup/cvv-1-local-file-inclusion-ebc48e0e479a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1632-(PDF) Cross Site Scripting (XSS) in Action:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.researchgate.net/publication/241757130_Cross_Site_Scripting_XSS_in_Action" rel="nofollow"&gt;https://www.researchgate.net/publication/241757130_Cross_Site_Scripting_XSS_in_Action&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1633-XSS exploitation part 1:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.securityidiots.com/Web-Pentest/XSS/xss-exploitation-series-part-1.html" rel="nofollow"&gt;www.securityidiots.com/Web-Pentest/XSS/xss-exploitation-series-part-1.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1634-Weaponizing self-xss:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://silentbreaksecurity.com/weaponizing-self-xss/" rel="nofollow"&gt;https://silentbreaksecurity.com/weaponizing-self-xss/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1635-Cookie Tracking and Stealing using Cross-Site Scripting:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/cookie-tracking-stealing-using-cross-site-scripting/" rel="nofollow"&gt;https://www.geeksforgeeks.org/cookie-tracking-stealing-using-cross-site-scripting/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1636-Defense against the Black Arts:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://books.google.com/books?isbn=1439821224" rel="nofollow"&gt;https://books.google.com/books?isbn=1439821224&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1637-CSRF Attacks: Anatomy, Prevention, and XSRF Tokens:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.acunetix.com/websitesecurity/csrf-attacks/" rel="nofollow"&gt;https://www.acunetix.com/websitesecurity/csrf-attacks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1638-Bypassing CSRF protection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.bugbountynotes.com/training/tutorial?id=5" rel="nofollow"&gt;https://www.bugbountynotes.com/training/tutorial?id=5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1639-Stealing CSRF tokens with XSS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://digi.ninja/blog/xss_steal_csrf_token.php" rel="nofollow"&gt;https://digi.ninja/blog/xss_steal_csrf_token.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1640-Same Origin Policy and ways to Bypass:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@minosagap/same-origin-policy-and-ways-to-bypass-250effdc4a12" rel="nofollow"&gt;https://medium.com/@minosagap/same-origin-policy-and-ways-to-bypass-250effdc4a12&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1641-Bypassing Same Origin Policy :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/bypassing-same-origin-policy-sop/" rel="nofollow"&gt;https://resources.infosecinstitute.com/bypassing-same-origin-policy-sop/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1642-Client-Side Attack - an overview :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sciencedirect.com/topics/computer-science/client-side-attack" rel="nofollow"&gt;https://www.sciencedirect.com/topics/computer-science/client-side-attack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1643-Client-Side Injection Attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.alertlogic.com/blog/client-side-injection-attacks/" rel="nofollow"&gt;https://blog.alertlogic.com/blog/client-side-injection-attacks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1645-The Client-Side Battle Against JavaScript Attacks Is Already Here:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/swlh/the-client-side-battle-against-javascript-attacks-is-already-here-656f3602c1f2" rel="nofollow"&gt;https://medium.com/swlh/the-client-side-battle-against-javascript-attacks-is-already-here-656f3602c1f2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1646-Why Let’s Encrypt is a really, really, really bad idea:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/swlh/why-lets-encrypt-is-a-really-really-really-bad-idea-d69308887801" rel="nofollow"&gt;https://medium.com/swlh/why-lets-encrypt-is-a-really-really-really-bad-idea-d69308887801&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1647-Huge Guide to Client-Side Attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.notion.so/d382649cfebd4c5da202677b6cad1d40" rel="nofollow"&gt;https://www.notion.so/d382649cfebd4c5da202677b6cad1d40&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1648-OSCP Prep – Episode 11: Client Side Attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://kentosec.com/2018/09/02/oscp-prep-episode-11-client-side-attacks/" rel="nofollow"&gt;https://kentosec.com/2018/09/02/oscp-prep-episode-11-client-side-attacks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1649-Client side attack - AV Evasion:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rafalharazinski.gitbook.io/security/oscp/untitled-1/client-side-attack" rel="nofollow"&gt;https://rafalharazinski.gitbook.io/security/oscp/untitled-1/client-side-attack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1650-Client-Side Attack With Metasploit (Part 4):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://thehiddenwiki.pw/blog/2018/07/23/client-side-attack-metasploit/" rel="nofollow"&gt;https://thehiddenwiki.pw/blog/2018/07/23/client-side-attack-metasploit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1651-Ransomware: Latest Developments and How to Defend Against Them:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.recordedfuture.com/latest-ransomware-attacks/" rel="nofollow"&gt;https://www.recordedfuture.com/latest-ransomware-attacks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1652-Cookie Tracking and Stealing using Cross-Site Scripting:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/cookie-tracking-stealing-using-cross-site-scripting/" rel="nofollow"&gt;https://www.geeksforgeeks.org/cookie-tracking-stealing-using-cross-site-scripting/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1653-How to Write an XSS Cookie Stealer in JavaScript to Steal Passwords:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://null-byte.wonderhowto.com/.../write-xss-cookie-stealer-javascript-steal-passwords-0180833" rel="nofollow"&gt;https://null-byte.wonderhowto.com/.../write-xss-cookie-stealer-javascript-steal-passwords-0180833&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1654-How I was able to steal cookies via stored XSS in one of the famous e-commerce site:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@bhavarth33/how-i-was-able-to-steal-cookies-via-stored-xss-in-one-of-the-famous-e-commerce-site-3de8ab94437d" rel="nofollow"&gt;https://medium.com/@bhavarth33/how-i-was-able-to-steal-cookies-via-stored-xss-in-one-of-the-famous-e-commerce-site-3de8ab94437d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1655-Steal victim's cookie using Cross Site Scripting (XSS) :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securityonline.info/steal-victims-cookie-using-cross-site-scripting-xss/" rel="nofollow"&gt;https://securityonline.info/steal-victims-cookie-using-cross-site-scripting-xss/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1656-Remote Code Execution — Damn Vulnerable Web Application(DVWA) - Medium level security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@mikewaals/remote-code-execution-damn-vulnerable-web-application-dvwa-medium-level-security-ca283cda3e86" rel="nofollow"&gt;https://medium.com/@mikewaals/remote-code-execution-damn-vulnerable-web-application-dvwa-medium-level-security-ca283cda3e86&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1657-Remote Command Execution:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hacksland.net/remote-command-execution/" rel="nofollow"&gt;https://hacksland.net/remote-command-execution/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1658-DevOops — An XML External Entity (XXE) HackTheBox Walkthrough:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/devoops-an-xml-external-entity-xxe-hackthebox-walkthrough-fb5ba03aaaa2" rel="nofollow"&gt;https://medium.com/bugbountywriteup/devoops-an-xml-external-entity-xxe-hackthebox-walkthrough-fb5ba03aaaa2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1659-XML External Entity - Beyond /etc/passwd (For Fun &amp;amp; Profit):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/xml-external-entity-beyond-etcpasswd-fun-profit/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/xml-external-entity-beyond-etcpasswd-fun-profit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1660-XXE - ZeroSec - Adventures In Information Security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.zsec.uk/out-of-band-xxe-2/" rel="nofollow"&gt;https://blog.zsec.uk/out-of-band-xxe-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1661-Exploitation: XML External Entity (XXE) Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://depthsecurity.com/blog/exploitation-xml-external-entity-xxe-injection" rel="nofollow"&gt;https://depthsecurity.com/blog/exploitation-xml-external-entity-xxe-injection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1662-Hack The Box: DevOops:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://redteamtutorials.com/2018/11/11/hack-the-box-devoops/" rel="nofollow"&gt;https://redteamtutorials.com/2018/11/11/hack-the-box-devoops/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1663-Web Application Penetration Testing Notes:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://techvomit.net/web-application-penetration-testing-notes/" rel="nofollow"&gt;https://techvomit.net/web-application-penetration-testing-notes/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1664-WriteUp – Aragog (HackTheBox) :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ironhackers.es/en/writeups/writeup-aragog-hackthebox/" rel="nofollow"&gt;https://ironhackers.es/en/writeups/writeup-aragog-hackthebox/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1665-Linux Privilege Escalation Using PATH Variable:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/" rel="nofollow"&gt;https://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1666-Linux Privilege Escalation via Automated Script :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/linux-privilege-escalation-via-automated-script/" rel="nofollow"&gt;https://www.hackingarticles.in/linux-privilege-escalation-via-automated-script/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1667-Privilege Escalation - Linux :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://chryzsh.gitbooks.io/pentestbook/privilege_escalation_-_linux.html" rel="nofollow"&gt;https://chryzsh.gitbooks.io/pentestbook/privilege_escalation_-_linux.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1668-Linux Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://percussiveelbow.github.io/linux-privesc/" rel="nofollow"&gt;https://percussiveelbow.github.io/linux-privesc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1669-Perform Local Privilege Escalation Using a Linux Kernel Exploit :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://null-byte.wonderhowto.com/how-to/perform-local-privilege-escalation-using-linux-kernel-exploit-0186317/" rel="nofollow"&gt;https://null-byte.wonderhowto.com/how-to/perform-local-privilege-escalation-using-linux-kernel-exploit-0186317/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1670-Linux Privilege Escalation With Kernel Exploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.yeahhub.com/linux-privilege-escalation-with-kernel-exploit-8572-c/" rel="nofollow"&gt;https://www.yeahhub.com/linux-privilege-escalation-with-kernel-exploit-8572-c/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1671-Reach the root! How to gain privileges in Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackmag.com/security/reach-the-root/" rel="nofollow"&gt;https://hackmag.com/security/reach-the-root/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1672-Enumeration for Linux Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0x00sec.org/t/enumeration-for-linux-privilege-escalation/1959" rel="nofollow"&gt;https://0x00sec.org/t/enumeration-for-linux-privilege-escalation/1959&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1673-Linux Privilege Escalation Scripts :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://netsec.ws/?p=309" rel="nofollow"&gt;https://netsec.ws/?p=309&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1674-Understanding Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.admin-magazine.com/Articles/Understanding-Privilege-Escalation" rel="nofollow"&gt;www.admin-magazine.com/Articles/Understanding-Privilege-Escalation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1675-Toppo:1 | Vulnhub Walkthrough:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/egghunter/toppo-1-vulnhub-walkthrough-c5f05358cf7d" rel="nofollow"&gt;https://medium.com/egghunter/toppo-1-vulnhub-walkthrough-c5f05358cf7d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1676-Privilege Escalation resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://forum.hackthebox.eu/discussion/1243/privilege-escalation-resources" rel="nofollow"&gt;https://forum.hackthebox.eu/discussion/1243/privilege-escalation-resources&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1678-OSCP Notes – Privilege Escalation (Linux):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securism.wordpress.com/oscp-notes-privilege-escalation-linux/" rel="nofollow"&gt;https://securism.wordpress.com/oscp-notes-privilege-escalation-linux/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1679-Udev Exploit Allows Local Privilege Escalation :&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.madirish.net/370" rel="nofollow"&gt;www.madirish.net/370&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1680-Understanding Linux Privilege Escalation and Defending Against It:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://linux-audit.com/understanding-linux-privilege-escalation-and-defending-againt-it" rel="nofollow"&gt;https://linux-audit.com/understanding-linux-privilege-escalation-and-defending-againt-it&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1681-Windows Privilege Escalation Using PowerShell:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hacknpentest.com/windows-privilege-escalation-using-powershell/" rel="nofollow"&gt;https://hacknpentest.com/windows-privilege-escalation-using-powershell/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1682-Privilege Escalation | Azeria Labs:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://azeria-labs.com/privilege-escalation/" rel="nofollow"&gt;https://azeria-labs.com/privilege-escalation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1683-Abusing SUDO (Linux Privilege Escalation):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://touhidshaikh.com/blog/?p=790" rel="nofollow"&gt;https://touhidshaikh.com/blog/?p=790&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1684-Privilege Escalation - Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mysecurityjournal.blogspot.com/p/privilege-escalation-linux.html" rel="nofollow"&gt;https://mysecurityjournal.blogspot.com/p/privilege-escalation-linux.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1685-0day Linux Escalation Privilege Exploit Collection :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.spentera.id/0day-linux-escalation-privilege-exploit-collection/" rel="nofollow"&gt;https://blog.spentera.id/0day-linux-escalation-privilege-exploit-collection/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1686-Linux for Pentester: cp Privilege Escalation :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackin.co/articles/linux-for-pentester-cp-privilege-escalation.html" rel="nofollow"&gt;https://hackin.co/articles/linux-for-pentester-cp-privilege-escalation.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1687-Practical Privilege Escalation Using Meterpreter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ethicalhackingblog.com/practical-privilege-escalation-using-meterpreter/" rel="nofollow"&gt;https://ethicalhackingblog.com/practical-privilege-escalation-using-meterpreter/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1688-dirty_sock: Linux Privilege Escalation (via snapd):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.redpacketsecurity.com/dirty_sock-linux-privilege-escalation-via-snapd/" rel="nofollow"&gt;https://www.redpacketsecurity.com/dirty_sock-linux-privilege-escalation-via-snapd/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1689-Linux privilege escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jok3rsecurity.com/linux-privilege-escalation/" rel="nofollow"&gt;https://jok3rsecurity.com/linux-privilege-escalation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1690-The Complete Meterpreter Guide | Privilege Escalation &amp;amp; Clearing Tracks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hsploit.com/the-complete-meterpreter-guide-privilege-escalation-clearing-tracks/" rel="nofollow"&gt;https://hsploit.com/the-complete-meterpreter-guide-privilege-escalation-clearing-tracks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1691-How to prepare for PWK/OSCP, a noob-friendly guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.abatchy.com/2017/03/how-to-prepare-for-pwkoscp-noob" rel="nofollow"&gt;https://www.abatchy.com/2017/03/how-to-prepare-for-pwkoscp-noob&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1692-Basic Linux privilege escalation by kernel exploits:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://greysec.net/showthread.php?tid=1355" rel="nofollow"&gt;https://greysec.net/showthread.php?tid=1355&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1693-Linux mount without root :&lt;/p&gt;
&lt;p&gt;epaymentamerica.com/tozkwje/xlvkawj2.php?trjsef=linux-mount-without-root&lt;/p&gt;
&lt;p&gt;-1694-Linux Privilege Escalation Oscp:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.condadorealty.com/2h442/linux-privilege-escalation-oscp.html" rel="nofollow"&gt;www.condadorealty.com/2h442/linux-privilege-escalation-oscp.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1695-Privilege Escalation Attack Tutorial:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://alhilalgroup.info/photography/privilege-escalation-attack-tutorial" rel="nofollow"&gt;https://alhilalgroup.info/photography/privilege-escalation-attack-tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1696-Oscp Bethany Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ilustrado.com.br/i8v7/7ogf.php?veac=oscp-bethany-privilege-escalation" rel="nofollow"&gt;https://ilustrado.com.br/i8v7/7ogf.php?veac=oscp-bethany-privilege-escalation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1697-Hacking a Website and Gaining Root Access using Dirty COW Exploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ethicalhackers.club/hacking-website-gaining-root-access-using-dirtycow-exploit/" rel="nofollow"&gt;https://ethicalhackers.club/hacking-website-gaining-root-access-using-dirtycow-exploit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1698-Privilege Escalation - Linux · Total OSCP Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sushant747.gitbooks.io/total-oscp-guide/privilege_escalation_-_linux.html" rel="nofollow"&gt;https://sushant747.gitbooks.io/total-oscp-guide/privilege_escalation_-_linux.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1699-Linux advanced privilege escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/JameelNabbo/linux-advanced-privilege-escalation" rel="nofollow"&gt;https://www.slideshare.net/JameelNabbo/linux-advanced-privilege-escalation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1700-Local Linux privilege escalation overview:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://myexperiments.io/linux-privilege-escalation.html" rel="nofollow"&gt;https://myexperiments.io/linux-privilege-escalation.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1701-Windows Privilege Escalation Scripts &amp;amp; Techniques :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@rahmatnurfauzi/windows-privilege-escalation-scripts-techniques-30fa37bd194" rel="nofollow"&gt;https://medium.com/@rahmatnurfauzi/windows-privilege-escalation-scripts-techniques-30fa37bd194&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1702-Penetration Testing: Maintaining Access:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/penetration-testing-maintaining-access/" rel="nofollow"&gt;https://resources.infosecinstitute.com/penetration-testing-maintaining-access/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1703-Kali Linux Maintaining Access :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.tutorialspoint.com/kali_linux/kali_linux_maintaining_access.htm" rel="nofollow"&gt;https://www.tutorialspoint.com/kali_linux/kali_linux_maintaining_access.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1704-Best Open Source Tools for Maintaining Access &amp;amp; Tunneling:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://n0where.net/maintaining-access" rel="nofollow"&gt;https://n0where.net/maintaining-access&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1705-Maintaining Access Part 1: Introduction and Metasploit Example:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/maintaining-access-metasploit/" rel="nofollow"&gt;https://www.hackingloops.com/maintaining-access-metasploit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1706-Maintaining Access - Ethical hacking and penetration testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://miloserdov.org/?cat=143" rel="nofollow"&gt;https://miloserdov.org/?cat=143&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1707-Maintaining Access with Web Backdoors [Weevely]:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.yeahhub.com/maintaining-access-web-backdoors-weevely/" rel="nofollow"&gt;https://www.yeahhub.com/maintaining-access-web-backdoors-weevely/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1708-Best Open Source MITM Tools: Sniffing &amp;amp; Spoofing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://n0where.net/mitm-tools" rel="nofollow"&gt;https://n0where.net/mitm-tools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1709-Cain and Abel - Man in the Middle (MITM) Attack Tool Explained:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cybersguards.com/cain-and-abel-man-in-the-middle-mitm-attack-tool-explained/" rel="nofollow"&gt;https://cybersguards.com/cain-and-abel-man-in-the-middle-mitm-attack-tool-explained/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1710-Man In The Middle Attack (MITM):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@nancyjohn.../man-in-the-middle-attack-mitm-114b53b2d987" rel="nofollow"&gt;https://medium.com/@nancyjohn.../man-in-the-middle-attack-mitm-114b53b2d987&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1711-Real-World Man-in-the-Middle (MITM) Attack :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ieeexplore.ieee.org/document/8500082" rel="nofollow"&gt;https://ieeexplore.ieee.org/document/8500082&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1712-The Ultimate Guide to Man in the Middle Attacks :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://doubleoctopus.com/blog/the-ultimate-guide-to-man-in-the-middle-mitm-attacks-and-how-to-prevent-them/" rel="nofollow"&gt;https://doubleoctopus.com/blog/the-ultimate-guide-to-man-in-the-middle-mitm-attacks-and-how-to-prevent-them/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1713-How to Conduct ARP Spoofing for MITM Attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tutorialedge.net/security/arp-spoofing-for-mitm-attack-tutorial/" rel="nofollow"&gt;https://tutorialedge.net/security/arp-spoofing-for-mitm-attack-tutorial/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1714-How To Do A Man-in-the-Middle Attack Using ARP Spoofing &amp;amp; Poisoning:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/secjuice/man-in-the-middle-attack-using-arp-spoofing-fa13af4f4633" rel="nofollow"&gt;https://medium.com/secjuice/man-in-the-middle-attack-using-arp-spoofing-fa13af4f4633&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1715-Ettercap and middle-attacks tutorial :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestmag.com/ettercap-tutorial-for-windows/" rel="nofollow"&gt;https://pentestmag.com/ettercap-tutorial-for-windows/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1716-How To Setup A Man In The Middle Attack Using ARP Poisoning:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://online-it.nu/how-to-setup-a-man-in-the-middle-attack-using-arp-poisoning/" rel="nofollow"&gt;https://online-it.nu/how-to-setup-a-man-in-the-middle-attack-using-arp-poisoning/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1717-Intro to Wireshark and Man in the Middle Attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.commonlounge.com/discussion/2627e25558924f3fbb6e03f8f912a12d" rel="nofollow"&gt;https://www.commonlounge.com/discussion/2627e25558924f3fbb6e03f8f912a12d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1718-MiTM Attack with Ettercap:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackers-arise.com/single-post/2017/08/28/MiTM-Attack-with-Ettercap" rel="nofollow"&gt;https://www.hackers-arise.com/single-post/2017/08/28/MiTM-Attack-with-Ettercap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1719-Man in the Middle Attack with Websploit Framework:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.yeahhub.com/man-middle-attack-websploit-framework/" rel="nofollow"&gt;https://www.yeahhub.com/man-middle-attack-websploit-framework/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1720-SSH MitM Downgrade :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sites.google.com/site/clickdeathsquad/Home/cds-ssh-mitmdowngrade" rel="nofollow"&gt;https://sites.google.com/site/clickdeathsquad/Home/cds-ssh-mitmdowngrade&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1721-How to use Netcat for Listening, Banner Grabbing and Transferring Files:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.yeahhub.com/use-netcat-listening-banner-grabbing-transferring-files/" rel="nofollow"&gt;https://www.yeahhub.com/use-netcat-listening-banner-grabbing-transferring-files/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1722-Powershell port scanner and banner grabber:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.linkedin.com/pulse/powershell-port-scanner-banner-grabber-jeremy-martin/" rel="nofollow"&gt;https://www.linkedin.com/pulse/powershell-port-scanner-banner-grabber-jeremy-martin/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1723-What is banner grabbing attack:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rxkjftu.ga/sport/what-is-banner-grabbing-attack.php" rel="nofollow"&gt;https://rxkjftu.ga/sport/what-is-banner-grabbing-attack.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1724-Network penetration testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://guif.re/networkpentest" rel="nofollow"&gt;https://guif.re/networkpentest&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1725-NMAP Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://redteamtutorials.com/2018/10/14/nmap-cheatsheet/" rel="nofollow"&gt;https://redteamtutorials.com/2018/10/14/nmap-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1726-How To Scan a Network With Nmap:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://online-it.nu/how-to-scan-a-network-with-nmap/" rel="nofollow"&gt;https://online-it.nu/how-to-scan-a-network-with-nmap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1727-Hacking Metasploitable : Scanning and Banner grabbing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackercool.com/2015/11/hacking-metasploitable-scanning-banner-grabbing/" rel="nofollow"&gt;https://hackercool.com/2015/11/hacking-metasploitable-scanning-banner-grabbing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1728-Penetration Testing of an FTP Server:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://shahmeeramir.com/penetration-testing-of-an-ftp-server-19afe538be4b" rel="nofollow"&gt;https://shahmeeramir.com/penetration-testing-of-an-ftp-server-19afe538be4b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1729-Nmap Usage &amp;amp; Cheet-Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://aerroweb.wordpress.com/2018/03/14/namp-cheat-sheet/" rel="nofollow"&gt;https://aerroweb.wordpress.com/2018/03/14/namp-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1730-Discovering SSH Host Keys with NMAP:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mwhubbard.blogspot.com/2015/03/discovering-ssh-host-keys-with-nmap.html" rel="nofollow"&gt;https://mwhubbard.blogspot.com/2015/03/discovering-ssh-host-keys-with-nmap.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1731-Banner Grabbing using Nmap &amp;amp; NetCat - Detailed Explanation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://techincidents.com/banner-grabbing-using-nmap-netcat" rel="nofollow"&gt;https://techincidents.com/banner-grabbing-using-nmap-netcat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1732-Nmap – (Vulnerability Discovery):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://crazybulletctfwriteups.wordpress.com/2015/09/5/nmap-vulnerability-discovery/" rel="nofollow"&gt;https://crazybulletctfwriteups.wordpress.com/2015/09/5/nmap-vulnerability-discovery/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1733-Penetration Testing on MYSQL (Port 3306):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/penetration-testing-on-mysql-port-3306/" rel="nofollow"&gt;https://www.hackingarticles.in/penetration-testing-on-mysql-port-3306/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1774-Password Spraying - Infosec Resources :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/password-spraying/" rel="nofollow"&gt;https://resources.infosecinstitute.com/password-spraying/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1775-Password Spraying- Common mistakes and how to avoid them:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@adam.toscher/password-spraying-common-mistakes-and-how-to-avoid-them-3fd16b1a352b" rel="nofollow"&gt;https://medium.com/@adam.toscher/password-spraying-common-mistakes-and-how-to-avoid-them-3fd16b1a352b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1776-Password Spraying Tutorial:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://attack.stealthbits.com/password-spraying-tutorial-defense" rel="nofollow"&gt;https://attack.stealthbits.com/password-spraying-tutorial-defense&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1777-password spraying Archives:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/tag/password-spraying/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/tag/password-spraying/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1778-The 21 Best Email Finding Tools::&lt;/p&gt;
&lt;p&gt;&lt;a href="https://beamery.com/blog/find-email-addresses" rel="nofollow"&gt;https://beamery.com/blog/find-email-addresses&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1779-OSINT Primer: People (Part 2):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0xpatrik.com/osint-people/" rel="nofollow"&gt;https://0xpatrik.com/osint-people/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1780-Discovering Hidden Email Gateways with OSINT Techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.ironbastion.com.au/discovering-hidden-email-servers-with-osint-part-2/" rel="nofollow"&gt;https://blog.ironbastion.com.au/discovering-hidden-email-servers-with-osint-part-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1781-Top 20 Data Reconnaissance and Intel Gathering Tools :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securitytrails.com/blog/top-20-intel-tools" rel="nofollow"&gt;https://securitytrails.com/blog/top-20-intel-tools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1782-101+ OSINT Resources for Investigators [2019]:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://i-sight.com/resources/101-osint-resources-for-investigators/" rel="nofollow"&gt;https://i-sight.com/resources/101-osint-resources-for-investigators/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1783-Digging Through Someones Past Using OSINT:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nullsweep.com/digging-through-someones-past-using-osint/" rel="nofollow"&gt;https://nullsweep.com/digging-through-someones-past-using-osint/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1784-Gathering Open Source Intelligence:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://posts.specterops.io/gathering-open-source-intelligence-bee58de48e05" rel="nofollow"&gt;https://posts.specterops.io/gathering-open-source-intelligence-bee58de48e05&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1785-How to Locate the Person Behind an Email Address:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sourcecon.com/how-to-locate-the-person-behind-an-email-address/" rel="nofollow"&gt;https://www.sourcecon.com/how-to-locate-the-person-behind-an-email-address/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1786-Find hacked email addresses and check breach mails:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.securitynewspaper.com/2019/01/16/find-hacked-email-addresses/" rel="nofollow"&gt;https://www.securitynewspaper.com/2019/01/16/find-hacked-email-addresses/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1787-A Pentester's Guide - Part 3 (OSINT, Breach Dumps, &amp;amp; Password :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://delta.navisec.io/osint-for-pentesters-part-3-password-spraying-methodology/" rel="nofollow"&gt;https://delta.navisec.io/osint-for-pentesters-part-3-password-spraying-methodology/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1788-Top 10 OSINT Tools/Sources for Security Folks:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.snoopysecurity.github.io/osint/2018/08/02/10_OSINT_for_security_folks.html" rel="nofollow"&gt;www.snoopysecurity.github.io/osint/2018/08/02/10_OSINT_for_security_folks.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1789-Top 5 Open Source OSINT Tools for a Penetration Tester:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.breachlock.com/top-5-open-source-osint-tools/" rel="nofollow"&gt;https://www.breachlock.com/top-5-open-source-osint-tools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1790-Open Source Intelligence tools for social media: my own list:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/2017/03/20/open-source-intelligence-tools-for-social-media-my-own-list/" rel="nofollow"&gt;https://www.andreafortuna.org/2017/03/20/open-source-intelligence-tools-for-social-media-my-own-list/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1791-Red Teaming: I can see you! Insights from an InfoSec expert :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.perspectiverisk.com/i-can-see-you-osint/" rel="nofollow"&gt;https://www.perspectiverisk.com/i-can-see-you-osint/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1792-OSINT Playbook for Recruiters:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://amazinghiring.com/osint-playbook/" rel="nofollow"&gt;https://amazinghiring.com/osint-playbook/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1793- Links for Doxing, Personal OSInt, Profiling, Footprinting, Cyberstalking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.irongeek.com/i.php?page=security/doxing-footprinting-cyberstalking" rel="nofollow"&gt;https://www.irongeek.com/i.php?page=security/doxing-footprinting-cyberstalking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1794-Open Source Intelligence Gathering 201 (Covering 12 additional techniques):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.appsecco.com/open-source-intelligence-gathering-201-covering-12-additional-techniques-b76417b5a544?gi=2afe435c630a" rel="nofollow"&gt;https://blog.appsecco.com/open-source-intelligence-gathering-201-covering-12-additional-techniques-b76417b5a544?gi=2afe435c630a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1795-Online Investigative Tools for Social Media Discovery and Locating People:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://4thetruth.info/colorado-private-investigator-online-detective-social-media-and-online-people-search-online-search-tools.html" rel="nofollow"&gt;https://4thetruth.info/colorado-private-investigator-online-detective-social-media-and-online-people-search-online-search-tools.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1796-Expanding Skype Forensics with OSINT: Email Accounts:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.automatingosint.com/blog/2016/05/expanding-skype-forensics-with-osint-email-accounts/" rel="nofollow"&gt;http://www.automatingosint.com/blog/2016/05/expanding-skype-forensics-with-osint-email-accounts/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1798-2019 OSINT Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.randhome.io/blog/2019/01/05/2019-osint-guide/" rel="nofollow"&gt;https://www.randhome.io/blog/2019/01/05/2019-osint-guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1799-OSINT - Passive Recon and Discovery of Assets:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0x00sec.org/t/osint-passive-recon-and-discovery-of-assets/6715" rel="nofollow"&gt;https://0x00sec.org/t/osint-passive-recon-and-discovery-of-assets/6715&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1800-OSINT With Datasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dzone.com/articles/osint-with-datasploit" rel="nofollow"&gt;https://dzone.com/articles/osint-with-datasploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1801-Building an OSINT Reconnaissance Tool from Scratch:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@SundownDEV/phone-number-scanning-osint-recon-tool-6ad8f0cac27b" rel="nofollow"&gt;https://medium.com/@SundownDEV/phone-number-scanning-osint-recon-tool-6ad8f0cac27b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1802-Find Identifying Information from a Phone Number Using OSINT Tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://null-byte.wonderhowto.com/how-to/find-identifying-information-from-phone-number-using-osint-tools-0195472/" rel="nofollow"&gt;https://null-byte.wonderhowto.com/how-to/find-identifying-information-from-phone-number-using-osint-tools-0195472/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1803-Find Details Of any Mobile Number, Email ID, IP Address in the world (Step By Step):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.securitynewspaper.com/2019/05/02/find-details-of-any-mobile-number-email-id-ip-address-in-the-world-step-by-step/" rel="nofollow"&gt;https://www.securitynewspaper.com/2019/05/02/find-details-of-any-mobile-number-email-id-ip-address-in-the-world-step-by-step/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1804-Investigative tools for finding people online and keeping yourself safe:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ijnet.org/en/story/investigative-tools-finding-people-online-and-keeping-yourself-safe" rel="nofollow"&gt;https://ijnet.org/en/story/investigative-tools-finding-people-online-and-keeping-yourself-safe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1805- Full text of "The Hacker Playbook 2 Practical Guide To Penetration Testing By Peter Kim":&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/TheHackerPlaybook2PracticalGuideToPenetrationTestingByPeterKim/The%20Hacker%20Playbook%202%20-%20Practical%20Guide%20To%20Penetration%20Testing%20By%20Peter%20Kim_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/TheHackerPlaybook2PracticalGuideToPenetrationTestingByPeterKim/The%20Hacker%20Playbook%202%20-%20Practical%20Guide%20To%20Penetration%20Testing%20By%20Peter%20Kim_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1806-The Internet Archive offers over 15,000,000 freely downloadable books and texts. There is also a collection of 550,000 modern eBooks that may be borrowed by anyone with a free archive.org account:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/details/texts?and%5B%5D=hacking&amp;amp;sin=" rel="nofollow"&gt;https://archive.org/details/texts?and%5B%5D=hacking&amp;amp;sin=&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1807-Exploiting SSRF like a Boss — Escalation of an SSRF to Local File Read!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@zain.sabahat/exploiting-ssrf-like-a-boss-c090dc63d326" rel="nofollow"&gt;https://medium.com/@zain.sabahat/exploiting-ssrf-like-a-boss-c090dc63d326&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1808-How to Pass OSCP Like Boss:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@parthdeshani/how-to-pass-oscp-like-boss-b269f2ea99d" rel="nofollow"&gt;https://medium.com/@parthdeshani/how-to-pass-oscp-like-boss-b269f2ea99d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1809-Deploy a private Burp Collaborator Server in Azure:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/deploy-a-private-burp-collaborator-server-in-azure-f0d932ae1d70" rel="nofollow"&gt;https://medium.com/bugbountywriteup/deploy-a-private-burp-collaborator-server-in-azure-f0d932ae1d70&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1810-Using Shodan Better Way! :):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/using-shodan-better-way-b40f330e45f6" rel="nofollow"&gt;https://medium.com/bugbountywriteup/using-shodan-better-way-b40f330e45f6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1811-How To Do Your Reconnaissance Properly Before Chasing A Bug Bounty:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/guide-to-basic-recon-bug-bounties-recon-728c5242a115" rel="nofollow"&gt;https://medium.com/bugbountywriteup/guide-to-basic-recon-bug-bounties-recon-728c5242a115&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1812-How we got LFI in apache Drill (Recon like a boss)::&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/how-we-got-lfi-in-apache-drill-recon-like-a-boss-6f739a79d87d" rel="nofollow"&gt;https://medium.com/bugbountywriteup/how-we-got-lfi-in-apache-drill-recon-like-a-boss-6f739a79d87d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1813-Chaining Self XSS with UI Redressing is Leading to Session Hijacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/chaining-self-xss-with-ui-redressing-is-leading-to-session-hijacking-pwn-users-like-a-boss-efb46249cd14" rel="nofollow"&gt;https://medium.com/bugbountywriteup/chaining-self-xss-with-ui-redressing-is-leading-to-session-hijacking-pwn-users-like-a-boss-efb46249cd14&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1814-Week in OSINT #2019–19:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/week-in-osint/week-in-osint-2019-18-1975fb8ea43a4" rel="nofollow"&gt;https://medium.com/week-in-osint/week-in-osint-2019-18-1975fb8ea43a4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1814-Week in OSINT #2019–02:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/week-in-osint/week-in-osint-2019-02-d4009c27e85f" rel="nofollow"&gt;https://medium.com/week-in-osint/week-in-osint-2019-02-d4009c27e85f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1815-Week in OSINT #2019–24:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/week-in-osint/week-in-osint-2019-24-4fcd17ca908f" rel="nofollow"&gt;https://medium.com/week-in-osint/week-in-osint-2019-24-4fcd17ca908f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1816-Page Admin Disclosure | Facebook Bug Bounty 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/page-admin-disclosure-facebook-bug-bounty-2019-ee9920e768eb" rel="nofollow"&gt;https://medium.com/bugbountywriteup/page-admin-disclosure-facebook-bug-bounty-2019-ee9920e768eb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1817-XSS in Edmodo within 5 Minute (My First Bug Bounty):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@valakeyur/xss-in-edmodo-within-5-minute-my-first-bug-bounty-889e3da6167d" rel="nofollow"&gt;https://medium.com/@valakeyur/xss-in-edmodo-within-5-minute-my-first-bug-bounty-889e3da6167d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1818-Collection Of Bug Bounty Tip-Will Be updated daily:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@vignesh4303/collection-of-bug-bounty-tip-will-be-updated-daily-605911cfa248" rel="nofollow"&gt;https://medium.com/@vignesh4303/collection-of-bug-bounty-tip-will-be-updated-daily-605911cfa248&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1819-A Unique XSS Scenario in SmartSheet || $1000 bounty.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@rohanchavan/a-unique-xss-scenario-1000-bounty-347f8f92fcc6" rel="nofollow"&gt;https://medium.com/@rohanchavan/a-unique-xss-scenario-1000-bounty-347f8f92fcc6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1820-How I found a simple bug in Facebook without any Test:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/how-i-found-a-simple-bug-in-facebook-without-any-test-3bc8cf5e2ca2" rel="nofollow"&gt;https://medium.com/bugbountywriteup/how-i-found-a-simple-bug-in-facebook-without-any-test-3bc8cf5e2ca2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1821-Facebook BugBounty — Disclosing page members:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@tnirmalz/facebook-bugbounty-disclosing-page-members-1178595cc520" rel="nofollow"&gt;https://medium.com/@tnirmalz/facebook-bugbounty-disclosing-page-members-1178595cc520&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1822-Don’t underestimates the Errors They can provide good $$$ Bounty!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@noob.assassin/dont-underestimates-the-errors-they-can-provide-good-bounty-d437ecca6596" rel="nofollow"&gt;https://medium.com/@noob.assassin/dont-underestimates-the-errors-they-can-provide-good-bounty-d437ecca6596&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1823-Django and Web Security Headers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@ksarthak4ever/django-and-web-security-headers-d72a9e54155e" rel="nofollow"&gt;https://medium.com/@ksarthak4ever/django-and-web-security-headers-d72a9e54155e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1824-Weaponising Staged Cross-Site Scripting (XSS) Payloads:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/redteam/weaponising-staged-cross-site-scripting-xss-payloads-7b917f605800" rel="nofollow"&gt;https://medium.com/redteam/weaponising-staged-cross-site-scripting-xss-payloads-7b917f605800&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1825-How I was able to Bypass XSS Protection on HackerOne’s Private Program:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@vulnerabilitylabs/how-i-was-able-to-bypass-xss-protection-on-hackerones-private-program-8914a31339a9" rel="nofollow"&gt;https://medium.com/@vulnerabilitylabs/how-i-was-able-to-bypass-xss-protection-on-hackerones-private-program-8914a31339a9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1826-XSS in Microsoft subdomain:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.usejournal.com/xss-in-microsoft-subdomain-81c4e46d6631" rel="nofollow"&gt;https://blog.usejournal.com/xss-in-microsoft-subdomain-81c4e46d6631&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1827-How Angular Protects Us From XSS Attacks?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/hackernoon/how-angular-protects-us-from-xss-attacks-3cb7a7d49d95" rel="nofollow"&gt;https://medium.com/hackernoon/how-angular-protects-us-from-xss-attacks-3cb7a7d49d95&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1828-[FUN] Bypass XSS Detection WAF:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/soulsecteam/fun-bypass-xss-detection-waf-cabd431e030e" rel="nofollow"&gt;https://medium.com/soulsecteam/fun-bypass-xss-detection-waf-cabd431e030e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1829-Bug Hunting Methodology(Part-2):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.usejournal.com/bug-hunting-methodology-part-2-5579dac06150" rel="nofollow"&gt;https://blog.usejournal.com/bug-hunting-methodology-part-2-5579dac06150&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1830-Learn Web Application Penetration Testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.usejournal.com/web-application-penetration-testing-9fbf7533b361" rel="nofollow"&gt;https://blog.usejournal.com/web-application-penetration-testing-9fbf7533b361&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1831-“Exploiting a Single Parameter”:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/securitywall/exploiting-a-single-parameter-6f4ba2acf523" rel="nofollow"&gt;https://medium.com/securitywall/exploiting-a-single-parameter-6f4ba2acf523&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1832-CORS To CSRF Attack:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.usejournal.com/cors-to-csrf-attack-c33a595d441" rel="nofollow"&gt;https://blog.usejournal.com/cors-to-csrf-attack-c33a595d441&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1833-Account Takeover Using CSRF(json-based):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@shub66452/account-takeover-using-csrf-json-based-a0e6efd1bffc" rel="nofollow"&gt;https://medium.com/@shub66452/account-takeover-using-csrf-json-based-a0e6efd1bffc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1834-Bypassing Anti-CSRF with Burp Suite Session Handling:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bestestredteam.com/tag/anti-csrf/" rel="nofollow"&gt;https://bestestredteam.com/tag/anti-csrf/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1835-10 Methods to Bypass Cross Site Request Forgery (CSRF):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://haiderm.com/10-methods-to-bypass-cross-site-request-forgery-csrf/" rel="nofollow"&gt;https://haiderm.com/10-methods-to-bypass-cross-site-request-forgery-csrf/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1836-Exploiting CSRF on JSON endpoints with Flash and redirects:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/681d4ad6b31b" rel="nofollow"&gt;https://medium.com/p/681d4ad6b31b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1837-Finding and exploiting Cross-site request forgery (CSRF):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securityonline.info/finding-exploiting-cross-site-request-forgery/" rel="nofollow"&gt;https://securityonline.info/finding-exploiting-cross-site-request-forgery/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1838-Hacking Facebook accounts using CSRF in Oculus-Facebook integration:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.josipfranjkovic.com/blog/hacking-facebook-oculus-integration-csrf" rel="nofollow"&gt;https://www.josipfranjkovic.com/blog/hacking-facebook-oculus-integration-csrf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1839-Synchronizer Token Pattern: No more tricks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/d2af836ccf71" rel="nofollow"&gt;https://medium.com/p/d2af836ccf71&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1840-The $12,000 Intersection between Clickjacking, XSS, and Denial of Service:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@imashishmathur/the-12-000-intersection-between-clickjacking-xss-and-denial-of-service-f8cdb3c5e6d1" rel="nofollow"&gt;https://medium.com/@imashishmathur/the-12-000-intersection-between-clickjacking-xss-and-denial-of-service-f8cdb3c5e6d1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1841-XML External Entity(XXE):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@ghostlulzhacks/xml-external-entity-xxe-62bcd1555b7b" rel="nofollow"&gt;https://medium.com/@ghostlulzhacks/xml-external-entity-xxe-62bcd1555b7b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1842-XXE Attacks— Part 1: XML Basics:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@klose7/https-medium-com-klose7-xxe-attacks-part-1-xml-basics-6fa803da9f26" rel="nofollow"&gt;https://medium.com/@klose7/https-medium-com-klose7-xxe-attacks-part-1-xml-basics-6fa803da9f26&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1843-From XXE to RCE with PHP/expect — The Missing Link:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@airman604/from-xxe-to-rce-with-php-expect-the-missing-link-a18c265ea4c7" rel="nofollow"&gt;https://medium.com/@airman604/from-xxe-to-rce-with-php-expect-the-missing-link-a18c265ea4c7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1844-My first XML External Entity (XXE) attack with .gpx file:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@valeriyshevchenko/my-first-xml-external-entity-xxe-attack-with-gpx-file-5ca78da9ae98" rel="nofollow"&gt;https://medium.com/@valeriyshevchenko/my-first-xml-external-entity-xxe-attack-with-gpx-file-5ca78da9ae98&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1845-Open Redirects &amp;amp; Security Done Right!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@AkshaySharmaUS/open-redirects-security-done-right-e524a3185496" rel="nofollow"&gt;https://medium.com/@AkshaySharmaUS/open-redirects-security-done-right-e524a3185496&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1846-XXE on Windows system …then what ??:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@canavaroxum/xxe-on-windows-system-then-what-76d571d66745" rel="nofollow"&gt;https://medium.com/@canavaroxum/xxe-on-windows-system-then-what-76d571d66745&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1847-Unauthenticated Blind SSRF in Oracle EBS CVE-2018-3167:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@x41x41x41/unauthenticated-ssrf-in-oracle-ebs-765bd789a145" rel="nofollow"&gt;https://medium.com/@x41x41x41/unauthenticated-ssrf-in-oracle-ebs-765bd789a145&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1848-SVG XLink SSRF fingerprinting libraries version:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@arbazhussain/svg-xlink-ssrf-fingerprinting-libraries-version-450ebecc2f3c" rel="nofollow"&gt;https://medium.com/@arbazhussain/svg-xlink-ssrf-fingerprinting-libraries-version-450ebecc2f3c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1849-What is XML Injection Attack:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@dahiya.aj12/what-is-xml-injection-attack-279691bd00b6" rel="nofollow"&gt;https://medium.com/@dahiya.aj12/what-is-xml-injection-attack-279691bd00b6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1850-SSRF - Server Side Request Forgery (Types and ways to exploit it) Part-1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@madrobot/ssrf-server-side-request-forgery-types-and-ways-to-exploit-it-part-1-29d034c27978" rel="nofollow"&gt;https://medium.com/@madrobot/ssrf-server-side-request-forgery-types-and-ways-to-exploit-it-part-1-29d034c27978&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1851-Penetration Testing Introduction: Scanning &amp;amp; Reconnaissance:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/cyberdefenders/penetration-testing-introduction-scanning-reconnaissance-f865af0761f" rel="nofollow"&gt;https://medium.com/cyberdefenders/penetration-testing-introduction-scanning-reconnaissance-f865af0761f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1852-Beginner’s Guide to recon automation.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/beginners-guide-to-recon-automation-f95b317c6dbb" rel="nofollow"&gt;https://medium.com/bugbountywriteup/beginners-guide-to-recon-automation-f95b317c6dbb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1853-Red Teamer’s Guide to Pulse Secure SSL VPN:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/pulse-secure-ssl-vpn-post-auth-rce-to-ssh-shell-2b497d35c35b" rel="nofollow"&gt;https://medium.com/bugbountywriteup/pulse-secure-ssl-vpn-post-auth-rce-to-ssh-shell-2b497d35c35b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1854-CVE-2019-15092 WordPress Plugin Import Export Users = 1.3.0 - CSV Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/cve-2019-15092-wordpress-plugin-import-export-users-1-3-0-csv-injection-b5cc14535787" rel="nofollow"&gt;https://medium.com/bugbountywriteup/cve-2019-15092-wordpress-plugin-import-export-users-1-3-0-csv-injection-b5cc14535787&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1855-How I harvested Facebook credentials via free wifi?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/how-i-harvested-facebook-credentials-via-free-wifi-5da6bdcae049" rel="nofollow"&gt;https://medium.com/bugbountywriteup/how-i-harvested-facebook-credentials-via-free-wifi-5da6bdcae049&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1856-How to hack any Payment Gateway?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/how-to-hack-any-payment-gateway-1ae2f0c6cbe5" rel="nofollow"&gt;https://medium.com/bugbountywriteup/how-to-hack-any-payment-gateway-1ae2f0c6cbe5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1857-How I hacked into my neighbour’s WiFi and harvested login credentials?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/how-i-hacked-into-my-neighbours-wifi-and-harvested-credentials-487fab106bfc" rel="nofollow"&gt;https://medium.com/bugbountywriteup/how-i-hacked-into-my-neighbours-wifi-and-harvested-credentials-487fab106bfc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1858-What do Netcat, SMTP and self XSS have in common? Stored XSS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/what-do-netcat-smtp-and-self-xss-have-in-common-stored-xss-a05648b72002" rel="nofollow"&gt;https://medium.com/bugbountywriteup/what-do-netcat-smtp-and-self-xss-have-in-common-stored-xss-a05648b72002&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1859-1-Click Account Takeover in Virgool.io — a Nice Case Study:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/1-click-account-takeover-in-virgool-io-a-nice-case-study-6bfc3cb98ef2" rel="nofollow"&gt;https://medium.com/bugbountywriteup/1-click-account-takeover-in-virgool-io-a-nice-case-study-6bfc3cb98ef2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1860-Digging into Android Applications — Part 1 — Drozer + Burp:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/digging-android-applications-part-1-drozer-burp-4fd4730d1cf2" rel="nofollow"&gt;https://medium.com/bugbountywriteup/digging-android-applications-part-1-drozer-burp-4fd4730d1cf2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1861-Linux for Pentester: APT Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/linux-for-pentester-apt-privilege-escalation" rel="nofollow"&gt;https://www.hackingarticles.in/linux-for-pentester-apt-privilege-escalation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1862-Linux for Pentester : ZIP Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/linux-for-pentester-zip-privilege-escalation" rel="nofollow"&gt;https://www.hackingarticles.in/linux-for-pentester-zip-privilege-escalation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1863-Koadic - COM Command &amp;amp; Control Framework:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/koadic-com-command-control-framework" rel="nofollow"&gt;https://www.hackingarticles.in/koadic-com-command-control-framework&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1864-Configure Sqlmap for WEB-GUI in Kali Linux :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/configure-sqlmap-for-web-gui-in-kali-linux" rel="nofollow"&gt;https://www.hackingarticles.in/configure-sqlmap-for-web-gui-in-kali-linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1865-Penetration Testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/Penetration-Testing" rel="nofollow"&gt;https://www.hackingarticles.in/Penetration-Testing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1866-Buffer Overflow Examples, Code execution by shellcode :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0xrick.github.io/binary-exploitation/bof5" rel="nofollow"&gt;https://0xrick.github.io/binary-exploitation/bof5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1867-Dynamic Shellcode Execution:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.countercept.com/blog/dynamic-shellcode-execution" rel="nofollow"&gt;https://www.countercept.com/blog/dynamic-shellcode-execution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1868-JSC Exploits:&lt;/p&gt;
&lt;p&gt;-&lt;a href="https://googleprojectzero.blogspot.com/2019/08/jsc-exploits.html" rel="nofollow"&gt;https://googleprojectzero.blogspot.com/2019/08/jsc-exploits.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1869-Injecting Into The Hunt:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jsecurity101.com/2019/Injecting-Into-The-Hunt" rel="nofollow"&gt;https://jsecurity101.com/2019/Injecting-Into-The-Hunt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1870-Bypassing Antivirus with Golang:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.jumpsec.com/2019/06/20/bypassing-antivirus-with-golang-gopher.it" rel="nofollow"&gt;https://labs.jumpsec.com/2019/06/20/bypassing-antivirus-with-golang-gopher.it&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1871-Windows Process Injection: Print Spooler:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://modexp.wordpress.com/2019/03/07/process-injection-print-spooler" rel="nofollow"&gt;https://modexp.wordpress.com/2019/03/07/process-injection-print-spooler&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1872-Inject Shellcode Into Memory Using Unicorn :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ethicalhackingguru.com/inject-shellcode-memory-using-unicorn" rel="nofollow"&gt;https://ethicalhackingguru.com/inject-shellcode-memory-using-unicorn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1873-Macros and More with SharpShooter v2.0:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.mdsec.co.uk/2019/02/macros-and-more-with-sharpshooter-v2-0" rel="nofollow"&gt;https://www.mdsec.co.uk/2019/02/macros-and-more-with-sharpshooter-v2-0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1874-Fuzz Testing(Fuzzing) Tutorial: What is, Types, Tools &amp;amp; Example:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.guru99.com/fuzz-testing" rel="nofollow"&gt;https://www.guru99.com/fuzz-testing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1875-Introduction to File Format Fuzzing &amp;amp; Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@DanielC7/introduction-to-file-format-fuzzing-exploitation-922143ab2ab3" rel="nofollow"&gt;https://medium.com/@DanielC7/introduction-to-file-format-fuzzing-exploitation-922143ab2ab3&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>blaCCkHatHacEEkr</author><guid isPermaLink="false">https://github.com/blaCCkHatHacEEkr/PENTESTING-BIBLE</guid><pubDate>Tue, 24 Dec 2019 00:12:00 GMT</pubDate></item><item><title>kamranahmedse/developer-roadmap #13 in Unknown languages, Today</title><link>https://github.com/kamranahmedse/developer-roadmap</link><description>&lt;p&gt;&lt;i&gt;Roadmap to becoming a web developer in 2019&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/181c921e730c51134f0409412886327ce6a3dfaf/68747470733a2f2f692e696d6775722e636f6d2f733563435639712e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/181c921e730c51134f0409412886327ce6a3dfaf/68747470733a2f2f692e696d6775722e636f6d2f733563435639712e706e67" alt="Web Developer Roadmap - 2019" data-canonical-src="https://i.imgur.com/s5cCV9q.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Roadmap to becoming a web developer in 2019&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://discord.gg/Yhm4EsE" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/470fc174ffee1209f9a457ebbb36c777d8b98a9e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539442541342d4a6f696e253230746865253230436861742532306f6e253230446973636f72642d3061306130612e7376673f7374796c653d666c617426636f6c6f72413d306130613061" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9D%A4-Join%20the%20Chat%20on%20Discord-0a0a0a.svg?style=flat&amp;amp;colorA=0a0a0a" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Below you find a set of charts demonstrating the paths that you can take and the technologies that you would want to adopt in order to become a frontend, backend or a devops. I made these charts for an old professor of mine who wanted something to share with his college students to give them a perspective; sharing them here to help the community.&lt;/p&gt;
&lt;p&gt;If you think that these can be improved in anyway, please do suggest.&lt;/p&gt;
&lt;hr&gt;
&lt;p align="center"&gt;&lt;b&gt; &lt;g-emoji class="g-emoji" alias="tada" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png"&gt;🎉&lt;/g-emoji&gt; We are working on a more concise version of these roadmaps &lt;g-emoji class="g-emoji" alias="tada" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png"&gt;🎉&lt;/g-emoji&gt; &lt;/b&gt;&lt;br&gt;Keep your eyes on &lt;a href="http://roadmap.sh" rel="nofollow"&gt;roadmap.sh&lt;/a&gt; for the details!&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;The purpose of these roadmaps is to give you an idea about the landscape and to guide you if you are confused about what to learn next and not to encourage you to pick what is hip and trendy. You should grow some understanding of why one tool would better suited for some cases than the other and remember hip and trendy never means best suited for the job.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./images/intro.png"&gt;&lt;img src="./images/intro.png" alt="Web Developer Roadmap Introduction" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-frontend-roadmap" class="anchor" aria-hidden="true" href="#frontend-roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Frontend Roadmap&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./images/frontend.png?fix=531"&gt;&lt;img src="./images/frontend.png?fix=531" alt="Frontend Roadmap" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-back-end-roadmap" class="anchor" aria-hidden="true" href="#back-end-roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Back-end Roadmap&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./images/backend.png"&gt;&lt;img src="./images/backend.png" alt="Back-end Roadmap" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-devops-roadmap" class="anchor" aria-hidden="true" href="#devops-roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DevOps Roadmap&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./images/devops.png"&gt;&lt;img src="./images/devops.png" alt="DevOps Roadmap" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--wrap-up" class="anchor" aria-hidden="true" href="#-wrap-up"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="vertical_traffic_light" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a6.png"&gt;🚦&lt;/g-emoji&gt; Wrap Up&lt;/h2&gt;
&lt;p&gt;If you think any of the roadmaps can be improved, feel free to discuss it in the issues. Also, I will continue to improve this, so you might want to watch this repository or subscribe at &lt;a href="http://roadmap.sh" rel="nofollow"&gt;roadmap.sh&lt;/a&gt; to revisit.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--contribution" class="anchor" aria-hidden="true" href="#-contribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="raised_hands" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64c.png"&gt;🙌&lt;/g-emoji&gt; Contribution&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Have a look at &lt;a href="./contributing.md"&gt;contribution docs&lt;/a&gt; for how to update any of the roadmaps&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Open pull request with improvements&lt;/li&gt;
&lt;li&gt;Discuss ideas in issues&lt;/li&gt;
&lt;li&gt;Spread the word&lt;/li&gt;
&lt;li&gt;Reach out with any feedback &lt;a href="https://twitter.com/kamranahmedse" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fc84112a4dfb8cbb9f53f3c6502895e6801254fe/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f747769747465722e636f6d2f6b616d72616e61686d656473652e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f772532302534306b616d72616e61686d65647365" alt="Twitter URL" data-canonical-src="https://img.shields.io/twitter/url/https/twitter.com/kamranahmedse.svg?style=social&amp;amp;label=Follow%20%40kamranahmedse" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://creativecommons.org/licenses/by-nc-nd/3.0/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e7ef37a8859a663b5ea5dce18c93ef7e351c6a22/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d434325323042592d2d4e432d2d4e44253230332e302d6c69676874677265792e737667" alt="License: CC BY-NC-ND 3.0" data-canonical-src="https://img.shields.io/badge/License-CC%20BY--NC--ND%203.0-lightgrey.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>kamranahmedse</author><guid isPermaLink="false">https://github.com/kamranahmedse/developer-roadmap</guid><pubDate>Tue, 24 Dec 2019 00:13:00 GMT</pubDate></item><item><title>YunaiV/Blog #14 in Unknown languages, Today</title><link>https://github.com/YunaiV/Blog</link><description>&lt;p&gt;&lt;i&gt;每周一篇，内容精简，不咸不淡，期盼探讨。微信公众号：芋道源码【纯源码分享公众号】&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-个人博客" class="anchor" aria-hidden="true" href="#个人博客"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;个人博客&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d96428a465ca0849728c95a1edb3b68e314d16ad/687474703a2f2f7777772e696f636f6465722e636e2f696d616765732f636f6d6d6f6e2f7765636861745f6d702e6a706567"&gt;&lt;img src="https://camo.githubusercontent.com/d96428a465ca0849728c95a1edb3b68e314d16ad/687474703a2f2f7777772e696f636f6465722e636e2f696d616765732f636f6d6d6f6e2f7765636861745f6d702e6a706567" alt="" data-canonical-src="http://www.iocoder.cn/images/common/wechat_mp.jpeg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="slightly_smiling_face" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f642.png"&gt;🙂&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="slightly_smiling_face" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f642.png"&gt;🙂&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="slightly_smiling_face" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f642.png"&gt;🙂&lt;/g-emoji&gt;关注**微信公众号：【芋道源码】**有福利：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;RocketMQ / MyCAT / Sharding-JDBC &lt;strong&gt;所有&lt;/strong&gt;源码分析文章列表&lt;/li&gt;
&lt;li&gt;RocketMQ / MyCAT / Sharding-JDBC &lt;strong&gt;中文注释源码 GitHub 地址&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;您对于源码的疑问每条留言&lt;strong&gt;都&lt;/strong&gt;将得到&lt;strong&gt;认真&lt;/strong&gt;回复。&lt;strong&gt;甚至不知道如何读源码也可以请教噢&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;新的&lt;/strong&gt;源码解析文章&lt;strong&gt;实时&lt;/strong&gt;收到通知。&lt;strong&gt;每周更新一篇左右&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a id="user-content-联系方式" class="anchor" aria-hidden="true" href="#联系方式"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;联系方式&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;公众号：芋道源码&lt;/li&gt;
&lt;li&gt;掘金-Java交流群 : 217878901&lt;/li&gt;
&lt;li&gt;知识星球：&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/179783aca15a7a47ef43832ba39dcd9951390036/687474703a2f2f7777772e696f636f6465722e636e2f696d616765732f4172636869746563747572652f323031375f31325f32392f30312e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/179783aca15a7a47ef43832ba39dcd9951390036/687474703a2f2f7777772e696f636f6465722e636e2f696d616765732f4172636869746563747572652f323031375f31325f32392f30312e706e67" alt="知识星球" data-canonical-src="http://www.iocoder.cn/images/Architecture/2017_12_29/01.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-文章索引blog-暂停更新请关注微信公众号" class="anchor" aria-hidden="true" href="#文章索引blog-暂停更新请关注微信公众号"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;文章索引(Blog 暂停更新，请关注微信公众号)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Architecture&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/YunaiV/Blog/blob/master/Architecture/0001-%E8%B0%88%E8%B0%88ID.md"&gt;扯扯ID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/YunaiV/Blog/blob/master/Architecture/0002-%E6%89%AF%E6%89%AF%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95.md"&gt;谈谈单元测试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Architecture/books-recommended/?github" rel="nofollow"&gt;《2018 Java 后端工程师的书单推荐》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Entity/good-collection/?gtihub" rel="nofollow"&gt;《数据库实体设计》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RPC 框架 &lt;strong&gt;Dubbo&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 调试环境搭建》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 项目结构一览》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— API 配置（一）之应用》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— API 配置（二）之服务提供者》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— API 配置（三）之服务消费者》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 属性配置》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— XML 配置》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 核心流程一览》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 拓展机制 SPI》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 线程池》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 服务暴露（一）之本地暴露（Injvm）》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 服务暴露（二）之远程暴露（Dubbo）》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 服务引用（一）之本地引用（Injvm）》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 服务引用（二）之远程引用（Dubbo）》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— Zookeeper 客户端》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 注册中心（一）之抽象 API》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 注册中心（二）之 Zookeeper》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 注册中心（三）之 Redis》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 动态编译（一）之 Javassist》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 动态代理（一）之 Javassist》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 动态代理（二）之 JDK》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 动态代理（三）之本地存根 Stub》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 服务调用（一）之本地调用（Injvm）》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 服务调用（二）之远程调用（Dubbo）【1】通信实现》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 服务调用（二）之远程调用（Dubbo）【2】同步调用》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 服务调用（三）之远程调用（Dubbo）【3】异步调用》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 服务调用（三）之远程调用（HTTP）》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 服务调用（四）之远程调用（Hessian）》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 服务调用（五）之远程调用（WebService）》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 服务调用（六）之远程调用（REST）》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 服务调用（七）之远程调用（WebService）》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 服务调用（八）之远程调用（Redis）》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 服务调用（九）之远程调用（Memcached）》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 调用特性（一）之回声测试》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 调用特性（二）之泛化引用》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 调用特性（二）之泛化实现》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 过滤器（一）之 ClassLoaderFilter》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 过滤器（二）之 ContextFilter》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 过滤器（三）之 AccessLogFilter》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 过滤器（四）之 ActiveLimitFilter &amp;amp;&amp;amp; ExecuteLimitFilter》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 过滤器（五）之 TimeoutFilter》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 过滤器（六）之 DeprecatedFilter》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 过滤器（七）之 ExceptionFilter》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 过滤器（八）之 TokenFilter》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 过滤器（九）之 TpsLimitFilter》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 过滤器（十）之 CacheFilter》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 过滤器（十一）之 ValidationFilter》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— NIO 服务器（一）之抽象 API》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— NIO 服务器（二）之 Transport 层》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— NIO 服务器（三）之 Telnet 层》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— NIO 服务器（四）之 Exchange 层》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— NIO 服务器（五）之 Buffer 层》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— NIO 服务器（六）之 Netty4 实现》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— NIO 服务器（七）之 Netty3 实现》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— HTTP 服务器》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 序列化（一）之总体实现》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 序列化（二）之 Dubbo 实现》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 序列化（三）之 Kryo 实现》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码分析 —— 服务容器》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码解析 —— 集群容错（一）之抽象 API》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码解析 —— 集群容错（二）之 Cluster 实现》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码解析 —— 集群容错（三）之 Directory 实现》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码解析 —— 集群容错（四）之 LoadBalance 实现》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码解析 —— 集群容错（五）之 Merger 实现》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码解析 —— 集群容错（六）之 Configurator 实现》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码解析 —— 集群容错（七）之 Router 实现》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码解析 —— 集群容错（八）之 Mock 实现》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码解析 —— 优雅停机》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Dubbo/good-collection?github&amp;amp;1610" rel="nofollow"&gt;《精尽 Dubbo 源码解析 —— 日志适配》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网络应用框架 &lt;strong&gt;Netty&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码分析 —— 调试环境搭建》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码分析 —— NIO 基础（一）之简介》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码分析 —— NIO 基础（二）之 Channel》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码分析 —— NIO 基础（三）之 Buffer》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码分析 —— NIO 基础（四）之 Selector》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码分析 —— NIO 基础（五）之示例》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码分析 —— Netty 简介（一）之项目结构》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码分析 —— Netty 简介（二）之核心组件》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码分析 —— 启动（一）之服务端》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码分析 —— 启动（二）之客户端》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— EventLoop（一）之 Reactor 模型》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— EventLoop（二）之 EventLoopGroup》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— EventLoop（三）之 EventLoop 初始化》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— EventLoop（四）之 EventLoop 运行》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— EventLoop（五）之 EventLoop 处理 IO 事件》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— EventLoop（六）之 EventLoop 处理普通任务》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— EventLoop（七）之 EventLoop 处理定时任务》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— EventLoop（八）之 EventLoop 优雅关闭》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— ChannelPipeline（一）之初始化》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— ChannelPipeline（二）之添加 ChannelHandler》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— ChannelPipeline（三）之移除 ChannelHandler》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— ChannelPipeline（四）之 Outbound 事件的传播》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— ChannelPipeline（五）之 Inbound 事件的传播》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— ChannelPipeline（六）之异常事件的传播》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Channel（一）之简介》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Channel（二）之 accept 操作》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Channel（三）之 read 操作》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Channel（四）之 write 操作》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Channel（五）之 flush 操作》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Channel（六）之 writeAndFlush 操作》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Channel（七）之 close 操作》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Channel（八）之 disconnect 操作》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Buffer 之 ByteBuf（一）简介》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Buffer 之 ByteBuf（二）核心子类》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Buffer 之 ByteBuf（三）内存泄露检测》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Buffer 之 ByteBuf（四）其它子类》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Buffer 之 ByteBufAllocator（一）简介》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Buffer 之 ByteBufAllocator（二）UnpooledByteBufAllocator》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Buffer 之 ByteBufAllocator（三）PooledByteBufAllocator》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Buffer 之 Jemalloc（一）简介》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Buffer 之 Jemalloc（二）PoolChunk》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Buffer 之 Jemalloc（三）PoolSubpage》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Buffer 之 Jemalloc（四）PoolChunkList》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Buffer 之 Jemalloc（五）PoolArena》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Buffer 之 Jemalloc（六）PoolThreadCache》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— ChannelHandler（一）之简介》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— ChannelHandler（二）之 ChannelInitializer》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— ChannelHandler（三）之 SimpleChannelInboundHandler》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— ChannelHandler（四）之 LoggingHandler》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— ChannelHandler（五）之 IdleStateHandler》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— ChannelHandler（六）之 AbstractTrafficShapingHandler》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Codec 之 ByteToMessageDecoder（一）Cumulator》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Codec 之 ByteToMessageDecoder（二）FrameDecoder》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Codec 之 MessageToByteEncoder》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Codec 之 ByteToMessageCodec》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Codec 之 MessageToMessageCodec》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Util 之 Future》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Util 之 FastThreadLocal》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Util 之 Recycler》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Util 之 HashedWheelTimer》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Netty/Netty-collection?github&amp;amp;1612" rel="nofollow"&gt;《精尽 Netty 源码解析 —— Util 之 MpscUnboundedArrayQueue》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;队列中间件 &lt;strong&gt;RocketMQ&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/RocketMQ/why-read-RocketMQ-source-code?github&amp;amp;1601" rel="nofollow"&gt;《分布式消息队列 RocketMQ 源码分析 —— 为什么阅读 RocketMQ 源码？》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/RocketMQ/namesrv-intro?github&amp;amp;1601" rel="nofollow"&gt;《分布式消息队列 RocketMQ 之 Namesrv 小结》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/RocketMQ/topic?github&amp;amp;1601" rel="nofollow"&gt;《分布式消息队列 RocketMQ 源码分析 —— Topic》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/RocketMQ/message?github&amp;amp;1601" rel="nofollow"&gt;《分布式消息队列 RocketMQ 源码分析 —— Message》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/RocketMQ/message-send-and-receive?github&amp;amp;1601" rel="nofollow"&gt;《分布式消息队列 RocketMQ 源码分析 —— Message 发送与接收》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/RocketMQ/message-store?github&amp;amp;1601" rel="nofollow"&gt;《分布式消息队列 RocketMQ 源码分析 —— Message 存储》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/RocketMQ/message-pull-and-consume-first?github&amp;amp;1601" rel="nofollow"&gt;《分布式消息队列 RocketMQ 源码分析 —— Message 拉取与消费（上）》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/RocketMQ/message-pull-and-consume-second?github&amp;amp;1601" rel="nofollow"&gt;《分布式消息队列 RocketMQ 源码分析 —— Message 拉取与消费（下）》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/RocketMQ/store-init-and-shutdown?github&amp;amp;1601" rel="nofollow"&gt;《分布式消息队列 RocketMQ 源码分析 —— Store 初始化与关闭》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/RocketMQ/message-send-and-consume-orderly?github&amp;amp;1601" rel="nofollow"&gt;《分布式消息队列 RocketMQ 源码分析 —— Message 顺序发送与消费》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/RocketMQ/high-availability?github&amp;amp;1601" rel="nofollow"&gt;《分布式消息队列 RocketMQ 源码分析 —— 高可用》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/RocketMQ/message-schedule-and-retry?github&amp;amp;1601" rel="nofollow"&gt;《分布式消息队列 RocketMQ 源码分析 —— 定时消息与消息重试》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/RocketMQ/filtersrv?github&amp;amp;1601" rel="nofollow"&gt;《分布式消息队列 RocketMQ 源码分析 —— Filtersrv》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/RocketMQ/message-transaction?github&amp;amp;1601" rel="nofollow"&gt;《分布式消息队列 RocketMQ 源码分析 —— 事务消息》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库中间件 &lt;strong&gt;Sharding-JDBC&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Sharding-JDBC/why-read-Sharding-JDBC-source-code?github&amp;amp;1602" rel="nofollow"&gt;《Sharding-JDBC 源码分析 —— 为什么阅读 Sharding-JDBC 源码？》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Sharding-JDBC/sql-parse-1?github&amp;amp;1602" rel="nofollow"&gt;《Sharding-JDBC 源码分析 —— SQL 解析（一）之词法解析》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Sharding-JDBC/sql-parse-2?github&amp;amp;1602" rel="nofollow"&gt;《Sharding-JDBC 源码分析 —— SQL 解析（二）之SQL解析》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Sharding-JDBC/sql-parse-3?github&amp;amp;1602" rel="nofollow"&gt;《Sharding-JDBC 源码分析 —— SQL 解析（三）之查询SQL》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Sharding-JDBC/sql-parse-4?github&amp;amp;1602" rel="nofollow"&gt;《Sharding-JDBC 源码分析 —— SQL 解析（四）之插入SQL》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Sharding-JDBC/sql-parse-5?github&amp;amp;1602" rel="nofollow"&gt;《Sharding-JDBC 源码分析 —— SQL 解析（五）之更新SQL》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Sharding-JDBC/sql-parse-6?github&amp;amp;1602" rel="nofollow"&gt;《Sharding-JDBC 源码分析 —— SQL 解析（六）之删除SQL》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Sharding-JDBC/sql-parse-7?github&amp;amp;1602" rel="nofollow"&gt;《Sharding-JDBC 源码分析 —— SQL 解析（七）之DDL》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Sharding-JDBC/sql-route-1?github&amp;amp;1602" rel="nofollow"&gt;《Sharding-JDBC 源码分析 —— SQL 路由（一）之分库分表配置》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Sharding-JDBC/sql-route-2?github&amp;amp;1602" rel="nofollow"&gt;《Sharding-JDBC 源码分析 —— SQL 路由（二）之分库分表路由》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Sharding-JDBC/sql-route-3?github&amp;amp;1602" rel="nofollow"&gt;《Sharding-JDBC 源码分析 —— SQL 路由（三）之Spring与YAML配置》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Sharding-JDBC/sql-rewrite?github&amp;amp;1602" rel="nofollow"&gt;《Sharding-JDBC 源码分析 —— SQL 改写》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Sharding-JDBC/distributed-id?github&amp;amp;1602" rel="nofollow"&gt;《Sharding-JDBC 源码分析 —— 分布式主键》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Sharding-JDBC/sql-execute?github&amp;amp;1602" rel="nofollow"&gt;《Sharding-JDBC 源码分析 —— SQL 执行》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Sharding-JDBC/result-merger?github&amp;amp;1602" rel="nofollow"&gt;《Sharding-JDBC 源码分析 —— 结果归并》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Sharding-JDBC/jdbc-implement-and-read-write-splitting?github&amp;amp;1602" rel="nofollow"&gt;《Sharding-JDBC 源码分析 —— JDBC实现与读写分离》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Sharding-JDBC/transaction-bed?github&amp;amp;1602" rel="nofollow"&gt;《Sharding-JDBC 源码分析 —— 分布式事务（一）之最大努力型》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Sharding-JDBC/transaction-tcc?github&amp;amp;1602" rel="nofollow"&gt;《Sharding-JDBC 源码分析 —— 分布式事务（二）之事务补偿型》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库中间件 &lt;strong&gt;MyCAT&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyCAT/why-read-MyCAT-source-code?github&amp;amp;1603" rel="nofollow"&gt;《MyCAT 源码分析 —— 为什么阅读 MyCAT 源码？》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyCAT/build-debugging-environment?github&amp;amp;1603" rel="nofollow"&gt;《MyCAT 源码分析 —— 调试环境搭建》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyCAT/single-db-single-table-insert?github&amp;amp;1603" rel="nofollow"&gt;《MyCAT 源码分析 —— 【单库单表】插入》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyCAT/single-db-single-table-select?github&amp;amp;1603" rel="nofollow"&gt;《MyCAT 源码分析 —— 【单库单表】查询》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyCAT/sharding-result-merge-first?github&amp;amp;1603" rel="nofollow"&gt;《MyCAT 源码解析 —— 分片结果合并（一）》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyCAT/two-table-share-join?github&amp;amp;1603" rel="nofollow"&gt;《MyCAT 源码分析  —— 跨库两表Join》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyCAT/xa-distributed-transaction?github&amp;amp;1603" rel="nofollow"&gt;《MyCAT 源码分析  —— XA分布式事务》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyCAT/what-is-PreparedStatement?github&amp;amp;1603" rel="nofollow"&gt;《MyCAT 源码分析  —— PreparedStatement 重新入门》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyCAT/connect-mongodb?github&amp;amp;1603" rel="nofollow"&gt;《MyCAT 源码分析  —— SQL ON MongoDB》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TCC事务中间件 &lt;strong&gt;TCC-Transaction&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/TCC-Transaction/build-debugging-environment?github&amp;amp;1606" rel="nofollow"&gt;《TCC-Transaction 源码分析 —— 调试环境搭建》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/TCC-Transaction/tcc-core?github&amp;amp;1606" rel="nofollow"&gt;《TCC-Transaction 源码分析 —— TCC 实现》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/TCC-Transaction/transaction-repository?github&amp;amp;1606" rel="nofollow"&gt;《TCC-Transaction 源码分析 —— 事务存储器》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/TCC-Transaction/transaction-recovery?github&amp;amp;1606" rel="nofollow"&gt;《TCC-Transaction 源码分析 —— 事务恢复》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/TCC-Transaction/console?github&amp;amp;1606" rel="nofollow"&gt;《TCC-Transaction 源码分析 —— 运维平台》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/TCC-Transaction/dubbo-support?github&amp;amp;1606" rel="nofollow"&gt;《TCC-Transaction 源码分析 —— Dubbo 支持》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/TCC-Transaction/http-sample?github&amp;amp;1606" rel="nofollow"&gt;《TCC-Transaction 源码分析 —— 项目实战》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调度作业中间件 &lt;strong&gt;Elastic-Job-Lite&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/why-read-Elastic-Job-source-code?github&amp;amp;1604" rel="nofollow"&gt;《Elastic-Job 源码分析 —— 为什么阅读 Elastic-Job 源码？》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/job-config?github&amp;amp;1604" rel="nofollow"&gt;《Elastic-Job-Lite 源码分析 —— 作业配置》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/job-init?github&amp;amp;1604" rel="nofollow"&gt;《Elastic-Job-Lite 源码分析 —— 作业初始化》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/job-execute?github&amp;amp;1604" rel="nofollow"&gt;《Elastic-Job-Lite 源码分析 —— 作业执行》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/reg-center-zookeeper?github&amp;amp;1604" rel="nofollow"&gt;《Elastic-Job-Lite 源码分析 —— 注册中心》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/job-storage?github&amp;amp;1604" rel="nofollow"&gt;《Elastic-Job-Lite 源码分析 —— 作业数据存储》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/reg-center-zookeeper-listener?github&amp;amp;1604" rel="nofollow"&gt;《Elastic-Job-Lite 源码分析 —— 注册中心监听器》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/election?github&amp;amp;1604" rel="nofollow"&gt;《Elastic-Job-Lite 源码分析 —— 主节点选举》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/job-sharding-strategy?github&amp;amp;1604" rel="nofollow"&gt;《Elastic-Job-Lite 源码分析 —— 作业分片策略》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/job-sharding?github&amp;amp;1604" rel="nofollow"&gt;《Elastic-Job-Lite 源码分析 —— 作业分片》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/job-failover?github&amp;amp;1604" rel="nofollow"&gt;《Elastic-Job-Lite 源码分析 —— 作业失效转移》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/job-event-trace?github&amp;amp;1604" rel="nofollow"&gt;《Elastic-Job-Lite 源码分析 —— 作业事件追踪》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/job-listener?github&amp;amp;1604" rel="nofollow"&gt;《Elastic-Job-Lite 源码分析 —— 作业监听器》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/reconcile?github&amp;amp;1604" rel="nofollow"&gt;《Elastic-Job-Lite 源码分析 —— 自诊断修复》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/job-monitor?github&amp;amp;1604" rel="nofollow"&gt;《Elastic-Job-Lite 源码分析 —— 作业监控服务》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/job-console?github&amp;amp;1604" rel="nofollow"&gt;《Elastic-Job-Lite 源码分析 —— 运维平台》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调度作业中间件 &lt;strong&gt;Elastic-Job-Cloud&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/cloud-job-config?github&amp;amp;1605" rel="nofollow"&gt;《Elastic-Job-Cloud 源码分析 —— 作业配置》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/cloud-job-scheduler-and-executor-first?github&amp;amp;1605" rel="nofollow"&gt;《Elastic-Job-Cloud 源码分析 —— 作业调度（一）》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/cloud-job-scheduler-and-executor-second?github&amp;amp;1605" rel="nofollow"&gt;《Elastic-Job-Cloud 源码分析 —— 作业调度（二）》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/cloud-local-executor?github&amp;amp;1605" rel="nofollow"&gt;《Elastic-Job-Cloud 源码分析 —— 本地运行模式》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/cloud-job-failover?github&amp;amp;1605" rel="nofollow"&gt;《Elastic-Job-Cloud 源码分析 —— 作业失效转移》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Elastic-Job/cloud-high-availability?github&amp;amp;1605" rel="nofollow"&gt;《Elastic-Job-Cloud 源码分析 —— 高可用》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注册中心 &lt;strong&gt;Eureka&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/project-structure?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— 项目结构简介》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/build-debugging-environment?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— 调试环境搭建》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/eureka-client-init-first?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— Eureka-Client 初始化（一）之 EurekaInstanceConfig》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/eureka-client-init-second?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— Eureka-Client 初始化（二）之 EurekaClientConfig》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/eureka-client-init-third?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— Eureka-Client 初始化（三）之 EurekaClient》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/eureka-server-init-first?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— Eureka-Server 启动（一）之 ServerConfig》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/eureka-server-init-second?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— Eureka-Server 启动（二）之 EurekaBootStrap》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/instance-registry-class-diagram?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— 注册表 InstanceRegistry 类关系》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/instance-registry-register?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— 应用实例注册发现（一）之注册》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/instance-registry-renew?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— 应用实例注册发现（二）之续租》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/instance-registry-cancel?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— 应用实例注册发现（三）之下线》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/instance-registry-self-preservation?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— 应用实例注册发现（四）之自我保护机制》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/instance-registry-evict?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— 应用实例注册发现（五）之过期》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/instance-registry-fetch-all?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— 应用实例注册发现（六）之全量获取》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/instance-registry-fetch-delta?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— 应用实例注册发现（七）之增量获取》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/instance-registry-override-status?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— 应用实例注册发现（八）之覆盖状态》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/instance-registry-read-write-lock?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— Eureka源码解析 —— 应用实例注册发现 （九）之岁月是把萌萌的读写锁》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/batch-tasks?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— 任务批处理》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/end-point-and-resolver?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— EndPoint 与 解析器》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/transport?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— 网络通信》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/server-cluster?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— Eureka-Server 集群同步》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/rate-limiter?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— 基于令牌桶算法的 RateLimiter》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Eureka/string-cache?github&amp;amp;1607" rel="nofollow"&gt;《Eureka 源码解析 —— StringCache》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;熔断器 &lt;strong&gt;Hystrix&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Hystrix/build-debugging-environment?github&amp;amp;1608" rel="nofollow"&gt;《Hystrix 源码解析 —— 调试环境搭建》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Hystrix/command-execute-mode?github&amp;amp;1608" rel="nofollow"&gt;《Hystrix 源码解析 —— 执行命令方式》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Hystrix/command-execute-result-cache?github&amp;amp;1608" rel="nofollow"&gt;《Hystrix 源码解析 —— 执行结果缓存》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Hystrix/command-execute-first-run?github&amp;amp;1608" rel="nofollow"&gt;《Hystrix 源码解析 —— 命令执行（一）之正常执行逻辑》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Hystrix/command-execute-second-isolation-strategy?github&amp;amp;1608" rel="nofollow"&gt;《Hystrix 源码解析 —— 命令执行（二）之执行隔离策略》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Hystrix/command-execute-third-timeout?github&amp;amp;1608" rel="nofollow"&gt;《Hystrix 源码解析 —— 命令执行（三）之执行超时》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Hystrix/command-execute-fourth-fallback?github&amp;amp;1608" rel="nofollow"&gt;《Hystrix 源码解析 —— 请求执行（四）之失败回退逻辑》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Hystrix/command-collapser-execute?github&amp;amp;1608" rel="nofollow"&gt;《Hystrix 源码解析 —— 命令合并执行》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Hystrix/circuit-breaker?github&amp;amp;1608" rel="nofollow"&gt;《Hystrix 源码解析 —— 断路器 HystrixCircuitBreaker》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网关 &lt;strong&gt;Spring-Cloud-Gateway&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/build-debugging-environment?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 调试环境搭建》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/init?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 网关初始化》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/route-definition-locator-intro?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 路由（1.1）之 RouteDefinitionLocator 一览》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/route-definition-locator-properties?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 路由（1.2）之 PropertiesRouteDefinitionLocator 配置文件》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/route-definition-locator-repository?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 路由（1.3）之 RouteDefinitionRepository 存储器》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/route-definition-locator-discover-client?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 路由（1.4）之 DiscoveryClientRouteDefinitionLocator 注册中心》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/route-locator-intro?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 路由（2.1）之 RouteLocator 一览》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/route-locator-route-definition?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 路由（2.2）之 RouteDefinitionRouteLocator 路由配置》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/route-locator-route-custom-java?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 路由（2.3）之 Java 自定义 RouteLocator》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/route-locator-route-custom-kotlin?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 路由（2.4）之 Kotlin 自定义 RouteLocator》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/handler-route-predicate-factory?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 处理器 (3.1) 之 RoutePredicateFactory  路由谓语工厂》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/handler-route-predicate-handler-mapping?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 处理器 (3.2) 之 RoutePredicateHandlerMapping 路由匹配》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/handler-filtering-web-handler?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 处理器 (3.3) 之 FilteringWebHandler 创建过滤器链》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/filter-intro?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 过滤器 (4.1) 之 GatewayFilter 一览》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/filter-factory?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 过滤器 (4.2) 之 GatewayFilterFactory 过滤器工厂》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/filter-route-to-request?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 过滤器 (4.3) 之 RouteToRequestUrlFilter》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/filter-load-balancer-client?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 过滤器 (4.4) 之 LoadBalancerClientFilter 负载均衡》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/filter-forward-routing?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 过滤器 (4.5) 之 ForwardRoutingFilter》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/filter-websocket-routing?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 过滤器 (4.6) 之 WebSocketRoutingFilter》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/filter-netty-routing?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 过滤器 (4.7) 之 NettyRoutingFilter》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/filter-web-client-http-routing?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 过滤器 (4.8) 之 WebClientHttpRoutingFilter》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/filter-hystrix?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 过滤器 (4.9) 之 HystrixGatewayFilterFactory 熔断》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/filter-request-rate-limiter?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 过滤器 (4.10) 之 RequestRateLimiterGatewayFilterFactory 请求限流》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Cloud-Gateway/manager-http-api?github&amp;amp;1609" rel="nofollow"&gt;《Spring-Cloud-Gateway 源码解析 —— 网关管理 HTTP API》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置中心 &lt;strong&gt;Apollo&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/build-debugging-environment?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— 调试环境搭建》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/portal-create-app?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— Portal 创建 App》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/portal-create-cluster?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— Portal 创建 Cluster》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/portal-create-namespace?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— Portal 创建 Namespace》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/portal-associate-namespace?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— Portal 关联 Namespace》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/portal-create-item?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— Portal 创建 Item》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/portal-update-item-set?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— Portal 批量变更 Item》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/admin-service-lock-namespace?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— Admin Service 锁定 Namespace》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/portal-publish?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— Portal 发布配置》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/admin-server-send-release-message?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— Admin Service 发送 ReleaseMessage》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/config-service-notifications?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— Config Service 通知配置变化》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/config-service-config-query-api?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— Config Service 配置读取接口》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/client-polling-config?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— Client 轮询配置》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/config-service-audit-instance?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— Config Service 记录 Instance》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/portal-create-namespace-branch?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— Portal 创建灰度》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/portal-modify-namespace-branch-gray-rules?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— Portal 配置灰度规则》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/portal-publish-namespace-branch?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— Portal 灰度发布》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/portal-publish-namespace-branch-to-master?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— Portal 灰度全量发布》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/server-config?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— 服务自身配置 ServerConfig》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/config-service-audit?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— Config Service 操作审计日志 Audit》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/portal-auth-1?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— Portal 认证与授权（一）之认证》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/portal-auth-2?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— Portal 认证与授权（二）之授权》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/openapi-auth-1?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— OpenAPI 认证与授权（一）之认证》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/openapi-auth-2?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— OpenAPI 认证与授权（二）之授权》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/service-register-discovery?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— 服务的注册与发现》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/client-config-api-1?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— 客户端 API 配置（一）之一览》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/client-config-api-2?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— 客户端 API 配置（二）之 Config》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/client-config-api-3?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— 客户端 API 配置（三）之 ConfigFile》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/client-config-api-4?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— 客户端 API 配置（四）之 ConfigRepository》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/client-config-spring-1?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— 客户端配置 Spring 集成（一）之 XML 配置》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/client-config-spring-2?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— 客户端配置 Spring 集成（二）之注解配置》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Apollo/client-config-spring-3?github&amp;amp;1611" rel="nofollow"&gt;《Apollo 源码解析 —— 客户端配置 Spring 集成（三）之外部化配置》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;链路追踪 &lt;strong&gt;SkyWalking&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/build-debugging-environment?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— 调试环境搭建》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/agent-init?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Agent 初始化》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/agent-plugin-system?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Agent 插件体系》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/collector-init?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Collector 初始化》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/collector-cluster-module?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Collector Cluster 集群管理》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/collector-client-component?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Collector Client Component 客户端组件》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/collector-server-component?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Collector Server Component 服务器组件》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/collector-jetty-server-module?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Collector Jetty Server Manager》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/collector-grpc-server-module?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Collector gRPC Server Manager》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/collector-naming-server?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Collector Naming Server 命名服务》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/collector-queue-module?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Collector Queue 队列组件》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/collector-storage-module?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Collector Storage 存储组件》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/collector-streaming-first?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Collector Streaming Computing 流式处理（一）》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/collector-streaming-second?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Collector Streaming Computing 流式处理（二）》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/collector-cache-module?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Collector Cache 缓存组件》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/collector-remote-module?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Collector Remote 远程通信服务》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/data-carrier?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— DataCarrier 异步处理库》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/agent-remote-manager?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Agent Remote 远程通信服务》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/register?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— 应用于应用实例的注册》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/agent-dictionary?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Agent DictionaryManager 字典管理》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/agent-collect-trace?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Agent 收集 Trace 数据》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/agent-send-trace?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Agent 发送 Trace 数据》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/collector-receive-trace?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Collector 接收 Trace 数据》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/collector-store-trace?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Collector 存储 Trace 数据》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/jvm-collect?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— JVM 指标的收集与存储》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/ui-1-application?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— 运维界面（一）之应用视角》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/ui-2-instance?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— 运维界面（二）之应用实例视角》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/ui-3-trace?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— 运维界面（三）之链路追踪视角》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/ui-4-operation?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— 运维界面（四）之操作视角》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/@trace-for-any-methods?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— @Trace 注解想要追踪的任何方法》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/trace-id-integrate-into-logs?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— traceId 集成到日志组件》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/agent-plugin-tomcat?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Agent 插件（一）之 Tomcat》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/agent-plugin-dubbo?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Agent 插件（二）之 Dubbo》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/agent-plugin-spring-mvc?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Agent 插件（三）之 SpringMVC》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/SkyWalking/agent-plugin-mongodb?github&amp;amp;1611" rel="nofollow"&gt;《SkyWalking 源码分析 —— Agent 插件（四）之 MongoDB》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据持久层框架 &lt;strong&gt;MyBatis&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 面试题》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— 调试环境搭建》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— 项目结构一览》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— 解析器模块》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— 反射模块》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— 异常模块》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— 数据源模块》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— 事务模块》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— 缓存模块》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— 类型模块》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— IO 模块》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— 日志模块》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— 注解模块》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— Binding 模块》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— MyBatis 初始化（一）之加载 mybatis-config》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— MyBatis 初始化（二）之加载 Mapper 映射配置文件》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— MyBatis 初始化（三）之加载 Statement 配置》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— MyBatis 初始化（四）之加载注解配置》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— SQL 初始化（上）之 SqlNode》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— SQL 初始化（下）之 SqlSource》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— SQL 执行（一）之 Executor》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— SQL 执行（二）之 StatementHandler》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— SQL 执行（三）之 KeyGenerator》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— SQL 执行（四）之 ResultSetHandler》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— SQL 执行（五）之延迟加载》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— 会话 SqlSession》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— 插件体系（一）之原理》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码分析 —— 插件体系（二）之 PageHelper》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码解析 —— Spring 集成（一）之调试环境搭建》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码解析 —— Spring 集成（二）之初始化》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码解析 —— Spring 集成（三）之 SqlSession》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码解析 —— Spring 集成（四）之事务》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/MyBatis/good-collection?github&amp;amp;1613" rel="nofollow"&gt;《精尽 MyBatis 源码解析 —— Spring 集成（五）之批处理》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;J2EE 框架 &lt;strong&gt;Spring Framework&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《精尽 Spring 面试题》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《精尽 Spring 学习指南》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《精尽 Spring 源码分析 —— 调试环境搭建》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之深入理解 Spring IoC》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之 Spring 统一资源加载策略》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之加载 BeanDefinition》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之获取验证模型》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之获取 Document 对象》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之注册 BeanDefinitions》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之解析Bean：解析 import 标签》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之解析  标签：开启解析进程》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之解析  标签：BeanDefinition》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之解析  标签：meta、lookup-method、replace-method》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之解析  标签：constructor-arg、property、qualifier》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之解析  标签：解析自定义标签》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之解析自定义标签》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之注册解析的 BeanDefinitions》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之装载 BeanDefinitions 总结》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之开启 Bean 的加载》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之加载 Bean：从单例缓存中获取单例 Bean》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之加载 Bean：parentBeanFactory 与依赖处理》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之加载 Bean：分析各 scope 的 Bean 创建》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之加载 Bean：创建 Bean（一）之主流程》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之加载 Bean：创建 Bean（二）之实例化 Bean 对象(1)》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之加载 Bean：创建 Bean（三）之实例化 Bean 对象(2)》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之加载 Bean：创建 Bean（四）之属性填充》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之加载 Bean：创建 Bean（五）之循环依赖处理》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之加载 Bean：创建 Bean（六）之初始化 Bean 对象》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之加载 Bean：总结》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之深入分析 Aware 接口》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之深入分析 ﻿BeanPostProcessor》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之深入分析 InitializingBean 和 init-method》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之深入分析 Bean 的生命周期》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之深入分析 BeanFactoryPostProcessor》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之深入分析 PropertyPlaceholderConfigurer》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之 PropertyPlaceholderConfigurer 的应用》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之深入分析 PropertyPlaceholderConfigurer》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之深入分析 Bean 的类型转换体系》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之自定义类型转换器》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之分析 BeanWrapper》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之 Bean 的实例化策略：InstantiationStrategy》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《IoC 之 BeanDefinition 注册表：BeanDefinitionRegistry》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《环境 &amp;amp; 属性：PropertySource、Environment、Profile》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《ApplicationContext 相关接口架构分析》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《深入分析 ApplicationContext 的 refresh()》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《4 张图带你读懂 Spring IoC 的世界》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《精尽 Spring 源码分析 —— AOP 源码简单导读》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring/good-collection?github&amp;amp;1614" rel="nofollow"&gt;《精尽 Spring 源码分析 —— Transaction 源码简单导读》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MVC 框架 &lt;strong&gt;Spring MVC&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 面试题》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 学习指南》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码分析 —— 调试环境搭建》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码分析 —— 容器的初始化（一）之 Root WebApplicationContext 容器》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码分析 —— 容器的初始化（二）之 Servlet WebApplicationContext 容器》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码分析 —— 容器的初始化（三）之 Servlet 3.0 集成》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码分析 —— 容器的初始化（四）之 Spring Boot 集成》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码分析 —— 组件一览》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码分析 —— 请求处理一览》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码分析 —— HandlerMapping 组件（一）之 AbstractHandlerMapping》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码分析 —— HandlerMapping 组件（二）之 HandlerInterceptor》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码解析 —— HandlerMapping 组件（三）之 AbstractHandlerMethodMapping》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码解析 —— HandlerMapping 组件（四）之 AbstractUrlHandlerMapping》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码解析 —— HandlerAdapter 组件（一）之 HandlerAdapter》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码解析 —— HandlerAdapter 组件（二）之 ServletInvocableHandlerMethod》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码解析 —— HandlerAdapter 组件（三）之 HandlerMethodArgumentResolver》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码解析 —— HandlerAdapter 组件（四）之 HandlerMethodReturnValueHandler》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码解析 —— HandlerAdapter 组件（五）之 HttpMessageConverter》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码解析 —— HandlerExceptionResolver 组件》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码解析 —— RequestToViewNameTranslator 组件》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码解析 —— LocaleResolver 组件》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码解析 —— ThemeResolver 组件》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码解析 —— ViewResolver 组件》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-MVC/good-collection?github&amp;amp;1615" rel="nofollow"&gt;《精尽 Spring MVC 源码解析 —— MultipartResolver 组件》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Spring 应用开发框架 &lt;strong&gt;Spring Boot&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Boot/good-collection?github&amp;amp;1616" rel="nofollow"&gt;《精尽 Spring Boot 面试题》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Boot/good-collection?github&amp;amp;1616" rel="nofollow"&gt;《精尽 Spring Boot 学习指南》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Boot/good-collection?github&amp;amp;1616" rel="nofollow"&gt;《精尽 Spring Boot 源码分析 —— 调试环境搭建》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Boot/good-collection?github&amp;amp;1616" rel="nofollow"&gt;《精尽 Spring Boot 源码分析 —— 项目结构一览》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Boot/good-collection?github&amp;amp;1616" rel="nofollow"&gt;《精尽 Spring Boot 源码分析 —— SpringApplication》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Boot/good-collection?github&amp;amp;1616" rel="nofollow"&gt;《精尽 Spring Boot 源码分析 —— 自动配置》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Boot/good-collection?github&amp;amp;1616" rel="nofollow"&gt;《精尽 Spring Boot 源码分析 —— Condition》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Boot/good-collection?github&amp;amp;1616" rel="nofollow"&gt;《精尽 Spring Boot 源码分析 —— ServletWebServerApplicationContext》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Boot/good-collection?github&amp;amp;1616" rel="nofollow"&gt;《精尽 Spring Boot 源码分析 —— ReactiveWebServerApplicationContext》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Boot/good-collection?github&amp;amp;1616" rel="nofollow"&gt;《精尽 Spring Boot 源码分析 —— ApplicationContextInitializer》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Boot/good-collection?github&amp;amp;1616" rel="nofollow"&gt;《精尽 Spring Boot 源码分析 —— ApplicationListener》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Boot/good-collection?github&amp;amp;1616" rel="nofollow"&gt;《精尽 Spring Boot 源码分析 —— 配置加载》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Boot/good-collection?github&amp;amp;1616" rel="nofollow"&gt;《精尽 Spring Boot 源码分析 —— 日志系统》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Boot/good-collection?github&amp;amp;1616" rel="nofollow"&gt;《精尽 Spring Boot 源码分析 —— @ConfigurationProperties》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Boot/good-collection?github&amp;amp;1616" rel="nofollow"&gt;《精尽 Spring Boot 源码分析 —— BeanDefinitionLoader》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Boot/good-collection?github&amp;amp;1616" rel="nofollow"&gt;《精尽 Spring Boot 源码分析 —— SpringFactoriesLoader》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.iocoder.cn/Spring-Boot/good-collection?github&amp;amp;1616" rel="nofollow"&gt;《精尽 Spring Boot 源码分析 —— AutoConfigurationMetadataLoader》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>YunaiV</author><guid isPermaLink="false">https://github.com/YunaiV/Blog</guid><pubDate>Tue, 24 Dec 2019 00:14:00 GMT</pubDate></item><item><title>papers-we-love/papers-we-love #15 in Unknown languages, Today</title><link>https://github.com/papers-we-love/papers-we-love</link><description>&lt;p&gt;&lt;i&gt;Papers from the computer science community to read and discuss.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5c387976b2ea0897ea76eed52c762c712b4c38f3/687474703a2f2f70617065727377656c6f76652e6f72672f696d616765732f6c6f676f2d746f702e737667"&gt;&lt;img src="https://camo.githubusercontent.com/5c387976b2ea0897ea76eed52c762c712b4c38f3/687474703a2f2f70617065727377656c6f76652e6f72672f696d616765732f6c6f676f2d746f702e737667" alt="Papers We Love" data-canonical-src="http://paperswelove.org/images/logo-top.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://gitter.im/papers-we-love/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c325a0f367882a07ce762ce14b5c3682bbb7e772/68747470733a2f2f6261646765732e6769747465722e696d2f7061706572732d77652d6c6f76652f636f6d6d756e6974792e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/papers-we-love/community.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Papers We Love&lt;/strong&gt; (&lt;em&gt;PWL&lt;/em&gt;) is a community built around reading, discussing and learning more about academic computer science papers. This repository serves as a directory of some of the best papers the community can find, bringing together documents scattered across the web. You can also visit the &lt;a href="http://paperswelove.org/" rel="nofollow"&gt;Papers We Love site&lt;/a&gt; for more info.&lt;/p&gt;
&lt;p&gt;Due to &lt;a href="https://github.com/papers-we-love/papers-we-love/blob/master/.github/CONTRIBUTING.md#respect-content-licenses"&gt;licenses&lt;/a&gt; we cannot always host the papers themselves (when we do, you will see a &lt;g-emoji class="g-emoji" alias="scroll" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dc.png"&gt;📜&lt;/g-emoji&gt; emoji next to its title in the directory README) but we can provide links to their locations.&lt;/p&gt;
&lt;p&gt;If you enjoy the papers, perhaps stop by a local chapter meetup and join in on the vibrant discussions around them. You can also discuss &lt;em&gt;PWL&lt;/em&gt; events, the content in this repository, and/or anything related to &lt;em&gt;PWL&lt;/em&gt; on our &lt;a href="https://paperswelove.slack.com/messages/general/" rel="nofollow"&gt;Slack&lt;/a&gt;, after &lt;a href="http://papersweloveslack.herokuapp.com/" rel="nofollow"&gt;signing-up&lt;/a&gt; to join it, or on our &lt;em&gt;#paperswelove&lt;/em&gt; IRC channel on freenode.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-chapters" class="anchor" aria-hidden="true" href="#chapters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chapters&lt;/h3&gt;
&lt;p&gt;Here are our official chapters. Let us know if you are interested in &lt;a href="https://github.com/papers-we-love/papers-we-love/wiki/Creating-a-PWL-chapter"&gt;starting one&lt;/a&gt; in your city!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/papers-we-love-amsterdam/" rel="nofollow"&gt;Amsterdam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Papers-We-Love-Athens" rel="nofollow"&gt;Athens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Papers-We-Love-Atlanta" rel="nofollow"&gt;Atlanta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-we-love-Bangalore/" rel="nofollow"&gt;Bangalore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/papers-we-love-bcn/" rel="nofollow"&gt;Barcelona&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Beijing-Technology-Meetup-Group/" rel="nofollow"&gt;Beijing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-Belfast/" rel="nofollow"&gt;Belfast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-Berlin/" rel="nofollow"&gt;Berlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/groups/pwlbbsr/" rel="nofollow"&gt;Bhubaneswar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-Boston-Cambridge/" rel="nofollow"&gt;Boston&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/papers-we-love-bsb" rel="nofollow"&gt;Brasilia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-Boulder/" rel="nofollow"&gt;Boulder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/papers-we-love-bucharest/" rel="nofollow"&gt;Bucharest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://paperswelove.org/buenos-aires/" rel="nofollow"&gt;Buenos Aires&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-Cairo/" rel="nofollow"&gt;Cairo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-Chattanooga/" rel="nofollow"&gt;Chattanooga&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/papers-we-love-chicago/" rel="nofollow"&gt;Chicago&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-Columbus/" rel="nofollow"&gt;Columbus, Ohio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.papersdallas.com/" rel="nofollow"&gt;Dallas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Papers-We-Love-Gothenburg/" rel="nofollow"&gt;Gothenburg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/pwlgdl/" rel="nofollow"&gt;Guadalajara&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-Hamburg/" rel="nofollow"&gt;Hamburg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/papers-we-love-hyderabad/" rel="nofollow"&gt;Hyderabad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-Iasi/" rel="nofollow"&gt;Iasi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/techcorridorio" rel="nofollow"&gt;Iowa City&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/groups/PapersWeLoveKathmandu/" rel="nofollow"&gt;Kathmandu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/groups/PapersWeLoveKyiv" rel="nofollow"&gt;Kyiv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.paperswelovelb.club" rel="nofollow"&gt;Lebanon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/papers-we-love-london" rel="nofollow"&gt;London&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/papers-we-love-la" rel="nofollow"&gt;Los Angeles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-Madrid/" rel="nofollow"&gt;Madrid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/paperswelovemde/" rel="nofollow"&gt;Medellín&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-Montreal/" rel="nofollow"&gt;Montreal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Papers-We-Love-Mumbai/" rel="nofollow"&gt;Mumbai&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-Munich/" rel="nofollow"&gt;Munich&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/papers-we-love/" rel="nofollow"&gt;New York City&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-Paris/" rel="nofollow"&gt;Paris&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-Philadelphia/" rel="nofollow"&gt;Philadelphia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-PDX/" rel="nofollow"&gt;Portland&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Papers-We-Love-Porto" rel="nofollow"&gt;Porto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Doo-Things" rel="nofollow"&gt;Pune&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Papers-We-Love-Raleigh-Durham/" rel="nofollow"&gt;Raleigh-Durham&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-Reykjavik" rel="nofollow"&gt;Reykjavík&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/pt-BR/papers-we-love-rio-de-janeiro/" rel="nofollow"&gt;Rio de Janeiro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-San-Diego/" rel="nofollow"&gt;San Diego&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/papers-we-love-too/" rel="nofollow"&gt;San Francisco&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-Seattle/" rel="nofollow"&gt;Seattle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/seoul-tech-society" rel="nofollow"&gt;Seoul, Korea&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/groups/paperswelovesg/" rel="nofollow"&gt;Singapore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-in-saint-louis/" rel="nofollow"&gt;St. Louis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/pt-BR/Papers-We-Love-Teresina/" rel="nofollow"&gt;Teresina&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-Toronto/" rel="nofollow"&gt;Toronto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-Vienna/" rel="nofollow"&gt;Vienna&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Papers-We-Love-DC-NoVA/" rel="nofollow"&gt;Washington, DC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pwlwpg.ca/" rel="nofollow"&gt;Winnipeg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Papers-we-love-Zurich/" rel="nofollow"&gt;Zürich&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of our meetups follow our &lt;a href="CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-past-presentations" class="anchor" aria-hidden="true" href="#past-presentations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Past Presentations&lt;/h3&gt;
&lt;p&gt;Check out our &lt;a href="https://www.youtube.com/user/PapersWeLove" rel="nofollow"&gt;YouTube&lt;/a&gt; and &lt;a href="https://www.mixcloud.com/paperswelove/" rel="nofollow"&gt;MixCloud&lt;/a&gt; (audio-only format) channels.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-info" class="anchor" aria-hidden="true" href="#info"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Info&lt;/h2&gt;
&lt;p&gt;We're looking for pull requests related to papers we should add, better organization of the papers we do have, and/or links to other paper-repos we should point to.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-other-good-places-to-find-papers" class="anchor" aria-hidden="true" href="#other-good-places-to-find-papers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Good Places to Find Papers&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/keeroyz" rel="nofollow"&gt;2 Minute Papers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.alcatel-lucent.com/bell-labs-journals" rel="nofollow"&gt;Bell System Technical Journal, 1922-1983&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jeffhuang.com/best_paper_awards.html" rel="nofollow"&gt;Best Paper Awards in Computer Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://research.fb.com/publications/" rel="nofollow"&gt;Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://scholar.google.com/citations?view_op=top_venues&amp;amp;hl=en&amp;amp;vq=eng" rel="nofollow"&gt;Google Scholar&lt;/a&gt; (choose a subcategory)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://research.microsoft.com/apps/catalog/default.aspx?t=publications" rel="nofollow"&gt;Microsoft Research&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://alexott.net/en/fp/books/" rel="nofollow"&gt;Functional Programming Books Review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dspace.mit.edu/handle/1721.1/39813" rel="nofollow"&gt;MIT's Artificial Intelligence Lab Publications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dsrg.pdos.csail.mit.edu/" rel="nofollow"&gt;MIT's Distributed System's Reading Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://arxiv.org/" rel="nofollow"&gt;arXiv Paper Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scirate.com/" rel="nofollow"&gt;SciRate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://doc.cat-v.org/" rel="nofollow"&gt;cat-v.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://yarchive.net/comp/index.html" rel="nofollow"&gt;y-archive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.netlib.org/" rel="nofollow"&gt;netlib&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mmcgrana/services-engineering"&gt;Services Engineering Reading List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://christophermeiklejohn.com/distributed/systems/2013/07/12/readings-in-distributed-systems.html" rel="nofollow"&gt;Readings in Distributed Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://samth.github.io/gradual-typing-bib/" rel="nofollow"&gt;Gradual Typing Bibliography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.covert.io/the-definitive-security-datascience-and-machinelearning-guide/" rel="nofollow"&gt;Security Data Science Papers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cs.cmu.edu/~rwh/papers/index.html" rel="nofollow"&gt;Research Papers from Robert Harper, Carnegie Mellon University&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lobste.rs/t/pdf" rel="nofollow"&gt;Lobste.rs tagged as PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.acolyer.org/" rel="nofollow"&gt;The Morning Paper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please check out our &lt;a href="https://github.com/papers-we-love/papers-we-love/wiki/Other-Good-Sources-of-Reading-Material"&gt;wiki-page&lt;/a&gt; for links to blogs, books, exchanges that are worth a good read.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-to-read-a-paper" class="anchor" aria-hidden="true" href="#how-to-read-a-paper"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How To Read a Paper&lt;/h3&gt;
&lt;p&gt;Reading a paper is not the same as reading a blogpost or a novel. Here are a few handy resources to help you get started.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://organizationsandmarkets.com/2010/08/31/how-to-read-an-academic-article/" rel="nofollow"&gt;How to read an academic article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cc.gatech.edu/~akmassey/posts/2012-02-15-advice-on-reading-academic-papers.html" rel="nofollow"&gt;Advice on reading academic papers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://violentmetaphors.com/2013/08/25/how-to-read-and-understand-a-scientific-paper-2/" rel="nofollow"&gt;How to read and understand a scientific paper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://michaelrbernste.in/2014/10/21/should-i-read-papers.html" rel="nofollow"&gt;Should I Read Papers?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=8eRx5Wo3xYA" rel="nofollow"&gt;The Refreshingly Rewarding Realm of Research Papers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-applicationsideas-built-around-papers-we-love" class="anchor" aria-hidden="true" href="#applicationsideas-built-around-papers-we-love"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Applications/Ideas built around Papers We Love&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Love a Paper - &lt;a href="https://twitter.com/loveapaper" rel="nofollow"&gt;@loveapaper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-guidelines" class="anchor" aria-hidden="true" href="#contributing-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing Guidelines&lt;/h2&gt;
&lt;p&gt;Please take a look at our &lt;a href="https://github.com/papers-we-love/papers-we-love/blob/master/.github/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-copyright" class="anchor" aria-hidden="true" href="#copyright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright&lt;/h2&gt;
&lt;p&gt;The name "Papers We Love" and the logos for the organization are copyrighted, and under the ownership of Papers We Love Ltd, all rights reserved. When starting a chapter, please review &lt;a href="https://github.com/papers-we-love/papers-we-love/wiki/Creating-a-PWL-chapter"&gt;our guidelines&lt;/a&gt; and ask us about using the logo.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>papers-we-love</author><guid isPermaLink="false">https://github.com/papers-we-love/papers-we-love</guid><pubDate>Tue, 24 Dec 2019 00:15:00 GMT</pubDate></item><item><title>miaomiaosoft/PandaOCR #16 in Unknown languages, Today</title><link>https://github.com/miaomiaosoft/PandaOCR</link><description>&lt;p&gt;&lt;i&gt;PandaOCR - 图像字符云识别&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-pandaocr---多功能ocr识别翻译朗读弹窗" class="anchor" aria-hidden="true" href="#pandaocr---多功能ocr识别翻译朗读弹窗"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PandaOCR - 多功能OCR识别+翻译+朗读+弹窗&lt;/h2&gt;
&lt;p&gt;&amp;lt;VER：2.45&amp;gt;&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-2019-12-21-更新" class="anchor" aria-hidden="true" href="#2019-12-21-更新"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2019-12-21 更新&lt;/h5&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-功能介绍" class="anchor" aria-hidden="true" href="#功能介绍"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;功能介绍：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;支持识别引擎：搜狗OCR/API+腾讯OCR/API+百度OCR/API+有道OCR/API+京东OCR&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支持翻译引擎：搜狗翻译/API+腾讯翻译/API+百度翻译/API+有道翻译/API+谷歌翻译+词霸翻译+必应翻译+沪江翻译+剑桥翻译+奇虎翻译+海词翻译+彩云翻译&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支持朗读引擎：搜狗朗读+腾讯朗读+百度朗读+必应朗读+讯飞朗读+谷歌朗读+京东朗读&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支持快捷键和屏幕边角触发截图识别功能，方便快速&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支持截取识别固定区域，例如可帮助翻译英文游戏/软件中的单词或队友聊天记录 &lt;a href="https://www.bilibili.com/video/av56168758" title="[固定截图识别使用参考]" rel="nofollow"&gt;[固定截图识别使用参考]&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支持右侧小弹窗显示信息，快速查看识别/翻译内容&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支持智能合并修正识别/翻译文本，让排版更合理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支持设置最多十条固定截图规则，让一键识别更方便快捷&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支持监听图像和文本复制操作，快速识别图像文本或翻译复制文本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支持简单的窗口汉化功能，帮助翻译纯英文类软件界面文字&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;还有很多奇怪的没有列在程序界面上的功能，可以编辑程序目录下的CONFIG.INI文件试试&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-api版接口申请" class="anchor" aria-hidden="true" href="#api版接口申请"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API版接口申请：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;搜狗OCR/翻译：&lt;a href="http://deepi.sogou.com" rel="nofollow"&gt;http://deepi.sogou.com&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;腾讯OCR：&lt;a href="https://ai.qq.com" rel="nofollow"&gt;https://ai.qq.com&lt;/a&gt; 腾讯云翻译：&lt;a href="https://cloud.tencent.com" rel="nofollow"&gt;https://cloud.tencent.com&lt;/a&gt; 腾讯翻译君：&lt;a href="https://ai.qq.com" rel="nofollow"&gt;https://ai.qq.com&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;百度OCR：&lt;a href="https://cloud.baidu.com" rel="nofollow"&gt;https://cloud.baidu.com&lt;/a&gt; 百度翻译：&lt;a href="http://api.fanyi.baidu.com" rel="nofollow"&gt;http://api.fanyi.baidu.com&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有道OCR/翻译：&lt;a href="http://ai.youdao.com" rel="nofollow"&gt;http://ai.youdao.com&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-特别说明" class="anchor" aria-hidden="true" href="#特别说明"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;特别说明：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;程序使用压缩壳减小文件体积，如有误报请自行解决无恶意代码，程序访问的所有服务器都是上面这些引擎需要调用的，可自行验证&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;程序的开发与发布均在受保护的环境中完成，如果使用过程中，您系统中某种“安全”软件称「发现木马」，那么此种情形将考验您的判断力&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;已知在高分辨率/高分屏下截图功能异常 &lt;a href="https://github.com/miaomiaosoft/PandaOCR/issues/17" title="[尝试解决方法]"&gt;[尝试解决方法]&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如需使用自己申请的ID和KEY，用文本编辑器打开程序目录下的CONFIG.ini文件，在[数据配置]项，将各版本后面数值设为1（0为演示版），并修改下面相应的ID和KEY&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如需反馈API版引擎存在的问题，请主动提供相应的ID和KEY给我测试&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;各引擎精准度推荐：OCR推荐搜狗，翻译推荐搜狗或腾讯，朗读推荐搜狗或腾讯，讯飞只适合短句也不太稳定&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;右击&amp;lt;保存设置&amp;gt;按钮可以收缩/展开界面，弹窗上的小按钮单击隐藏，右击弹出菜单&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开源？暂不！&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-下载文件" class="anchor" aria-hidden="true" href="#下载文件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;下载文件：&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/miaomiaosoft/PandaOCR/releases" title="https://github.com/miaomiaosoft/PandaOCR/releases"&gt;https://github.com/miaomiaosoft/PandaOCR/releases&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/miaomiaosoft/PandaOCR/issues" title="问题反馈"&gt;问题反馈&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-程序截图" class="anchor" aria-hidden="true" href="#程序截图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;程序截图：&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/miaomiaosoft/PandaOCR/master/images/AeroSnap%E6%88%AA%E5%9B%BE1.png" title="收缩状态" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/miaomiaosoft/PandaOCR/master/images/AeroSnap%E6%88%AA%E5%9B%BE1.png" alt="收缩状态" title="收缩状态" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/miaomiaosoft/PandaOCR/master/images/AeroSnap%E6%88%AA%E5%9B%BE2.png" title="展开状态" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/miaomiaosoft/PandaOCR/master/images/AeroSnap%E6%88%AA%E5%9B%BE2.png" alt="展开状态" title="展开状态" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>miaomiaosoft</author><guid isPermaLink="false">https://github.com/miaomiaosoft/PandaOCR</guid><pubDate>Tue, 24 Dec 2019 00:16:00 GMT</pubDate></item><item><title>JaeYeopHan/Interview_Question_for_Beginner #17 in Unknown languages, Today</title><link>https://github.com/JaeYeopHan/Interview_Question_for_Beginner</link><description>&lt;p&gt;&lt;i&gt;:boy: :girl: Technical-Interview guidelines written for those who started studying programming. I wish you all the best. :space_invader:&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;div align="center"&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/assets/images/tech_interview_main.png"&gt;&lt;img src="/assets/images/tech_interview_main.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-technical-interview-guidelines-for-beginners" class="anchor" aria-hidden="true" href="#technical-interview-guidelines-for-beginners"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Technical Interview Guidelines for beginners&lt;/h1&gt;
&lt;a href="https://twitter.com/JbeeLjyhanll" rel="nofollow"&gt;
&lt;img alt="Twitter: JbeeLjyhanll" src="https://camo.githubusercontent.com/64dc65ada8159fafc6d123e14c0b7023d7f14a63/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f4a6265654c6a7968616e6c6c2e7376673f7374796c653d736f6369616c" data-canonical-src="https://img.shields.io/twitter/follow/JbeeLjyhanll.svg?style=social" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;div align="center"&gt;
&lt;p&gt;&lt;a href="https://jbee.io/about" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/34d00dd22725f59ecdd27f54a0fbddabf4e3349e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f617574686f722d6a6265652d6666363962342e7376673f7374796c653d666c61742d737175617265" alt="author" data-canonical-src="https://img.shields.io/badge/author-jbee-ff69b4.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/JaeYeopHan/Interview_Question_for_Beginner/blob/master/CONTRIBUTING.md"&gt;&lt;img src="https://camo.githubusercontent.com/15c338419f22cdc88e58873a24bcfb837da652da/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e7472696275746f72732d34352d677265656e2e7376673f7374796c653d666c61742d737175617265" alt="CONTRIBUTORS" data-canonical-src="https://img.shields.io/badge/contributors-45-green.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/JaeYeopHan/Interview_Question_for_Beginner/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/ea4c3caf45b6faac619d01a05c0c0070820255db/68747470733a2f2f696d672e736869656c64732e696f2f6475622f6c2f766962652d642e7376673f7374796c653d666c61742d737175617265" alt="LICENSE" data-canonical-src="https://img.shields.io/dub/l/vibe-d.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://hits.dwyl.io/JaeYeopHan/Interview_Question_for_Beginner" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cf1fa6ceff606f165d3c7a8b84614304f5fd5557/687474703a2f2f686974732e6477796c2e696f2f4a616559656f7048616e2f496e746572766965775f5175657374696f6e5f666f725f426567696e6e65722e737667" alt="HitCount" data-canonical-src="http://hits.dwyl.io/JaeYeopHan/Interview_Question_for_Beginner.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/JaeYeopHan/Interview_Question_for_Beginner/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/c08fca90f32c84dc23d6b9de76d2bb88b0c2a66a/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f696e746572766965775f7175657374696f6e5f666f725f626567696e6e65722f636f6e7472696275746f72732e7376673f77696474683d373230" data-canonical-src="https://opencollective.com/interview_question_for_beginner/contributors.svg?width=720" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;해당 Repository 에 기여를 해주신 분들입니다. 감사합니다. &lt;g-emoji class="g-emoji" alias="pray" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png"&gt;🙏&lt;/g-emoji&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-memo-table-of-contents" class="anchor" aria-hidden="true" href="#memo-table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt; Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-this?"&gt;What is this?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%EB%A9%B4%EC%A0%91%EC%97%90%EC%84%9C-%EB%B0%9B%EC%95%98%EB%8D%98-%EC%A7%88%EB%AC%B8%EB%93%A4"&gt;면접에서 받았던 질문들&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#part-1-%EC%A0%84%EC%82%B0-%EA%B8%B0%EC%B4%88"&gt;Part 1. CS&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JaeYeopHan/Beginner_for_interview/tree/master/Development_common_sense"&gt;개발상식&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JaeYeopHan/for_beginner/tree/master/DataStructure"&gt;자료구조&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JaeYeopHan/Beginner_for_interview/tree/master/Network"&gt;네트워크&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JaeYeopHan/Beginner_for_interview/tree/master/OS"&gt;운영체제&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JaeYeopHan/Beginner_for_interview/tree/master/Database"&gt;데이터베이스&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JaeYeopHan/Beginner_for_interview/tree/master/DesignPattern"&gt;디자인패턴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/Algorithm"&gt;알고리즘&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#part-2-language"&gt;Part 2. Language&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JaeYeopHan/Beginner_for_interview/tree/master/Java"&gt;Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/JavaScript"&gt;JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/Python"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#part-3-%EB%B6%84%EC%95%BC%EB%B3%84"&gt;Part 3. 분야별 정리&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/FrontEnd"&gt;FrontEnd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/iOS"&gt;iOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/MachineLearning"&gt;Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%EA%B7%B8-%EC%99%B8-%EC%A2%8B%EC%9D%80-%EC%9E%90%EB%A3%8C"&gt;그 외 좋은 자료 추천&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h1&gt;&lt;a id="user-content-what-is-this" class="anchor" aria-hidden="true" href="#what-is-this"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is this?&lt;/h1&gt;
&lt;p&gt;예비 개발자들 또는 개발자들의 기술 면접 준비를 위한 자료를 정리해놓은 저장소입니다. 개발이라는 분야를 모두 담지는 못했습니다. 그저 가이드라인으로 참고해주시면 감사하겠습니다. 또한 제가 개인적으로 면접을 준비하면서 정리한 내용이라 잘못된 부분이 있을 수 있습니다. 이런 부분들에 대해서는 &lt;code&gt;Pull Request&lt;/code&gt; or &lt;code&gt;Issue&lt;/code&gt;로 참여해주시면 정말 감사하겠습니다. 주제와 관련된 좋은 참고 자료를 추가하는 것도 가능합니다. 해당 Repository 에서 학습을 하시다가 생기는 질문은 &lt;code&gt;Issue&lt;/code&gt;에 올려주세요!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;취준생 여러분의 건승을 기원합니다 &lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-sparkles-help" class="anchor" aria-hidden="true" href="#sparkles-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="sparkles" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2728.png"&gt;✨&lt;/g-emoji&gt; HELP&lt;/h3&gt;
&lt;h5&gt;&lt;a id="user-content-pray-how-to-contribute" class="anchor" aria-hidden="true" href="#pray-how-to-contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="pray" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png"&gt;🙏&lt;/g-emoji&gt; &lt;a href="https://github.com/JaeYeopHan/Interview_Question_for_Beginner/blob/master/CONTRIBUTING.md"&gt;HOW TO CONTRIBUTE&lt;/a&gt;&lt;/h5&gt;
&lt;h5&gt;&lt;a id="user-content-star-이-저장소는-pr-과-star-를-먹고-자랍니다" class="anchor" aria-hidden="true" href="#star-이-저장소는-pr-과-star-를-먹고-자랍니다"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt; 이 저장소는 PR 과 star 를 먹고 자랍니다.&lt;/h5&gt;
&lt;br&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-면접에서-받았던-질문들" class="anchor" aria-hidden="true" href="#면접에서-받았던-질문들"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/JaeYeopHan/Interview_Question_for_Beginner/issues/59"&gt;면접에서 받았던 질문들&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;해당 Issue 에서 실제로 받았던 면접 질문들을 공유할 수 있습니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-회사에-궁금한-점이-있으신가요" class="anchor" aria-hidden="true" href="#회사에-궁금한-점이-있으신가요"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/Reverse_Interview"&gt;회사에 궁금한 점이 있으신가요?&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;인터뷰를 마치고 한번씩은 반드시 들어봤을 질문입니다. 이 때 어떠한 질문을 하면 좋을까요? 적절한 질문들을 정리해둔 Reverse Interview 목록입니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a id="user-content-part-1-전산-기초" class="anchor" aria-hidden="true" href="#part-1-전산-기초"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Part 1. 전산 기초&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-bulb-개발상식-link" class="anchor" aria-hidden="true" href="#bulb-개발상식-link"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; 개발상식 &lt;a href="https://github.com/JaeYeopHan/Beginner_for_interview/tree/master/Development_common_sense"&gt;Link&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;객체 지향 프로그래밍이란 무엇인가?&lt;/li&gt;
&lt;li&gt;RESTFul API 란?&lt;/li&gt;
&lt;li&gt;TDD 란 무엇이며 어떠한 장점이 있는가?&lt;/li&gt;
&lt;li&gt;함수형 프로그래밍이란?&lt;/li&gt;
&lt;li&gt;MVC 패턴이란 무엇인가?&lt;/li&gt;
&lt;li&gt;Git 과 GitHub 에 대해서&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-bulb-자료구조-link" class="anchor" aria-hidden="true" href="#bulb-자료구조-link"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; 자료구조 &lt;a href="https://github.com/JaeYeopHan/for_beginner/tree/master/DataStructure"&gt;Link&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Array vs LinkedList&lt;/li&gt;
&lt;li&gt;Stack and Queue&lt;/li&gt;
&lt;li&gt;Tree
&lt;ul&gt;
&lt;li&gt;Binary Tree&lt;/li&gt;
&lt;li&gt;Full Binary Tree&lt;/li&gt;
&lt;li&gt;Complete Binary Tree&lt;/li&gt;
&lt;li&gt;BST(Binary Search Tree)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Binary Heap&lt;/li&gt;
&lt;li&gt;Red-Black Tree
&lt;ul&gt;
&lt;li&gt;정의&lt;/li&gt;
&lt;li&gt;특징&lt;/li&gt;
&lt;li&gt;삽입&lt;/li&gt;
&lt;li&gt;삭제&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;HashTable
&lt;ul&gt;
&lt;li&gt;hash function&lt;/li&gt;
&lt;li&gt;Resolve Collision
&lt;ul&gt;
&lt;li&gt;Open Addressing&lt;/li&gt;
&lt;li&gt;Separate Chaining&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Resize&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Graph
&lt;ul&gt;
&lt;li&gt;Graph 용어 정리&lt;/li&gt;
&lt;li&gt;Graph 구현&lt;/li&gt;
&lt;li&gt;Graph 탐색&lt;/li&gt;
&lt;li&gt;Minimum Spanning Tree
&lt;ul&gt;
&lt;li&gt;Kruskal algorithm&lt;/li&gt;
&lt;li&gt;Prim algorithm&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-bulb-네트워크-link" class="anchor" aria-hidden="true" href="#bulb-네트워크-link"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; 네트워크 &lt;a href="https://github.com/JaeYeopHan/Beginner_for_interview/tree/master/Network"&gt;Link&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GET, POST 방식의 차이점&lt;/li&gt;
&lt;li&gt;TCP 3-way-handshake&lt;/li&gt;
&lt;li&gt;TCP 와 UDP 의 차이점&lt;/li&gt;
&lt;li&gt;HTTP 와 HTTPS 의 차이점
&lt;ul&gt;
&lt;li&gt;HTTP 의 문제점들&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DNS round robin 방식&lt;/li&gt;
&lt;li&gt;웹 통신의 큰 흐름&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-bulb-운영체제-link" class="anchor" aria-hidden="true" href="#bulb-운영체제-link"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; 운영체제 &lt;a href="https://github.com/JaeYeopHan/Beginner_for_interview/tree/master/OS"&gt;Link&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;프로세스와 스레드의 차이&lt;/li&gt;
&lt;li&gt;스케줄러의 종류
&lt;ul&gt;
&lt;li&gt;장기 스케줄러&lt;/li&gt;
&lt;li&gt;단기 스케줄러&lt;/li&gt;
&lt;li&gt;중기 스케줄러&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CPU 스케줄러
&lt;ul&gt;
&lt;li&gt;FCFS&lt;/li&gt;
&lt;li&gt;SJF&lt;/li&gt;
&lt;li&gt;SRT&lt;/li&gt;
&lt;li&gt;Priority scheduling&lt;/li&gt;
&lt;li&gt;RR&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;동기와 비동기의 차이&lt;/li&gt;
&lt;li&gt;멀티스레드
&lt;ul&gt;
&lt;li&gt;장점과 단점&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;프로세스 동기화
&lt;ul&gt;
&lt;li&gt;Critical Section&lt;/li&gt;
&lt;li&gt;해결책&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;메모리 관리 전략
&lt;ul&gt;
&lt;li&gt;메모리 관리 배경&lt;/li&gt;
&lt;li&gt;Paging&lt;/li&gt;
&lt;li&gt;Segmentation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;가상 메모리
&lt;ul&gt;
&lt;li&gt;배경&lt;/li&gt;
&lt;li&gt;가상 메모리가 하는 일&lt;/li&gt;
&lt;li&gt;Demand Paging(요구 페이징)&lt;/li&gt;
&lt;li&gt;페이지 교체 알고리즘&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;캐시의 지역성
&lt;ul&gt;
&lt;li&gt;Locality&lt;/li&gt;
&lt;li&gt;Caching line&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-bulb-데이터베이스-link" class="anchor" aria-hidden="true" href="#bulb-데이터베이스-link"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; 데이터베이스 &lt;a href="https://github.com/JaeYeopHan/Beginner_for_interview/tree/master/Database"&gt;Link&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;데이터베이스
&lt;ul&gt;
&lt;li&gt;데이터베이스를 사용하는 이유&lt;/li&gt;
&lt;li&gt;데이터베이스 성능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Index
&lt;ul&gt;
&lt;li&gt;Index 란 무엇인가&lt;/li&gt;
&lt;li&gt;Index 의 자료구조&lt;/li&gt;
&lt;li&gt;Primary index vs Secondary index&lt;/li&gt;
&lt;li&gt;Composite index&lt;/li&gt;
&lt;li&gt;Index 의 성능과 고려해야할 사항&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;정규화에 대해서
&lt;ul&gt;
&lt;li&gt;정규화 탄생 배경&lt;/li&gt;
&lt;li&gt;정규화란 무엇인가&lt;/li&gt;
&lt;li&gt;정규화의 종류&lt;/li&gt;
&lt;li&gt;정규화의 장단점&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Transaction
&lt;ul&gt;
&lt;li&gt;트랜잭션(Transaction)이란 무엇인가?&lt;/li&gt;
&lt;li&gt;트랜잭션과 Lock&lt;/li&gt;
&lt;li&gt;트랜잭션의 특성&lt;/li&gt;
&lt;li&gt;트랜잭션의 상태&lt;/li&gt;
&lt;li&gt;트랜잭션을 사용할 때 주의할 점&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Statement vs PrepareStatement&lt;/li&gt;
&lt;li&gt;NoSQL
&lt;ul&gt;
&lt;li&gt;정의&lt;/li&gt;
&lt;li&gt;CAP 이론
&lt;ul&gt;
&lt;li&gt;일관성&lt;/li&gt;
&lt;li&gt;가용성&lt;/li&gt;
&lt;li&gt;네트워크 분할 허용성&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;저장방식에 따른 분류
&lt;ul&gt;
&lt;li&gt;Key-Value Model&lt;/li&gt;
&lt;li&gt;Document Model&lt;/li&gt;
&lt;li&gt;Column Model&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-추가자료" class="anchor" aria-hidden="true" href="#추가자료"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;추가자료&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://d2.naver.com/helloworld/407507" rel="nofollow"&gt;DBMS 는 어떻게 트랜잭션을 관리할까?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-bulb-design-pattern-link" class="anchor" aria-hidden="true" href="#bulb-design-pattern-link"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; Design Pattern &lt;a href="https://github.com/JaeYeopHan/Beginner_for_interview/tree/master/DesignPattern"&gt;Link&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Singleton&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-bulb-algorithm-알고리즘-link" class="anchor" aria-hidden="true" href="#bulb-algorithm-알고리즘-link"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; Algorithm (알고리즘) &lt;a href="https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/Algorithm"&gt;Link&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;손코딩 및 코딩 테스트 대비&lt;br&gt;
=&amp;gt; 대부분의 내용이 코드이기 때문에 별도의 &lt;a href="https://github.com/JaeYeopHan/algorithm_basic_java"&gt;Java Algorithm Training Repository&lt;/a&gt;에 저장합니다.&lt;/li&gt;
&lt;li&gt;코딩 테스트를 위한 Tip&lt;/li&gt;
&lt;li&gt;문제 해결을 위한 전략적 접근&lt;/li&gt;
&lt;li&gt;Sorting Algorithm&lt;/li&gt;
&lt;li&gt;Prime Number Algorithm&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;p&gt;&lt;sup&gt;&lt;a href="#technical-interview-guidelines-for-beginners"&gt;(목차로 돌아가기)&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;h1&gt;&lt;a id="user-content-part-2-language" class="anchor" aria-hidden="true" href="#part-2-language"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Part 2. Language&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-gem-java-link" class="anchor" aria-hidden="true" href="#gem-java-link"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="gem" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f48e.png"&gt;💎&lt;/g-emoji&gt; Java &lt;a href="https://github.com/JaeYeopHan/Beginner_for_interview/tree/master/Java"&gt;Link&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;JVM 에 대해서 / GC 의 원리&lt;/li&gt;
&lt;li&gt;Collection&lt;/li&gt;
&lt;li&gt;Annotation&lt;/li&gt;
&lt;li&gt;Generic&lt;/li&gt;
&lt;li&gt;final&lt;/li&gt;
&lt;li&gt;Overriding vs Overloading&lt;/li&gt;
&lt;li&gt;Access Modifier&lt;/li&gt;
&lt;li&gt;Wrapper class&lt;/li&gt;
&lt;li&gt;Multi-Thread 환경에서의 개발&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-추가-자료" class="anchor" aria-hidden="true" href="#추가-자료"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;추가 자료&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://asfirstalways.tistory.com/146" rel="nofollow"&gt;Java 기본서 비교&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-gem-javascript-link" class="anchor" aria-hidden="true" href="#gem-javascript-link"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="gem" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f48e.png"&gt;💎&lt;/g-emoji&gt; JavaScript &lt;a href="https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/JavaScript"&gt;Link&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;JavaScript Event Loop&lt;/li&gt;
&lt;li&gt;Hoisting&lt;/li&gt;
&lt;li&gt;Closure&lt;/li&gt;
&lt;li&gt;this 에 대해서&lt;/li&gt;
&lt;li&gt;Promise&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-추가-자료-1" class="anchor" aria-hidden="true" href="#추가-자료-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;추가 자료&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://asfirstalways.tistory.com/246" rel="nofollow"&gt;JavaScript 기본서 비교&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaeyeophan.github.io/categories/ECMAScript6" rel="nofollow"&gt;ECMAScript6 정리&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kennymkchan/interview-questions-in-javascript"&gt;Interview Algorithm Question in JavaScript (영어)&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;JavaScript 와 관련된 인터뷰 관련 내용들을 정리해놓은 자료입니다.
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-gem-python-link" class="anchor" aria-hidden="true" href="#gem-python-link"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="gem" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f48e.png"&gt;💎&lt;/g-emoji&gt; Python &lt;a href="https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/Python"&gt;Link&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Generator&lt;/li&gt;
&lt;li&gt;클래스를 상속했을 때 메서드 실행 방식&lt;/li&gt;
&lt;li&gt;GIL 과 그로인한 성능 문제&lt;/li&gt;
&lt;li&gt;GC 작동 방식&lt;/li&gt;
&lt;li&gt;Celery&lt;/li&gt;
&lt;li&gt;PyPy 가 CPython 보다 빠른 이유&lt;/li&gt;
&lt;li&gt;메모리 누수가 발생할 수 있는 경우&lt;/li&gt;
&lt;li&gt;Duck Typing&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-추가-자료-2" class="anchor" aria-hidden="true" href="#추가-자료-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;추가 자료&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tech.ssut.me/python-3-play-with-asyncio/" rel="nofollow"&gt;asyncio 와 놀아보기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tech.ssut.me/understanding-python-metaclasses/" rel="nofollow"&gt;metaclasses 이해하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;p&gt;&lt;sup&gt;&lt;a href="#technical-interview-guidelines-for-beginners"&gt;(목차로 돌아가기)&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;h1&gt;&lt;a id="user-content-part-3-분야별" class="anchor" aria-hidden="true" href="#part-3-분야별"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Part 3. 분야별&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-large_orange_diamond-front-end-link" class="anchor" aria-hidden="true" href="#large_orange_diamond-front-end-link"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="large_orange_diamond" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f536.png"&gt;🔶&lt;/g-emoji&gt; Front-End &lt;a href="https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/FrontEnd"&gt;Link&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;브라우저의 작동 원리&lt;/li&gt;
&lt;li&gt;Document Object Model
&lt;ul&gt;
&lt;li&gt;Event bubbling and Capturing&lt;/li&gt;
&lt;li&gt;Event delegation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CORS&lt;/li&gt;
&lt;li&gt;크로스 브라우징&lt;/li&gt;
&lt;li&gt;웹 성능과 관련된 Issues&lt;/li&gt;
&lt;li&gt;서버 사이드 렌더링 vs 클라이언트 사이드 렌더링&lt;/li&gt;
&lt;li&gt;CSS Methodology&lt;/li&gt;
&lt;li&gt;normalize.css vs reset.css&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-추가-자료-3" class="anchor" aria-hidden="true" href="#추가-자료-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;추가 자료&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jbee.io/essay/for_junior_frontend_developer/" rel="nofollow"&gt;신입 프론트엔드 개발자가 되려면 무엇을 학습해야 하나요?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://h5bp.org/Front-end-Developer-Interview-Questions/translations/korean/" rel="nofollow"&gt;Front-end-Developer-Interview-Questions (한국어)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://thatjsdude.com/interview/index.html" rel="nofollow"&gt;Front-end Interview (영어)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kesuskim/Front-End-Checklist"&gt;Front-end Checklist&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;면접 시 물어보기 가장 좋은 것들이 '기본'에 대한 내용이라고 생각되는데요, 그 '기본'에 대해 체크리스트 형식으로 잘 정리되어 있는 문서를 공유합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yangshun/front-end-interview-handbook/tree/master/Translations/Korean"&gt;Front-end Interview Handbook (한국어)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jbee.io/react/react-0-intro/" rel="nofollow"&gt;React 구조에 대한 고민 시리즈&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-large_orange_diamond-ios-link" class="anchor" aria-hidden="true" href="#large_orange_diamond-ios-link"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="large_orange_diamond" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f536.png"&gt;🔶&lt;/g-emoji&gt; iOS &lt;a href="https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/iOS"&gt;Link&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;App Life Cycle&lt;/li&gt;
&lt;li&gt;View Life Cycle&lt;/li&gt;
&lt;li&gt;Delegate vs Block vs Notification&lt;/li&gt;
&lt;li&gt;Memory Management&lt;/li&gt;
&lt;li&gt;assign vs weak&lt;/li&gt;
&lt;li&gt;Frame vs Bounds&lt;/li&gt;
&lt;li&gt;기타 질문&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-추가-자료-4" class="anchor" aria-hidden="true" href="#추가-자료-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;추가 자료&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MaximAbramchuck/awesome-interview-questions#objective-c"&gt;iOS 면접 질문 정리 사이트 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaximAbramchuck/awesome-interview-questions#ios"&gt;iOS 면접 질문 정리 사이트 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ClintJang/awesome-swift-korean-lecture"&gt;Swift 를 공부하기 위한 정보 링크 모음 레포&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-large_orange_diamond-machine-learning-link" class="anchor" aria-hidden="true" href="#large_orange_diamond-machine-learning-link"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="large_orange_diamond" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f536.png"&gt;🔶&lt;/g-emoji&gt; Machine Learning &lt;a href="https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/MachineLearning"&gt;Link&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Cost Function&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-추가-자료-5" class="anchor" aria-hidden="true" href="#추가-자료-5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;추가 자료&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hunkim.github.io/ml/" rel="nofollow"&gt;모두를 위한 머신러닝/딥러닝 강의&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;p&gt;&lt;sup&gt;&lt;a href="#technical-interview-guidelines-for-beginners"&gt;(목차로 돌아가기)&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-그-외-좋은-자료" class="anchor" aria-hidden="true" href="#그-외-좋은-자료"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;그 외 좋은 자료&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/Tip"&gt;미세먼지 같은 면접 팁&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jojoldu/junior-recruit-scheduler"&gt;주니어 개발자를 위한 취업 정보&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mission-peace/interview"&gt;mission-peace/interview repository&lt;/a&gt;&lt;br&gt;
=&amp;gt; 각종 알고리즘에 대한 코드와 동영상 강의 링크를 제공합니다. (영어)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaximAbramchuck/awesome-interview-questions"&gt;awesome-interview-questions&lt;/a&gt;&lt;br&gt;
=&amp;gt; 각종 언어, CS 기초에 대한 interview 질문들이 정리되어 있습니다. (영어)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jwasham/coding-interview-university/blob/master/translations/README-ko.md"&gt;coding-interview-university&lt;/a&gt;&lt;br&gt;
=&amp;gt; (한국어 version) 구글 인터뷰를 준비하면서 정리한 자료가 한국어로 번역되어 있는 자료입니다.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.yes24.com/24/Goods/44305533?Acode=101" rel="nofollow"&gt;코딩 인터뷰 완전분석&lt;/a&gt;&lt;br&gt;
=&amp;gt; (도서) 코딩 인터뷰에 관련된 도서 중 가장 유명한 책이라고 생각되는데요, 최근 개정판이 발간되었습니다.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yangshun/tech-interview-handbook"&gt;tech-interview-handbook Github repository&lt;/a&gt;&lt;br&gt;
=&amp;gt; (영어) 코딩 인터뷰에 관련되어 정리되어있는 respository 입니다.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/dev-bits/a-perfect-guide-for-cracking-a-javascript-interview-a-developers-perspective-23a5c0fa4d0d" rel="nofollow"&gt;A perfect guide for cracking a javascript interview a developers perspective&lt;/a&gt;&lt;br&gt;
=&amp;gt; &lt;a href="https://github.com/milooy"&gt;@JayJin&lt;/a&gt;님이 추천하신 자바스크립트 인터뷰 아티클입니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LICENSE&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/JaeYeopHan/Interview_Question_for_Beginner/blob/master/LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>JaeYeopHan</author><guid isPermaLink="false">https://github.com/JaeYeopHan/Interview_Question_for_Beginner</guid><pubDate>Tue, 24 Dec 2019 00:17:00 GMT</pubDate></item><item><title>ossu/computer-science #18 in Unknown languages, Today</title><link>https://github.com/ossu/computer-science</link><description>&lt;p&gt;&lt;i&gt;:mortar_board: Path to a free self-taught education in Computer Science!&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ab1e7ce255025d6c6b9431d43409217c21f70b6a/687474703a2f2f692e696d6775722e636f6d2f6b5959435874432e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/ab1e7ce255025d6c6b9431d43409217c21f70b6a/687474703a2f2f692e696d6775722e636f6d2f6b5959435874432e706e67" alt="Open Source Society University (OSSU)" data-canonical-src="http://i.imgur.com/kYYCXtC.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 align="center"&gt;&lt;a id="user-content-open-source-society-university" class="anchor" aria-hidden="true" href="#open-source-society-university"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Open Source Society University&lt;/h3&gt;
&lt;p align="center"&gt;
  Path to a free self-taught education in Computer Science!
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://github.com/sindresorhus/awesome"&gt;
    &lt;img alt="Awesome" src="https://camo.githubusercontent.com/13c4e50d88df7178ae1882a203ed57b641674f94/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667" data-canonical-src="https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/ossu/computer-science"&gt;
	&lt;img alt="Open Source Society University - Computer Science" src="https://camo.githubusercontent.com/55b0f02a52ab8cc845332858f47f4e14b2182f83/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4f5353552d636f6d70757465722d2d736369656e63652d626c75652e737667" data-canonical-src="https://img.shields.io/badge/OSSU-computer--science-blue.svg" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.patreon.com/ossu" rel="nofollow"&gt;
	&lt;img alt="Contribute with OSSU on Patreon" src="https://camo.githubusercontent.com/69922d5ca3228de5530cf915a9854f35a4b80dda/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f50617472656f6e2d636f6e747269627574652d79656c6c6f772e737667" data-canonical-src="https://img.shields.io/badge/Patreon-contribute-yellow.svg" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#summary"&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#curriculum"&gt;Curriculum&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#intro-cs"&gt;Intro CS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#core-cs"&gt;Core CS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#advanced-cs"&gt;Advanced CS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#final-project"&gt;Final project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pro-cs"&gt;Pro CS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#code-of-conduct"&gt;Code of conduct&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#community"&gt;Community&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#how-to-show-your-progress"&gt;How to show your progress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#team"&gt;Team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#references"&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-summary" class="anchor" aria-hidden="true" href="#summary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Summary&lt;/h1&gt;
&lt;p&gt;The OSSU curriculum is a &lt;strong&gt;complete education in computer science&lt;/strong&gt; using online materials.
It's not merely for career training or professional development.
It's for those who want a proper, &lt;em&gt;well-rounded&lt;/em&gt; grounding in concepts fundamental to all computing disciplines,
and for those who have the discipline, will, and (most importantly!) good habits to obtain this education largely on their own,
but with support from a worldwide community of fellow learners.&lt;/p&gt;
&lt;p&gt;It is designed according to the degree requirements of undergraduate computer science majors, minus general education (non-CS) requirements,
as it is assumed most of the people following this curriculum are already educated outside the field of CS.
The courses themselves are among the very best in the world, often coming from Harvard, Princeton, MIT, etc.,
but specifically chosen to meet the following criteria.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Courses must&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Be open for enrollment&lt;/li&gt;
&lt;li&gt;Run regularly (ideally in self-paced format, otherwise running at least once a month or so)&lt;/li&gt;
&lt;li&gt;Fulfill the &lt;a href="REQUIREMENTS.md"&gt;academic requirements&lt;/a&gt; of OSSU&lt;/li&gt;
&lt;li&gt;Fit neatly into the progression of the curriculum with respect to topics and difficulty level&lt;/li&gt;
&lt;li&gt;Be of generally high quality in teaching materials and pedagogical principles&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When no course meets the above criteria, the coursework is supplemented with a book.
When there are courses or books that don't fit into the curriculum but are otherwise of high quality,
they belong in &lt;a href="extras/courses.md"&gt;extras/courses&lt;/a&gt; or &lt;a href="extras/readings.md"&gt;extras/readings&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Organization&lt;/strong&gt;. The curriculum is designed as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Intro CS&lt;/em&gt;: for students to try out CS and see if it's right for them&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Core CS&lt;/em&gt;: corresponds roughly to the first three years of a computer science curriculum, taking classes that all majors would be required to take&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Advanced CS&lt;/em&gt;: corresponds roughly to the final year of a computer science curriculum, taking electives according to the student's interests&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Final Project&lt;/em&gt;: a project for students to validate, consolidate, and display their knowledge, to be evaluated by their peers worldwide&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Pro CS&lt;/em&gt;: graduate-level specializations students can elect to take after completing the above curriculum if they want to maximize their chances of getting a good job&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Duration&lt;/strong&gt;. It is possible to finish Core CS within about 2 years if you plan carefully and devote roughly 18-22 hours/week to your studies.
Courses in Core CS should be taken linearly if possible, but since a perfectly linear progression is rarely possible,
each class's prerequisites are specified so that you can design a logical but non-linear progression
based on the class schedules and your own life plans.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cost&lt;/strong&gt;. All or nearly all course material prior to Pro CS is available for free.
However, some courses may charge money for assignments/tests/projects to be graded.
Note that Coursera offers &lt;a href="https://learner.coursera.help/hc/en-us/articles/209819033-Apply-for-Financial-Aid" rel="nofollow"&gt;financial aid&lt;/a&gt;.
Decide how much or how little to spend based on your own time and budget;
just remember that you can't purchase success!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Process&lt;/strong&gt;. Students can work through the curriculum alone or in groups, in order or out of order.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For grouping up, please use the &lt;a href="https://github.com/ossu/cohorts"&gt;cohorts repository&lt;/a&gt; to find or create a cohort suited to you.&lt;/li&gt;
&lt;li&gt;We recommend doing all courses in Core CS, only skipping a course when you are certain that you've already learned the material previously.&lt;/li&gt;
&lt;li&gt;For simplicity, we recommend working through courses (especially Core CS) in order from top to bottom, as they have already been &lt;a href="https://en.wikipedia.org/wiki/Topological_sorting" rel="nofollow"&gt;topologically sorted&lt;/a&gt; by their prerequisites.&lt;/li&gt;
&lt;li&gt;Courses in Advanced CS are electives. Choose one subject (e.g. Advanced programming) you want to become an expert in and take all the courses under that heading. You can also create your own custom subject, but we recommend getting validation from the community on the subject you choose.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Content policy&lt;/strong&gt;. If you plan on showing off some of your coursework publicly, you must share only files that you are allowed to.
&lt;em&gt;Do NOT disrespect the code of conduct&lt;/em&gt; that you signed in the beginning of each course!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How to contribute&lt;/strong&gt;. Please see &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Getting help&lt;/strong&gt;. Please check our &lt;a href="FAQ.md"&gt;Frequently Asked Questions&lt;/a&gt;, and if you cannot find the answer, file an issue or talk to our &lt;a href="#community"&gt;friendly community&lt;/a&gt;!&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-curriculum" class="anchor" aria-hidden="true" href="#curriculum"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Curriculum&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Curriculum version&lt;/strong&gt;: &lt;code&gt;8.0.0&lt;/code&gt; (see &lt;a href="CHANGELOG.md"&gt;CHANGELOG&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#intro-cs"&gt;Intro CS&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction-to-programming"&gt;Introduction to Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#introduction-to-computer-science"&gt;Introduction to Computer Science&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#core-cs"&gt;Core CS&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#core-programming"&gt;Core programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#core-math"&gt;Core math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#core-systems"&gt;Core systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#core-theory"&gt;Core theory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#core-applications"&gt;Core applications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#advanced-cs"&gt;Advanced CS&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#advanced-programming"&gt;Advanced programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#advanced-math"&gt;Advanced math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#advanced-systems"&gt;Advanced systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#advanced-theory"&gt;Advanced theory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#advanced-applications"&gt;Advanced applications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#final-project"&gt;Final project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pro-cs"&gt;Pro CS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#core-cs"&gt;Core CS&lt;/a&gt; assumes the student has already taken high school math and physics, including algebra, geometry, and pre-calculus.
Some high school graduates will have already taken AP Calculus, but this is usually only about 3/4 of a college calculus class, so the calculus courses in the curriculum are still recommended.&lt;/li&gt;
&lt;li&gt;&lt;a href="#advanced-cs"&gt;Advanced CS&lt;/a&gt; assumes the student has already taken the entirety of Core CS
and is knowledgeable enough now to decide which electives to take.&lt;/li&gt;
&lt;li&gt;Note that &lt;a href="#advanced-systems"&gt;Advanced systems&lt;/a&gt; assumes the student has taken a basic physics course (e.g. AP Physics in high school).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-intro-cs" class="anchor" aria-hidden="true" href="#intro-cs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Intro CS&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-introduction-to-programming" class="anchor" aria-hidden="true" href="#introduction-to-programming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction to Programming&lt;/h3&gt;
&lt;p&gt;If you've never written a for-loop, or don't know what a string is in programming, start here. Choose one of the two course series below. Either one will give you an introduction to programming that assumes no prior knowledge.&lt;/p&gt;
&lt;p&gt;Trying to decide between them?&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Python for Everyone&lt;/em&gt; will introduce you to a popular language and will quickly move to practical programming tasks - using web APIs and databases. This will give you a taste of what many professional developers do.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Fundamentals of Computing&lt;/em&gt; will also start by introducing you to Python. It then moves on to give an introduction to academic Computer Science topics, like sorting and recursion. This will give you a taste of what the following courses will be like. (Students who complete &lt;em&gt;Fundamentals of Computing&lt;/em&gt; can skip Intro to Computer Science and begin Core CS.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Topics covered&lt;/strong&gt;:
&lt;code&gt;simple programs&lt;/code&gt;
&lt;code&gt;simple data structures&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Courses&lt;/th&gt;
&lt;th align="center"&gt;Effort&lt;/th&gt;
&lt;th align="center"&gt;Prerequisites&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.coursera.org/specializations/python" rel="nofollow"&gt;Python for Everyone&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;58 hours&lt;/td&gt;
&lt;td align="center"&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.coursera.org/specializations/computer-fundamentals" rel="nofollow"&gt;Fundamentals of Computing&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;138 hours&lt;/td&gt;
&lt;td align="center"&gt;high school mathematics&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-introduction-to-computer-science" class="anchor" aria-hidden="true" href="#introduction-to-computer-science"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction to Computer Science&lt;/h3&gt;
&lt;p&gt;This course will introduce you to the world of computer science. Students who have been introduced to programming, either from the courses above or through study elsewhere, should take this course for a flavor of the material to come. If you finish the course wanting more, Computer Science is likely for you!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Topics covered&lt;/strong&gt;:
&lt;code&gt;computation&lt;/code&gt;
&lt;code&gt;imperative programming&lt;/code&gt;
&lt;code&gt;basic data structures and algorithms&lt;/code&gt;
&lt;code&gt;and more&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Courses&lt;/th&gt;
&lt;th align="center"&gt;Duration&lt;/th&gt;
&lt;th align="center"&gt;Effort&lt;/th&gt;
&lt;th align="center"&gt;Prerequisites&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/introduction-computer-science-mitx-6-00-1x-10" rel="nofollow"&gt;Introduction to Computer Science and Programming using Python&lt;/a&gt; (&lt;a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-0001-introduction-to-computer-science-and-programming-in-python-fall-2016/" rel="nofollow"&gt;alt&lt;/a&gt;)&lt;/td&gt;
&lt;td align="center"&gt;9 weeks&lt;/td&gt;
&lt;td align="center"&gt;15 hours/week&lt;/td&gt;
&lt;td align="center"&gt;high school algebra&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-core-cs" class="anchor" aria-hidden="true" href="#core-cs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core CS&lt;/h2&gt;
&lt;p&gt;All coursework under Core CS is &lt;strong&gt;required&lt;/strong&gt;, unless otherwise indicated.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-core-programming" class="anchor" aria-hidden="true" href="#core-programming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core programming&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Topics covered&lt;/strong&gt;:
&lt;code&gt;functional programming&lt;/code&gt;
&lt;code&gt;design for testing&lt;/code&gt;
&lt;code&gt;program requirements&lt;/code&gt;
&lt;code&gt;common design patterns&lt;/code&gt;
&lt;code&gt;unit testing&lt;/code&gt;
&lt;code&gt;object-oriented design&lt;/code&gt;
&lt;code&gt;Java&lt;/code&gt;
&lt;code&gt;static typing&lt;/code&gt;
&lt;code&gt;dynamic typing&lt;/code&gt;
&lt;code&gt;ML-family languages (via Standard ML)&lt;/code&gt;
&lt;code&gt;Lisp-family languages (via Racket)&lt;/code&gt;
&lt;code&gt;Ruby&lt;/code&gt;
&lt;code&gt;and more&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Courses&lt;/th&gt;
&lt;th align="center"&gt;Duration&lt;/th&gt;
&lt;th align="center"&gt;Effort&lt;/th&gt;
&lt;th align="center"&gt;Prerequisites&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/how-code-simple-data-ubcx-htc1x" rel="nofollow"&gt;How to Code - Simple Data&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;7 weeks&lt;/td&gt;
&lt;td align="center"&gt;8-10 hours/week&lt;/td&gt;
&lt;td align="center"&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/how-code-complex-data-ubcx-htc2x" rel="nofollow"&gt;How to Code - Complex Data&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;6 weeks&lt;/td&gt;
&lt;td align="center"&gt;8-10 hours/week&lt;/td&gt;
&lt;td align="center"&gt;How to Code: Simple Data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/software-construction-data-abstraction-ubcx-softconst1x" rel="nofollow"&gt;Software Construction - Data Abstraction&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;6 weeks&lt;/td&gt;
&lt;td align="center"&gt;8-10 hours/week&lt;/td&gt;
&lt;td align="center"&gt;How to Code - Complex Data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/software-construction-object-oriented-ubcx-softconst2x" rel="nofollow"&gt;Software Construction - Object-Oriented Design&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;6 weeks&lt;/td&gt;
&lt;td align="center"&gt;8-10 hours/week&lt;/td&gt;
&lt;td align="center"&gt;Software Construction - Data Abstraction&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.coursera.org/learn/programming-languages" rel="nofollow"&gt;Programming Languages, Part A&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;4 weeks&lt;/td&gt;
&lt;td align="center"&gt;8-16 hours/week&lt;/td&gt;
&lt;td align="center"&gt;recommended: Java, C&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.coursera.org/learn/programming-languages-part-b" rel="nofollow"&gt;Programming Languages, Part B&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;3 weeks&lt;/td&gt;
&lt;td align="center"&gt;8-16 hours/week&lt;/td&gt;
&lt;td align="center"&gt;Programming Languages, Part A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.coursera.org/learn/programming-languages-part-c" rel="nofollow"&gt;Programming Languages, Part C&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;3 weeks&lt;/td&gt;
&lt;td align="center"&gt;8-16 hours/week&lt;/td&gt;
&lt;td align="center"&gt;Programming Languages, Part B&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-readings" class="anchor" aria-hidden="true" href="#readings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Readings&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Required&lt;/strong&gt; to learn about monads, laziness, purity: &lt;a href="http://learnyouahaskell.com/" rel="nofollow"&gt;Learn You a Haskell for a Great Good!&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: probably the best resource to learn Haskell: &lt;a href="http://haskellbook.com/" rel="nofollow"&gt;Haskell Programming from First Principles&lt;/a&gt; &lt;code&gt;paid&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Required&lt;/strong&gt;, to learn about logic programming, backtracking, unification: &lt;a href="http://lpn.swi-prolog.org/lpnpage.php?pageid=top" rel="nofollow"&gt;Learn Prolog Now!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-core-math" class="anchor" aria-hidden="true" href="#core-math"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core math&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Topics covered&lt;/strong&gt;:
&lt;code&gt;linear transformations&lt;/code&gt;
&lt;code&gt;matrices&lt;/code&gt;
&lt;code&gt;vectors&lt;/code&gt;
&lt;code&gt;mathematical proofs&lt;/code&gt;
&lt;code&gt;number theory&lt;/code&gt;
&lt;code&gt;differential calculus&lt;/code&gt;
&lt;code&gt;integral calculus&lt;/code&gt;
&lt;code&gt;sequences and series&lt;/code&gt;
&lt;code&gt;discrete mathematics&lt;/code&gt;
&lt;code&gt;basic statistics&lt;/code&gt;
&lt;code&gt;O-notation&lt;/code&gt;
&lt;code&gt;graph theory&lt;/code&gt;
&lt;code&gt;vector calculus&lt;/code&gt;
&lt;code&gt;discrete probability&lt;/code&gt;
&lt;code&gt;and more&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Courses&lt;/th&gt;
&lt;th align="center"&gt;Duration&lt;/th&gt;
&lt;th align="center"&gt;Effort&lt;/th&gt;
&lt;th align="center"&gt;Prerequisites&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab" rel="nofollow"&gt;Essence of Linear Algebra&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;-&lt;/td&gt;
&lt;td align="center"&gt;-&lt;/td&gt;
&lt;td align="center"&gt;pre-calculus&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/linear-algebra-foundations-to-frontiers-0" rel="nofollow"&gt;Linear Algebra - Foundations to Frontiers&lt;/a&gt; (&lt;a href="http://ulaff.net/" rel="nofollow"&gt;alt&lt;/a&gt;)&lt;/td&gt;
&lt;td align="center"&gt;15 weeks&lt;/td&gt;
&lt;td align="center"&gt;8 hours/week&lt;/td&gt;
&lt;td align="center"&gt;Essence of Linear Algebra&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/calculus-1a-differentiation" rel="nofollow"&gt;Calculus 1A: Differentiation&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;13 weeks&lt;/td&gt;
&lt;td align="center"&gt;6-10 hours/week&lt;/td&gt;
&lt;td align="center"&gt;pre-calculus&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/calculus-1b-integration" rel="nofollow"&gt;Calculus 1B: Integration&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;13 weeks&lt;/td&gt;
&lt;td align="center"&gt;5-10 hours/week&lt;/td&gt;
&lt;td align="center"&gt;Calculus 1A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/calculus-1c-coordinate-systems-infinite-series" rel="nofollow"&gt;Calculus 1C: Coordinate Systems &amp;amp; Infinite Series&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;13 weeks&lt;/td&gt;
&lt;td align="center"&gt;5-10 hours/week&lt;/td&gt;
&lt;td align="center"&gt;Calculus 1B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-spring-2015/index.htm" rel="nofollow"&gt;Mathematics for Computer Science&lt;/a&gt;&lt;sup&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;td align="center"&gt;13 weeks&lt;/td&gt;
&lt;td align="center"&gt;5 hours/week&lt;/td&gt;
&lt;td align="center"&gt;Calculus 1C&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;sup&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/sup&gt;: Students struggling with MIT Math for CS can consider taking the &lt;a href="https://www.coursera.org/specializations/discrete-mathematics" rel="nofollow"&gt;Discrete Mathematics Specialization&lt;/a&gt; first.
It is more interactive but less comprehensive, and it costs money to unlock full interactivity.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-core-systems" class="anchor" aria-hidden="true" href="#core-systems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core systems&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Topics covered&lt;/strong&gt;:
&lt;code&gt;procedural programming&lt;/code&gt;
&lt;code&gt;manual memory management&lt;/code&gt;
&lt;code&gt;boolean algebra&lt;/code&gt;
&lt;code&gt;gate logic&lt;/code&gt;
&lt;code&gt;memory&lt;/code&gt;
&lt;code&gt;computer architecture&lt;/code&gt;
&lt;code&gt;assembly&lt;/code&gt;
&lt;code&gt;machine language&lt;/code&gt;
&lt;code&gt;virtual machines&lt;/code&gt;
&lt;code&gt;high-level languages&lt;/code&gt;
&lt;code&gt;compilers&lt;/code&gt;
&lt;code&gt;operating systems&lt;/code&gt;
&lt;code&gt;network protocols&lt;/code&gt;
&lt;code&gt;and more&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Courses&lt;/th&gt;
&lt;th align="center"&gt;Duration&lt;/th&gt;
&lt;th align="center"&gt;Effort&lt;/th&gt;
&lt;th align="center"&gt;Additional Text / Assignments&lt;/th&gt;
&lt;th align="center"&gt;Prerequisites&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/introduction-computer-science-harvardx-cs50x#!" rel="nofollow"&gt;Introduction to Computer Science - CS50&lt;/a&gt; (&lt;a href="https://cs50.harvard.edu/" rel="nofollow"&gt;alt&lt;/a&gt;)&lt;/td&gt;
&lt;td align="center"&gt;12 weeks&lt;/td&gt;
&lt;td align="center"&gt;10-20 hours/week&lt;/td&gt;
&lt;td align="center"&gt;After the sections on C, skip to the next course. &lt;a href="FAQ.md#why-do-you-recommend-skipping-the-second-half-of-cs50"&gt;Why?&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;introductory programming&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.coursera.org/learn/build-a-computer" rel="nofollow"&gt;Build a Modern Computer from First Principles: From Nand to Tetris&lt;/a&gt; (&lt;a href="http://www.nand2tetris.org/" rel="nofollow"&gt;alt&lt;/a&gt;)&lt;/td&gt;
&lt;td align="center"&gt;6 weeks&lt;/td&gt;
&lt;td align="center"&gt;7-13 hours/week&lt;/td&gt;
&lt;td align="center"&gt;-&lt;/td&gt;
&lt;td align="center"&gt;C-like programming language&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.coursera.org/learn/nand2tetris2" rel="nofollow"&gt;Build a Modern Computer from First Principles: Nand to Tetris Part II &lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;6 weeks&lt;/td&gt;
&lt;td align="center"&gt;12-18 hours/week&lt;/td&gt;
&lt;td align="center"&gt;-&lt;/td&gt;
&lt;td align="center"&gt;one of &lt;a href="https://user-images.githubusercontent.com/2046800/35426340-f6ce6358-026a-11e8-8bbb-4e95ac36b1d7.png" rel="nofollow"&gt;these programming languages&lt;/a&gt;, From Nand to Tetris Part I&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://lagunita.stanford.edu/courses/Engineering/Networking-SP/SelfPaced/about" rel="nofollow"&gt;Introduction to Computer Networking&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;8 weeks&lt;/td&gt;
&lt;td align="center"&gt;4–12 hours/week&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/PrincetonUniversity/COS461-Public/tree/master/assignments/assignment1"&gt;Assignment 1&lt;/a&gt;&lt;br&gt;&lt;a href="https://www.scs.stanford.edu/10au-cs144/lab/reliable/reliable.html" rel="nofollow"&gt;Assignment 2&lt;/a&gt;&lt;br&gt;&lt;a href="https://nptel.ac.in/content/storage2/courses/106105080/pdf/M2L7.pdf" rel="nofollow"&gt;Assignment 3&lt;/a&gt;&lt;br&gt;&lt;a href="http://www-net.cs.umass.edu/wireshark-labs/Wireshark_TCP_v7.0.pdf" rel="nofollow"&gt;Assignment 4&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;algebra, probability, basic CS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.ops-class.org/" rel="nofollow"&gt;ops-class.org - Hack the Kernel&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;15 weeks&lt;/td&gt;
&lt;td align="center"&gt;6 hours/week&lt;/td&gt;
&lt;td align="center"&gt;Replace course textbook with &lt;a href="http://pages.cs.wisc.edu/~remzi/OSTEP/" rel="nofollow"&gt;Operating Systems: Three Easy Pieces&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;algorithms&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-core-theory" class="anchor" aria-hidden="true" href="#core-theory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core theory&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Topics covered&lt;/strong&gt;:
&lt;code&gt;divide and conquer&lt;/code&gt;
&lt;code&gt;sorting and searching&lt;/code&gt;
&lt;code&gt;randomized algorithms&lt;/code&gt;
&lt;code&gt;graph search&lt;/code&gt;
&lt;code&gt;shortest paths&lt;/code&gt;
&lt;code&gt;data structures&lt;/code&gt;
&lt;code&gt;greedy algorithms&lt;/code&gt;
&lt;code&gt;minimum spanning trees&lt;/code&gt;
&lt;code&gt;dynamic programming&lt;/code&gt;
&lt;code&gt;NP-completeness&lt;/code&gt;
&lt;code&gt;and more&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Courses&lt;/th&gt;
&lt;th align="center"&gt;Duration&lt;/th&gt;
&lt;th align="center"&gt;Effort&lt;/th&gt;
&lt;th align="center"&gt;Prerequisites&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://lagunita.stanford.edu/courses/course-v1:Engineering+Algorithms1+SelfPaced/about" rel="nofollow"&gt;Algorithms: Design and Analysis, Part I&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;8 weeks&lt;/td&gt;
&lt;td align="center"&gt;4-8 hours/week&lt;/td&gt;
&lt;td align="center"&gt;any programming language, Mathematics for Computer Science&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://lagunita.stanford.edu/courses/course-v1:Engineering+Algorithms2+SelfPaced/about" rel="nofollow"&gt;Algorithms: Design and Analysis, Part II&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;8 weeks&lt;/td&gt;
&lt;td align="center"&gt;4-8 hours/week&lt;/td&gt;
&lt;td align="center"&gt;Part I&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-core-applications" class="anchor" aria-hidden="true" href="#core-applications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core applications&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Topics covered&lt;/strong&gt;:
&lt;code&gt;Agile methodology&lt;/code&gt;
&lt;code&gt;REST&lt;/code&gt;
&lt;code&gt;software specifications&lt;/code&gt;
&lt;code&gt;refactoring&lt;/code&gt;
&lt;code&gt;relational databases&lt;/code&gt;
&lt;code&gt;transaction processing&lt;/code&gt;
&lt;code&gt;data modeling&lt;/code&gt;
&lt;code&gt;neural networks&lt;/code&gt;
&lt;code&gt;supervised learning&lt;/code&gt;
&lt;code&gt;unsupervised learning&lt;/code&gt;
&lt;code&gt;OpenGL&lt;/code&gt;
&lt;code&gt;raytracing&lt;/code&gt;
&lt;code&gt;block ciphers&lt;/code&gt;
&lt;code&gt;authentication&lt;/code&gt;
&lt;code&gt;public key encryption&lt;/code&gt;
&lt;code&gt;and more&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Courses&lt;/th&gt;
&lt;th align="center"&gt;Duration&lt;/th&gt;
&lt;th align="center"&gt;Effort&lt;/th&gt;
&lt;th align="center"&gt;Prerequisites&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://lagunita.stanford.edu/courses/DB/2014/SelfPaced/about" rel="nofollow"&gt;Databases&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;12 weeks&lt;/td&gt;
&lt;td align="center"&gt;8-12 hours/week&lt;/td&gt;
&lt;td align="center"&gt;some programming, basic CS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.coursera.org/learn/machine-learning" rel="nofollow"&gt;Machine Learning&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;11 weeks&lt;/td&gt;
&lt;td align="center"&gt;4-6 hours/week&lt;/td&gt;
&lt;td align="center"&gt;linear algebra&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/computer-graphics-uc-san-diegox-cse167x" rel="nofollow"&gt;Computer Graphics&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;6 weeks&lt;/td&gt;
&lt;td align="center"&gt;12 hours/week&lt;/td&gt;
&lt;td align="center"&gt;C++ or Java, linear algebra&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.coursera.org/course/crypto" rel="nofollow"&gt;Cryptography I&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;6 weeks&lt;/td&gt;
&lt;td align="center"&gt;5-7 hours/week&lt;/td&gt;
&lt;td align="center"&gt;linear algebra, probability&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/software-engineering-introduction-ubcx-softeng1x" rel="nofollow"&gt;Software Engineering: Introduction&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;6 weeks&lt;/td&gt;
&lt;td align="center"&gt;8-10 hours/week&lt;/td&gt;
&lt;td align="center"&gt;Software Construction - Object-Oriented Design&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/software-development-capstone-project-ubcx-softengprjx" rel="nofollow"&gt;Software Development Capstone Project&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;6-7 weeks&lt;/td&gt;
&lt;td align="center"&gt;8-10 hours/week&lt;/td&gt;
&lt;td align="center"&gt;Software Engineering: Introduction&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-advanced-cs" class="anchor" aria-hidden="true" href="#advanced-cs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced CS&lt;/h2&gt;
&lt;p&gt;After completing &lt;strong&gt;every required course&lt;/strong&gt; in Core CS, students should choose a subset of courses from Advanced CS based on interest.
Not every course from a subcategory needs to be taken.
But students should take &lt;em&gt;every&lt;/em&gt; course that is relevant to the field they intend to go into.&lt;/p&gt;
&lt;p&gt;The Advanced CS study should then end with one of the Specializations under &lt;a href="#advanced-applications"&gt;Advanced applications&lt;/a&gt;.
A Specialization's Capstone, if taken, may act as the &lt;a href="#final-project"&gt;Final project&lt;/a&gt;, if permitted by the Honor Code of the course.
If not, or if a student chooses not to take the Capstone, then a separate Final project will need to be done to complete this curriculum.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-programming" class="anchor" aria-hidden="true" href="#advanced-programming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced programming&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Topics covered&lt;/strong&gt;:
&lt;code&gt;debugging theory and practice&lt;/code&gt;
&lt;code&gt;goal-oriented programming&lt;/code&gt;
&lt;code&gt;GPU programming&lt;/code&gt;
&lt;code&gt;CUDA&lt;/code&gt;
&lt;code&gt;parallel computing&lt;/code&gt;
&lt;code&gt;object-oriented analysis and design&lt;/code&gt;
&lt;code&gt;UML&lt;/code&gt;
&lt;code&gt;large-scale software architecture and design&lt;/code&gt;
&lt;code&gt;and more&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Courses&lt;/th&gt;
&lt;th align="center"&gt;Duration&lt;/th&gt;
&lt;th align="center"&gt;Effort&lt;/th&gt;
&lt;th align="center"&gt;Prerequisites&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://lagunita.stanford.edu/courses/Engineering/Compilers/Fall2014/about" rel="nofollow"&gt;Compilers&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;9 weeks&lt;/td&gt;
&lt;td align="center"&gt;6-8 hours/week&lt;/td&gt;
&lt;td align="center"&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.udacity.com/course/software-debugging--cs259" rel="nofollow"&gt;Software Debugging&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;8 weeks&lt;/td&gt;
&lt;td align="center"&gt;6 hours/week&lt;/td&gt;
&lt;td align="center"&gt;Python, object-oriented programming&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.udacity.com/course/software-testing--cs258" rel="nofollow"&gt;Software Testing&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;4 weeks&lt;/td&gt;
&lt;td align="center"&gt;6 hours/week&lt;/td&gt;
&lt;td align="center"&gt;Python, programming experience&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/laff-on-programming-for-correctness" rel="nofollow"&gt;LAFF - On Programming for Correctness&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;7 weeks&lt;/td&gt;
&lt;td align="center"&gt;6 hours/week&lt;/td&gt;
&lt;td align="center"&gt;linear algebra&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://classroom.udacity.com/courses/cs344" rel="nofollow"&gt;Introduction to Parallel Programming&lt;/a&gt; (&lt;a href="https://www.youtube.com/playlist?list=PLGvfHSgImk4aweyWlhBXNF6XISY3um82_" rel="nofollow"&gt;alt&lt;/a&gt;)&lt;/td&gt;
&lt;td align="center"&gt;12 weeks&lt;/td&gt;
&lt;td align="center"&gt;-&lt;/td&gt;
&lt;td align="center"&gt;C, algorithms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.udacity.com/course/software-architecture-design--ud821" rel="nofollow"&gt;Software Architecture &amp;amp; Design&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;8 weeks&lt;/td&gt;
&lt;td align="center"&gt;6 hours/week&lt;/td&gt;
&lt;td align="center"&gt;software engineering in Java&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-math" class="anchor" aria-hidden="true" href="#advanced-math"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced math&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Topics covered&lt;/strong&gt;:
&lt;code&gt;parametric equations&lt;/code&gt;
&lt;code&gt;polar coordinate systems&lt;/code&gt;
&lt;code&gt;multivariable integrals&lt;/code&gt;
&lt;code&gt;multivariable differentials&lt;/code&gt;
&lt;code&gt;probability theory&lt;/code&gt;
&lt;code&gt;and more&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Courses&lt;/th&gt;
&lt;th align="center"&gt;Duration&lt;/th&gt;
&lt;th align="center"&gt;Effort&lt;/th&gt;
&lt;th align="center"&gt;Prerequisites&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://ocw.mit.edu/courses/mathematics/18-02sc-multivariable-calculus-fall-2010/index.htm" rel="nofollow"&gt;Multivariable Calculus&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;13 weeks&lt;/td&gt;
&lt;td align="center"&gt;12 hours/week&lt;/td&gt;
&lt;td align="center"&gt;MIT Calculus 1C&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/introduction-probability-science-mitx-6-041x-2" rel="nofollow"&gt;Introduction to Probability - The Science of Uncertainty&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;18 weeks&lt;/td&gt;
&lt;td align="center"&gt;12 hours/week&lt;/td&gt;
&lt;td align="center"&gt;Multivariable Calculus&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-systems" class="anchor" aria-hidden="true" href="#advanced-systems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced systems&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Topics covered&lt;/strong&gt;:
&lt;code&gt;digital signaling&lt;/code&gt;
&lt;code&gt;combinational logic&lt;/code&gt;
&lt;code&gt;CMOS technologies&lt;/code&gt;
&lt;code&gt;sequential logic&lt;/code&gt;
&lt;code&gt;finite state machines&lt;/code&gt;
&lt;code&gt;processor instruction sets&lt;/code&gt;
&lt;code&gt;caches&lt;/code&gt;
&lt;code&gt;pipelining&lt;/code&gt;
&lt;code&gt;virtualization&lt;/code&gt;
&lt;code&gt;parallel processing&lt;/code&gt;
&lt;code&gt;virtual memory&lt;/code&gt;
&lt;code&gt;synchronization primitives&lt;/code&gt;
&lt;code&gt;system call interface&lt;/code&gt;
&lt;code&gt;and more&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Courses&lt;/th&gt;
&lt;th align="center"&gt;Duration&lt;/th&gt;
&lt;th align="center"&gt;Effort&lt;/th&gt;
&lt;th align="center"&gt;Prerequisites&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/reliable-distributed-algorithms-part-1-kthx-id2203-1x" rel="nofollow"&gt;Reliable Distributed Systems, Part 1&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;5 weeks&lt;/td&gt;
&lt;td align="center"&gt;5 hours/week&lt;/td&gt;
&lt;td align="center"&gt;Scala, intermediate CS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/reliable-distributed-algorithms-part-2-kthx-id2203-2x" rel="nofollow"&gt;Reliable Distributed Systems, Part 2&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;5 weeks&lt;/td&gt;
&lt;td align="center"&gt;5 hours/week&lt;/td&gt;
&lt;td align="center"&gt;Part 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/electricity-magnetism-part-1-ricex-phys102-1x-0" rel="nofollow"&gt;Electricity and Magnetism, Part 1&lt;/a&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt;
&lt;td align="center"&gt;7 weeks&lt;/td&gt;
&lt;td align="center"&gt;8-10 hours/week&lt;/td&gt;
&lt;td align="center"&gt;calculus, basic mechanics&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/electricity-magnetism-part-2-ricex-phys102-2x-0" rel="nofollow"&gt;Electricity and Magnetism, Part 2&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;7 weeks&lt;/td&gt;
&lt;td align="center"&gt;8-10 hours/week&lt;/td&gt;
&lt;td align="center"&gt;Electricity and Magnetism, Part 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/computation-structures-part-1-digital-mitx-6-004-1x-0" rel="nofollow"&gt;Computation Structures 1: Digital Circuits&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;10 weeks&lt;/td&gt;
&lt;td align="center"&gt;6 hours/week&lt;/td&gt;
&lt;td align="center"&gt;electricity, magnetism&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/computation-structures-2-computer-mitx-6-004-2x" rel="nofollow"&gt;Computation Structures 2: Computer Architecture&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;10 weeks&lt;/td&gt;
&lt;td align="center"&gt;6 hours/week&lt;/td&gt;
&lt;td align="center"&gt;Computation Structures 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/computation-structures-3-computer-mitx-6-004-3x-0" rel="nofollow"&gt;Computation Structures 3: Computer Organization&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;10 weeks&lt;/td&gt;
&lt;td align="center"&gt;6 hours/week&lt;/td&gt;
&lt;td align="center"&gt;Computation Structures 2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;&lt;sup&gt;1&lt;/sup&gt; Note&lt;/strong&gt;:
These courses assume knowledge of basic physics.
(&lt;a href="FAQ.md#why-is-the-curriculum-missing-some-pre-requisites"&gt;Why?&lt;/a&gt;)
If you are struggling, you can find a physics MOOC or utilize the materials from Khan Academy:
&lt;a href="https://www.khanacademy.org/science/physics" rel="nofollow"&gt;Khan Academy - Physics&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-theory" class="anchor" aria-hidden="true" href="#advanced-theory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced theory&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Topics covered&lt;/strong&gt;:
&lt;code&gt;formal languages&lt;/code&gt;
&lt;code&gt;Turing machines&lt;/code&gt;
&lt;code&gt;computability&lt;/code&gt;
&lt;code&gt;event-driven concurrency&lt;/code&gt;
&lt;code&gt;automata&lt;/code&gt;
&lt;code&gt;distributed shared memory&lt;/code&gt;
&lt;code&gt;consensus algorithms&lt;/code&gt;
&lt;code&gt;state machine replication&lt;/code&gt;
&lt;code&gt;computational geometry theory&lt;/code&gt;
&lt;code&gt;propositional logic&lt;/code&gt;
&lt;code&gt;relational logic&lt;/code&gt;
&lt;code&gt;Herbrand logic&lt;/code&gt;
&lt;code&gt;concept lattices&lt;/code&gt;
&lt;code&gt;game trees&lt;/code&gt;
&lt;code&gt;and more&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Courses&lt;/th&gt;
&lt;th align="center"&gt;Duration&lt;/th&gt;
&lt;th align="center"&gt;Effort&lt;/th&gt;
&lt;th align="center"&gt;Prerequisites&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.coursera.org/learn/logic-introduction" rel="nofollow"&gt;Introduction to Logic&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;10 weeks&lt;/td&gt;
&lt;td align="center"&gt;4-8 hours/week&lt;/td&gt;
&lt;td align="center"&gt;set theory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://lagunita.stanford.edu/courses/course-v1:ComputerScience+Automata+SelfPaced/about" rel="nofollow"&gt;Automata Theory&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;7 weeks&lt;/td&gt;
&lt;td align="center"&gt;10 hours/week&lt;/td&gt;
&lt;td align="center"&gt;discrete mathematics, logic, algorithms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.edx.org/course/computational-geometry-tsinghuax-70240183x" rel="nofollow"&gt;Computational Geometry&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;16 weeks&lt;/td&gt;
&lt;td align="center"&gt;8 hours/week&lt;/td&gt;
&lt;td align="center"&gt;algorithms, C++&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.coursera.org/learn/formal-concept-analysis" rel="nofollow"&gt;Introduction to Formal Concept Analysis&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;6 weeks&lt;/td&gt;
&lt;td align="center"&gt;4-6 hours/week&lt;/td&gt;
&lt;td align="center"&gt;logic, probability&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.coursera.org/learn/game-theory-1" rel="nofollow"&gt;Game Theory&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;8 weeks&lt;/td&gt;
&lt;td align="center"&gt;x hours/week&lt;/td&gt;
&lt;td align="center"&gt;mathematical thinking, probability, calculus&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-applications" class="anchor" aria-hidden="true" href="#advanced-applications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced applications&lt;/h3&gt;
&lt;p&gt;These Coursera Specializations all end with a Capstone project.
Depending on the course, you may be able to utilize the Capstone as your Final Project for this Computer Science curriculum.
Note that doing a Specialization with the Capstone at the end always costs money.
So if you don't wish to spend money or use the Capstone as your Final, it may be possible to take the courses in the Specialization for free by manually searching for them, but not all allow this.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Courses&lt;/th&gt;
&lt;th align="center"&gt;Duration&lt;/th&gt;
&lt;th align="center"&gt;Effort&lt;/th&gt;
&lt;th align="center"&gt;Prerequisites&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.coursera.org/specializations/robotics" rel="nofollow"&gt;Robotics (Specialization)&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;26 weeks&lt;/td&gt;
&lt;td align="center"&gt;2-5 hours/week&lt;/td&gt;
&lt;td align="center"&gt;linear algebra, calculus, programming, probability&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.coursera.org/specializations/data-mining" rel="nofollow"&gt;Data Mining (Specialization)&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;30 weeks&lt;/td&gt;
&lt;td align="center"&gt;2-5 hours/week&lt;/td&gt;
&lt;td align="center"&gt;machine learning&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.coursera.org/specializations/big-data" rel="nofollow"&gt;Big Data (Specialization)&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;30 weeks&lt;/td&gt;
&lt;td align="center"&gt;3-5 hours/week&lt;/td&gt;
&lt;td align="center"&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.coursera.org/specializations/internet-of-things" rel="nofollow"&gt;Internet of Things (Specialization)&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;30 weeks&lt;/td&gt;
&lt;td align="center"&gt;1-5 hours/week&lt;/td&gt;
&lt;td align="center"&gt;strong programming&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.coursera.org/specializations/cloud-computing" rel="nofollow"&gt;Cloud Computing (Specialization)&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;30 weeks&lt;/td&gt;
&lt;td align="center"&gt;2-6 hours/week&lt;/td&gt;
&lt;td align="center"&gt;C++ programming&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.coursera.org/specializations/full-stack" rel="nofollow"&gt;Full Stack Web Development (Specialization)&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;27 weeks&lt;/td&gt;
&lt;td align="center"&gt;2-6 hours/week&lt;/td&gt;
&lt;td align="center"&gt;programming, databases&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.coursera.org/specializations/jhu-data-science" rel="nofollow"&gt;Data Science (Specialization)&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;43 weeks&lt;/td&gt;
&lt;td align="center"&gt;1-6 hours/week&lt;/td&gt;
&lt;td align="center"&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://www.coursera.org/specializations/scala" rel="nofollow"&gt;Functional Programming in Scala (Specialization)&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;29 weeks&lt;/td&gt;
&lt;td align="center"&gt;4-5 hours/week&lt;/td&gt;
&lt;td align="center"&gt;One year programming experience&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-final-project" class="anchor" aria-hidden="true" href="#final-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Final project&lt;/h2&gt;
&lt;p&gt;OSS University is &lt;strong&gt;project-focused&lt;/strong&gt;.
You are encouraged to do the assignments and exams for each course, but what really matters is whether you can &lt;em&gt;use&lt;/em&gt; your knowledge to solve a real-world problem.&lt;/p&gt;
&lt;p&gt;After you've gotten through all of Core CS and the parts of Advanced CS relevant to you, you should think about a problem that you can solve using the knowledge you've acquired.
Not only does real project work look great on a resume, but the project will also &lt;em&gt;validate&lt;/em&gt; and &lt;em&gt;consolidate&lt;/em&gt; your knowledge.
You can create something entirely new, or you can find an existing project that needs help via websites like
&lt;a href="https://www.codetriage.com/" rel="nofollow"&gt;CodeTriage&lt;/a&gt;
or
&lt;a href="http://www.firsttimersonly.com/" rel="nofollow"&gt;First Timers Only&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Another option is using the Capstone project from taking one of the Specializations in &lt;a href="#advanced-applications"&gt;Advanced applications&lt;/a&gt;;
whether or not this makes sense depends on the course, the project, and whether or not the course's Honor Code permits you to display your work publicly.
In some cases, it may not be permitted;
do &lt;strong&gt;not&lt;/strong&gt; violate your course's Honor Code!&lt;/p&gt;
&lt;p&gt;Put the OSSU-CS badge in the README of your repository!
&lt;a href="https://github.com/ossu/computer-science"&gt;&lt;img src="https://camo.githubusercontent.com/55b0f02a52ab8cc845332858f47f4e14b2182f83/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4f5353552d636f6d70757465722d2d736369656e63652d626c75652e737667" alt="Open Source Society University - Computer Science" data-canonical-src="https://img.shields.io/badge/OSSU-computer--science-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Markdown: &lt;code&gt;[![Open Source Society University - Computer Science](https://img.shields.io/badge/OSSU-computer--science-blue.svg)](https://github.com/ossu/computer-science)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;HTML: &lt;code&gt;&amp;lt;a href="https://github.com/ossu/computer-science"&amp;gt;&amp;lt;img alt="Open Source Society University - Computer Science" src="https://img.shields.io/badge/OSSU-computer--science-blue.svg"&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-evaluation" class="anchor" aria-hidden="true" href="#evaluation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Evaluation&lt;/h3&gt;
&lt;p&gt;Upon completing your final project, submit your project's information to &lt;a href="PROJECTS.md"&gt;PROJECTS&lt;/a&gt;
via a pull request and use our &lt;a href="#community"&gt;community&lt;/a&gt; channels to announce it to your fellow students.&lt;/p&gt;
&lt;p&gt;Your peers and mentors from OSSU will then informally evaluate your project.
You will not be "graded" in the traditional sense — everyone has their own measurements for what they consider a success.
The purpose of the evaluation is to act as your first announcement to the world that you are a computer scientist
and to get experience listening to feedback — both positive and negative — and taking it in stride.&lt;/p&gt;
&lt;p&gt;The final project evaluation has a second purpose: to evaluate whether OSSU,
through its community and curriculum, is successful in its mission to guide independent learners in obtaining a world-class computer science education.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cooperative-work" class="anchor" aria-hidden="true" href="#cooperative-work"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cooperative work&lt;/h3&gt;
&lt;p&gt;You can create this project alone or with other students!
&lt;strong&gt;We love cooperative work&lt;/strong&gt;!
Use our &lt;a href="#community"&gt;channels&lt;/a&gt; to communicate with other fellows to combine and create new projects!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-which-programming-languages-should-i-use" class="anchor" aria-hidden="true" href="#which-programming-languages-should-i-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Which programming languages should I use?&lt;/h3&gt;
&lt;p&gt;My friend, here is the best part of liberty!
You can use &lt;strong&gt;any&lt;/strong&gt; language that you want to complete the final project.&lt;/p&gt;
&lt;p&gt;The important thing is to &lt;strong&gt;internalize&lt;/strong&gt; the core concepts and to be able to use them with whatever tool (programming language) that you wish.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-pro-cs" class="anchor" aria-hidden="true" href="#pro-cs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pro CS&lt;/h2&gt;
&lt;p&gt;After completing the requirements of the curriculum above, you will have completed the equivalent of a full bachelor's degree in Computer Science, or quite close to one.
You can stop in the Advanced CS section, but the next step to completing your studies is to develop skills and knowledge in a specific domain.
Many of these courses are graduate-level.&lt;/p&gt;
&lt;p&gt;Choose one or more of the following &lt;strong&gt;specializations&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/specializations/r" rel="nofollow"&gt;Mastering Software Development in R Specialization&lt;/a&gt; by Johns Hopkins University&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/ai" rel="nofollow"&gt;Artificial Intelligence Engineer Nanodegree&lt;/a&gt; by IBM, Amazon, and Didi&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/machine-learning-engineer-nanodegree--nd009" rel="nofollow"&gt;Machine Learning Engineer Nanodegree&lt;/a&gt; by Kaggle&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/micromasters/ritx-cybersecurity" rel="nofollow"&gt;Cybersecurity MicroMasters&lt;/a&gt; by the Rochester Institute of Technology&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/android-developer-nanodegree-by-google--nd801" rel="nofollow"&gt;Android Developer Nanodegree&lt;/a&gt; by Google&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These aren't the only specializations you can choose. Check the following websites for &lt;strong&gt;more options&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;edX: &lt;a href="https://www.edx.org/xseries" rel="nofollow"&gt;xSeries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Coursera: &lt;a href="https://www.coursera.org/specializations" rel="nofollow"&gt;Specializations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Udacity: &lt;a href="https://www.udacity.com/nanodegree" rel="nofollow"&gt;Nanodegree&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-where-to-go-next" class="anchor" aria-hidden="true" href="#where-to-go-next"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Where to go next?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Look for a job as a developer!&lt;/li&gt;
&lt;li&gt;Check out the &lt;a href="extras/readings.md"&gt;readings&lt;/a&gt; for classic books you can read that will sharpen your skills and expand your knowledge.&lt;/li&gt;
&lt;li&gt;Join a local developer meetup (e.g. via &lt;a href="https://www.meetup.com/" rel="nofollow"&gt;meetup.com&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Pay attention to emerging technologies in the world of software development:
&lt;ul&gt;
&lt;li&gt;Explore the &lt;strong&gt;actor model&lt;/strong&gt; through &lt;a href="http://elixir-lang.org/" rel="nofollow"&gt;Elixir&lt;/a&gt;, a new functional programming language for the web based on the battle-tested Erlang Virtual Machine!&lt;/li&gt;
&lt;li&gt;Explore &lt;strong&gt;borrowing and lifetimes&lt;/strong&gt; through &lt;a href="https://www.rust-lang.org/" rel="nofollow"&gt;Rust&lt;/a&gt;, a systems language which achieves memory- and thread-safety without a garbage collector!&lt;/li&gt;
&lt;li&gt;Explore &lt;strong&gt;dependent type systems&lt;/strong&gt; through &lt;a href="https://www.idris-lang.org/" rel="nofollow"&gt;Idris&lt;/a&gt;, a new Haskell-inspired language with unprecedented support for type-driven development.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/15a5e1c20a0a4a22f1db4c752e6629c81614ab7e/687474703a2f2f692e696d6775722e636f6d2f5245514b3056552e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/15a5e1c20a0a4a22f1db4c752e6629c81614ab7e/687474703a2f2f692e696d6775722e636f6d2f5245514b3056552e6a7067" alt="keep learning" data-canonical-src="http://i.imgur.com/REQK0VU.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of conduct&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/ossu/code-of-conduct"&gt;OSSU's code of conduct&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Subscribe to our &lt;a href="https://tinyletter.com/ossu" rel="nofollow"&gt;newsletter&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Use our &lt;a href="https://github.com/ossu/forum"&gt;forum&lt;/a&gt; if you need some help.&lt;/li&gt;
&lt;li&gt;You can also interact through &lt;a href="https://github.com/ossu/computer-science/issues"&gt;GitHub issues&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;We also have a chat room! &lt;a href="https://gitter.im/open-source-society/computer-science?utm_campaign=pr-badge&amp;amp;utm_content=badge&amp;amp;utm_medium=badge&amp;amp;utm_source=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Join the chat at https://gitter.im/open-source-society/computer-science" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add &lt;strong&gt;Open Source Society University&lt;/strong&gt; to your &lt;a href="https://www.linkedin.com/school/11272443/" rel="nofollow"&gt;Linkedin&lt;/a&gt; profile!&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;: A forum is an ideal way to interact with other students as we do not lose important discussions, which usually occur in communication via chat apps.
&lt;strong&gt;Please use our forum for important discussions&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-show-your-progress" class="anchor" aria-hidden="true" href="#how-to-show-your-progress"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to show your progress&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Create an account in &lt;a href="https://trello.com/" rel="nofollow"&gt;Trello&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Copy &lt;a href="https://trello.com/b/7NIfi40X" rel="nofollow"&gt;this&lt;/a&gt; board to your personal account.
See how to copy a board &lt;a href="https://help.trello.com/article/802-copying-cards-lists-or-boards" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now that you have a copy of our official board, you just need to pass the cards to the &lt;code&gt;Doing&lt;/code&gt; column or &lt;code&gt;Done&lt;/code&gt; column as you progress in your study.&lt;/p&gt;
&lt;p&gt;We also have &lt;strong&gt;labels&lt;/strong&gt; to help you have more control through the process.
The meaning of each of these labels is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Main Curriculum&lt;/code&gt;: cards with that label represent courses that are listed in our curriculum.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Extra Resources&lt;/code&gt;: cards with that label represent courses that were added by the student.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Doing&lt;/code&gt;: cards with that label represent courses the student is current doing.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Done&lt;/code&gt;: cards with that label represent courses finished by the student.
Those cards should also have the link for at least one project/article built with the knowledge acquired in such course.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Section&lt;/code&gt;: cards with that label represent the section that we have in our curriculum.
Those cards with the &lt;code&gt;Section&lt;/code&gt; label are only to help the organization of the Done column.
You should put the &lt;em&gt;Course's cards&lt;/em&gt; below its respective &lt;em&gt;Section's card&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The intention of this board is to provide our students a way to track their progress, and also the ability to show their progress through a public page for friends, family, employers, etc.
You can change the status of your board to be &lt;em&gt;public&lt;/em&gt; or &lt;em&gt;private&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-team" class="anchor" aria-hidden="true" href="#team"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Team&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/ericdouglas"&gt;Eric Douglas&lt;/a&gt;&lt;/strong&gt;: founder of OSSU and co-maintainer of all its curricula&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/hanjiexi"&gt;hanjiexi&lt;/a&gt;&lt;/strong&gt;: lead technical maintainer&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/waciumawanjohi"&gt;waciumawanjohi&lt;/a&gt;&lt;/strong&gt;: lead academic maintainer&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/ossu/computer-science/graphs/contributors"&gt;Contributors&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-references" class="anchor" aria-hidden="true" href="#references"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;References&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.google.com/about/careers/students/guide-to-technical-development.html" rel="nofollow"&gt;Google - Guide for Technical Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/" rel="nofollow"&gt;Coursera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.edx.org" rel="nofollow"&gt;edX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/" rel="nofollow"&gt;Udacity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lagunita.stanford.edu/" rel="nofollow"&gt;Stanford University&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.csd.cs.cmu.edu/academics/undergraduate/requirements" rel="nofollow"&gt;Carnegie Mellon University: Computer Science Major Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ocw.mit.edu/courses/#electrical-engineering-and-computer-science" rel="nofollow"&gt;MIT Open Courseware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teachyourselfcs.com/" rel="nofollow"&gt;Teach Yourself Computer Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://spin.atomicobject.com/2015/05/15/obtaining-thorough-cs-background-online/" rel="nofollow"&gt;Obtaining a Thorough CS Background Online&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ossu</author><guid isPermaLink="false">https://github.com/ossu/computer-science</guid><pubDate>Tue, 24 Dec 2019 00:18:00 GMT</pubDate></item><item><title>goldbergyoni/javascript-testing-best-practices #19 in Unknown languages, Today</title><link>https://github.com/goldbergyoni/javascript-testing-best-practices</link><description>&lt;p&gt;&lt;i&gt;📗🌐 🚢 Comprehensive and exhaustive JavaScript &amp; Node.js testing best practices (August 2019)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/assets/jtbp-header-blue.png"&gt;&lt;img src="/assets/jtbp-header-blue.png" width="1920px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h1&gt;&lt;a id="user-content--why-this-guide-can-take-your-testing-skills-to-the-next-level" class="anchor" aria-hidden="true" href="#-why-this-guide-can-take-your-testing-skills-to-the-next-level"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="point_down" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f447.png"&gt;👇&lt;/g-emoji&gt; Why this guide can take your testing skills to the next level&lt;/h1&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content--45-best-practices-super-comprehensive-and-exhaustive" class="anchor" aria-hidden="true" href="#-45-best-practices-super-comprehensive-and-exhaustive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="green_book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d7.png"&gt;📗&lt;/g-emoji&gt; 45+ best practices: Super-comprehensive and exhaustive&lt;/h2&gt;
&lt;p&gt;This is a guide for JavaScript &amp;amp; Node.js reliability from A-Z. It summarizes and curates for you dozens of the best blog posts, books and tools the market has to offer&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--advanced-goes-10000-miles-beyond-the-basics" class="anchor" aria-hidden="true" href="#-advanced-goes-10000-miles-beyond-the-basics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="ship" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a2.png"&gt;🚢&lt;/g-emoji&gt; Advanced: Goes 10,000 miles beyond the basics&lt;/h2&gt;
&lt;p&gt;Hop into a journey that travels way beyond the basics into advanced topics like testing in production, mutation testing, property-based testing and many other strategic &amp;amp; professional tools. Should you read every word in this guide your testing skills are likely to go way above the average&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--full-stack-front-backend-ci-anything" class="anchor" aria-hidden="true" href="#-full-stack-front-backend-ci-anything"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="globe_with_meridians" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f310.png"&gt;🌐&lt;/g-emoji&gt; Full-stack: front, backend, CI, anything&lt;/h2&gt;
&lt;p&gt;Start by understanding the ubiquitous testing practices that are the foundation for any application tier. Then, delve into your area of choice: frontend/UI, backend, CI or maybe all of them?&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-written-by-yoni-goldberg" class="anchor" aria-hidden="true" href="#written-by-yoni-goldberg"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Written By Yoni Goldberg&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A JavaScript &amp;amp; Node.js consultant&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="man_teacher" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f3eb.png"&gt;👨‍🏫&lt;/g-emoji&gt; &lt;a href="https://www.testjavascript.com" rel="nofollow"&gt;My testing workshop&lt;/a&gt; -  learn about &lt;a href="https://www.testjavascript.com" rel="nofollow"&gt;my workshops&lt;/a&gt; in Europe &amp;amp; US&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/goldbergyoni/" rel="nofollow"&gt;Follow me on Twitter &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Come hear me speak at &lt;a href="https://js.la/" rel="nofollow"&gt;LA&lt;/a&gt;, &lt;a href="https://2019.nodejsday.it/" rel="nofollow"&gt;Verona&lt;/a&gt;, &lt;a href="https://kharkivjs.org/" rel="nofollow"&gt;Kharkiv&lt;/a&gt;, &lt;a href="https://zoom.us/webinar/register/1015657064375/WN_Lzvnuv4oQJOYey2jXNqX6A" rel="nofollow"&gt;free webinar&lt;/a&gt;. Future events TBD&lt;/li&gt;
&lt;li&gt;&lt;a href="https://testjavascript.com/newsletter/" rel="nofollow"&gt;My JavaScript Quality newsletter&lt;/a&gt; - insights and content only on strategic matters&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-translations---read-in-your-own-language" class="anchor" aria-hidden="true" href="#translations---read-in-your-own-language"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Translations - read in your own language&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="cn" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f3.png"&gt;🇨🇳&lt;/g-emoji&gt;&lt;a href="readme-zh-CN.md"&gt;Chinese&lt;/a&gt; - courtesy of &lt;a href="https://github.com/yvesyao"&gt;Yves yao&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="kr" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1f7.png"&gt;🇰🇷&lt;/g-emoji&gt;&lt;a href="readme.kr.md"&gt;Korean&lt;/a&gt; - courtesy of &lt;a href="https://github.com/ragubyun"&gt;Rain Byun&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Want to translate to your own language? please open an issue &lt;g-emoji class="g-emoji" alias="purple_heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f49c.png"&gt;💜&lt;/g-emoji&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Table of Contents&lt;/code&gt;&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-section-0-the-golden-rule" class="anchor" aria-hidden="true" href="#section-0-the-golden-rule"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#section-0%EF%B8%8F%E2%83%A3-the-golden-rule"&gt;&lt;code&gt;Section 0: The Golden Rule&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;A single advice that inspires all the others (1 special bullet)&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-section-1-the-test-anatomy" class="anchor" aria-hidden="true" href="#section-1-the-test-anatomy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#section-1-the-test-anatomy-1"&gt;&lt;code&gt;Section 1: The Test Anatomy&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The foundation - structuring clean tests (12 bullets)&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-section-2-backend" class="anchor" aria-hidden="true" href="#section-2-backend"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#section-2%EF%B8%8F%E2%83%A3-backend-testing"&gt;&lt;code&gt;Section 2: Backend&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Writing backend and Microservices tests efficiently (8 bullets)&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-section-3-frontend" class="anchor" aria-hidden="true" href="#section-3-frontend"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#section-3%EF%B8%8F%E2%83%A3-frontend-testing"&gt;&lt;code&gt;Section 3: Frontend&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Writing tests for web UI including component and E2E tests (11 bullets)&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-section-4-measuring-tests-effectiveness" class="anchor" aria-hidden="true" href="#section-4-measuring-tests-effectiveness"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#section-4%EF%B8%8F%E2%83%A3-measuring-test-effectiveness"&gt;&lt;code&gt;Section 4: Measuring Tests Effectiveness&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Watching the watchman - measuring test quality (4 bullets)&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-section-5-continuous-integration" class="anchor" aria-hidden="true" href="#section-5-continuous-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#section-5%EF%B8%8F%E2%83%A3-ci-and-other-quality-measures"&gt;&lt;code&gt;Section 5: Continuous Integration&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Guidelines for CI in the JS world (9 bullets)&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-section-0️⃣-the-golden-rule" class="anchor" aria-hidden="true" href="#section-0️⃣-the-golden-rule"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section &lt;g-emoji class="g-emoji" alias="zero" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/0030-20e3.png"&gt;0️⃣&lt;/g-emoji&gt;: The Golden Rule&lt;/h1&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-️-0-the-golden-rule-design-for-lean-testing" class="anchor" aria-hidden="true" href="#️-0-the-golden-rule-design-for-lean-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="white_circle" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26aa.png"&gt;⚪️&lt;/g-emoji&gt; 0. The Golden Rule: Design for lean testing&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt;
Testing code is not like production-code - design it to be dead-simple, short, abstraction-free, flat, delightful to work with, lean. One should look at a test and get the intent instantly.&lt;/p&gt;
&lt;p&gt;Our minds are full with the main production code, we don't have 'headspace' for additional complexity. Should we try to squeeze yet another challenging code into our poor brain it will slow the team down which works against the reason we do testing. Practically this is where many teams just abandon testing.&lt;/p&gt;
&lt;p&gt;The tests are an opportunity for something else - a friendly and smiley assistant, one that it's delightful to work with and delivers great value for such a  small investment.  Science tells us that we have two brain systems: system 1 is used for effortless activities like driving a car on an empty road and system 2 which is meant for complex and conscious operations like solving a math equation. Design your test for system 1, when looking at test code it should &lt;em&gt;feel&lt;/em&gt; as easy as modifying an HTML document and not like solving 2X(17 × 24).&lt;/p&gt;
&lt;p&gt;This can be achieved by selectively cherry-picking techniques, tools and test targets that are cost-effective and provide great ROI. Test only as much as needed, strive to keep it nimble, sometimes it's even worth dropping some tests and trade reliability for agility and simplicity.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/assets/headspace.png"&gt;&lt;img src="/assets/headspace.png" alt="alt text" title="We have no head room for additional complexity" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Most of the advice below are derivatives of this principle.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ready-to-start" class="anchor" aria-hidden="true" href="#ready-to-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ready to start?&lt;/h3&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-section-1-the-test-anatomy-1" class="anchor" aria-hidden="true" href="#section-1-the-test-anatomy-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section 1: The Test Anatomy&lt;/h1&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content--️-11-include-3-parts-in-each-test-name" class="anchor" aria-hidden="true" href="#-️-11-include-3-parts-in-each-test-name"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 1.1 Include 3 parts in each test name&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; A test report should tell whether the current application revision satisfies the requirements for the people who are not necessarily familiar with the code: the tester, the DevOps engineer who is deploying and the future you two years from now. This can be achieved best if the tests speak at the requirements level and include 3 parts:&lt;/p&gt;
&lt;p&gt;(1) What is being tested? For example, the ProductsService.addNewProduct method&lt;/p&gt;
&lt;p&gt;(2) Under what circumstances and scenario? For example, no price is passed to the method&lt;/p&gt;
&lt;p&gt;(3) What is the expected result? For example, the new product is not approved&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; A deployment just failed, a test named “Add product” failed. Does this tell you what exactly is malfunctioning?&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="point_down" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f447.png"&gt;👇&lt;/g-emoji&gt; Note:&lt;/strong&gt; Each bullet has code examples and sometime also an image illustration. Click to expand&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-a-test-name-that-constitutes-3-parts" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-a-test-name-that-constitutes-3-parts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: A test name that constitutes 3 parts&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/cec8b8daecda53b45043e3e30a984a6314821c86/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541382532304578616d706c652532307573696e672532304d6f6368612d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/cec8b8daecda53b45043e3e30a984a6314821c86/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541382532304578616d706c652532307573696e672532304d6f6368612d626c75652e737667" alt="" title="Using Mocha to illustrate the idea" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Mocha-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;1. unit under test&lt;/span&gt;
&lt;span class="pl-en"&gt;describe&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Products Service&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;function&lt;/span&gt;() {
  &lt;span class="pl-en"&gt;describe&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Add new product&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;function&lt;/span&gt;() {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;2. scenario and 3. expectation&lt;/span&gt;
    &lt;span class="pl-en"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;When no price is specified, then the product status is pending approval&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, ()&lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
      &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;newProduct&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;ProductService&lt;/span&gt;().&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;);
      &lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-smi"&gt;newProduct&lt;/span&gt;.&lt;span class="pl-c1"&gt;status&lt;/span&gt;).&lt;span class="pl-smi"&gt;to&lt;/span&gt;.&lt;span class="pl-en"&gt;equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;pendingApproval&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
    });
  });
});
&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-a-test-name-that-constitutes-3-parts-1" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-a-test-name-that-constitutes-3-parts-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: A test name that constitutes 3 parts&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/assets/bp-1-3-parts.jpeg"&gt;&lt;img src="/assets/bp-1-3-parts.jpeg" alt="alt text" title="A test name that constitutes 3 parts" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️-12-structure-tests-by-the-aaa-pattern" class="anchor" aria-hidden="true" href="#-️-12-structure-tests-by-the-aaa-pattern"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 1.2 Structure tests by the AAA pattern&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; Structure your tests with 3 well-separated sections Arrange, Act &amp;amp; Assert (AAA). Following this structure guarantees that the reader spends no brain-CPU on understanding the test plan:&lt;/p&gt;
&lt;p&gt;1st A - Arrange: All the setup code to bring the system to the scenario the test aims to simulate. This might include instantiating the unit under test constructor, adding DB records, mocking/stubbing on objects and any other preparation code&lt;/p&gt;
&lt;p&gt;2nd A - Act: Execute the unit under test. Usually 1 line of code&lt;/p&gt;
&lt;p&gt;3rd A - Assert: Ensure that the received value satisfies the expectation. Usually 1 line of code&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; Not only do you spend hours understanding the main code, but what should have been the simplest part of the day (testing) stretches your brain&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-a-test-structured-with-the-aaa-pattern" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-a-test-structured-with-the-aaa-pattern"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: A test structured with the AAA pattern&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/18e898275485860eb14b4ea4056278a8e44fbd53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304a6573742d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/18e898275485860eb14b4ea4056278a8e44fbd53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304a6573742d626c75652e737667" alt="" title="Examples with Jest" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/eb7e8e64ff73b4339689bfb1e7ef2876eb9aee40/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304d6f6368612d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/eb7e8e64ff73b4339689bfb1e7ef2876eb9aee40/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304d6f6368612d626c75652e737667" alt="" title="Examples with Jest" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;describe&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Customer classifier&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-en"&gt;test&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;When customer spent more than 500$, should be classified as premium&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Arrange&lt;/span&gt;
        &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;customerToClassify&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {spent&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;505&lt;/span&gt;, joined&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(), id&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;}
        &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;DBStub&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;sinon&lt;/span&gt;.&lt;span class="pl-en"&gt;stub&lt;/span&gt;(dataAccess, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;getCustomer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            .&lt;span class="pl-en"&gt;reply&lt;/span&gt;({id&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;, classification&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;regular&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;});

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Act&lt;/span&gt;
        &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;receivedClassification&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;customerClassifier&lt;/span&gt;.&lt;span class="pl-en"&gt;classifyCustomer&lt;/span&gt;(customerToClassify);

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Assert&lt;/span&gt;
        &lt;span class="pl-en"&gt;expect&lt;/span&gt;(receivedClassification).&lt;span class="pl-en"&gt;toMatch&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;premium&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
    });
});&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-thumbsdown-anti-pattern-example-no-separation-one-bulk-harder-to-interpret" class="anchor" aria-hidden="true" href="#thumbsdown-anti-pattern-example-no-separation-one-bulk-harder-to-interpret"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="-1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png"&gt;👎&lt;/g-emoji&gt; Anti Pattern Example: No separation, one bulk, harder to interpret&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;test&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Should be classified as premium&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
        &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;customerToClassify&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {spent&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;505&lt;/span&gt;, joined&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(), id&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;}
        &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;DBStub&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;sinon&lt;/span&gt;.&lt;span class="pl-en"&gt;stub&lt;/span&gt;(dataAccess, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;getCustomer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            .&lt;span class="pl-en"&gt;reply&lt;/span&gt;({id&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;, classification&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;regular&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;});
        &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;receivedClassification&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;customerClassifier&lt;/span&gt;.&lt;span class="pl-en"&gt;classifyCustomer&lt;/span&gt;(customerToClassify);
        &lt;span class="pl-en"&gt;expect&lt;/span&gt;(receivedClassification).&lt;span class="pl-en"&gt;toMatch&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;premium&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
    });&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️13-describe-expectations-in-a-product-language-use-bdd-style-assertions" class="anchor" aria-hidden="true" href="#-️13-describe-expectations-in-a-product-language-use-bdd-style-assertions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️1.3 Describe expectations in a product language: use BDD-style assertions&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; Coding your tests in a declarative-style allows the reader to get the grab instantly without spending even a single brain-CPU cycle. When you write imperative code that is packed with conditional logic, the reader is forced to exert more brain-CPU cycles. In that case, code the expectation in a human-like language, declarative BDD style using &lt;code&gt;expect&lt;/code&gt; or &lt;code&gt;should&lt;/code&gt; and not using custom code. If Chai &amp;amp; Jest doesn't include the desired assertion and it’s highly repeatable, consider &lt;a href="https://jestjs.io/docs/en/expect#expectextendmatchers" rel="nofollow"&gt;extending Jest matcher (Jest)&lt;/a&gt; or writing a &lt;a href="https://www.chaijs.com/guide/plugins/" rel="nofollow"&gt;custom Chai plugin&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; The team will write less tests and decorate the annoying ones with .skip()&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;&lt;br&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/eb7e8e64ff73b4339689bfb1e7ef2876eb9aee40/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304d6f6368612d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/eb7e8e64ff73b4339689bfb1e7ef2876eb9aee40/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304d6f6368612d626c75652e737667" alt="" title="Examples with Mocha &amp;amp; Chai" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/18e898275485860eb14b4ea4056278a8e44fbd53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304a6573742d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/18e898275485860eb14b4ea4056278a8e44fbd53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304a6573742d626c75652e737667" alt="" title="Examples with Jest" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-thumbsdown-anti-pattern-example-the-reader-must-skim-through-not-so-short-and-imperative-code-just-to-get-the-test-story" class="anchor" aria-hidden="true" href="#thumbsdown-anti-pattern-example-the-reader-must-skim-through-not-so-short-and-imperative-code-just-to-get-the-test-story"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="-1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png"&gt;👎&lt;/g-emoji&gt; Anti Pattern Example: The reader must skim through not so short, and imperative code just to get the test story&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;test&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;When asking for an admin, ensure only ordered admins in results&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; , () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;assuming we've added here two admins "admin1", "admin2" and "user1"&lt;/span&gt;
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;allAdmins&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;getUsers&lt;/span&gt;({adminOnly&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;true&lt;/span&gt;});

    &lt;span class="pl-k"&gt;let&lt;/span&gt; admin1Found, adming2Found &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;;

    &lt;span class="pl-smi"&gt;allAdmins&lt;/span&gt;.&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;(&lt;span class="pl-smi"&gt;aSingleUser&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
        &lt;span class="pl-k"&gt;if&lt;/span&gt;(aSingleUser &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;){
            &lt;span class="pl-smi"&gt;assert&lt;/span&gt;.&lt;span class="pl-en"&gt;notEqual&lt;/span&gt;(aSingleUser, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A user was found and not admin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        }
        &lt;span class="pl-k"&gt;if&lt;/span&gt;(aSingleUser&lt;span class="pl-k"&gt;===&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;admin1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;){
            admin1Found &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
        }
        &lt;span class="pl-k"&gt;if&lt;/span&gt;(aSingleUser&lt;span class="pl-k"&gt;===&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;admin2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;){
            admin2Found &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
        }
    });

    &lt;span class="pl-k"&gt;if&lt;/span&gt;(&lt;span class="pl-k"&gt;!&lt;/span&gt;admin1Found &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;admin2Found ){
        &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Error&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Not all admins were returned&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    }
});
&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-skimming-through-the-following-declarative-test-is-a-breeze" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-skimming-through-the-following-declarative-test-is-a-breeze"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: Skimming through the following declarative test is a breeze&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;When asking for an admin, ensure only ordered admins in results&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; , () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;assuming we've added here two admins&lt;/span&gt;
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;allAdmins&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;getUsers&lt;/span&gt;({adminOnly&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;true&lt;/span&gt;});

    &lt;span class="pl-en"&gt;expect&lt;/span&gt;(allAdmins).&lt;span class="pl-smi"&gt;to&lt;/span&gt;.&lt;span class="pl-smi"&gt;include&lt;/span&gt;.&lt;span class="pl-smi"&gt;ordered&lt;/span&gt;.&lt;span class="pl-en"&gt;members&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;admin1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; , &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;admin2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
  .&lt;span class="pl-smi"&gt;but&lt;/span&gt;.&lt;span class="pl-smi"&gt;not&lt;/span&gt;.&lt;span class="pl-smi"&gt;include&lt;/span&gt;.&lt;span class="pl-smi"&gt;ordered&lt;/span&gt;.&lt;span class="pl-en"&gt;members&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]);
});
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️--14-stick-to-black-box-testing-test-only-public-methods" class="anchor" aria-hidden="true" href="#-️--14-stick-to-black-box-testing-test-only-public-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️  1.4 Stick to black-box testing: Test only public methods&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; Testing the internals brings huge overhead for almost nothing. If your code/API delivers the right results, should you really invest your next 3 hours in testing HOW it worked internally and then maintain these fragile tests? Whenever a public behavior is checked, the private implementation is also implicitly tested and your tests will break only if there is a certain problem (e.g. wrong output). This approach is also referred to as &lt;code&gt;behavioral testing&lt;/code&gt;. On the other side, should you test the internals (white box approach) — your focus shifts from planning the component outcome to nitty-gritty details and your test might break because of minor code refactors although the results are fine - this dramatically increases the maintenance burden
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; Your tests behave like the &lt;a href="https://en.wikipedia.org/wiki/The_Boy_Who_Cried_Wolf" rel="nofollow"&gt;boy who cried wolf&lt;/a&gt;: shouting false-positive cries (e.g., A test fails because a private variable name was changed). Unsurprisingly, people will soon start to ignore the CI notifications until someday, a real bug gets ignored…&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-thumbsdown-anti-pattern-example-a-test-case-is-testing-the-internals-for-no-good-reason" class="anchor" aria-hidden="true" href="#thumbsdown-anti-pattern-example-a-test-case-is-testing-the-internals-for-no-good-reason"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="-1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png"&gt;👎&lt;/g-emoji&gt; Anti Pattern Example: A test case is testing the internals for no good reason&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/eb7e8e64ff73b4339689bfb1e7ef2876eb9aee40/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304d6f6368612d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/eb7e8e64ff73b4339689bfb1e7ef2876eb9aee40/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304d6f6368612d626c75652e737667" alt="" title="Examples with Mocha &amp;amp; Chai" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ProductService&lt;/span&gt;{
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;this method is only used internally&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Change this name will make the tests fail&lt;/span&gt;
  &lt;span class="pl-en"&gt;calculateVATAdd&lt;/span&gt;(&lt;span class="pl-smi"&gt;priceWithoutVAT&lt;/span&gt;){
    &lt;span class="pl-k"&gt;return&lt;/span&gt; {finalPrice&lt;span class="pl-k"&gt;:&lt;/span&gt; priceWithoutVAT &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1.2&lt;/span&gt;};
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Change the result format or key name above will make the tests fail&lt;/span&gt;
  }
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;public method&lt;/span&gt;
  &lt;span class="pl-en"&gt;getPrice&lt;/span&gt;(&lt;span class="pl-smi"&gt;productId&lt;/span&gt;){
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;desiredProduct&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DB&lt;/span&gt;.&lt;span class="pl-en"&gt;getProduct&lt;/span&gt;(productId);
    finalPrice &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;this&lt;/span&gt;.&lt;span class="pl-en"&gt;calculateVATAdd&lt;/span&gt;(&lt;span class="pl-smi"&gt;desiredProduct&lt;/span&gt;.&lt;span class="pl-smi"&gt;price&lt;/span&gt;).&lt;span class="pl-smi"&gt;finalPrice&lt;/span&gt;;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; finalPrice;
  }
}


&lt;span class="pl-en"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;White-box test: When the internal methods get 0 vat, it return 0 response&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;async&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;There's no requirement to allow users to calculate the VAT, only show the final price. Nevertheless we falsely insist here to test the class internals&lt;/span&gt;
    &lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;ProductService&lt;/span&gt;().&lt;span class="pl-en"&gt;calculateVATAdd&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;).&lt;span class="pl-smi"&gt;finalPrice&lt;/span&gt;).&lt;span class="pl-smi"&gt;to&lt;/span&gt;.&lt;span class="pl-en"&gt;equal&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;);
});
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️-️15-choose-the-right-test-doubles-avoid-mocks-in-favor-of-stubs-and-spies" class="anchor" aria-hidden="true" href="#-️-️15-choose-the-right-test-doubles-avoid-mocks-in-favor-of-stubs-and-spies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ ️1.5 Choose the right test doubles: Avoid mocks in favor of stubs and spies&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt;  Test doubles are a necessary evil because they are coupled to the application internals, yet some provide immense value (&lt;a href="https://martinfowler.com/articles/mocksArentStubs.html" rel="nofollow"&gt;&lt;/a&gt;&lt;a href="https://martinfowler.com/articles/mocksArentStubs.html" rel="nofollow"&gt;Read here a reminder about test doubles: mocks vs stubs vs spies&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Before using test doubles, ask a very simple question: Do I use it to test functionality that appears, or could appear, in the requirements document? If no, it’s a white-box testing smell.&lt;/p&gt;
&lt;p&gt;For example, if you want to test that your app behaves reasonably when the payment service is down, you might stub the payment service and trigger some ‘No Response’ return to ensure that the unit under test returns the right value. This checks our application behavior/response/outcome under certain scenarios. You might also use a spy to assert that an email was sent when that service is down — this is again a behavioral check which is likely to appear in a requirements doc (“Send an email if payment couldn’t be saved”). On the flip side, if you mock the Payment service and ensure that it was called with the right JavaScript types — then your test is focused on internal things that got nothing with the application functionality and are likely to change frequently
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; Any refactoring of code mandates searching for all the mocks in the code and updating accordingly. Tests become a burden rather than a helpful friend&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-thumbsdown-anti-pattern-example-mocks-focus-on-the-internals" class="anchor" aria-hidden="true" href="#thumbsdown-anti-pattern-example-mocks-focus-on-the-internals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="-1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png"&gt;👎&lt;/g-emoji&gt; Anti-pattern example: Mocks focus on the internals&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/83fe7d3ce5ed6649a8d18b0eff28df6c62d20449/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e6725323053696e6f6e2d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/83fe7d3ce5ed6649a8d18b0eff28df6c62d20449/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e6725323053696e6f6e2d626c75652e737667" alt="" title="Examples with Mocha &amp;amp; Chai" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Sinon-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;When a valid product is about to be deleted, ensure data access DAL was called once, with the right product and right config&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;async&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Assume we already added a product&lt;/span&gt;
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;dataAccessMock&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;sinon&lt;/span&gt;.&lt;span class="pl-en"&gt;mock&lt;/span&gt;(&lt;span class="pl-c1"&gt;DAL&lt;/span&gt;);
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;hmmm BAD: testing the internals is actually our main goal here, not just a side-effect&lt;/span&gt;
    &lt;span class="pl-smi"&gt;dataAccessMock&lt;/span&gt;.&lt;span class="pl-en"&gt;expects&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;deleteProduct&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-en"&gt;once&lt;/span&gt;().&lt;span class="pl-en"&gt;withArgs&lt;/span&gt;(DBConfig, theProductWeJustAdded, &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;);
    &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;ProductService&lt;/span&gt;().&lt;span class="pl-en"&gt;deletePrice&lt;/span&gt;(theProductWeJustAdded);
    &lt;span class="pl-smi"&gt;dataAccessMock&lt;/span&gt;.&lt;span class="pl-en"&gt;verify&lt;/span&gt;();
});&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clapdoing-it-right-example-spies-are-focused-on-testing-the-requirements-but-as-a-side-effect-are-unavoidably-touching-to-the-internals" class="anchor" aria-hidden="true" href="#clapdoing-it-right-example-spies-are-focused-on-testing-the-requirements-but-as-a-side-effect-are-unavoidably-touching-to-the-internals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt;Doing It Right Example: spies are focused on testing the requirements but as a side-effect are unavoidably touching to the internals&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;When a valid product is about to be deleted, ensure an email is sent&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;async&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Assume we already added here a product&lt;/span&gt;
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;spy&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;sinon&lt;/span&gt;.&lt;span class="pl-en"&gt;spy&lt;/span&gt;(&lt;span class="pl-smi"&gt;Emailer&lt;/span&gt;.&lt;span class="pl-c1"&gt;prototype&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sendEmail&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;ProductService&lt;/span&gt;().&lt;span class="pl-en"&gt;deletePrice&lt;/span&gt;(theProductWeJustAdded);
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;hmmm OK: we deal with internals? Yes, but as a side effect of testing the requirements (sending an email)&lt;/span&gt;
    &lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-smi"&gt;spy&lt;/span&gt;.&lt;span class="pl-smi"&gt;calledOnce&lt;/span&gt;).&lt;span class="pl-smi"&gt;to&lt;/span&gt;.&lt;span class="pl-smi"&gt;be&lt;/span&gt;.&lt;span class="pl-smi"&gt;true&lt;/span&gt;;
});&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️16-dont-foo-use-realistic-input-data" class="anchor" aria-hidden="true" href="#-️16-dont-foo-use-realistic-input-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️1.6 Don’t “foo”, use realistic input data&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt;  Often production bugs are revealed under some very specific and surprising input — the more realistic the test input is, the greater the chances are to catch bugs early. Use dedicated libraries like &lt;a href="https://www.npmjs.com/package/faker" rel="nofollow"&gt;Faker&lt;/a&gt; to generate pseudo-real data that resembles the variety and form of production data. For example, such libraries can generate realistic phone numbers, usernames, credit card, company names, and even ‘lorem ipsum’ text. You may also create some tests (on top of unit tests, not as a replacement) that randomize fakers data to stretch your unit under test or even import real data from your production environment. Want to take it to the next level? See the next bullet (property-based testing).
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; All your development testing will falsely show green when you use synthetic inputs like “Foo”, but then production might turn red when a hacker passes-in a nasty string like “@3e2ddsf . ##’ 1 fdsfds . fds432 AAAA”&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-thumbsdown-anti-pattern-example-a-test-suite-that-passes-due-to-non-realistic-data" class="anchor" aria-hidden="true" href="#thumbsdown-anti-pattern-example-a-test-suite-that-passes-due-to-non-realistic-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="-1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png"&gt;👎&lt;/g-emoji&gt; Anti-Pattern Example: A test suite that passes due to non-realistic data&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/18e898275485860eb14b4ea4056278a8e44fbd53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304a6573742d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/18e898275485860eb14b4ea4056278a8e44fbd53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304a6573742d626c75652e737667" alt="" title="Examples with Jest" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;addProduct&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;name&lt;/span&gt;, &lt;span class="pl-smi"&gt;price&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;{
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;productNameRegexNoSpace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-sr"&gt; &lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;^&lt;/span&gt;&lt;span class="pl-c1"&gt;\S&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-k"&gt;$&lt;/span&gt;&lt;span class="pl-pds"&gt;/&lt;/span&gt;&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;no white-space allowed&lt;/span&gt;

  &lt;span class="pl-k"&gt;if&lt;/span&gt;(&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-smi"&gt;productNameRegexNoSpace&lt;/span&gt;.&lt;span class="pl-c1"&gt;test&lt;/span&gt;(name))
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;this path never reached due to dull input&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;some logic here&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;;
};

&lt;span class="pl-en"&gt;test&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Wrong: When adding new product with valid properties, get successful confirmation&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;async&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;The string "Foo" which is used in all tests never triggers a false result&lt;/span&gt;
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;addProductResult&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;addProduct&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;);
    &lt;span class="pl-en"&gt;expect&lt;/span&gt;(addProductResult).&lt;span class="pl-en"&gt;toBe&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;);
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Positive-false: the operation succeeded because we never tried with long&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;product name including spaces&lt;/span&gt;
});
&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clapdoing-it-right-example-randomizing-realistic-input" class="anchor" aria-hidden="true" href="#clapdoing-it-right-example-randomizing-realistic-input"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt;Doing It Right Example: Randomizing realistic input&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Better: When adding new valid product, get successful confirmation&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;async&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;addProductResult&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;addProduct&lt;/span&gt;(&lt;span class="pl-smi"&gt;faker&lt;/span&gt;.&lt;span class="pl-smi"&gt;commerce&lt;/span&gt;.&lt;span class="pl-en"&gt;productName&lt;/span&gt;(), &lt;span class="pl-smi"&gt;faker&lt;/span&gt;.&lt;span class="pl-smi"&gt;random&lt;/span&gt;.&lt;span class="pl-en"&gt;number&lt;/span&gt;());
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Generated random input: {'Sleek Cotton Computer',  85481}&lt;/span&gt;
    &lt;span class="pl-en"&gt;expect&lt;/span&gt;(addProductResult).&lt;span class="pl-smi"&gt;to&lt;/span&gt;.&lt;span class="pl-smi"&gt;be&lt;/span&gt;.&lt;span class="pl-smi"&gt;true&lt;/span&gt;;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Test failed, the random input triggered some path we never planned for.&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;We discovered a bug early!&lt;/span&gt;
});&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️-17-test-many-input-combinations-using-property-based-testing" class="anchor" aria-hidden="true" href="#-️-17-test-many-input-combinations-using-property-based-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 1.7 Test many input combinations using Property-based testing&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; Typically we choose a few input samples for each test. Even when the input format resembles real-world data (see bullet ‘Don’t foo’), we cover only a few input combinations (method(‘’, true, 1), method(“string” , false” , 0)), However, in production, an API that is called with 5 parameters can be invoked with thousands of different permutations, one of them might render our process down (&lt;a href="https://en.wikipedia.org/wiki/Fuzzing" rel="nofollow"&gt;see Fuzz Testing&lt;/a&gt;). What if you could write a single test that sends 1000 permutations of different inputs automatically and catches for which input our code fails to return the right response? Property-based testing is a technique that does exactly that: by sending all the possible input combinations to your unit under test it increases the serendipity of finding a bug. For example, given a method — addNewProduct(id, name, isDiscount) — the supporting libraries will call this method with many combinations of (number, string, boolean) like (1, “iPhone”, false), (2, “Galaxy”, true). You can run property-based testing using your favorite test runner (Mocha, Jest, etc) using libraries like &lt;a href="https://github.com/jsverify/jsverify"&gt;js-verify&lt;/a&gt; or &lt;a href="https://github.com/leebyron/testcheck-js"&gt;testcheck&lt;/a&gt; (much better documentation). Update: Nicolas Dubien suggests in the comments below to &lt;a href="https://github.com/dubzzz/fast-check#readme"&gt;checkout fast-check&lt;/a&gt; which seems to offer some additional features and also to be actively maintained
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; Unconsciously, you choose the test inputs that cover only code paths that work well. Unfortunately, this decreases the efficiency of testing as a vehicle to expose bugs&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap--doing-it-right-example-testing-many-input-permutations-with-fast-check" class="anchor" aria-hidden="true" href="#clap--doing-it-right-example-testing-many-input-permutations-with-fast-check"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt;  Doing It Right Example: Testing many input permutations with “fast-check”&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/18e898275485860eb14b4ea4056278a8e44fbd53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304a6573742d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/18e898275485860eb14b4ea4056278a8e44fbd53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304a6573742d626c75652e737667" alt="" title="Examples with Jest" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;fc&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fast-check&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;

&lt;span class="pl-en"&gt;describe&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Product service&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-en"&gt;describe&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Adding new&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;this will run 100 times with different random properties&lt;/span&gt;
    &lt;span class="pl-en"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Add new product with random yet valid properties, always successful&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="pl-smi"&gt;fc&lt;/span&gt;.&lt;span class="pl-en"&gt;assert&lt;/span&gt;(
        &lt;span class="pl-smi"&gt;fc&lt;/span&gt;.&lt;span class="pl-en"&gt;property&lt;/span&gt;(&lt;span class="pl-smi"&gt;fc&lt;/span&gt;.&lt;span class="pl-en"&gt;integer&lt;/span&gt;(), &lt;span class="pl-smi"&gt;fc&lt;/span&gt;.&lt;span class="pl-en"&gt;string&lt;/span&gt;(), (&lt;span class="pl-smi"&gt;id&lt;/span&gt;, &lt;span class="pl-smi"&gt;name&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
          &lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-en"&gt;addNewProduct&lt;/span&gt;(id, name).&lt;span class="pl-c1"&gt;status&lt;/span&gt;).&lt;span class="pl-en"&gt;toEqual&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;approved&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        })
      ));
  });
});&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️-18-if-needed-use-only-short--inline-snapshots" class="anchor" aria-hidden="true" href="#-️-18-if-needed-use-only-short--inline-snapshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 1.8 If needed, use only short &amp;amp; inline snapshots&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; When there is a need for &lt;a href="https://jestjs.io/docs/en/snapshot-testing" rel="nofollow"&gt;snapshot testing&lt;/a&gt;, use only short and focused snapshots (i.e. 3-7 lines) that are included as part of the test (&lt;a href="https://jestjs.io/docs/en/snapshot-testing#inline-snapshots" rel="nofollow"&gt;Inline Snapshot&lt;/a&gt;) and not within external files. Keeping this guideline will ensure your tests remain self-explanatory and less fragile.&lt;/p&gt;
&lt;p&gt;On the other hand, ‘classic snapshots’ tutorials and tools encourage to store big files (e.g. component rendering markup, API JSON result) over some external medium and ensure each time when the test run to compare the received result with the saved version. This, for example, can implicitly couple our test to 1000 lines with 3000 data values that the test writer never read and reasoned about. Why is this wrong? By doing so, there are 1000 reasons for your test to fail - it’s enough for a single line to change for the snapshot to get invalid and this is likely to happen a lot. How frequently? for every space, comment or minor CSS/HTML change. Not only this, the test name wouldn’t give a clue about the failure as it just checks that 1000 lines didn’t change, also it encourages to the test writer to accept as the desired true a long document he couldn’t inspect and verify. All of these are symptoms of obscure and eager test that is not focused and aims to achieve too much&lt;/p&gt;
&lt;p&gt;It’s worth noting that there are few cases where long &amp;amp; external snapshots are acceptable - when asserting on schema and not data (extracting out values and focusing on fields) or when the received document rarely changes
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; A UI test fails. The code seems right, the screen renders perfect pixels, what happened? your snapshot testing just found a difference from the origin document to current received one - a single space character was added to the markdown...&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-thumbsdown-anti-pattern-example-coupling-our-test-to-unseen-2000-lines-of-code" class="anchor" aria-hidden="true" href="#thumbsdown-anti-pattern-example-coupling-our-test-to-unseen-2000-lines-of-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="-1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png"&gt;👎&lt;/g-emoji&gt; Anti-Pattern Example: Coupling our test to unseen 2000 lines of code&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/18e898275485860eb14b4ea4056278a8e44fbd53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304a6573742d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/18e898275485860eb14b4ea4056278a8e44fbd53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304a6573742d626c75652e737667" alt="" title="Examples with Jest" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;TestJavaScript.com is renderd correctly&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, ()  &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Arrange&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Act&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;receivedPage&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; renderer
.&lt;span class="pl-en"&gt;create&lt;/span&gt;(  &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;DisplayPage page  &lt;span class="pl-k"&gt;=&lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://www.testjavascript.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;  &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; Test JavaScript &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-k"&gt;/&lt;/span&gt;DisplayPage&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;)
.&lt;span class="pl-en"&gt;toJSON&lt;/span&gt;();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Assert&lt;/span&gt;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(receivedPage).&lt;span class="pl-en"&gt;toMatchSnapshot&lt;/span&gt;();
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;We now implicitly maintain a 2000 lines long document&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;every additional line break or comment - will break this test&lt;/span&gt;

});&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-expectations-are-visible-and-focused" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-expectations-are-visible-and-focused"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: Expectations are visible and focused&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;When visiting TestJavaScript.com home page, a menu is displayed&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Arrange&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Act&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;receivedPage&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; renderer
.&lt;span class="pl-en"&gt;create&lt;/span&gt;(  &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;DisplayPage page  &lt;span class="pl-k"&gt;=&lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://www.testjavascript.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;  &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; Test JavaScript &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-k"&gt;/&lt;/span&gt;DisplayPage&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;)
.&lt;span class="pl-en"&gt;toJSON&lt;/span&gt;();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Assert&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;menu&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;receivedPage&lt;/span&gt;.&lt;span class="pl-c1"&gt;content&lt;/span&gt;.&lt;span class="pl-smi"&gt;menu&lt;/span&gt;;
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(menu).&lt;span class="pl-en"&gt;toMatchInlineSnapshot&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&amp;lt;li&amp;gt;Home&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&amp;lt;li&amp;gt; About &amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&amp;lt;li&amp;gt; Contact &amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;);
});&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️19-avoid-global-test-fixtures-and-seeds-add-data-per-test" class="anchor" aria-hidden="true" href="#-️19-avoid-global-test-fixtures-and-seeds-add-data-per-test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️1.9 Avoid global test fixtures and seeds, add data per-test&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; Going by the golden rule (bullet 0), each test should add and act on its own set of DB rows to prevent coupling and easily reason about the test flow. In reality, this is often violated by testers who seed the DB with data before running the tests (&lt;a href="https://en.wikipedia.org/wiki/Test_fixture" rel="nofollow"&gt;also known as ‘test fixture’&lt;/a&gt;) for the sake of performance improvement. While performance is indeed a valid concern — it can be mitigated (see “Component testing” bullet), however, test complexity is a much painful sorrow that should govern other considerations most of the time. Practically, make each test case explicitly add the DB records it needs and act only on those records. If performance becomes a critical concern — a balanced compromise might come in the form of seeding the only suite of tests that are not mutating data (e.g. queries)
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; Few tests fail, a deployment is aborted, our team is going to spend precious time now, do we have a bug? let’s investigate, oh no — it seems that two tests were mutating the same seed data&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-thumbsdown-anti-pattern-example-tests-are-not-independent-and-rely-on-some-global-hook-to-feed-global-db-data" class="anchor" aria-hidden="true" href="#thumbsdown-anti-pattern-example-tests-are-not-independent-and-rely-on-some-global-hook-to-feed-global-db-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="-1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png"&gt;👎&lt;/g-emoji&gt; Anti Pattern Example: tests are not independent and rely on some global hook to feed global DB data&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/eb7e8e64ff73b4339689bfb1e7ef2876eb9aee40/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304d6f6368612d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/eb7e8e64ff73b4339689bfb1e7ef2876eb9aee40/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304d6f6368612d626c75652e737667" alt="" title="Examples with Jest" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;before&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;adding sites and admins data to our DB. Where is the data? outside. At some external json or migration framework&lt;/span&gt;
  &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-c1"&gt;DB&lt;/span&gt;.&lt;span class="pl-en"&gt;AddSeedDataFromJson&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;seed.json&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
});
&lt;span class="pl-en"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;When updating site name, get successful confirmation&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;async&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;I know that site name "portal" exists - I saw it in the seed files&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;siteToUpdate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;SiteService&lt;/span&gt;.&lt;span class="pl-en"&gt;getSiteByName&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Portal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;updateNameResult&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;SiteService&lt;/span&gt;.&lt;span class="pl-en"&gt;changeName&lt;/span&gt;(siteToUpdate, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;newName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-en"&gt;expect&lt;/span&gt;(updateNameResult).&lt;span class="pl-smi"&gt;to&lt;/span&gt;.&lt;span class="pl-en"&gt;be&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;);
});
&lt;span class="pl-en"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;When querying by site name, get the right site&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;async&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;I know that site name "portal" exists - I saw it in the seed files&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;siteToCheck&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;SiteService&lt;/span&gt;.&lt;span class="pl-en"&gt;getSiteByName&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Portal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-smi"&gt;siteToCheck&lt;/span&gt;.&lt;span class="pl-c1"&gt;name&lt;/span&gt;).&lt;span class="pl-smi"&gt;to&lt;/span&gt;.&lt;span class="pl-smi"&gt;be&lt;/span&gt;.&lt;span class="pl-en"&gt;equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Portal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Failure! The previous test change the name :[&lt;/span&gt;
});
&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-we-can-stay-within-the-test-each-test-acts-on-its-own-set-of-data" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-we-can-stay-within-the-test-each-test-acts-on-its-own-set-of-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: We can stay within the test, each test acts on its own set of data&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;When updating site name, get successful confirmation&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;async&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;test is adding a fresh new records and acting on the records only&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;siteUnderTest&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;SiteService&lt;/span&gt;.&lt;span class="pl-en"&gt;addSite&lt;/span&gt;({
    name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;siteForUpdateTest&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  });
  
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;updateNameResult&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;SiteService&lt;/span&gt;.&lt;span class="pl-en"&gt;changeName&lt;/span&gt;(siteUnderTest, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;newName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  
  &lt;span class="pl-en"&gt;expect&lt;/span&gt;(updateNameResult).&lt;span class="pl-smi"&gt;to&lt;/span&gt;.&lt;span class="pl-en"&gt;be&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;);
});
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content--️-110-dont-catch-errors-expect-them" class="anchor" aria-hidden="true" href="#-️-110-dont-catch-errors-expect-them"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 1.10 Don’t catch errors, expect them&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt;   When trying to assert that some input triggers an error, it might look right to use try-catch-finally and asserts that the catch clause was entered. The result is an awkward and verbose test case (example below) that hides the simple test intent and the result expectations&lt;/p&gt;
&lt;p&gt;A more elegant alternative is the using the one-line dedicated Chai assertion: expect(method).to.throw (or in Jest: expect(method).toThrow()). It’s absolutely mandatory to also ensure the exception contains a property that tells the error type, otherwise given just a generic error the application won’t be able to do much rather than show a disappointing message to the user
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; It will be challenging to infer from the test reports (e.g. CI reports) what went wrong&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-thumbsdown-anti-pattern-example-a-long-test-case-that-tries-to-assert-the-existence-of-error-with-try-catch" class="anchor" aria-hidden="true" href="#thumbsdown-anti-pattern-example-a-long-test-case-that-tries-to-assert-the-existence-of-error-with-try-catch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="-1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png"&gt;👎&lt;/g-emoji&gt; Anti-pattern Example: A long test case that tries to assert the existence of error with try-catch&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/eb7e8e64ff73b4339689bfb1e7ef2876eb9aee40/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304d6f6368612d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/eb7e8e64ff73b4339689bfb1e7ef2876eb9aee40/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304d6f6368612d626c75652e737667" alt="" title="Examples with Jest" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;When no product name, it throws error 400&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;async&lt;/span&gt;() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
&lt;span class="pl-k"&gt;let&lt;/span&gt; errorWeExceptFor &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;;
&lt;span class="pl-k"&gt;try&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;result&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-en"&gt;addNewProduct&lt;/span&gt;({});
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; (error) {
  &lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-smi"&gt;error&lt;/span&gt;.&lt;span class="pl-c1"&gt;code&lt;/span&gt;).&lt;span class="pl-smi"&gt;to&lt;/span&gt;.&lt;span class="pl-en"&gt;equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;InvalidInput&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  errorWeExceptFor &lt;span class="pl-k"&gt;=&lt;/span&gt; error;
}
&lt;span class="pl-en"&gt;expect&lt;/span&gt;(errorWeExceptFor).&lt;span class="pl-smi"&gt;not&lt;/span&gt;.&lt;span class="pl-smi"&gt;to&lt;/span&gt;.&lt;span class="pl-smi"&gt;be&lt;/span&gt;.&lt;span class="pl-smi"&gt;null&lt;/span&gt;;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;if this assertion fails, the tests results/reports will only show&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;that some value is null, there won't be a word about a missing Exception&lt;/span&gt;
});
&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-a-human-readable-expectation-that-could-be-understood-easily-maybe-even-by-qa-or-technical-pm" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-a-human-readable-expectation-that-could-be-understood-easily-maybe-even-by-qa-or-technical-pm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: A human-readable expectation that could be understood easily, maybe even by QA or technical PM&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;it&lt;/span&gt;.&lt;span class="pl-en"&gt;only&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;When no product name, it throws error 400&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;async&lt;/span&gt;() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-en"&gt;addNewProduct&lt;/span&gt;({})).&lt;span class="pl-smi"&gt;to&lt;/span&gt;.&lt;span class="pl-smi"&gt;eventually&lt;/span&gt;.&lt;span class="pl-en"&gt;throw&lt;/span&gt;(AppError).&lt;span class="pl-smi"&gt;with&lt;/span&gt;.&lt;span class="pl-en"&gt;property&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;code&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;InvalidInput&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
});
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️-111-tag-your-tests" class="anchor" aria-hidden="true" href="#-️-111-tag-your-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 1.11 Tag your tests&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt;  Different tests must run on different scenarios: quick smoke, IO-less, tests should run when a developer saves or commits a file, full end-to-end tests usually run when a new pull request is submitted, etc. This can be achieved by tagging tests with keywords like #cold #api #sanity so you can grep with your testing harness and invoke the desired subset. For example, this is how you would invoke only the sanity test group with Mocha: mocha — grep ‘sanity’
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; Running all the tests, including tests that perform dozens of DB queries, any time a developer makes a small change can be extremely slow and keeps developers away from running tests&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-tagging-tests-as-cold-test-allows-the-test-runner-to-execute-only-fast-tests-coldquick-tests-that-are-doing-no-io-and-can-be-executed-frequently-even-as-the-developer-is-typing" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-tagging-tests-as-cold-test-allows-the-test-runner-to-execute-only-fast-tests-coldquick-tests-that-are-doing-no-io-and-can-be-executed-frequently-even-as-the-developer-is-typing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: Tagging tests as ‘#cold-test’ allows the test runner to execute only fast tests (Cold===quick tests that are doing no IO and can be executed frequently even as the developer is typing)&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/18e898275485860eb14b4ea4056278a8e44fbd53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304a6573742d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/18e898275485860eb14b4ea4056278a8e44fbd53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304a6573742d626c75652e737667" alt="" title="Examples with Jest" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;this test is fast (no DB) and we're tagging it correspondigly&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;now the user/CI can run it frequently&lt;/span&gt;
&lt;span class="pl-en"&gt;describe&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Order service&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;function&lt;/span&gt;() {
  &lt;span class="pl-en"&gt;describe&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Add new order #cold-test #sanity&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;function&lt;/span&gt;() {
    &lt;span class="pl-en"&gt;test&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Scenario - no currency was supplied. Expectation - Use the default currency #sanity&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;function&lt;/span&gt;() {
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;code logic here&lt;/span&gt;
    });
  });
});

&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️112-other-generic-good-testing-hygiene" class="anchor" aria-hidden="true" href="#-️112-other-generic-good-testing-hygiene"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️1.12 Other generic good testing hygiene&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt;  This post is focused on testing advice that is related to, or at least can be exemplified with Node JS. This bullet, however, groups few non-Node related tips that are well-known&lt;/p&gt;
&lt;p&gt;Learn and practice &lt;a href="https://www.sm-cloud.com/book-review-test-driven-development-by-example-a-tldr/" rel="nofollow"&gt;TDD principles&lt;/a&gt; — they are extremely valuable for many but don’t get intimidated if they don’t fit your style, you’re not the only one. Consider writing the tests before the code in a &lt;a href="https://blog.cleancoder.com/uncle-bob/2014/12/17/TheCyclesOfTDD.html" rel="nofollow"&gt;red-green-refactor style&lt;/a&gt;, ensure each test checks exactly one thing, when you find a bug — before fixing write a test that will detect this bug in the future, let each test fail at least once before turning green, start a module by writing a quick and simplistic code that satsifies the test - then refactor gradually and take it to a production grade level, avoid any dependency on the environment (paths, OS, etc)
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; You‘ll miss pearls of wisdom that were collected for decades&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-section-2️⃣-backend-testing" class="anchor" aria-hidden="true" href="#section-2️⃣-backend-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section &lt;g-emoji class="g-emoji" alias="two" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/0032-20e3.png"&gt;2️⃣&lt;/g-emoji&gt;: Backend Testing&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content--️21-enrich-your-testing-portfolio-look-beyond-unit-tests-and-the-pyramid" class="anchor" aria-hidden="true" href="#-️21-enrich-your-testing-portfolio-look-beyond-unit-tests-and-the-pyramid"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️2.1 Enrich your testing portfolio: Look beyond unit tests and the pyramid&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt;  The &lt;a href="https://martinfowler.com/bliki/TestPyramid.html" rel="nofollow"&gt;testing pyramid&lt;/a&gt;, though 10&amp;gt; years old, is a great and relevant model that suggests three testing types and influences most developers’ testing strategy. At the same time, more than a handful of shiny new testing techniques emerged and are hiding in the shadows of the testing pyramid. Given all the dramatic changes that we’ve seen in the recent 10 years (Microservices, cloud, serverless), is it even possible that one quite-old model will suit &lt;em&gt;all&lt;/em&gt; types of applications? shouldn’t the testing world consider welcoming new testing techniques?&lt;/p&gt;
&lt;p&gt;Don’t get me wrong, in 2019 the testing pyramid, TDD and unit tests are still a powerful technique and are probably the best match for many applications. Only like any other model, despite its usefulness, &lt;a href="https://en.wikipedia.org/wiki/All_models_are_wrong" rel="nofollow"&gt;it must be wrong sometimes&lt;/a&gt;. For example, consider an IOT application that ingests many events into a message-bus like Kafka/RabbitMQ, which then flow into some data-warehouse and are eventually queried by some analytics UI. Should we really spend 50% of our testing budget on writing unit tests for an application that is integration-centric and has almost no logic? As the diversity of application types increase (bots, crypto, Alexa-skills) greater are the chances to find scenarios where the testing pyramid is not the best match.&lt;/p&gt;
&lt;p&gt;It’s time to enrich your testing portfolio and become familiar with more testing types (the next bullets suggest few ideas), mind models like the testing pyramid but also match testing types to real-world problems that you’re facing (‘Hey, our API is broken, let’s write consumer-driven contract testing!’), diversify your tests like an investor that build a portfolio based on risk analysis — assess where problems might arise and match some prevention measures to mitigate those potential risks&lt;/p&gt;
&lt;p&gt;A word of caution: the TDD argument in the software world takes a typical false-dichotomy face, some preach to use it everywhere, others think it’s the devil. Everyone who speaks in absolutes is wrong :]&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; You’re going to miss some tools with amazing ROI, some like Fuzz, lint, and mutation can provide value in 10 minutes&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-cindy-sridharan-suggests-a-rich-testing-portfolio-in-her-amazing-post-testing-microservicesthe-sane-way" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-cindy-sridharan-suggests-a-rich-testing-portfolio-in-her-amazing-post-testing-microservicesthe-sane-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: Cindy Sridharan suggests a rich testing portfolio in her amazing post ‘Testing Microservices — the sane way’&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/bp-12-rich-testing.jpeg"&gt;&lt;img src="assets/bp-12-rich-testing.jpeg" alt="alt text" title="Cindy Sridharan suggests a rich testing portfolio in her amazing post ‘Testing Microservices — the sane way’" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="relaxed" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/263a.png"&gt;☺️&lt;/g-emoji&gt;Example: &lt;/strong&gt;&lt;a href="https://www.youtube.com/watch?v=-2zP494wdUY&amp;amp;feature=youtube" rel="nofollow"&gt;&lt;/a&gt;&lt;a href="https://www.youtube.com/watch?v=-2zP494wdUY&amp;amp;feature=youtu.be" rel="nofollow"&gt;YouTube: “Beyond Unit Tests: 5 Shiny Node.JS Test Types (2018)” (Yoni Goldberg)&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/bp-12-Yoni-Goldberg-Testing.jpeg"&gt;&lt;img src="assets/bp-12-Yoni-Goldberg-Testing.jpeg" alt="alt text" title="A test name that constitutes 3 parts" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️22-component-testing-might-be-your-best-affair" class="anchor" aria-hidden="true" href="#-️22-component-testing-might-be-your-best-affair"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️2.2 Component testing might be your best affair&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; Each unit test covers a tiny portion of the application and it’s expensive to cover the whole, whereas end-to-end testing easily covers a lot of ground but is flaky and slower, why not apply a balanced approach and write tests that are bigger than unit tests but smaller than end-to-end testing? Component testing is the unsung song of the testing world — they provide the best from both worlds: reasonable performance and a possibility to apply TDD patterns + realistic and great coverage.&lt;/p&gt;
&lt;p&gt;Component tests focus on the Microservice ‘unit’, they work against the API, don’t mock anything which belongs to the Microservice itself (e.g. real DB, or at least the in-memory version of that DB) but stub anything that is external like calls to other Microservices. By doing so, we test what we deploy, approach the app from outwards to inwards and gain great confidence in a reasonable amount of time.
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; You may spend long days on writing unit tests to find out that you got only 20% system coverage&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-supertest-allows-approaching-express-api-in-process-fast-and-cover-many-layers" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-supertest-allows-approaching-express-api-in-process-fast-and-cover-many-layers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: Supertest allows approaching Express API in-process (fast and cover many layers)&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/eb7e8e64ff73b4339689bfb1e7ef2876eb9aee40/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304d6f6368612d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/eb7e8e64ff73b4339689bfb1e7ef2876eb9aee40/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304d6f6368612d626c75652e737667" alt="" title="Examples with Jest" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/bp-13-component-test-yoni-goldberg.png"&gt;&lt;img src="assets/bp-13-component-test-yoni-goldberg.png" alt="alt text" title=" [Supertest](https://www.npmjs.com/package/supertest) allows approaching Express API in-process (fast and cover many layers)" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️23-ensure-new-releases-dont-break-the-api-using" class="anchor" aria-hidden="true" href="#-️23-ensure-new-releases-dont-break-the-api-using"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️2.3 Ensure new releases don’t break the API using&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt;  So your Microservice has multiple clients, and you run multiple versions of the service for compatibility reasons (keeping everyone happy). Then you change some field and ‘boom!’, some important client who relies on this field is angry. This is the Catch-22 of the integration world: It’s very challenging for the server side to consider all the multiple client expectations — On the other hand, the clients can’t perform any testing because the server controls the release dates. &lt;a href="https://docs.pact.io/" rel="nofollow"&gt;Consumer-driven contracts and the framework PACT&lt;/a&gt; were born to formalize this process with a very disruptive approach — not the server defines the test plan of itself rather the client defines the tests of the… server! PACT can record the client expectation and put in a shared location, “broker”, so the server can pull the expectations and run on every build using PACT library to detect broken contracts — a client expectation that is not met. By doing so, all the server-client API mismatches are caught early during build/CI and might save you a great deal of frustration
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; The alternatives are exhausting manual testing or deployment fear&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example:&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c052804de6783e9517c67d0ac235be75b75a4f06/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e67253230504143542d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/c052804de6783e9517c67d0ac235be75b75a4f06/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e67253230504143542d626c75652e737667" alt="" title="Examples with PACT" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20PACT-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/bp-14-testing-best-practices-contract-flow.png"&gt;&lt;img src="assets/bp-14-testing-best-practices-contract-flow.png" alt="alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️-24-test-your-middlewares-in-isolation" class="anchor" aria-hidden="true" href="#-️-24-test-your-middlewares-in-isolation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 2.4 Test your middlewares in isolation&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; Many avoid Middleware testing because they represent a small portion of the system and require a live Express server. Both reasons are wrong — Middlewares are small but affect all or most of the requests and can be tested easily as pure functions that get {req,res} JS objects. To test a middleware function one should just invoke it and spy (&lt;a href="https://www.npmjs.com/package/sinon" rel="nofollow"&gt;using Sinon for example&lt;/a&gt;) on the interaction with the {req,res} objects to ensure the function performed the right action. The library &lt;a href="https://www.npmjs.com/package/node-mocks-http" rel="nofollow"&gt;node-mock-http&lt;/a&gt; takes it even further and factors the {req,res} objects along with spying on their behavior. For example, it can assert whether the http status that was set on the res object matches the expectation (See example below)
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; A bug in Express middleware === a bug in all or most requests&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clapdoing-it-right-example-testing-middleware-in-isolation-without-issuing-network-calls-and-waking-up-the-entire-express-machine" class="anchor" aria-hidden="true" href="#clapdoing-it-right-example-testing-middleware-in-isolation-without-issuing-network-calls-and-waking-up-the-entire-express-machine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt;Doing It Right Example: Testing middleware in isolation without issuing network calls and waking-up the entire Express machine&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/18e898275485860eb14b4ea4056278a8e44fbd53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304a6573742d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/18e898275485860eb14b4ea4056278a8e44fbd53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304a6573742d626c75652e737667" alt="" title="Examples with Jest" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;the middleware we want to test&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;unitUnderTest&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./middleware&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;httpMocks&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;node-mocks-http&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Jest syntax, equivelant to describe() &amp;amp; it() in Mocha&lt;/span&gt;
&lt;span class="pl-en"&gt;test&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;A request without authentication header, should return http status 403&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;request&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;httpMocks&lt;/span&gt;.&lt;span class="pl-en"&gt;createRequest&lt;/span&gt;({
    method&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GET&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
    url&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/user/42&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
    headers&lt;span class="pl-k"&gt;:&lt;/span&gt; {
      authentication&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    }
  });
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;response&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;httpMocks&lt;/span&gt;.&lt;span class="pl-en"&gt;createResponse&lt;/span&gt;();
  &lt;span class="pl-en"&gt;unitUnderTest&lt;/span&gt;(request, response);
  &lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-smi"&gt;response&lt;/span&gt;.&lt;span class="pl-smi"&gt;statusCode&lt;/span&gt;).&lt;span class="pl-en"&gt;toBe&lt;/span&gt;(&lt;span class="pl-c1"&gt;403&lt;/span&gt;);
});
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️25-measure-and-refactor-using-static-analysis-tools" class="anchor" aria-hidden="true" href="#-️25-measure-and-refactor-using-static-analysis-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️2.5 Measure and refactor using static analysis tools&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; Using static analysis tools helps by giving objective ways to improve code quality and keep your code maintainable. You can add static analysis tools to your CI build to abort when it finds code smells. Its main selling points over plain linting are the ability to inspect quality in the context of multiple files (e.g. detect duplications), perform advanced analysis (e.g. code complexity) and follow the history and progress of code issues. Two examples of tools you can use are &lt;a href="https://www.sonarqube.org/" rel="nofollow"&gt;Sonarqube&lt;/a&gt; (2,600+ &lt;a href="https://github.com/SonarSource/sonarqube"&gt;stars&lt;/a&gt;) and &lt;a href="https://codeclimate.com/" rel="nofollow"&gt;Code Climate&lt;/a&gt; (1,500+ &lt;a href="https://github.com/codeclimate/codeclimate"&gt;stars&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Credit:: &lt;a href="https://github.com/TheHollidayInn"&gt;&lt;/a&gt;&lt;a href="https://github.com/TheHollidayInn"&gt;Keith Holliday&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; With poor code quality, bugs and performance will always be an issue that no shiny new library or state of the art features can fix&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example--codeclimate-a-commercial-tool-that-can-identify-complex-methods" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example--codeclimate-a-commercial-tool-that-can-identify-complex-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example:  CodeClimate, a commercial tool that can identify complex methods:&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d709977226025a32b8678af66409b4a0c7f27099/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e67253230436f6465253230436c696d6174652d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/d709977226025a32b8678af66409b4a0c7f27099/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e67253230436f6465253230436c696d6174652d626c75652e737667" alt="" title="Examples with CodeClimate" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Code%20Climate-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/bp-16-yoni-goldberg-quality.png"&gt;&lt;img src="assets/bp-16-yoni-goldberg-quality.png" alt="alt text" title=" CodeClimat, a commercial tool that can identify complex methods:" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️-26-check-your-readiness-for-node-related-chaos" class="anchor" aria-hidden="true" href="#-️-26-check-your-readiness-for-node-related-chaos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 2.6 Check your readiness for Node-related chaos&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; Weirdly, most software testings are about logic &amp;amp; data only, but some of the worst things that happen (and are really hard to mitigate ) are infrastructural issues. For example, did you ever test what happens when your process memory is overloaded, or when the server/process dies, or does your monitoring system realizes when the API becomes 50% slower?. To test and mitigate these type of bad things — &lt;a href="https://principlesofchaos.org/" rel="nofollow"&gt;Chaos engineering&lt;/a&gt; was born by Netflix. It aims to provide awareness, frameworks and tools for testing our app resiliency for chaotic issues. For example, one of its famous tools, &lt;a href="https://github.com/Netflix/chaosmonkey"&gt;the chaos monkey&lt;/a&gt;, randomly kills servers to ensure that our service can still serve users and not relying on a single server (there is also a Kubernetes version, &lt;a href="https://github.com/asobti/kube-monkey"&gt;kube-monkey&lt;/a&gt;, that kills pods). All these tools work on the hosting/platform level, but what if you wish to test and generate pure Node chaos like check how your Node process copes with uncaught errors, unhandled promise rejection, v8 memory overloaded with the max allowed of 1.7GB or whether your UX stays satisfactory when the event loop gets blocked often? to address this I’ve written, &lt;a href="https://github.com/i0natan/node-chaos-monkey"&gt;node-chaos&lt;/a&gt; (alpha) which provides all sort of Node-related chaotic acts
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt;  No escape here, Murphy’s law will hit your production without mercy&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example--node-chaos-can-generate-all-sort-of-nodejs-pranks-so-you-can-test-how-resilience-is-your-app-to-chaos" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example--node-chaos-can-generate-all-sort-of-nodejs-pranks-so-you-can-test-how-resilience-is-your-app-to-chaos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: : Node-chaos can generate all sort of Node.js pranks so you can test how resilience is your app to chaos&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/bp-17-yoni-goldberg-chaos-monkey-nodejs.png"&gt;&lt;img src="assets/bp-17-yoni-goldberg-chaos-monkey-nodejs.png" alt="alt text" title="Node-chaos can generate all sort of Node.js pranks so you can test how resilience is your app to chaos" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content--️27-avoid-global-test-fixtures-and-seeds-add-data-per-test" class="anchor" aria-hidden="true" href="#-️27-avoid-global-test-fixtures-and-seeds-add-data-per-test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️2.7 Avoid global test fixtures and seeds, add data per-test&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; Going by the golden rule (bullet 0), each test should add and act on its own set of DB rows to prevent coupling and easily reason about the test flow. In reality, this is often violated by testers who seed the DB with data before running the tests (also known as ‘test fixture’) for the sake of performance improvement. While performance is indeed a valid concern — it can be mitigated (see “Component testing” bullet), however, test complexity is a much painful sorrow that should govern other considerations most of the time. Practically, make each test case explicitly add the DB records it needs and act only on those records. If performance becomes a critical concern — a balanced compromise might come in the form of seeding the only suite of tests that are not mutating data (e.g. queries)
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; Few tests fail, a deployment is aborted, our team is going to spend precious time now, do we have a bug? let’s investigate, oh no — it seems that two tests were mutating the same seed data&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-thumbsdown-anti-pattern-example-tests-are-not-independent-and-rely-on-some-global-hook-to-feed-global-db-data-1" class="anchor" aria-hidden="true" href="#thumbsdown-anti-pattern-example-tests-are-not-independent-and-rely-on-some-global-hook-to-feed-global-db-data-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="-1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png"&gt;👎&lt;/g-emoji&gt; Anti Pattern Example: tests are not independent and rely on some global hook to feed global DB data&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/eb7e8e64ff73b4339689bfb1e7ef2876eb9aee40/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304d6f6368612d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/eb7e8e64ff73b4339689bfb1e7ef2876eb9aee40/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304d6f6368612d626c75652e737667" alt="" title="Examples with Mocha" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Mocha-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;before&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;adding sites and admins data to our DB. Where is the data? outside. At some external json or migration framework&lt;/span&gt;
  &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-c1"&gt;DB&lt;/span&gt;.&lt;span class="pl-en"&gt;AddSeedDataFromJson&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;seed.json&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
});
&lt;span class="pl-en"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;When updating site name, get successful confirmation&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;async&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;I know that site name "portal" exists - I saw it in the seed files&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;siteToUpdate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;SiteService&lt;/span&gt;.&lt;span class="pl-en"&gt;getSiteByName&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Portal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;updateNameResult&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;SiteService&lt;/span&gt;.&lt;span class="pl-en"&gt;changeName&lt;/span&gt;(siteToUpdate, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;newName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-en"&gt;expect&lt;/span&gt;(updateNameResult).&lt;span class="pl-smi"&gt;to&lt;/span&gt;.&lt;span class="pl-en"&gt;be&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;);
});
&lt;span class="pl-en"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;When querying by site name, get the right site&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;async&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;I know that site name "portal" exists - I saw it in the seed files&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;siteToCheck&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;SiteService&lt;/span&gt;.&lt;span class="pl-en"&gt;getSiteByName&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Portal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-smi"&gt;siteToCheck&lt;/span&gt;.&lt;span class="pl-c1"&gt;name&lt;/span&gt;).&lt;span class="pl-smi"&gt;to&lt;/span&gt;.&lt;span class="pl-smi"&gt;be&lt;/span&gt;.&lt;span class="pl-en"&gt;equal&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Portal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Failure! The previous test change the name :[&lt;/span&gt;
});
&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-we-can-stay-within-the-test-each-test-acts-on-its-own-set-of-data-1" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-we-can-stay-within-the-test-each-test-acts-on-its-own-set-of-data-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: We can stay within the test, each test acts on its own set of data&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;When updating site name, get successful confirmation&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;async&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;test is adding a fresh new records and acting on the records only&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;siteUnderTest&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;SiteService&lt;/span&gt;.&lt;span class="pl-en"&gt;addSite&lt;/span&gt;({
    name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;siteForUpdateTest&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  });
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;updateNameResult&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;SiteService&lt;/span&gt;.&lt;span class="pl-en"&gt;changeName&lt;/span&gt;(siteUnderTest, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;newName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-en"&gt;expect&lt;/span&gt;(updateNameResult).&lt;span class="pl-smi"&gt;to&lt;/span&gt;.&lt;span class="pl-en"&gt;be&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;);
});
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-section-3️⃣-frontend-testing" class="anchor" aria-hidden="true" href="#section-3️⃣-frontend-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section &lt;g-emoji class="g-emoji" alias="three" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/0033-20e3.png"&gt;3️⃣&lt;/g-emoji&gt;: Frontend Testing&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content--️-31-separate-ui-from-functionality" class="anchor" aria-hidden="true" href="#-️-31-separate-ui-from-functionality"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 3.1. Separate UI from functionality&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; When focusing on testing component logic, UI details become a noise that should be extracted, so your tests can focus on pure data. Practically, extract the desired data from the markup in an abstract way that is not too coupled to the graphic implementation, assert only on pure data (vs HTML/CSS graphic details) and disable animations that slow down. You might get tempted to avoid rendering and test only the back part of the UI (e.g. services, actions, store) but this will result in fictional tests that don't resemble the reality and won't reveal cases where the right data doesn't even arrive in the UI&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; The pure calculated data of your test might be ready in 10ms, but then the whole test will last 500ms (100 tests = 1 min) due to some fancy and irrelevant animation&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-separating-out-the-ui-details" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-separating-out-the-ui-details"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: Separating out the UI details&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/49f4dbc60240ba0dae1c04c9955d6b744ce50314/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e6725323052656163742d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/49f4dbc60240ba0dae1c04c9955d6b744ce50314/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e6725323052656163742d626c75652e737667" alt="" title="Examples with React" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4e7ebd40f37c0d76e0bf6efe503c1547f835b710/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e67253230526561637425323054657374696e672532304c6962726172792d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/4e7ebd40f37c0d76e0bf6efe503c1547f835b710/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e67253230526561637425323054657374696e672532304c6962726172792d626c75652e737667" alt="" title="Examples with react-testing-library" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React%20Testing%20Library-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;test&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;When users-list is flagged to show only VIP, should display only VIP members&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Arrange&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;allUsers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [
   { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Yoni Goldberg&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, vip&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; }, 
   { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;John Doe&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, vip&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; }
  ];

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Act&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; { &lt;span class="pl-c1"&gt;getAllByTestId&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;render&lt;/span&gt;(&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;UsersList users&lt;span class="pl-k"&gt;=&lt;/span&gt;{allUsers} showOnlyVIP&lt;span class="pl-k"&gt;=&lt;/span&gt;{&lt;span class="pl-c1"&gt;true&lt;/span&gt;}&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;);

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Assert - Extract the data from the UI first&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;allRenderedUsers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;getAllByTestId&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;user&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-en"&gt;map&lt;/span&gt;(&lt;span class="pl-smi"&gt;uiElement&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;uiElement&lt;/span&gt;.&lt;span class="pl-smi"&gt;textContent&lt;/span&gt;);
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;allRealVIPUsers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;allUsers&lt;/span&gt;.&lt;span class="pl-en"&gt;filter&lt;/span&gt;((&lt;span class="pl-smi"&gt;user&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;user&lt;/span&gt;.&lt;span class="pl-smi"&gt;vip&lt;/span&gt;).&lt;span class="pl-en"&gt;map&lt;/span&gt;((&lt;span class="pl-smi"&gt;user&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-smi"&gt;user&lt;/span&gt;.&lt;span class="pl-c1"&gt;name&lt;/span&gt;);
  &lt;span class="pl-en"&gt;expect&lt;/span&gt;(allRenderedUsers).&lt;span class="pl-en"&gt;toEqual&lt;/span&gt;(allRealVIPUsers); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;compare data with data, no UI here&lt;/span&gt;
});
&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-thumbsdown-anti-pattern-example-assertion-mix-ui-details-and-data" class="anchor" aria-hidden="true" href="#thumbsdown-anti-pattern-example-assertion-mix-ui-details-and-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="-1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png"&gt;👎&lt;/g-emoji&gt; Anti Pattern Example: Assertion mix UI details and data&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;test&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;When flagging to show only VIP, should display only VIP members&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Arrange&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;allUsers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [
   {id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Yoni Goldberg&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, vip&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; }, 
   {id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;John Doe&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, vip&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; }
  ];

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Act&lt;/span&gt;
  &lt;span class="pl-k"&gt;const&lt;/span&gt; { &lt;span class="pl-c1"&gt;getAllByTestId&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;render&lt;/span&gt;(&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;UsersList users&lt;span class="pl-k"&gt;=&lt;/span&gt;{allUsers} showOnlyVIP&lt;span class="pl-k"&gt;=&lt;/span&gt;{&lt;span class="pl-c1"&gt;true&lt;/span&gt;}&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;);

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Assert - Mix UI &amp;amp; data in assertion&lt;/span&gt;
  &lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-en"&gt;getAllByTestId&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;user&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)).&lt;span class="pl-en"&gt;toEqual&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;[&amp;lt;li data-testid="user"&amp;gt;John Doe&amp;lt;/li&amp;gt;]&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
});
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️-32-query-html-elements-based-on-attributes-that-are-unlikely-to-change" class="anchor" aria-hidden="true" href="#-️-32-query-html-elements-based-on-attributes-that-are-unlikely-to-change"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 3.2 Query HTML elements based on attributes that are unlikely to change&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; Query HTML elements based on attributes that are likely to survive graphic changes unlike CSS selectors and like form labels. If the designated element doesn't have such attributes, create a dedicated test attribute like 'test-id-submit-button'. Going this route not only ensures that your functional/logic tests never break because of look &amp;amp; feel changes but also it becomes clear to the entire team that this element and attribute are utilized by tests and shouldn't get removed&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; You want to test the login functionality that spans many components, logic and services, everything is set up perfectly - stubs, spies, Ajax calls are isolated. All seems perfect. Then the test fails because the designer changed the div CSS class from 'thick-border' to 'thin-border'&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-querying-an-element-using-a-dedicated-attrbiute-for-testing" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-querying-an-element-using-a-dedicated-attrbiute-for-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: Querying an element using a dedicated attrbiute for testing&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/49f4dbc60240ba0dae1c04c9955d6b744ce50314/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e6725323052656163742d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/49f4dbc60240ba0dae1c04c9955d6b744ce50314/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e6725323052656163742d626c75652e737667" alt="" title="Examples with React" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;// the markup code (part of React component)
&amp;lt;&lt;span class="pl-ent"&gt;h3&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;Badge&lt;/span&gt; &lt;span class="pl-e"&gt;pill&lt;/span&gt; &lt;span class="pl-e"&gt;className&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fixed_badge&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;variant&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dark&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;span&lt;/span&gt; &lt;span class="pl-e"&gt;data-testid&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;errorsLabel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;{value}&amp;lt;/&lt;span class="pl-ent"&gt;span&lt;/span&gt;&amp;gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; note the attribute data-testid &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &amp;lt;/&lt;span class="pl-ent"&gt;Badge&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;h3&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this example is using react-testing-library&lt;/span&gt;
  &lt;span class="pl-en"&gt;test&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Whenever no data is passed to metric, show 0 as default&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Arrange&lt;/span&gt;
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;metricValue&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;undefined&lt;/span&gt;;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Act&lt;/span&gt;
    &lt;span class="pl-k"&gt;const&lt;/span&gt; { &lt;span class="pl-c1"&gt;getByTestId&lt;/span&gt; } &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;render&lt;/span&gt;(&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;dashboardMetric value&lt;span class="pl-k"&gt;=&lt;/span&gt;{&lt;span class="pl-c1"&gt;undefined&lt;/span&gt;}&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;);    
    
    &lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-en"&gt;getByTestId&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;errorsLabel&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;text&lt;/span&gt;()).&lt;span class="pl-en"&gt;toBe&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  });
&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-thumbsdown-anti-pattern-example-relying-on-css-attributes" class="anchor" aria-hidden="true" href="#thumbsdown-anti-pattern-example-relying-on-css-attributes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="-1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png"&gt;👎&lt;/g-emoji&gt; Anti-Pattern Example: Relying on CSS attributes&lt;/h3&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; the markup code (part of React component) &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
&amp;lt;&lt;span class="pl-ent"&gt;span&lt;/span&gt; &lt;span class="pl-e"&gt;id&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;metric&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;className&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;d-flex-column&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;{value}&amp;lt;/&lt;span class="pl-ent"&gt;span&lt;/span&gt;&amp;gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; what if the designer changes the classs? &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this exammple is using enzyme&lt;/span&gt;
&lt;span class="pl-en"&gt;test&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Whenever no data is passed, error metric shows zero&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    
    &lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-smi"&gt;wrapper&lt;/span&gt;.&lt;span class="pl-c1"&gt;find&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[className='d-flex-column']&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;text&lt;/span&gt;()).&lt;span class="pl-en"&gt;toBe&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  });&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content--️-33-whenever-possible-test-with-a-realistic-and-fully-rendered-component" class="anchor" aria-hidden="true" href="#-️-33-whenever-possible-test-with-a-realistic-and-fully-rendered-component"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 3.3 Whenever possible, test with a realistic and fully rendered component&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; Whenever reasonably sized, test your component from outside like your users do, fully render the UI, act on it and assert that the rendered UI behaves as expected. Avoid all sort of mocking, partial and shallow rendering - this approach might result in untrapped bugs due to lack of details and harden the maintenance as the tests mess with the internals (see bullet 'Favour blackbox testing'). If one of the child components is significantly slowing down (e.g. animation) or complicating the setup - consider explicitly replacing it with a fake&lt;/p&gt;
&lt;p&gt;With all that said, a word of caution is in order: this technique works for small/medium components that pack a reasonable size of child components. Fully rendering a component with too many children will make it hard to reason about test failures (root cause analysis) and might get too slow. In such cases, write only a few tests against that fat parent component and more tests against its children&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; When poking into a component's internal by invoking its private methods, and checking the inner state - you would have to refactor all tests when refactoring the components implementation. Do you really have a capacity for this level of maintenance?&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-working-realstically-with-a-fully-rendered-component" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-working-realstically-with-a-fully-rendered-component"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: Working realstically with a fully rendered component&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/49f4dbc60240ba0dae1c04c9955d6b744ce50314/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e6725323052656163742d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/49f4dbc60240ba0dae1c04c9955d6b744ce50314/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e6725323052656163742d626c75652e737667" alt="" title="Examples with React" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2d1babf00094846617cb86861b347c028ab73325/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e67253230456e7a796d652d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/2d1babf00094846617cb86861b347c028ab73325/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e67253230456e7a796d652d626c75652e737667" alt="" title="Examples with Enzyme" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Enzyme-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Calendar&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;React&lt;/span&gt;.&lt;span class="pl-smi"&gt;Component&lt;/span&gt; {
  &lt;span class="pl-k"&gt;static&lt;/span&gt; defaultProps &lt;span class="pl-k"&gt;=&lt;/span&gt; {showFilters&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;}
  
  &lt;span class="pl-en"&gt;render&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; (
      &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="pl-c1"&gt;A&lt;/span&gt; filters panel &lt;span class="pl-k"&gt;with&lt;/span&gt; a button to hide&lt;span class="pl-k"&gt;/&lt;/span&gt;show filters
        &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;FiltersPanel showFilter&lt;span class="pl-k"&gt;=&lt;/span&gt;{showFilters} title&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Choose Filters&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    )
  }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Examples use React &amp;amp; Enzyme&lt;/span&gt;
&lt;span class="pl-en"&gt;test&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Realistic approach: When clicked to show filters, filters are displayed&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Arrange&lt;/span&gt;
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;wrapper&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;mount&lt;/span&gt;(&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Calendar showFilters&lt;span class="pl-k"&gt;=&lt;/span&gt;{&lt;span class="pl-c1"&gt;false&lt;/span&gt;} &lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;)

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Act&lt;/span&gt;
    &lt;span class="pl-smi"&gt;wrapper&lt;/span&gt;.&lt;span class="pl-c1"&gt;find&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;button&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-en"&gt;simulate&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;click&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Assert&lt;/span&gt;
    &lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-smi"&gt;wrapper&lt;/span&gt;.&lt;span class="pl-c1"&gt;text&lt;/span&gt;().&lt;span class="pl-en"&gt;includes&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Choose Filter&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;));
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This is how the user will approach this element: by text&lt;/span&gt;
})

&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-thumbsdown-anti-pattern-example-mocking-the-reality-with-shallow-rendering" class="anchor" aria-hidden="true" href="#thumbsdown-anti-pattern-example-mocking-the-reality-with-shallow-rendering"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="-1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png"&gt;👎&lt;/g-emoji&gt; Anti-Pattern Example: Mocking the reality with shallow rendering&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;test&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Shallow/mocked approach: When clicked to show filters, filters are displayed&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Arrange&lt;/span&gt;
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;wrapper&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;shallow&lt;/span&gt;(&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Calendar showFilters&lt;span class="pl-k"&gt;=&lt;/span&gt;{&lt;span class="pl-c1"&gt;false&lt;/span&gt;} title&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Choose Filter&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;)

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Act&lt;/span&gt;
    &lt;span class="pl-smi"&gt;wrapper&lt;/span&gt;.&lt;span class="pl-c1"&gt;find&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;filtersPanel&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-en"&gt;instance&lt;/span&gt;().&lt;span class="pl-en"&gt;showFilters&lt;/span&gt;();
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Tap into the internals, bypass the UI and invoke a method. White-box approach&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Assert&lt;/span&gt;
    &lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-smi"&gt;wrapper&lt;/span&gt;.&lt;span class="pl-c1"&gt;find&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Filter&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-en"&gt;props&lt;/span&gt;()).&lt;span class="pl-en"&gt;toEqual&lt;/span&gt;({title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Choose Filter&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;});
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; what if we change the prop name or don't pass anything relevant?&lt;/span&gt;
})
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content--️-34-dont-sleep-use-frameworks-built-in-support-for-async-events-also-try-to-speed-things-up" class="anchor" aria-hidden="true" href="#-️-34-dont-sleep-use-frameworks-built-in-support-for-async-events-also-try-to-speed-things-up"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 3.4 Don't sleep, use frameworks built-in support for async events. Also try to speed things up&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; In many cases, the unit under test completion time is just unknown (e.g. animation suspends element appearance) - in that case, avoid sleeping (e.g. setTimeOut) and prefer more deterministic methods that most platforms provide. Some libraries allows awaiting on operations (e.g. &lt;a href="https://docs.cypress.io/guides/references/best-practices.html#Unnecessary-Waiting" rel="nofollow"&gt;Cypress cy.request('url')&lt;/a&gt;), other provide API for waiting like &lt;a href="https://testing-library.com/docs/guide-disappearance" rel="nofollow"&gt;@testing-library/dom method wait(expect(element))&lt;/a&gt;. Sometimes a more elegant way is to stub the slow resource, like API for example, and then once the response moment becomes deterministic the component can be explicitly re-rendered. When depending upon some external component that sleeps, it might turn useful to &lt;a href="https://jestjs.io/docs/en/timer-mocks" rel="nofollow"&gt;hurry-up the clock&lt;/a&gt;. Sleeping is a pattern to avoid because it forces your test to be slow or risky (when waiting for a too short period). Whenever sleeping and polling is inevitable and there's no support from the testing framework, some npm libraries like &lt;a href="https://www.npmjs.com/package/wait-for-expect" rel="nofollow"&gt;wait-for-expect&lt;/a&gt; can help with a semi-deterministic solution
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; When sleeping for a long time, tests will be an order of magnitude slower. When trying to sleep for small numbers, test will fail when the unit under test didn't respond in a timely fashion. So it boils down to a trade-off between flakiness and bad performance&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-e2e-api-that-resolves-only-when-the-async-operations-is-done-cypress" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-e2e-api-that-resolves-only-when-the-async-operations-is-done-cypress"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: E2E API that resolves only when the async operations is done (Cypress)&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/49f4dbc60240ba0dae1c04c9955d6b744ce50314/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e6725323052656163742d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/49f4dbc60240ba0dae1c04c9955d6b744ce50314/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e6725323052656163742d626c75652e737667" alt="" title="Examples with React" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4e7ebd40f37c0d76e0bf6efe503c1547f835b710/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e67253230526561637425323054657374696e672532304c6962726172792d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/4e7ebd40f37c0d76e0bf6efe503c1547f835b710/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e67253230526561637425323054657374696e672532304c6962726172792d626c75652e737667" alt="" title="Examples with react-testing-library" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React%20Testing%20Library-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; using Cypress&lt;/span&gt;
&lt;span class="pl-smi"&gt;cy&lt;/span&gt;.&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#show-products&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;click&lt;/span&gt;()&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; navigate&lt;/span&gt;
&lt;span class="pl-smi"&gt;cy&lt;/span&gt;.&lt;span class="pl-en"&gt;wait&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;@products&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; wait for route to appear&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this line will get executed only when the route is ready&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-testing-library-that-waits-for-dom-elements" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-testing-library-that-waits-for-dom-elements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: Testing library that waits for DOM elements&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; @testing-library/dom&lt;/span&gt;
&lt;span class="pl-en"&gt;test&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;movie title appears&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;async&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; element is initially not present...&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; wait for appearance&lt;/span&gt;
    &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-en"&gt;wait&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
        &lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-en"&gt;getByText&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;the lion king&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)).&lt;span class="pl-en"&gt;toBeInTheDocument&lt;/span&gt;()
    })

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; wait for appearance and return the element&lt;/span&gt;
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;movie&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-en"&gt;waitForElement&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;getByText&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;the lion king&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;))
})
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-thumbsdown-anti-pattern-example-custom-sleep-code" class="anchor" aria-hidden="true" href="#thumbsdown-anti-pattern-example-custom-sleep-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="-1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png"&gt;👎&lt;/g-emoji&gt; Anti-Pattern Example: custom sleep code&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;test&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;movie title appears&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;async&lt;/span&gt; () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; element is initially not present...&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; custom wait logic (caution: simplistic, no timeout)&lt;/span&gt;
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;interval&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;setInterval&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
        &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;found&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;getByText&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;the lion king&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-k"&gt;if&lt;/span&gt;(found){
            &lt;span class="pl-c1"&gt;clearInterval&lt;/span&gt;(interval);
            &lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-en"&gt;getByText&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;the lion king&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)).&lt;span class="pl-en"&gt;toBeInTheDocument&lt;/span&gt;();
        }
        
    }, &lt;span class="pl-c1"&gt;100&lt;/span&gt;);

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; wait for appearance and return the element&lt;/span&gt;
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;movie&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-en"&gt;waitForElement&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;getByText&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;the lion king&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;))
})
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content--️-35-watch-how-the-content-is-served-over-the-network" class="anchor" aria-hidden="true" href="#-️-35-watch-how-the-content-is-served-over-the-network"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 3.5. Watch how the content is served over the network&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/853e3d23fd2dce60d982220bf86528982d3a6dc7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e67253230476f6f676c652532304c69676874486f7573652d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/853e3d23fd2dce60d982220bf86528982d3a6dc7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e67253230476f6f676c652532304c69676874486f7573652d626c75652e737667" alt="" title="Examples with Lighthouse" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Google%20LightHouse-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; Apply some active monitor that ensures the page load under real network is optimized - this includes any UX concern like slow page load or un-minified bundle. The inspection tools market is no short: basic tools like &lt;a href="https://www.pingdom.com/" rel="nofollow"&gt;pingdom&lt;/a&gt;, AWS CloudWatch, &lt;a href="https://cloud.google.com/monitoring/uptime-checks/" rel="nofollow"&gt;gcp StackDriver&lt;/a&gt; can be easily configured to watch whether the server is alive and response under a reasonable SLA. This only scratches the surface of what might get wrong, hence it's preferable to opt for tools that specialize in frontend (e.g. &lt;a href="https://developers.google.com/web/tools/lighthouse/" rel="nofollow"&gt;lighthouse&lt;/a&gt;, &lt;a href="https://developers.google.com/speed/pagespeed/insights/" rel="nofollow"&gt;pagespeed&lt;/a&gt;) and perform richer analysis. The focus should be on symptoms, metrics that directly affect the UX, like page load time, &lt;a href="https://scotch.io/courses/10-web-performance-audit-tips-for-your-next-billion-users-in-2018/fmp-first-meaningful-paint" rel="nofollow"&gt;meaningful paint&lt;/a&gt;, &lt;a href="https://calibreapp.com/blog/time-to-interactive/" rel="nofollow"&gt;time until the page gets interactive (TTI)&lt;/a&gt;. On top of that, one may also watch for technical causes like ensuring the content is compressed, time to the first byte, optimize images, ensuring reasonable DOM size, SSL and many others. It's advisable to have these rich monitors both during development, as part of the CI and most important - 24x7 over the production's servers/CDN&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; It must be disappointing to realize that after such great care for crafting a UI, 100% functional tests passing and sophisticated bundling - the UX is horrible and slow due to CDN misconfiguration&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-lighthouse-page-load-inspection-report" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-lighthouse-page-load-inspection-report"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: Lighthouse page load inspection report&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/assets/lighthouse2.png"&gt;&lt;img src="/assets/lighthouse2.png" alt="" title="Lighthouse page load inspection report" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content--️-36-stub-flakky-and-slow-resources-like-backend-apis" class="anchor" aria-hidden="true" href="#-️-36-stub-flakky-and-slow-resources-like-backend-apis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 3.6 Stub flakky and slow resources like backend APIs&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; When coding your mainstream tests (not E2E tests), avoid involving any resource that is beyond your responsibility and control like backend API and use stubs instead (i.e. test double). Practically, instead of real network calls to APIs, use some test double library (like &lt;a href="https://sinonjs.org/" rel="nofollow"&gt;Sinon&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/testdouble" rel="nofollow"&gt;Test doubles&lt;/a&gt;, etc) for stubbing the API response. The main benefit is preventing flakiness - testing or staging APIs by definition are not highly stable and from time to time will fail your tests although YOUR component behaves just fine (production env was not meant for testing and it usually throttles requests). Doing this will allow simulating various API behavior that should drive your component behavior as when no data was found or the case when API throws an error. Last but not least, network calls will greatly slow down the tests&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; The average test runs no longer than few ms, a typical API call last 100ms&amp;gt;, this makes each test ~20x slower&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-stubbing-or-intercepting-api-calls" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-stubbing-or-intercepting-api-calls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: Stubbing or intercepting API calls&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/49f4dbc60240ba0dae1c04c9955d6b744ce50314/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e6725323052656163742d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/49f4dbc60240ba0dae1c04c9955d6b744ce50314/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e6725323052656163742d626c75652e737667" alt="" title="Examples with React" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20React-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/18e898275485860eb14b4ea4056278a8e44fbd53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304a6573742d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/18e898275485860eb14b4ea4056278a8e44fbd53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541372532304578616d706c652532307573696e672532304a6573742d626c75652e737667" alt="" title="Examples with react-testing-library" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A7%20Example%20using%20Jest-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; unit under test&lt;/span&gt;
&lt;span class="pl-k"&gt;export&lt;/span&gt; &lt;span class="pl-c1"&gt;default&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;ProductsList&lt;/span&gt;() { 
    &lt;span class="pl-k"&gt;const&lt;/span&gt; [&lt;span class="pl-c1"&gt;products&lt;/span&gt;, &lt;span class="pl-c1"&gt;setProducts&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useState&lt;/span&gt;(&lt;span class="pl-c1"&gt;false&lt;/span&gt;)

    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;fetchProducts&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;async&lt;/span&gt;() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
      &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;products&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-smi"&gt;axios&lt;/span&gt;.&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;api/products&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
      &lt;span class="pl-en"&gt;setProducts&lt;/span&gt;(products);
    }

    &lt;span class="pl-en"&gt;useEffect&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
      &lt;span class="pl-en"&gt;fetchProducts&lt;/span&gt;();
    }, []);

  &lt;span class="pl-k"&gt;return&lt;/span&gt; products &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;{products}&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;div data&lt;span class="pl-k"&gt;-&lt;/span&gt;testid&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;no-products-message&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;No products&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;div&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; test&lt;/span&gt;
&lt;span class="pl-en"&gt;test&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;When no products exist, show the appropriate message&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Arrange&lt;/span&gt;
    &lt;span class="pl-en"&gt;nock&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;api&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            .&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;/products&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;)
            .&lt;span class="pl-en"&gt;reply&lt;/span&gt;(&lt;span class="pl-c1"&gt;404&lt;/span&gt;);

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Act&lt;/span&gt;
    &lt;span class="pl-k"&gt;const&lt;/span&gt; {&lt;span class="pl-c1"&gt;getByTestId&lt;/span&gt;} &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;render&lt;/span&gt;(&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;ProductsList&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;);

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Assert&lt;/span&gt;
    &lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-en"&gt;getByTestId&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;no-products-message&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)).&lt;span class="pl-en"&gt;toBeTruthy&lt;/span&gt;();
});
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content--️-37-have-very-few-end-to-end-tests-that-spans-the-whole-system" class="anchor" aria-hidden="true" href="#-️-37-have-very-few-end-to-end-tests-that-spans-the-whole-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 3.7 Have very few end-to-end tests that spans the whole system&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; Although E2E (end-to-end) usually means UI-only testing with a real browser (See bullet 3.6), for other they mean tests that stretch the entire system including the real backend. The latter type of tests is highly valuable as they cover integration bugs between frontend and backend that might happen due to a wrong understanding of the exchange schema. They are also an efficient method to discover backend-to-backend integration issues (e.g. Microservice A sends the wrong message to Microservice B) and even to detect deployment failures - there are no backend frameworks for E2E testing that are as friendly and mature as UI frameworks like &lt;a href="https://www.cypress.io/" rel="nofollow"&gt;Cypress&lt;/a&gt; and &lt;a href="https://github.com/GoogleChrome/puppeteer"&gt;Pupeteer&lt;/a&gt;. The downside of such tests is the high cost of configuring an environment with so many components, and mostly their brittleness - given 50 microservices, even if one fails then the entire E2E just failed. For that reason, we should use this technique sparingly and probably have 1-10 of those and no more. That said, even a small number of E2E tests are likely to catch the type of issues they are targeted for - deployment &amp;amp; integration faults. It's advisable to run those over a production-like staging environment&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; UI might invest much in testing its functionality only to realizes very late that the backend returned payload (the data schema the UI has to work with) is very different than expected&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content--️-38-speed-up-e2e-tests-by-reusing-login-credentials" class="anchor" aria-hidden="true" href="#-️-38-speed-up-e2e-tests-by-reusing-login-credentials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 3.8 Speed-up E2E tests by reusing login credentials&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; In E2E tests that involve a real backend and rely on a valid user token for API calls, it doesn't payoff to isolate the test to a level where a user is created and logged-in in every request. Instead, login only once before the tests execution start (i.e. before-all hook), save the token in some local storage and reuse it across requests. This seem to violate one of the core testing principle - keep the test autonomous without resources coupling. While this is a valid worry, in E2E tests performance is a key concern and creating 1-3 API requests before starting each individial tests might lead to horrible execution time. Reusing credentials doesn't mean the tests have to act on the same user records - if relying on user records (e.g. test user payments history) than make sure to generate those records as part of the test and avoid sharing their existence with other tests. Also remember that the backend can be faked - if your tests are focused on the frontend it might be better to isolate it and stub the backend API (see bullet 3.6).&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; Given 200 test cases and assuming login=100ms = 20 seconds only for logging-in again and again&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-logging-in-before-all-and-not-before-each" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-logging-in-before-all-and-not-before-each"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: Logging-in before-all and not before-each&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d8c653d8fa93d304206e1b4f49260bd4caf05136/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541382532304578616d706c652532307573696e67253230437970726573732d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/d8c653d8fa93d304206e1b4f49260bd4caf05136/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541382532304578616d706c652532307573696e67253230437970726573732d626c75652e737667" alt="" title="Using Cypress to illustrate the idea" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cypress-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; authenticationToken;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; happens before ALL tests run&lt;/span&gt;
&lt;span class="pl-en"&gt;before&lt;/span&gt;(() &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-smi"&gt;cy&lt;/span&gt;.&lt;span class="pl-en"&gt;request&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;POST&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;http://localhost:3000/login&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, {
    username&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;Cypress&lt;/span&gt;.&lt;span class="pl-en"&gt;env&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;username&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;),
    password&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;Cypress&lt;/span&gt;.&lt;span class="pl-en"&gt;env&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;password&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;),
  })
  .&lt;span class="pl-en"&gt;its&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;body&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  .&lt;span class="pl-c1"&gt;then&lt;/span&gt;((&lt;span class="pl-smi"&gt;responseFromLogin&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    authenticationToken &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;responseFromLogin&lt;/span&gt;.&lt;span class="pl-smi"&gt;token&lt;/span&gt;;
  })
})

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; happens before EACH test&lt;/span&gt;
&lt;span class="pl-en"&gt;beforeEach&lt;/span&gt;(&lt;span class="pl-smi"&gt;setUser&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; () {
  &lt;span class="pl-smi"&gt;cy&lt;/span&gt;.&lt;span class="pl-en"&gt;visit&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/home&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, {
    &lt;span class="pl-en"&gt;onBeforeLoad&lt;/span&gt; (&lt;span class="pl-smi"&gt;win&lt;/span&gt;) {
      &lt;span class="pl-smi"&gt;win&lt;/span&gt;.&lt;span class="pl-smi"&gt;localStorage&lt;/span&gt;.&lt;span class="pl-c1"&gt;setItem&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;token&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;JSON&lt;/span&gt;.&lt;span class="pl-c1"&gt;stringify&lt;/span&gt;(authenticationToken))
    },
  })
})
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content--️-39-have-one-e2e-smoke-test-that-just-travels-across-the-site-map" class="anchor" aria-hidden="true" href="#-️-39-have-one-e2e-smoke-test-that-just-travels-across-the-site-map"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 3.9 Have one E2E smoke test that just travels across the site map&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; For production monitoring and development-time sanity check, run a single E2E test that visits all/most of the site pages and ensures no one breaks. This type of test brings a great return on investment as it's very easy to write and maintain, but it can detect any kind of failure including functional, network and deployment issues. Other styles of smoke and sanity checking are not as reliable and exhaustive - some ops teams just ping the home page (production) or developers who run many integration tests which don't discover packaging and browser issues. Goes without saying that the smoke test doesn't replace functional tests rather just aim to serve as a quick smoke detector&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; Everything might seem perfect, all tests pass, production health-check is also positive but the Payment component had some packaging issue and only the /Payment route is not rendering&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-smoke-travelling-across-all-pages" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-smoke-travelling-across-all-pages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: Smoke travelling across all pages&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d8c653d8fa93d304206e1b4f49260bd4caf05136/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541382532304578616d706c652532307573696e67253230437970726573732d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/d8c653d8fa93d304206e1b4f49260bd4caf05136/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541382532304578616d706c652532307573696e67253230437970726573732d626c75652e737667" alt="" title="Using Cypress to illustrate the idea" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cypress-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;When doing smoke testing over all page, should load them all successfully&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; exemplified using Cypress but can be implemented easily&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; using any E2E suite&lt;/span&gt;
    &lt;span class="pl-smi"&gt;cy&lt;/span&gt;.&lt;span class="pl-en"&gt;visit&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://mysite.com/home&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;cy&lt;/span&gt;.&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Home&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;cy&lt;/span&gt;.&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://mysite.com/Login&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;cy&lt;/span&gt;.&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Login&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;cy&lt;/span&gt;.&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://mysite.com/About&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-smi"&gt;cy&lt;/span&gt;.&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;About&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  })&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content--️-310-expose-the-tests-as-a-live-collaborative-document" class="anchor" aria-hidden="true" href="#-️-310-expose-the-tests-as-a-live-collaborative-document"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 3.10 Expose the tests as a live collaborative document&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; Besides increasing app reliability, tests bring another attractive opportunity to the table - serve as live app documentation. Since tests inherently speak at a less-technical and product/UX language, using the right tools they can serve as a communication artifact that greatly aligns all the peers - developers and their customers. For example, some frameworks allow expressing the flow and expectations (i.e. tests plan) using a human-readable language so any stakeholder, including product managers, can read, approve and collaborate on the tests which just became the live requirements document. This technique is also being referred to as 'acceptance test' as it allows the customer to define his acceptance criteria in plain language. This is &lt;a href="https://en.wikipedia.org/wiki/Behavior-driven_development" rel="nofollow"&gt;BDD (behavior-driven testing)&lt;/a&gt; at its purest form. One of the popular frameworks that enable this is &lt;a href="https://github.com/cucumber/cucumber-js"&gt;Cucumber which has a JavaScript flavor&lt;/a&gt;, see example below. Another similar yet different opportunity, &lt;a href="https://storybook.js.org/" rel="nofollow"&gt;StoryBook&lt;/a&gt;, allows exposing UI components as a graphic catalog where one can walk through the various states of each component (e.g. render a grid w/o filters, render that grid with multiple rows or with none, etc), see how it looks like, and how to trigger that state - this can appeal also to product folks but mostly serves as live doc for developers who consume those components.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; After investing top resources on testing, it's just a pity not to leverage this investment and win great value&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-describing-tests-in-human-language-using-cucumber-js" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-describing-tests-in-human-language-using-cucumber-js"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: Describing tests in human-language using cucumber-js&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/02cd2b0703ddd496ade76658e07e1e9dda6a0d83/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541382532304578616d706c652532307573696e67253230437563756d6265722d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/02cd2b0703ddd496ade76658e07e1e9dda6a0d83/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541382532304578616d706c652532307573696e67253230437563756d6265722d626c75652e737667" alt="" title="Examples using Cucumber" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cucumber-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this is how one can describe tests using cucumber: plain language that allows anyone to understand and collaborate&lt;/span&gt;

Feature&lt;span class="pl-k"&gt;:&lt;/span&gt; Twitter &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;tweet&lt;/span&gt;
 
  &lt;span class="pl-c1"&gt;I&lt;/span&gt; want to tweet something &lt;span class="pl-k"&gt;in&lt;/span&gt; Twitter
  
  @focus
  Scenario&lt;span class="pl-k"&gt;:&lt;/span&gt; Tweeting from the home page
    Given &lt;span class="pl-c1"&gt;I&lt;/span&gt; open Twitter home
    Given &lt;span class="pl-c1"&gt;I&lt;/span&gt; click on &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;New tweet&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; button
    Given &lt;span class="pl-c1"&gt;I&lt;/span&gt; type &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello followers!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; the textbox 
    Given &lt;span class="pl-c1"&gt;I&lt;/span&gt; click on &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Submit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; button
    Then &lt;span class="pl-c1"&gt;I&lt;/span&gt; see message &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Tweet saved&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-visualizing-our-components-their-various-states-and-inputs-using-storybook" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-visualizing-our-components-their-various-states-and-inputs-using-storybook"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: Visualizing our components, their various states and inputs using Storybook&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/bd8df6a0a8dd0e821b6d606ac539a7b3b381105c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541382532304578616d706c652532307573696e6725323053746f7279426f6f6b2d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/bd8df6a0a8dd0e821b6d606ac539a7b3b381105c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541382532304578616d706c652532307573696e6725323053746f7279426f6f6b2d626c75652e737667" alt="" title="Using StoryBook" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20StoryBook-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/story-book.jpg"&gt;&lt;img src="assets/story-book.jpg" alt="alt text" title="Storybook" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️-311-detect-visual-issues-with-automated-tools" class="anchor" aria-hidden="true" href="#-️-311-detect-visual-issues-with-automated-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 3.11 Detect visual issues with automated tools&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; Setup automated tools to capture UI screenshots when changes are presented and detect visual issues like content overlapping or breaking. This ensures that not only the right data is prepared but also the user can conveniently see it. This technique is not widely adopted, our testing mindset leans toward functional tests but it's the visuals what the user experience and with so many device types it's very easy to overlook some nasty UI bug. Some free tools can provide the basics - generate and save screenshots for the inspection of human eyes. While this approach might be sufficient for small apps, it's flawed as any other manual testing that demands human labor anytime something changes. On the other hand, it's quite challenging to detect UI issues automatically due to the lack of clear definition - this is where the field of 'Visual Regression' chime in and solve this puzzle by comparing old UI with the latest changes and detect differences. Some OSS/free tools can provide some of this functionality (e.g. &lt;a href="https://github.com/BBC-News/wraith"&gt;wraith&lt;/a&gt;, PhantomCSS but might charge signficant setup time. The commercial line of tools (e.g. &lt;a href="https://applitools.com/" rel="nofollow"&gt;Applitools&lt;/a&gt;, &lt;a href="https://percy.io/" rel="nofollow"&gt;Percy.io&lt;/a&gt;) takes is a step further by smoothing the installation and packing advanced features like management UI, alerting, smart capturing by elemeinating  'visual noise' (e.g. ads, animations) and even root cause analysis of the DOM/css changes that led to the issue&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; How good is a content page that display great content (100% tests passed), loads instantly but half of the content area is hidden?&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-thumbsdown-anti-pattern-example-a-typical-visual-regression---right-content-that-is-served-badly" class="anchor" aria-hidden="true" href="#thumbsdown-anti-pattern-example-a-typical-visual-regression---right-content-that-is-served-badly"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="-1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png"&gt;👎&lt;/g-emoji&gt; Anti Pattern Example: A typical visual regression - right content that is served badly&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/amazon-visual-regression.jpeg"&gt;&lt;img src="assets/amazon-visual-regression.jpeg" alt="alt text" title="Amazon page breaks" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-configuring-wraith-to-capture-and-compare-ui-snapshots" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-configuring-wraith-to-capture-and-compare-ui-snapshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: Configuring wraith to capture and compare UI snapshots&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/7a8c3ba1f284119400258eb9774d262bf0ac121e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541382532304578616d706c652532307573696e672532305772616974682d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/7a8c3ba1f284119400258eb9774d262bf0ac121e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541382532304578616d706c652532307573696e672532305772616974682d626c75652e737667" alt="" title="Using Wraith" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Wraith-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;​# Add as many domains as necessary. Key will act as a label​

domains:
  english: "http://www.mysite.com"​

​# Type screen widths below, here are a couple of examples​

screen_widths:

  - 600​
  - 768​
  - 1024​
  - 1280​


​# Type page URL paths below, here are a couple of examples​
paths:
  about:
    path: /about
    selector: '.about'​
  subscribe:
      selector: '.subscribe'​
    path: /subscribe
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-using-applitools-to-get-snapshot-comaprison-and-other-advanced-features" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-using-applitools-to-get-snapshot-comaprison-and-other-advanced-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: Using Applitools to get snapshot comaprison and other advanced features&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4312c0ad91a5c2a450047cf4b66f09a0f2f6c331/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541382532304578616d706c652532307573696e672532304170706c69546f6f6c732d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/4312c0ad91a5c2a450047cf4b66f09a0f2f6c331/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541382532304578616d706c652532307573696e672532304170706c69546f6f6c732d626c75652e737667" alt="" title="Using AppliTools" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20AppliTools-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d8c653d8fa93d304206e1b4f49260bd4caf05136/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541382532304578616d706c652532307573696e67253230437970726573732d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/d8c653d8fa93d304206e1b4f49260bd4caf05136/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541382532304578616d706c652532307573696e67253230437970726573732d626c75652e737667" alt="" title="Using Cypress to illustrate the idea" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Cypress-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt;  &lt;span class="pl-c1"&gt;*&lt;/span&gt;  &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-smi"&gt;todoPage&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;../page-objects/todo-page&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;

&lt;span class="pl-en"&gt;describe&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;visual validation&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,  ()  &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;  {
    &lt;span class="pl-en"&gt;before&lt;/span&gt;(()  &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;  &lt;span class="pl-smi"&gt;todoPage&lt;/span&gt;.&lt;span class="pl-c1"&gt;navigate&lt;/span&gt;());
    &lt;span class="pl-en"&gt;beforeEach&lt;/span&gt;(()  &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;  &lt;span class="pl-smi"&gt;cy&lt;/span&gt;.&lt;span class="pl-en"&gt;eyesOpen&lt;/span&gt;({ appName&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;TAU TodoMVC&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }));
    &lt;span class="pl-en"&gt;afterEach&lt;/span&gt;(()  &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;  &lt;span class="pl-smi"&gt;cy&lt;/span&gt;.&lt;span class="pl-en"&gt;eyesClose&lt;/span&gt;());

    &lt;span class="pl-en"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;should look good&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,  ()  &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;  {
        &lt;span class="pl-smi"&gt;cy&lt;/span&gt;.&lt;span class="pl-en"&gt;eyesCheckWindow&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;empty todo list&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;todoPage&lt;/span&gt;.&lt;span class="pl-en"&gt;addTodo&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Clean room&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;todoPage&lt;/span&gt;.&lt;span class="pl-en"&gt;addTodo&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Learn javascript&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;cy&lt;/span&gt;.&lt;span class="pl-en"&gt;eyesCheckWindow&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;two todos&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;todoPage&lt;/span&gt;.&lt;span class="pl-en"&gt;toggleTodo&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;cy&lt;/span&gt;.&lt;span class="pl-en"&gt;eyesCheckWindow&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;mark as completed&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
    });
});&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-section-4️⃣-measuring-test-effectiveness" class="anchor" aria-hidden="true" href="#section-4️⃣-measuring-test-effectiveness"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section &lt;g-emoji class="g-emoji" alias="four" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/0034-20e3.png"&gt;4️⃣&lt;/g-emoji&gt;: Measuring Test Effectiveness&lt;/h1&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️-41-get-enough-coverage-for-being-confident-80-seems-to-be-the-lucky-number" class="anchor" aria-hidden="true" href="#-️-41-get-enough-coverage-for-being-confident-80-seems-to-be-the-lucky-number"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 4.1 Get enough coverage for being confident, ~80% seems to be the lucky number&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; The purpose of testing is to get enough confidence for moving fast, obviously the more code is tested the more confident the team can be. Coverage is a measure of how many code lines (and branches, statements, etc) are being reached by the tests. So how much is enough? 10–30% is obviously too low to get any sense about the build correctness, on the other side 100% is very expensive and might shift your focus from the critical paths to the exotic corners of the code. The long answer is that it depends on many factors like the type of application — if you’re building the next generation of Airbus A380 than 100% is a must, for a cartoon pictures website 50% might be too much. Although most of the testing enthusiasts claim that the right coverage threshold is contextual, most of them also mention the number 80% as a thumb of a rule (&lt;a href="https://martinfowler.com/bliki/TestCoverage.html" rel="nofollow"&gt;Fowler: “in the upper 80s or 90s”&lt;/a&gt;) that presumably should satisfy most of the applications.&lt;/p&gt;
&lt;p&gt;Implementation tips: You may want to configure your continuous integration (CI) to have a coverage threshold (&lt;a href="https://jestjs.io/docs/en/configuration.html#collectcoverage-boolean" rel="nofollow"&gt;Jest link&lt;/a&gt;) and stop a build that doesn’t stand to this standard (it’s also possible to configure threshold per component, see code example below). On top of this, consider detecting build coverage decrease (when a newly committed code has less coverage) — this will push developers raising or at least preserving the amount of tested code. All that said, coverage is only one measure, a quantitative based one, that is not enough to tell the robustness of your testing. And it can also be fooled as illustrated in the next bullets&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt;  Confidence and numbers go hand in hand, without really knowing that you tested most of the system — there will also be some fear. and fear will slow you down&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-example-a-typical-coverage-report" class="anchor" aria-hidden="true" href="#clap-example-a-typical-coverage-report"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Example: A typical coverage report&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/bp-18-yoni-goldberg-code-coverage.png"&gt;&lt;img src="assets/bp-18-yoni-goldberg-code-coverage.png" alt="alt text" title="A typical coverage report" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-setting-up-coverage-per-component-using-jest" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-setting-up-coverage-per-component-using-jest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: Setting up coverage per component (using Jest)&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b45136ffcfc38ed8c50a964e0abc8d8b912431e3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541382532304578616d706c652532307573696e672532304a6573742d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/b45136ffcfc38ed8c50a964e0abc8d8b912431e3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541382532304578616d706c652532307573696e672532304a6573742d626c75652e737667" alt="" title="Using Jest" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Jest-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/bp-18-code-coverage2.jpeg"&gt;&lt;img src="assets/bp-18-code-coverage2.jpeg" alt="alt text" title="Setting up coverage per component (using Jest)" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️-42-inspect-coverage-reports-to-detect-untested-areas-and-other-oddities" class="anchor" aria-hidden="true" href="#-️-42-inspect-coverage-reports-to-detect-untested-areas-and-other-oddities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 4.2 Inspect coverage reports to detect untested areas and other oddities&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; Some issues sneak just under the radar and are really hard to find using traditional tools. These are not really bugs but more of surprising application behavior that might have a severe impact. For example, often some code areas are never or rarely being invoked — you thought that the ‘PricingCalculator’ class is always setting the product price but it turns out it is actually never invoked although we have 10000 products in DB and many sales… Code coverage reports help you realize whether the application behaves the way you believe it does. Other than that, it can also highlight which types of code is not tested — being informed that 80% of the code is tested doesn’t tell whether the critical parts are covered. Generating reports is easy — just run your app in production or during testing with coverage tracking and then see colorful reports that highlight how frequent each code area is invoked. If you take your time to glimpse into this data — you might find some gotchas
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; If you don’t know which parts of your code are left un-tested, you don’t know where the issues might come from&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-thumbsdown-anti-pattern-example-whats-wrong-with-this-coverage-report" class="anchor" aria-hidden="true" href="#thumbsdown-anti-pattern-example-whats-wrong-with-this-coverage-report"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="-1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png"&gt;👎&lt;/g-emoji&gt; Anti-Pattern Example: What’s wrong with this coverage report?&lt;/h3&gt;
&lt;p&gt;Based on a real-world scenario where we tracked our application usage in QA and find out interesting login patterns (Hint: the amount of login failures is non-proportional, something is clearly wrong. Finally it turned out that some frontend bug keeps hitting the backend login API)&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/bp-19-coverage-yoni-goldberg-nodejs-consultant.png"&gt;&lt;img src="assets/bp-19-coverage-yoni-goldberg-nodejs-consultant.png" alt="alt text" title="What’s wrong with this coverage report?" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️-43-measure-logical-coverage-using-mutation-testing" class="anchor" aria-hidden="true" href="#-️-43-measure-logical-coverage-using-mutation-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 4.3 Measure logical coverage using mutation testing&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt;  The Traditional Coverage metric often lies: It may show you 100% code coverage, but none of your functions, even not one, return the right response. How come? it simply measures over which lines of code the test visited, but it doesn’t check if the tests actually tested anything — asserted for the right response. Like someone who’s traveling for business and showing his passport stamps — this doesn’t prove any work done, only that he visited few airports and hotels.&lt;/p&gt;
&lt;p&gt;Mutation-based testing is here to help by measuring the amount of code that was actually TESTED not just VISITED. &lt;a href="https://stryker-mutator.io/" rel="nofollow"&gt;Stryker&lt;/a&gt; is a JavaScript library for mutation testing and the implementation is really neat:&lt;/p&gt;
&lt;p&gt;(1) it intentionally changes the code and “plants bugs”. For example the code newOrder.price===0 becomes newOrder.price!=0. This “bugs” are called mutations&lt;/p&gt;
&lt;p&gt;(2) it runs the tests, if all succeed then we have a problem — the tests didn’t serve their purpose of discovering bugs, the mutations are so-called survived. If the tests failed, then great, the mutations were killed.&lt;/p&gt;
&lt;p&gt;Knowing that all or most of the mutations were killed gives much higher confidence than traditional coverage and the setup time is similar
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; You’ll be fooled to believe that 85% coverage means your test will detect bugs in 85% of your code&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-thumbsdown-anti-pattern-example-100-coverage-0-testing" class="anchor" aria-hidden="true" href="#thumbsdown-anti-pattern-example-100-coverage-0-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="-1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png"&gt;👎&lt;/g-emoji&gt; Anti Pattern Example: 100% coverage, 0% testing&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0413439fdc1ebe0022f7b218f1cd3ed7fd2d63e5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541382532304578616d706c652532307573696e67253230537472796b65722d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/0413439fdc1ebe0022f7b218f1cd3ed7fd2d63e5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539342541382532304578616d706c652532307573696e67253230537472796b65722d626c75652e737667" alt="" title="Using Cypress to illustrate the idea" data-canonical-src="https://img.shields.io/badge/%F0%9F%94%A8%20Example%20using%20Stryker-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;addNewOrder&lt;/span&gt;(&lt;span class="pl-smi"&gt;newOrder&lt;/span&gt;) {
    &lt;span class="pl-smi"&gt;logger&lt;/span&gt;.&lt;span class="pl-en"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;Adding new order &lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;newOrder&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-c1"&gt;DB&lt;/span&gt;.&lt;span class="pl-en"&gt;save&lt;/span&gt;(newOrder);
    &lt;span class="pl-smi"&gt;Mailer&lt;/span&gt;.&lt;span class="pl-en"&gt;sendMail&lt;/span&gt;(&lt;span class="pl-smi"&gt;newOrder&lt;/span&gt;.&lt;span class="pl-smi"&gt;assignee&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;A new order was places &lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;newOrder&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;);

    &lt;span class="pl-k"&gt;return&lt;/span&gt; {approved&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;};
}

&lt;span class="pl-en"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Test addNewOrder, don't use such test names&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-en"&gt;addNewOrder&lt;/span&gt;({asignee&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John@mailer.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,price&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;120&lt;/span&gt;});
});&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Triggers 100% code coverage, but it doesn't check anything&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-stryker-reports-a-tool-for-mutation-testing-detects-and-counts-the-amount-of-code-that-is-not-tested-mutations" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-stryker-reports-a-tool-for-mutation-testing-detects-and-counts-the-amount-of-code-that-is-not-tested-mutations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: Stryker reports, a tool for mutation testing, detects and counts the amount of code that is not tested (Mutations)&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/bp-20-yoni-goldberg-mutation-testing.jpeg"&gt;&lt;img src="assets/bp-20-yoni-goldberg-mutation-testing.jpeg" alt="alt text" title="Stryker reports, a tool for mutation testing, detects and counts the amount of code that is not tested (Mutations)" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️44-preventing-test-code-issues-with-test-linters" class="anchor" aria-hidden="true" href="#-️44-preventing-test-code-issues-with-test-linters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️4.4 Preventing test code issues with Test linters&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt;  A set of ESLint plugins were built specifically for inspecting the tests code patterns and discover issues. For example, &lt;a href="https://www.npmjs.com/package/eslint-plugin-mocha" rel="nofollow"&gt;eslint-plugin-mocha&lt;/a&gt; will warn when a test is written at the global level (not a son of a describe() statement) or when tests are &lt;a href="https://mochajs.org/#inclusive-tests" rel="nofollow"&gt;skipped&lt;/a&gt; which might lead to a false belief that all tests are passing. Similarly, &lt;a href="https://github.com/jest-community/eslint-plugin-jest"&gt;eslint-plugin-jest&lt;/a&gt; can, for example, warn when a test has no assertions at all (not checking anything)&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; Seeing 90% code coverage and 100% green tests will make your face wear a big smile only until you realize that many tests aren’t asserting for anything and many test suites were just skipped. Hopefully, you didn’t deploy anything based on this false observation&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-thumbsdown-anti-pattern-example-a-test-case-full-of-errors-luckily-all-are-caught-by-linters" class="anchor" aria-hidden="true" href="#thumbsdown-anti-pattern-example-a-test-case-full-of-errors-luckily-all-are-caught-by-linters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="-1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png"&gt;👎&lt;/g-emoji&gt; Anti Pattern Example: A test case full of errors, luckily all are caught by Linters&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;describe&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Too short description&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;userToken&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;userService&lt;/span&gt;.&lt;span class="pl-en"&gt;getDefaultToken&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; *error:no-setup-in-describe, use hooks (sparingly) instead&lt;/span&gt;
  &lt;span class="pl-en"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Some description&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {});&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;* error: valid-test-description. Must include the word "Should" + at least 5 words&lt;/span&gt;
});

&lt;span class="pl-smi"&gt;it&lt;/span&gt;.&lt;span class="pl-en"&gt;skip&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Test name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; *error:no-skipped-tests, error:error:no-global-tests. Put tests only under describe or suite&lt;/span&gt;
  &lt;span class="pl-en"&gt;expect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;somevalue&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; error:no-assert&lt;/span&gt;
});

&lt;span class="pl-en"&gt;it&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Test name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, () &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;error:no-identical-title. Assign unique titles to tests&lt;/span&gt;
});&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-section-5️⃣-ci-and-other-quality-measures" class="anchor" aria-hidden="true" href="#section-5️⃣-ci-and-other-quality-measures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Section &lt;g-emoji class="g-emoji" alias="five" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/0035-20e3.png"&gt;5️⃣&lt;/g-emoji&gt;: CI and Other Quality Measures&lt;/h1&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️-51-enrich-your-linters-and-abort-builds-that-have-linting-issues" class="anchor" aria-hidden="true" href="#-️-51-enrich-your-linters-and-abort-builds-that-have-linting-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 5.1 Enrich your linters and abort builds that have linting issues&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt;  Linters are a free lunch, with 5 min setup you get for free an auto-pilot guarding your code and catching significant issue as you type. Gone are the days where linting was about cosmetics (no semi-colons!). Nowadays, Linters can catch severe issues like errors that are not thrown correctly and losing information. On top of your basic set of rules (like &lt;a href="https://www.npmjs.com/package/eslint-plugin-standard" rel="nofollow"&gt;ESLint standard&lt;/a&gt; or &lt;a href="https://www.npmjs.com/package/eslint-config-airbnb" rel="nofollow"&gt;Airbnb style&lt;/a&gt;), consider including some specializing Linters like &lt;a href="https://www.npmjs.com/package/eslint-plugin-chai-expect" rel="nofollow"&gt;eslint-plugin-chai-expect&lt;/a&gt; that can discover tests without assertions, &lt;a href="https://www.npmjs.com/package/eslint-plugin-promise?activeTab=readme" rel="nofollow"&gt;eslint-plugin-promise&lt;/a&gt; can discover promises with no resolve (your code will never continue), &lt;a href="https://www.npmjs.com/package/eslint-plugin-security?activeTab=readme" rel="nofollow"&gt;eslint-plugin-security&lt;/a&gt; which can discover eager regex expressions that might get used for DOS attacks, and &lt;a href="https://www.npmjs.com/package/eslint-plugin-you-dont-need-lodash-underscore" rel="nofollow"&gt;eslint-plugin-you-dont-need-lodash-underscore&lt;/a&gt; is capable of alarming when the code uses utility library methods that are part of the V8 core methods like Lodash._map(…)
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; Consider a rainy day where your production keeps crashing but the logs don’t display the error stack trace. What happened? Your code mistakenly threw a non-error object and the stack trace was lost, a good reason for banging your head against a brick wall. A 5min linter setup could detect this TYPO and save your day&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-thumbsdown-anti-pattern-example-the-wrong-error-object-is-thrown-mistakenly-no-stack-trace-will-appear-for-this-error-luckily-eslint-catches-the-next-production-bug" class="anchor" aria-hidden="true" href="#thumbsdown-anti-pattern-example-the-wrong-error-object-is-thrown-mistakenly-no-stack-trace-will-appear-for-this-error-luckily-eslint-catches-the-next-production-bug"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="-1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44e.png"&gt;👎&lt;/g-emoji&gt; Anti Pattern Example: The wrong Error object is thrown mistakenly, no stack-trace will appear for this error. Luckily, ESLint catches the next production bug&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/bp-21-yoni-goldberg-eslint.jpeg"&gt;&lt;img src="assets/bp-21-yoni-goldberg-eslint.jpeg" alt="alt text" title="The wrong Error object is thrown mistakenly, no stack-trace will appear for this error. Luckily, ESLint catches the next production bug" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content--️-52-shorten-the-feedback-loop-with-local-developer-ci" class="anchor" aria-hidden="true" href="#-️-52-shorten-the-feedback-loop-with-local-developer-ci"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 5.2 Shorten the feedback loop with local developer-CI&lt;/h1&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt;   Using a CI with shiny quality inspections like testing, linting, vulnerabilities check, etc? Help developers run this pipeline also locally to solicit instant feedback and shorten the &lt;a href="https://www.gocd.org/2016/03/15/are-you-ready-for-continuous-delivery-part-2-feedback-loops/" rel="nofollow"&gt;feedback loop&lt;/a&gt;. Why? an efficient testing process constitutes many and iterative loops: (1) try-outs -&amp;gt; (2) feedback -&amp;gt; (3) refactor. The faster the feedback is, the more improvement iterations a developer can perform per-module and perfect the results. On the flip, when the feedback is late to come fewer improvement iterations could be packed into a single day, the team might already move forward to another topic/task/module and might not be up for refining that module.&lt;/p&gt;
&lt;p&gt;Practically, some CI vendors (Example: &lt;a href="https://circleci.com/docs/2.0/local-cli/" rel="nofollow"&gt;CircleCI load CLI&lt;/a&gt;) allow running the pipeline locally. Some commercial tools like &lt;a href="https://wallabyjs.com/" rel="nofollow"&gt;wallaby provide highly-valuable &amp;amp; testing insights&lt;/a&gt; as a developer prototype (no affiliation). Alternatively, you may just add npm script to package.json that runs all the quality commands (e.g. test, lint, vulnerabilities) — use tools like &lt;a href="https://www.npmjs.com/package/concurrently" rel="nofollow"&gt;concurrently&lt;/a&gt; for parallelization and non-zero exit code if one of the tools failed. Now the developer should just invoke one command — e.g. ‘npm run quality’ — to get instant feedback. Consider also aborting a commit if the quality check failed using a githook (&lt;a href="https://github.com/typicode/husky"&gt;husky can help&lt;/a&gt;)
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; When the quality results arrive the day after the code, testing doesn’t become a fluent part of development rather an after the fact formal artifact&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap--doing-it-right-example-npm-scripts-that-perform-code-quality-inspection-all-are-run-in-parallel-on-demand-or-when-a-developer-is-trying-to-push-new-code" class="anchor" aria-hidden="true" href="#clap--doing-it-right-example-npm-scripts-that-perform-code-quality-inspection-all-are-run-in-parallel-on-demand-or-when-a-developer-is-trying-to-push-new-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt;  Doing It Right Example: npm scripts that perform code quality inspection, all are run in parallel on demand or when a developer is trying to push new code&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;scripts&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;inspect:sanity-testing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mocha **/**--test.js --grep &lt;span class="pl-cce"&gt;\"&lt;/span&gt;sanity&lt;span class="pl-cce"&gt;\"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;inspect:lint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;eslint .&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;inspect:vulnerabilities&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;npm audit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;inspect:license&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;license-checker --failOn GPLv2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;inspect:complexity&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;plato .&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,

    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;inspect:all&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;concurrently -c &lt;span class="pl-cce"&gt;\"&lt;/span&gt;bgBlue.bold,bgMagenta.bold,yellow&lt;span class="pl-cce"&gt;\"&lt;/span&gt; &lt;span class="pl-cce"&gt;\"&lt;/span&gt;npm:inspect:quick-testing&lt;span class="pl-cce"&gt;\"&lt;/span&gt; &lt;span class="pl-cce"&gt;\"&lt;/span&gt;npm:inspect:lint&lt;span class="pl-cce"&gt;\"&lt;/span&gt; &lt;span class="pl-cce"&gt;\"&lt;/span&gt;npm:inspect:vulnerabilities&lt;span class="pl-cce"&gt;\"&lt;/span&gt; &lt;span class="pl-cce"&gt;\"&lt;/span&gt;npm:inspect:license&lt;span class="pl-cce"&gt;\"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  },
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;husky&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hooks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;precommit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;npm run inspect:all&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;prepush&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;npm run inspect:all&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content--️53-perform-e2e-testing-over-a-true-production-mirror" class="anchor" aria-hidden="true" href="#-️53-perform-e2e-testing-over-a-true-production-mirror"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️5.3 Perform e2e testing over a true production-mirror&lt;/h1&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt;   End to end (e2e) testing are the main challenge of every CI pipeline — creating an identical ephemeral production mirror on the fly with all the related cloud services can be tedious and expensive. Finding the best compromise is your game: &lt;a href="https://serverless.com/" rel="nofollow"&gt;Docker-compose&lt;/a&gt; allows crafting isolated dockerized environment with identical containers using a single plain text file but the backing technology (e.g. networking, deployment model) is different from real-world productions. You may combine it with &lt;a href="https://github.com/localstack/localstack"&gt;‘AWS Local’&lt;/a&gt; to work with a stub of the real AWS services. If you went &lt;a href="https://serverless.com/" rel="nofollow"&gt;serverless&lt;/a&gt; multiple frameworks like serverless and &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/serverless_app.html" rel="nofollow"&gt;AWS SAM&lt;/a&gt; allows the local invocation of Faas code.&lt;/p&gt;
&lt;p&gt;The huge Kubernetes eco-system is yet to formalize a standard convenient tool for local and CI-mirroring though many new tools are launched frequently. One approach is running a ‘minimized-Kubernetes’ using tools like &lt;a href="https://kubernetes.io/docs/setup/minikube/" rel="nofollow"&gt;Minikube&lt;/a&gt; and &lt;a href="https://microk8s.io/" rel="nofollow"&gt;MicroK8s&lt;/a&gt; which resemble the real thing only come with less overhead. Another approach is testing over a remote ‘real-Kubernetes’, some CI providers (e.g. &lt;a href="https://codefresh.io/" rel="nofollow"&gt;Codefresh&lt;/a&gt;) has native integration with Kubernetes environment and make it easy to run the CI pipeline over the real thing, others allow custom scripting against a remote Kubernetes.
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; Using different technologies for production and testing demands maintaining two deployment models and keeps the developers and the ops team separated&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap--example-a-ci-pipeline-that-generates-kubernetes-cluster-on-the-fly-credit-dynamic-environments-kubernetes" class="anchor" aria-hidden="true" href="#clap--example-a-ci-pipeline-that-generates-kubernetes-cluster-on-the-fly-credit-dynamic-environments-kubernetes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt;  Example: a CI pipeline that generates Kubernetes cluster on the fly &lt;a href="https://container-solutions.com/dynamic-environments-kubernetes/" rel="nofollow"&gt;(&lt;/a&gt;&lt;a href="https://container-solutions.com/dynamic-environments-kubernetes/" rel="nofollow"&gt;Credit: Dynamic-environments Kubernetes&lt;/a&gt;)&lt;/h3&gt;
&lt;pre name="user-content-38d9" id="user-content-38d9"&gt;deploy:&lt;br&gt;stage: deploy&lt;br&gt;image: registry.gitlab.com/gitlab-examples/kubernetes-deploy&lt;br&gt;script:&lt;br&gt;- ./configureCluster.sh $KUBE_CA_PEM_FILE $KUBE_URL $KUBE_TOKEN&lt;br&gt;- kubectl create ns $NAMESPACE&lt;br&gt;- kubectl create secret -n $NAMESPACE docker-registry gitlab-registry --docker-server="$CI_REGISTRY" --docker-username="$CI_REGISTRY_USER" --docker-password="$CI_REGISTRY_PASSWORD" --docker-email="$GITLAB_USER_EMAIL"&lt;br&gt;- mkdir .generated&lt;br&gt;- echo "$CI_BUILD_REF_NAME-$CI_BUILD_REF"&lt;br&gt;- sed -e "s/TAG/$CI_BUILD_REF_NAME-$CI_BUILD_REF/g" templates/deals.yaml | tee ".generated/deals.yaml"&lt;br&gt;- kubectl apply --namespace $NAMESPACE -f .generated/deals.yaml&lt;br&gt;- kubectl apply --namespace $NAMESPACE -f templates/my-sock-shop.yaml&lt;br&gt;environment:&lt;br&gt;name: test-for-ci&lt;/pre&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️54-parallelize-test-execution" class="anchor" aria-hidden="true" href="#-️54-parallelize-test-execution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️5.4 Parallelize test execution&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt;    When done right, testing is your 24/7 friend providing almost instant feedback. In practice, executing 500 CPU-bounded unit test on a single thread can take too long. Luckily, modern test runners and CI platforms (like &lt;a href="https://github.com/facebook/jest"&gt;Jest&lt;/a&gt;, &lt;a href="https://github.com/avajs/ava"&gt;AVA&lt;/a&gt; and &lt;a href="https://github.com/yandex/mocha-parallel-tests"&gt;Mocha extensions&lt;/a&gt;) can parallelize the test into multiple processes and achieve significant improvement in feedback time. Some CI vendors do also parallelize tests across containers (!) which shortens the feedback loop even further. Whether locally over multiple processes, or over some cloud CLI using multiple machines — parallelizing demand keeping the tests autonomous as each might run on different processes&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; Getting test results 1 hour long after pushing new code, as you already code the next features, is a great recipe for making testing less relevant&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-mocha-parallel--jest-easily-outrun-the-traditional-mocha-thanks-to-testing-parallelization-credit-javascript-test-runners-benchmark" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-mocha-parallel--jest-easily-outrun-the-traditional-mocha-thanks-to-testing-parallelization-credit-javascript-test-runners-benchmark"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example: Mocha parallel &amp;amp; Jest easily outrun the traditional Mocha thanks to testing parallelization (&lt;a href="https://medium.com/dailyjs/javascript-test-runners-benchmark-3a78d4117b4" rel="nofollow"&gt;Credit: JavaScript Test-Runners Benchmark&lt;/a&gt;)&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/bp-24-yonigoldberg-jest-parallel.png"&gt;&lt;img src="assets/bp-24-yonigoldberg-jest-parallel.png" alt="alt text" title="Mocha parallel &amp;amp; Jest easily outrun the traditional Mocha thanks to testing parallelization (Credit: JavaScript Test-Runners Benchmark)" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️55-stay-away-from-legal-issues-using-license-and-plagiarism-check" class="anchor" aria-hidden="true" href="#-️55-stay-away-from-legal-issues-using-license-and-plagiarism-check"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️5.5 Stay away from legal issues using license and plagiarism check&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt;    Licensing and plagiarism issues are probably not your main concern right now, but why not tick this box as well in 10 minutes? A bunch of npm packages like &lt;a href="https://www.npmjs.com/package/license-checker" rel="nofollow"&gt;license check&lt;/a&gt; and &lt;a href="https://www.npmjs.com/package/plagiarism-checker" rel="nofollow"&gt;plagiarism check&lt;/a&gt; (commercial with free plan) can be easily baked into your CI pipeline and inspect for sorrows like dependencies with restrictive licenses or code that was copy-pasted from Stackoverflow and apparently violates some copyrights&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; Unintentionally, developers might use packages with inappropriate licenses or copy paste commercial code and run into legal issues&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-doing-it-right-example-1" class="anchor" aria-hidden="true" href="#clap-doing-it-right-example-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Doing It Right Example:&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;install license-checker in your CI environment or also locally&lt;/span&gt;
npm install &lt;span class="pl-k"&gt;-&lt;/span&gt;g license&lt;span class="pl-k"&gt;-&lt;/span&gt;checker

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;ask it to scan all licenses and fail with exit code other than 0 if it found unauthorized license. The CI system should catch this failure and stop the build&lt;/span&gt;
license&lt;span class="pl-k"&gt;-&lt;/span&gt;checker &lt;span class="pl-k"&gt;--&lt;/span&gt;summary &lt;span class="pl-k"&gt;--&lt;/span&gt;failOn &lt;span class="pl-c1"&gt;BSD&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/bp-25-nodejs-licsense.png"&gt;&lt;img src="assets/bp-25-nodejs-licsense.png" alt="alt text" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️56-constantly-inspect-for-vulnerable-dependencies" class="anchor" aria-hidden="true" href="#-️56-constantly-inspect-for-vulnerable-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️5.6 Constantly inspect for vulnerable dependencies&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt;    Even the most reputable dependencies such as Express have known vulnerabilities. This can get easily tamed using community tools such as &lt;a href="https://docs.npmjs.com/getting-started/running-a-security-audit" rel="nofollow"&gt;npm audit&lt;/a&gt;, or commercial tools like &lt;a href="https://snyk.io/" rel="nofollow"&gt;snyk&lt;/a&gt; (offer also a free community version). Both can be invoked from your CI on every build&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; Keeping your code clean from vulnerabilities without dedicated tools will require to constantly follow online publications about new threats. Quite tedious&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap-example-npm-audit-result" class="anchor" aria-hidden="true" href="#clap-example-npm-audit-result"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt; Example: NPM Audit result&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/bp-26-npm-audit-snyk.png"&gt;&lt;img src="assets/bp-26-npm-audit-snyk.png" alt="alt text" title="NPM Audit result" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️57-automate-dependency-updates" class="anchor" aria-hidden="true" href="#-️57-automate-dependency-updates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️5.7 Automate dependency updates&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt;   Yarn and npm latest introduction of package-lock.json introduced a serious challenge (the road to hell is paved with good intentions) — by default now, packages are no longer getting updates. Even a team running many fresh deployments with ‘npm install’ &amp;amp; ‘npm update’ won’t get any new updates. This leads to subpar dependent packages versions at best or to vulnerable code at worst. Teams now rely on developers goodwill and memory to manually update the package.json or use tools &lt;a href="https://www.npmjs.com/package/npm-check-updates" rel="nofollow"&gt;like ncu&lt;/a&gt; manually. A more reliable way could be to automate the process of getting the most reliable dependency versions, though there are no silver bullet solutions yet there are two possible automation roads:&lt;/p&gt;
&lt;p&gt;(1) CI can fail builds that have obsolete dependencies — using tools like &lt;a href="https://docs.npmjs.com/cli/outdated" rel="nofollow"&gt;‘npm outdated’&lt;/a&gt; or ‘npm-check-updates (ncu)’ . Doing so will enforce developers to update dependencies.&lt;/p&gt;
&lt;p&gt;(2) Use commercial tools that scan the code and automatically send pull requests with updated dependencies. One interesting question remaining is what should be the dependency update policy — updating on every patch generates too many overhead, updating right when a major is released might point to an unstable version (many packages found vulnerable on the very first days after being released, &lt;a href="https://nodesource.com/blog/a-high-level-post-mortem-of-the-eslint-scope-security-incident/" rel="nofollow"&gt;see the&lt;/a&gt; eslint-scope incident).&lt;/p&gt;
&lt;p&gt;An efficient update policy may allow some ‘vesting period’ — let the code lag behind the @latest for some time and versions before considering the local copy as obsolete (e.g. local version is 1.3.1 and repository version is 1.3.8)
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; Your production will run packages that have been explicitly tagged by their author as risky&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap--example-ncu-can-be-used-manually-or-within-a-ci-pipeline-to-detect-to-which-extent-the-code-lag-behind-the-latest-versions" class="anchor" aria-hidden="true" href="#clap--example-ncu-can-be-used-manually-or-within-a-ci-pipeline-to-detect-to-which-extent-the-code-lag-behind-the-latest-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt;  Example: &lt;a href="https://www.npmjs.com/package/npm-check-updates" rel="nofollow"&gt;ncu&lt;/a&gt; can be used manually or within a CI pipeline to detect to which extent the code lag behind the latest versions&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/bp-27-yoni-goldberg-npm.png"&gt;&lt;img src="assets/bp-27-yoni-goldberg-npm.png" alt="alt text" title="Nncu can be used manually or within a CI pipeline to detect to which extent the code lag behind the latest versions" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️-58-other-non-node-related-ci-tips" class="anchor" aria-hidden="true" href="#-️-58-other-non-node-related-ci-tips"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 5.8 Other, non-Node related, CI tips&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt;    This post is focused on testing advice that is related to, or at least can be exemplified with Node JS. This bullet, however, groups few non-Node related tips that are well-known&lt;/p&gt;
 &lt;ol&gt;&lt;li name="user-content-e3e4" id="user-content-e3e4"&gt;Use a declarative syntax. This is the only option for most vendors but older versions of Jenkins allows using code or UI&lt;/li&gt;&lt;li name="user-content-1fdc" id="user-content-1fdc"&gt;Opt for a vendor that has native Docker support&lt;/li&gt;&lt;li name="user-content-edcd" id="user-content-edcd"&gt;Fail early, run your fastest tests first. Create a ‘Smoke testing’ step/milestone that groups multiple fast inspections (e.g. linting, unit tests) and provide snappy feedback to the code committer&lt;/li&gt;&lt;li name="user-content-0375" id="user-content-0375"&gt;Make it easy to skim-through all build artifacts including test reports, coverage reports, mutation reports, logs, etc&lt;/li&gt;&lt;li name="user-content-df82" id="user-content-df82"&gt;Create multiple pipelines/jobs for each event, reuse steps between them. For example, configure a job for feature branch commits and a different one for master PR. Let each reuse logic using shared steps (most vendors provide some mechanism for code reuse)&lt;/li&gt;&lt;li name="user-content-19b0" id="user-content-19b0"&gt;Never embed secrets in a job declaration, grab them from a secret store or from the job’s configuration&lt;/li&gt;&lt;li name="user-content-b70d" id="user-content-b70d"&gt;Explicitly bump version in a release build or at least ensure the developer did so&lt;/li&gt;&lt;li name="user-content-957c" id="user-content-957c"&gt;Build only once and perform all the inspections over the single build artifact (e.g. Docker image)&lt;/li&gt;&lt;li name="user-content-339b" id="user-content-339b"&gt;Test in an ephemeral environment that doesn’t drift state between builds. Caching node_modules might be the only exception&lt;/li&gt;&lt;/ol&gt;
&lt;br&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; You‘ll miss years of wisdom&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--️-59-build-matrix-run-the-same-ci-steps-using-multiple-node-versions" class="anchor" aria-hidden="true" href="#-️-59-build-matrix-run-the-same-ci-steps-using-multiple-node-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;⚪ ️ 5.9 Build matrix: Run the same CI steps using multiple Node versions&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Do:&lt;/strong&gt; Quality checking is about serendipity, the more ground you cover the luckier you get in detecting issues early. When developing reusable packages or running a multi-customer production with various configuration and Node versions, the CI must run the pipeline of tests over all the permutations of configurations. For example, assuming we use MySQL for some customers and Postgres for others — some CI vendors support a feature called ‘Matrix’ which allow running the suit of testing against all permutations of MySQL, Postgres and multiple Node version like 8, 9 and 10. This is done using configuration only without any additional effort (assuming you have testing or any other quality checks). Other CIs who doesn’t support Matrix might have extensions or tweaks to allow that
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;Otherwise:&lt;/strong&gt; So after doing all that hard work of writing testing are we going to let bugs sneak in only because of configuration issues?&lt;/p&gt;
&lt;br&gt;
&lt;details&gt;&lt;summary&gt;✏ &lt;b&gt;Code Examples&lt;/b&gt;&lt;/summary&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-clap---example-using-travis-ci-vendor-build-definition-to-run-the-same-test-over-multiple-node-versions" class="anchor" aria-hidden="true" href="#clap---example-using-travis-ci-vendor-build-definition-to-run-the-same-test-over-multiple-node-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clap" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png"&gt;👏&lt;/g-emoji&gt;   Example: Using Travis (CI vendor) build definition to run the same test over multiple Node versions&lt;/h3&gt;
&lt;pre name="user-content-f909" id="user-content-f909"&gt;language: node_js&lt;br&gt;node_js:&lt;br&gt;  - "7"&lt;br&gt;  - "6"&lt;br&gt;  - "5"&lt;br&gt;  - "4"&lt;br&gt;install:&lt;br&gt;  - npm install&lt;br&gt;script:&lt;br&gt;  - npm run test&lt;/pre&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-team" class="anchor" aria-hidden="true" href="#team"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Team&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-yoni-goldberg" class="anchor" aria-hidden="true" href="#yoni-goldberg"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Yoni Goldberg&lt;/h2&gt;
&lt;br&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/yoni-goldberg.jpg"&gt;&lt;img width="480px" src="assets/yoni-goldberg.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; Writer&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;About:&lt;/strong&gt; I'm an independent consultant who works with 500 fortune corporates and garage startups on polishing their JS &amp;amp; Node.js applications. More than any other topic I'm fascinated by and aims to master the art of testing. I'm also the author of &lt;a href="https://github.com/goldbergyoni/nodebestpractices"&gt;Node.js Best Practices&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;Workshop:&lt;/strong&gt; &lt;g-emoji class="g-emoji" alias="man_teacher" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f3eb.png"&gt;👨‍🏫&lt;/g-emoji&gt; Want to learn all these practices and techniques at your offices (Europe &amp;amp; USA)? &lt;a href="https://testjavascript.com/" rel="nofollow"&gt;Register here for my testing workshop&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Follow:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/goldbergyoni/" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="bird" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f426.png"&gt;🐦&lt;/g-emoji&gt; Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://testjavascript.com/contact-2/" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="telephone_receiver" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4de.png"&gt;📞&lt;/g-emoji&gt; Contact&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://testjavascript.com/newsletter//" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="email" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2709.png"&gt;✉️&lt;/g-emoji&gt; Newsletter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-bruno-scheufler" class="anchor" aria-hidden="true" href="#bruno-scheufler"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/BrunoScheufler"&gt;Bruno Scheufler&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; Tech reviewer and advisor&lt;/p&gt;
&lt;p&gt;Took care to revise, improve, lint and polish all the texts&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;About:&lt;/strong&gt; full-stack web engineer, Node.js &amp;amp; GraphQL enthusiast&lt;/p&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-ido-richter" class="anchor" aria-hidden="true" href="#ido-richter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/idori"&gt;Ido Richter&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; Concept, design and great advice&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;About:&lt;/strong&gt; A savvy frontend developer, CSS expert and emojis freak&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-kyle-martin" class="anchor" aria-hidden="true" href="#kyle-martin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/js-kyle"&gt;Kyle Martin&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Role:&lt;/strong&gt; Helps keep this project running, and reviews security related practices&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;About:&lt;/strong&gt; Loves working on Node.js projects and web application security.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributors-" class="anchor" aria-hidden="true" href="#contributors-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors &lt;g-emoji class="g-emoji" alias="sparkles" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2728.png"&gt;✨&lt;/g-emoji&gt;&lt;/h2&gt;
&lt;p&gt;Thanks goes to these wonderful people who have contributed to this repository!&lt;/p&gt;



&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;td align="center"&gt;&lt;a href="http://geospatialscott.blogspot.com/" rel="nofollow"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/1326248?v=4" width="100px;" alt="Scott Davis" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Scott Davis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#content-stdavis" title="Content"&gt;&lt;g-emoji class="g-emoji" alias="fountain_pen" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png"&gt;🖋&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/AdrienRedon"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/5978436?v=4" width="100px;" alt="Adrien REDON" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Adrien REDON&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#content-AdrienRedon" title="Content"&gt;&lt;g-emoji class="g-emoji" alias="fountain_pen" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png"&gt;🖋&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://twitter.com/NoriSte" rel="nofollow"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/173663?v=4" width="100px;" alt="Stefano Magni" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Stefano Magni&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#content-NoriSte" title="Content"&gt;&lt;g-emoji class="g-emoji" alias="fountain_pen" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png"&gt;🖋&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://www.joer.im" rel="nofollow"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/47742486?v=4" width="100px;" alt="Yeoh Joer" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yeoh Joer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#content-yjoer" title="Content"&gt;&lt;g-emoji class="g-emoji" alias="fountain_pen" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png"&gt;🖋&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="http://jhonnymoreira.dev" rel="nofollow"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/2177742?v=4" width="100px;" alt="Jhonny Moreira" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jhonny Moreira&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#content-jhonnymoreira" title="Content"&gt;&lt;g-emoji class="g-emoji" alias="fountain_pen" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png"&gt;🖋&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/Germanika"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/8846678?v=4" width="100px;" alt="Ian Germann" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ian Germann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#content-Germanika" title="Content"&gt;&lt;g-emoji class="g-emoji" alias="fountain_pen" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png"&gt;🖋&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/AbdelrahmanHafez"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/19984935?v=4" width="100px;" alt="Hafez" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hafez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#content-AbdelrahmanHafez" title="Content"&gt;&lt;g-emoji class="g-emoji" alias="fountain_pen" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png"&gt;🖋&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align="center"&gt;&lt;a href="http://www.ruxandrafediuc.com" rel="nofollow"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/11021586?v=4" width="100px;" alt="Ruxandra Fediuc" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ruxandra Fediuc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#content-ruxandrafed" title="Content"&gt;&lt;g-emoji class="g-emoji" alias="fountain_pen" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png"&gt;🖋&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/jacklee814"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/9951291?v=4" width="100px;" alt="Jack" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jack&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#content-jacklee814" title="Content"&gt;&lt;g-emoji class="g-emoji" alias="fountain_pen" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png"&gt;🖋&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://www.petercarrero.com" rel="nofollow"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/231727?v=4" width="100px;" alt="Peter Carrero" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Peter Carrero&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#content-aloyr" title="Content"&gt;&lt;g-emoji class="g-emoji" alias="fountain_pen" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png"&gt;🖋&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/huhgawz"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/369338?v=4" width="100px;" alt="Huhgawz" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Huhgawz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#content-huhgawz" title="Content"&gt;&lt;g-emoji class="g-emoji" alias="fountain_pen" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png"&gt;🖋&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/haakonmb"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/7099302?v=4" width="100px;" alt="Haakon Borch" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Haakon Borch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#content-haakonmb" title="Content"&gt;&lt;g-emoji class="g-emoji" alias="fountain_pen" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png"&gt;🖋&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://jaimemendoza.com/" rel="nofollow"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/5395811?v=4" width="100px;" alt="Jaime Mendoza" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jaime Mendoza&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#content-jaimemendozadev" title="Content"&gt;&lt;g-emoji class="g-emoji" alias="fountain_pen" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png"&gt;🖋&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/camerondunford"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/840612?v=4" width="100px;" alt="Cameron Dunford" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Cameron Dunford&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#content-camerondunford" title="Content"&gt;&lt;g-emoji class="g-emoji" alias="fountain_pen" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png"&gt;🖋&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/shadowspawn"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/15719847?v=4" width="100px;" alt="John Gee" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;John Gee&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#content-shadowspawn" title="Content"&gt;&lt;g-emoji class="g-emoji" alias="fountain_pen" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png"&gt;🖋&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/aurelijusrozenas"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/3273544?v=4" width="100px;" alt="Aurelijus Rožėnas" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aurelijus Rožėnas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#content-aurelijusrozenas" title="Content"&gt;&lt;g-emoji class="g-emoji" alias="fountain_pen" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png"&gt;🖋&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="http://aaronshivers.com" rel="nofollow"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/42848750?v=4" width="100px;" alt="Aaron" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aaron&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#content-aaronshivers" title="Content"&gt;&lt;g-emoji class="g-emoji" alias="fountain_pen" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png"&gt;🖋&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://tomdoes.tech/" rel="nofollow"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/8683577?v=4" width="100px;" alt="Tom Nagle" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tom Nagle&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#content-tomanagle" title="Content"&gt;&lt;g-emoji class="g-emoji" alias="fountain_pen" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png"&gt;🖋&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/yvesyao"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/7723729?v=4" width="100px;" alt="Yves yao" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yves yao&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#content-yvesyao" title="Content"&gt;&lt;g-emoji class="g-emoji" alias="fountain_pen" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png"&gt;🖋&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/Userbit"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/34487074?v=4" width="100px;" alt="Userbit" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Userbit&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="#content-Userbit" title="Content"&gt;&lt;g-emoji class="g-emoji" alias="fountain_pen" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f58b.png"&gt;🖋&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;



&lt;/article&gt;&lt;/div&gt;</description><author>goldbergyoni</author><guid isPermaLink="false">https://github.com/goldbergyoni/javascript-testing-best-practices</guid><pubDate>Tue, 24 Dec 2019 00:19:00 GMT</pubDate></item><item><title>hq450/fancyss_history_package #20 in Unknown languages, Today</title><link>https://github.com/hq450/fancyss_history_package</link><description>&lt;p&gt;&lt;i&gt;科学上网插件的离线安装包储存在这里&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-fancyss_history_package" class="anchor" aria-hidden="true" href="#fancyss_history_package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;fancyss_history_package&lt;/h1&gt;
&lt;p&gt;科学上网插件的离线安装包储存在这里&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-机型固件支持" class="anchor" aria-hidden="true" href="#机型固件支持"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;机型/固件支持&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-fancyss_hnd" class="anchor" aria-hidden="true" href="#fancyss_hnd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/hq450/fancyss/tree/master/fancyss_hnd"&gt;fancyss_hnd&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;fancyss_hnd&lt;/strong&gt;离线安装包仅适用于asus/merlin koolshare hnd/axhnd平台机型改版固件（armV8架构，linux内核版本：4.1.27/4.1.51，bcm490X系列cpu）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;fancyss_hnd&lt;/strong&gt;支持机型/固件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://koolshare.cn/thread-127878-1-1.html" rel="nofollow"&gt;ASUS RT-AC86U 梅林改版固件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://koolshare.cn/thread-158199-1-1.html" rel="nofollow"&gt;ASUS RT-AX88U 梅林改版固件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://koolshare.cn/thread-139965-1-1.html" rel="nofollow"&gt;ASUS RT-AC86U 官改固件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://koolshare.cn/thread-130902-1-1.html" rel="nofollow"&gt;ASUS GT-AC5300 官改固件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://koolshare.cn/thread-159465-1-1.html" rel="nofollow"&gt;ASUS GT-AX11000 官改固件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;NetGear RAX80 梅林改版固件&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-注意" class="anchor" aria-hidden="true" href="#注意"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;注意：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;其它arm架构或mipsel架构的merlin固件不能使用fancyss_hnd！&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-fancyss_arm" class="anchor" aria-hidden="true" href="#fancyss_arm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/hq450/fancyss/tree/master/fancyss_arm"&gt;fancyss_arm&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;fancyss_arm&lt;/strong&gt;离线安装包仅适用于merlin koolshare arm架构机型改版固件（arm架构，linux内核版本：2.6.36.4，，bcm470X系列cpu）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;fancyss_arm&lt;/strong&gt;支持机型（需刷梅林koolshare改版固件）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;华硕系列：&lt;code&gt;RT-AC56U&lt;/code&gt; &lt;code&gt;RT-AC68U&lt;/code&gt; &lt;code&gt;RT-AC66U-B1&lt;/code&gt; &lt;code&gt;RT-AC1900P&lt;/code&gt; &lt;code&gt;RT-AC87U&lt;/code&gt; &lt;code&gt;RT-AC88U&lt;/code&gt; &lt;code&gt;RT-AC3100&lt;/code&gt; &lt;code&gt;RT-AC3200&lt;/code&gt; &lt;code&gt;RT-AC5300&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;网件系列：&lt;code&gt;R6300V2&lt;/code&gt; &lt;code&gt;R6400&lt;/code&gt; &lt;code&gt;R6900&lt;/code&gt; &lt;code&gt;R7000&lt;/code&gt; &lt;code&gt;R8000&lt;/code&gt; &lt;code&gt;R8500&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;linksys EA系列：&lt;code&gt;EA6200&lt;/code&gt; &lt;code&gt;EA6400&lt;/code&gt; &lt;code&gt;EA6500v2&lt;/code&gt; &lt;code&gt;EA6700&lt;/code&gt; &lt;code&gt;EA6900&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;华为：&lt;code&gt;ws880&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-注意-1" class="anchor" aria-hidden="true" href="#注意-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;注意：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;fancyss_arm仅支持版本号≥X7.2的固件（订阅功能需要版本号≥X7.7）&lt;/li&gt;
&lt;li&gt;&lt;em&gt;RT-AC86U&lt;/em&gt;和&lt;em&gt;GT-AC5300&lt;/em&gt;两款机器不能使用fancyss_arm！因为这两款机器的是新架构，请使用fancyss_hnd！&lt;/li&gt;
&lt;li&gt;&lt;em&gt;RT-AC66U&lt;/em&gt;和&lt;em&gt;RT-N66U&lt;/em&gt;也不能使用fancyss_arm！因为这两款机器的是mipsel架构，请使用fancyss_mipsel！&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PS: arm机型的固件下载地址: &lt;a href="http://koolshare.cn/forum-96-1.html" rel="nofollow"&gt;http://koolshare.cn/forum-96-1.html&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-fancyss_mipsel" class="anchor" aria-hidden="true" href="#fancyss_mipsel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/hq450/fancyss/tree/master/fancyss_mipsel"&gt;fancyss_mipsel&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;适用于merlin koolshare mipsel架构机型的改版固件，由于mipsel架构老旧且性能较低，此架构机型的科学上网插件已经不再维护，最后的版本是3.0.4，此处作为仓库搬迁后的备份留存。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;fancyss_mipsel&lt;/strong&gt;支持机型（需刷梅林koolshare改版固件）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;华硕系列：&lt;code&gt;RT-N66U&lt;/code&gt; &lt;code&gt;RT-AC66U（非RT-AC66U-B1）&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PS: mipsel机型的固件下载地址: &lt;a href="http://koolshare.cn/forum-96-1.html" rel="nofollow"&gt;http://koolshare.cn/forum-96-1.html&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-fancyss_x64" class="anchor" aria-hidden="true" href="#fancyss_x64"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/hq450/fancyss/tree/master/fancyss_X64"&gt;fancyss_X64&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;适用于koolshare OpenWRT/LEDE X64 带酷软的固件，由于该固件酷软下架了koolss插件，本项目将其收入。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-相关链接" class="anchor" aria-hidden="true" href="#相关链接"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;相关链接：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;koolshare OpenWRT/LEDE X64机型的科学上网离线包：&lt;a href="https://github.com/hq450/fancyss_history_package/tree/master/fancyss_X64"&gt;https://github.com/hq450/fancyss_history_package/tree/master/fancyss_X64&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>hq450</author><guid isPermaLink="false">https://github.com/hq450/fancyss_history_package</guid><pubDate>Tue, 24 Dec 2019 00:20:00 GMT</pubDate></item><item><title>ACL4SSR/ACL4SSR #21 in Unknown languages, Today</title><link>https://github.com/ACL4SSR/ACL4SSR</link><description>&lt;p&gt;&lt;i&gt;SSR 去广告ACL规则/SS完整GFWList规则，Telegram频道订阅地址&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-ssr去广告规则ss完整gfwlist规则" class="anchor" aria-hidden="true" href="#ssr去广告规则ss完整gfwlist规则"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SSR去广告规则/SS完整GFWList规则&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://creativecommons.org/licenses/by-sa/4.0/deed.zh" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/68525ec5f8acf359e826761fa50e9262da143eb5/68747470733a2f2f6c6963656e7365627574746f6e732e6e65742f6c2f62792d73612f342e302f38387833312e706e67" alt="" data-canonical-src="https://licensebuttons.net/l/by-sa/4.0/88x31.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目基于CC-BY-SA-4.0协议发布&lt;/li&gt;
&lt;li&gt;仅推荐未root的安卓手机使用。&lt;/li&gt;
&lt;li&gt;Telegram频道订阅地址：&lt;strong&gt;&lt;a href="https://t.me/ACL4SSR" rel="nofollow"&gt;https://t.me/ACL4SSR&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ACL4SSR/ACL4SSR/wiki/%E5%85%B3%E4%BA%8E%E4%B8%AD%E5%9B%BD%E7%9A%84%E4%BA%92%E8%81%94%E7%BD%91"&gt;关于中国的互联网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-root手机推荐" class="anchor" aria-hidden="true" href="#root手机推荐"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;root手机推荐：&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;1.自带去广告的VIA浏览器 &lt;a href="http://www.coolapk.com/apk/mark.via" rel="nofollow"&gt;http://www.coolapk.com/apk/mark.via&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2.HOSTS 广告快走中国版 &lt;a href="http://www.coolapk.com/apk/mark.via" rel="nofollow"&gt;http://www.coolapk.com/apk/mark.via&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3.HOSTS 广告快走开AdAway &lt;a href="http://www.coolapk.com/apk/org.adaway" rel="nofollow"&gt;http://www.coolapk.com/apk/org.adaway&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/neko-dev/neohosts"&gt;https://github.com/neko-dev/neohosts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Google Hosts 请移步 &lt;a href="https://github.com/googlehosts/hosts"&gt;https://github.com/googlehosts/hosts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-版本解释" class="anchor" aria-hidden="true" href="#版本解释"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;版本解释&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;文件&lt;/th&gt;
&lt;th&gt;默认&lt;/th&gt;
&lt;th&gt;去广告&lt;/th&gt;
&lt;th&gt;局域网&lt;/th&gt;
&lt;th&gt;国内IP段&lt;/th&gt;
&lt;th&gt;国内域名&lt;/th&gt;
&lt;th&gt;国外&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;banAD.acl&lt;/td&gt;
&lt;td&gt;代理&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;直连&lt;/td&gt;
&lt;td&gt;有-直连&lt;/td&gt;
&lt;td&gt;常用域名-直连&lt;/td&gt;
&lt;td&gt;代理-常用国外域名增强&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onlybanAD.acl&lt;/td&gt;
&lt;td&gt;代理&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;直连&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;代理-常用国外域名增强&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nobanAD.acl&lt;/td&gt;
&lt;td&gt;代理&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;直连&lt;/td&gt;
&lt;td&gt;有-直连&lt;/td&gt;
&lt;td&gt;常用域名-直连&lt;/td&gt;
&lt;td&gt;全局代理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;backcn-banAD.acl&lt;/td&gt;
&lt;td&gt;直连&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;直连&lt;/td&gt;
&lt;td&gt;有-代理&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;直连&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gfwlist-banAD.acl&lt;/td&gt;
&lt;td&gt;直连&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;直连&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;代理-gfwlist列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fullgfwlist.acl&lt;/td&gt;
&lt;td&gt;直连&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;直连&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;代理-gfwlist列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gfwlist-user.rule&lt;/td&gt;
&lt;td&gt;直连&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;直连&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;代理-gfwlist列表&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-安卓-ssr-去广告acl规则" class="anchor" aria-hidden="true" href="#安卓-ssr-去广告acl规则"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;安卓 SSR 去广告ACL规则&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;屏蔽小米手机和魅族flyme rom系统广告&lt;/li&gt;
&lt;li&gt;国内网站均直接连接&lt;/li&gt;
&lt;li&gt;屏蔽常用视频网站广告&lt;/li&gt;
&lt;li&gt;屏蔽常用网站广告、其他流媒体网站广告&lt;/li&gt;
&lt;li&gt;屏蔽部分应用程序开屏广告&lt;/li&gt;
&lt;li&gt;屏蔽部分运营商劫持网页弹出的漂浮球广告、流量统计&lt;/li&gt;
&lt;li&gt;拦截常用应用程序的隐私跟踪、行为分析、数据统计&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-️-ssssr-acl-files-download" class="anchor" aria-hidden="true" href="#️-ssssr-acl-files-download"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="recycle" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/267b.png"&gt;♻️&lt;/g-emoji&gt; SS/SSR ACL Files Download：&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ACL更新地址（&lt;strong&gt;白名单&lt;/strong&gt;）：&lt;a href="https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/banAD.acl" rel="nofollow"&gt;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/banAD.acl&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ACL更新地址（&lt;strong&gt;黑名单&lt;/strong&gt;）：&lt;a href="https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/gfwlist-banAD.acl" rel="nofollow"&gt;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/gfwlist-banAD.acl&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ACL更新地址（&lt;strong&gt;全局&lt;/strong&gt;）：&lt;a href="https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/onlybanAD.acl" rel="nofollow"&gt;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/onlybanAD.acl&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ACL更新地址（&lt;strong&gt;仅GFWList&lt;/strong&gt;）：&lt;a href="https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/fullgfwlist.acl" rel="nofollow"&gt;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/fullgfwlist.acl&lt;/a&gt; （原版SS&lt;strong&gt;能且仅能&lt;/strong&gt;使用此规则）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ACL更新地址（&lt;strong&gt;国内代理&lt;/strong&gt;）：&lt;a href="https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/backcn-banAD.acl" rel="nofollow"&gt;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/backcn-banAD.acl&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ACL更新地址（&lt;strong&gt;白名单，无去广告&lt;/strong&gt;）：&lt;a href="https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/nobanAD.acl" rel="nofollow"&gt;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/nobanAD.acl&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SSR C# GFWList user.rule ：&lt;a href="https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/gfwlist-user.rule" rel="nofollow"&gt;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/gfwlist-user.rule&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SS：&lt;a href="https://github.com/shadowsocks"&gt;https://github.com/shadowsocks&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SSR-WIN：&lt;a href="https://github.com/shadowsocksr/shadowsocksr-csharp/releases"&gt;https://github.com/shadowsocksr/shadowsocksr-csharp/releases&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SSR-安卓：&lt;a href="https://github.com/shadowsocksr/shadowsocksr-android/releases"&gt;https://github.com/shadowsocksr/shadowsocksr-android/releases&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-️-surgeshadowrocket-config-file-download" class="anchor" aria-hidden="true" href="#️-surgeshadowrocket-config-file-download"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="recycle" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/267b.png"&gt;♻️&lt;/g-emoji&gt; Surge/Shadowrocket Config File Download：&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;请到相关项目页面根据说明配置 &lt;a href="https://github.com/lhie1/Surge"&gt;https://github.com/lhie1/Surge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="clipboard" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cb.png"&gt;📋&lt;/g-emoji&gt; 教程 / 说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;打开SSR-&amp;gt;路由-&amp;gt;自定义acl文件-&amp;gt;输入下载地址-&amp;gt;更新&lt;/li&gt;
&lt;li&gt;再次更新，点击软件页面底部的更新即可&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-注" class="anchor" aria-hidden="true" href="#注"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;注：&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;参照lhie1大神的surge规则改编，致谢!! &lt;a href="https://github.com/lhie1/Surge"&gt;https://github.com/lhie1/Surge&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参照scomper大神的surge规则改编，致谢!!&lt;a href="https://gist.github.com/scomper/915b04a974f9e11952babfd0bbb241a8/revisions"&gt;https://gist.github.com/scomper/915b04a974f9e11952babfd0bbb241a8/revisions&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;浏览器内部广告太多了，单凭几百条规则可能过滤不过来。少许遗漏，请谅解&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有问题请发issue,说明状况和所用规则。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;temp文件夹为历史存档 要找以前的版本可以下那个&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://creativecommons.org/licenses/by-sa/4.0/deed.zh" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/68525ec5f8acf359e826761fa50e9262da143eb5/68747470733a2f2f6c6963656e7365627574746f6e732e6e65742f6c2f62792d73612f342e302f38387833312e706e67" alt="" data-canonical-src="https://licensebuttons.net/l/by-sa/4.0/88x31.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CC-BY-SA-4.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ACL4SSR</author><guid isPermaLink="false">https://github.com/ACL4SSR/ACL4SSR</guid><pubDate>Tue, 24 Dec 2019 00:21:00 GMT</pubDate></item><item><title>ngosang/trackerslist #22 in Unknown languages, Today</title><link>https://github.com/ngosang/trackerslist</link><description>&lt;p&gt;&lt;i&gt;Updated list of public BitTorrent trackers&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-ngosangtrackerslist" class="anchor" aria-hidden="true" href="#ngosangtrackerslist"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngosang/trackerslist&lt;/h1&gt;
&lt;p&gt;Updated list of public BitTorrent trackers&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-updated-2019-12-24" class="anchor" aria-hidden="true" href="#updated-2019-12-24"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Updated: 2019-12-24&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;These lists are automatically updated every day:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;trackers_best (20 trackers) =&amp;gt; &lt;a href="https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_best.txt" rel="nofollow"&gt;https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_best.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;trackers_all (84 trackers) =&amp;gt; &lt;a href="https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all.txt" rel="nofollow"&gt;https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;trackers_all_udp (50 trackers) =&amp;gt; &lt;a href="https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all_udp.txt" rel="nofollow"&gt;https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all_udp.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;trackers_all_http (28 trackers) =&amp;gt; &lt;a href="https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all_http.txt" rel="nofollow"&gt;https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all_http.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;trackers_all_https (6 trackers) =&amp;gt; &lt;a href="https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all_https.txt" rel="nofollow"&gt;https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all_https.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;trackers_all_ws (3 trackers) =&amp;gt; &lt;a href="https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all_ws.txt" rel="nofollow"&gt;https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all_ws.txt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Are you having DNS problems? These lists contains the same trackers but with IP addresses instead of domains:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;trackers_best_ip (20 trackers) =&amp;gt; &lt;a href="https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_best_ip.txt" rel="nofollow"&gt;https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_best_ip.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;trackers_all_ip (76 trackers) =&amp;gt; &lt;a href="https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all_ip.txt" rel="nofollow"&gt;https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all_ip.txt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notes&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;A bot automatically checks the trackers and updates the lists.&lt;/li&gt;
&lt;li&gt;Trackers with the same domain or pointing to the same IP address are removed. Check out the &lt;a href="https://raw.githubusercontent.com/ngosang/trackerslist/master/blacklist.txt" rel="nofollow"&gt;blacklist&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Trackers are sorted by popularity and latency (from best to worst).&lt;/li&gt;
&lt;li&gt;WebSocket trackers (AKA WebTorrent, ws, wss) are supported by few clients. &lt;a href="https://webtorrent.io" rel="nofollow"&gt;More info&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Lists with IP addresses can be shorter because &lt;a href="https://www.cloudflare.com/ips/" rel="nofollow"&gt;Cloudflare IPs&lt;/a&gt; are removed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-contribute" class="anchor" aria-hidden="true" href="#contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Do you know more public trackers? =&amp;gt; &lt;a href="https://github.com/ngosang/trackerslist/issues/new"&gt;Open a new issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Any of the trackers not working properly? =&amp;gt; &lt;a href="https://github.com/ngosang/trackerslist/issues/new"&gt;Open a new issue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h5&gt;
&lt;p&gt;ngosang [@] hotmail [.es]&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-donations" class="anchor" aria-hidden="true" href="#donations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donations&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://beerpay.io/ngosang/trackerslist" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dc2483fdefc75f3e3ab1b18e24d78208915c6e14/68747470733a2f2f626565727061792e696f2f6e676f73616e672f747261636b6572736c6973742f62616467652e7376673f7374796c653d666c6174" alt="Beerpay" data-canonical-src="https://beerpay.io/ngosang/trackerslist/badge.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;BTC: &lt;a href="https://btc.com/1JMkeuLX9DA8sssZLSeSvSRvS1iVCu2wNT" rel="nofollow"&gt;1JMkeuLX9DA8sssZLSeSvSRvS1iVCu2wNT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ETH: &lt;a href="https://etherscan.io/address/0x50A79a95878dd588A55E909dAc2eA3962D2fA46c" rel="nofollow"&gt;0x50A79a95878dd588A55E909dAc2eA3962D2fA46c&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-third-party-tools" class="anchor" aria-hidden="true" href="#third-party-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Third-party tools&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/GerryFerdinandus/bittorrent-tracker-editor"&gt;bittorrent-tracker-editor&lt;/a&gt; to add these trackers to your .torrent files&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/blind-oracle/transmission-trackers"&gt;transmission python script&lt;/a&gt; to add these trackers to &lt;a href="https://github.com/transmission/transmission"&gt;transmission&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AndrewMarchukov/tracker-add"&gt;transmission bash script 1&lt;/a&gt; to add these trackers to &lt;a href="https://github.com/transmission/transmission"&gt;transmission&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oilervoss/transmission"&gt;transmission bash script 2&lt;/a&gt; to add these trackers to &lt;a href="https://github.com/transmission/transmission"&gt;transmission&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rocket049/aria2-trackers"&gt;aria2 go script&lt;/a&gt; to add these trackers to &lt;a href="https://github.com/aria2/aria2"&gt;aria2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-third-party-online-tools" class="anchor" aria-hidden="true" href="#third-party-online-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Third-party online tools&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://torrenteditor.com" rel="nofollow"&gt;torrenteditor&lt;/a&gt; to add these trackers to your .torrent files&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ngosang</author><guid isPermaLink="false">https://github.com/ngosang/trackerslist</guid><pubDate>Tue, 24 Dec 2019 00:22:00 GMT</pubDate></item><item><title>dgryski/go-perfbook #23 in Unknown languages, Today</title><link>https://github.com/dgryski/go-perfbook</link><description>&lt;p&gt;&lt;i&gt;Thoughts on Go performance optimization&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-go-perfbook" class="anchor" aria-hidden="true" href="#go-perfbook"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;go-perfbook&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/dgryski" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/031fc5a134cdca5ae3460822aba371e63f794233/68747470733a2f2f7777772e6275796d6561636f666665652e636f6d2f6173736574732f696d672f637573746f6d5f696d616765732f6f72616e67655f696d672e706e67" alt="Buy Me A Coffee" data-canonical-src="https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This document outlines best practices for writing high-performance Go code.&lt;/p&gt;
&lt;p&gt;The first sections cover writing optimized code in any language.
The later sections cover Go-specific techniques.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-multiple-language-versions" class="anchor" aria-hidden="true" href="#multiple-language-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiple Language Versions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="performance.md"&gt;English&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="performance-zh.md"&gt;中文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="README-es.md"&gt;Español&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="performance.md#writing-and-optimizing-go-code"&gt;Writing and Optimizing Go code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="performance.md#how-to-optimize"&gt;How to Optimize&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="performance.md#optimization-workflow"&gt;Optimization Workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="performance.md#concrete-optimization-tips"&gt;Concrete Optimization Tips&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="performance.md#data-changes"&gt;Data Changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="performance.md#algorithmic-changes"&gt;Algorithmic Changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="performance.md#benchmark-inputs"&gt;Benchmark Inputs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="performance.md#program-tuning"&gt;Program Tuning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="performance.md#optimization-workflow-summary"&gt;Optimization Workflow Summary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="performance.md#garbage-collection"&gt;Garbage Collection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="performance.md#runtime-and-compiler"&gt;Runtime and Compiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="performance.md#unsafe"&gt;Unsafe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="performance.md#common-gotchas-with-the-standard-library"&gt;Common gotchas with the standard library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="performance.md#alternate-implementations"&gt;Alternate Implementations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="performance.md#cgo"&gt;CGO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="performance.md#advanced-techniques"&gt;Advanced Techniques&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="performance.md#assembly"&gt;Assembly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="performance.md#optimizing-an-entire-service"&gt;Optimizing an Entire Service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="performance.md#tooling"&gt;Tooling&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="performance.md#introductory-profiling"&gt;Profiling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="performance.md#tracer"&gt;Tracer&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Appendix
&lt;ol&gt;
&lt;li&gt;&lt;a href="performance.md#appendix-implementing-research-papers"&gt;Implementing Research Papers&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h3&gt;
&lt;p&gt;This is a work-in-progress book in Go performance.&lt;/p&gt;
&lt;p&gt;There are different ways to contribute:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;add to or summarizes the resources in TODO&lt;/li&gt;
&lt;li&gt;add bullet points or new topics to be covered&lt;/li&gt;
&lt;li&gt;write prose and flesh  out the sections in the book&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Eventually sample programs to optimize and exercises will be needed (maybe).&lt;/p&gt;
&lt;p&gt;Coordination will be done in the #performance channel on the Gophers slack.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dgryski</author><guid isPermaLink="false">https://github.com/dgryski/go-perfbook</guid><pubDate>Tue, 24 Dec 2019 00:23:00 GMT</pubDate></item><item><title>EdOverflow/bugbounty-cheatsheet #24 in Unknown languages, Today</title><link>https://github.com/EdOverflow/bugbounty-cheatsheet</link><description>&lt;p&gt;&lt;i&gt;A list of interesting payloads, tips and tricks for bug bounty hunters.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-bug-bounty-cheat-sheet" class="anchor" aria-hidden="true" href="#bug-bounty-cheat-sheet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bug Bounty Cheat Sheet&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;g-emoji class="g-emoji" alias="books" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png"&gt;📚&lt;/g-emoji&gt; Reference&lt;/th&gt;
&lt;th&gt;&lt;g-emoji class="g-emoji" alias="mag_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f50e.png"&gt;🔎&lt;/g-emoji&gt; Vulnerabilities&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="cheatsheets/bugbountyplatforms.md"&gt;Bug Bounty Platforms&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="cheatsheets/xss.md"&gt;XSS&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="cheatsheets/books.md"&gt;Books&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="cheatsheets/sqli.md"&gt;SQLi&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="cheatsheets/special-tools.md"&gt;Special Tools&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="cheatsheets/ssrf.md"&gt;SSRF&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="cheatsheets/recon.md"&gt;Recon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="cheatsheets/crlf.md"&gt;CRLF Injection&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="cheatsheets/practice-platforms.md"&gt;Practice Platforms&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="cheatsheets/csv-injection.md"&gt;CSV Injection&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="cheatsheets/bugbountytips.md"&gt;Bug Bounty Tips&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="cheatsheets/lfi.md"&gt;LFI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="cheatsheets/xxe.md"&gt;XXE&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="cheatsheets/rce.md"&gt;RCE&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="cheatsheets/open-redirect.md"&gt;Open Redirect&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="cheatsheets/crypto.md"&gt;Crypto&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="cheatsheets/template-injection.md"&gt;Template Injection&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="cheatsheets/content-injection.md"&gt;Content Injection&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="cheatsheets/xslt.md"&gt;XSLT Injection&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;We welcome contributions from the public.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-the-issue-tracker-" class="anchor" aria-hidden="true" href="#using-the-issue-tracker-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the issue tracker &lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;p&gt;The issue tracker is the preferred channel for bug reports and features requests. &lt;a href="https://github.com/EdOverflow/bugbounty-cheatsheet/issues"&gt;&lt;img src="https://camo.githubusercontent.com/95994a4db367817451611fa0f96ef04cd8613b88/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f45644f766572666c6f772f627567626f756e74792d636865617473686565742e7376673f7374796c653d666c61742d737175617265" alt="GitHub issues" data-canonical-src="https://img.shields.io/github/issues/EdOverflow/bugbounty-cheatsheet.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-issues-and-labels-" class="anchor" aria-hidden="true" href="#issues-and-labels-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues and labels &lt;g-emoji class="g-emoji" alias="label" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3f7.png"&gt;🏷&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;p&gt;Our bug tracker utilizes several labels to help organize and identify issues.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-guidelines-for-bug-reports-" class="anchor" aria-hidden="true" href="#guidelines-for-bug-reports-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Guidelines for bug reports &lt;g-emoji class="g-emoji" alias="bug" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f41b.png"&gt;🐛&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;p&gt;Use the GitHub issue search — check if the issue has already been reported.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-style-guide" class="anchor" aria-hidden="true" href="#style-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Style Guide&lt;/h1&gt;
&lt;p&gt;We like to keep our Markdown files as uniform as possible. So if you submit a PR, make sure to follow this style guide (we will not be angry if you do not).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cheat sheet titles should start with &lt;code&gt;##&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Subheadings should be made bold. (&lt;code&gt;**Subheading**&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Add newlines after subheadings and code blocks.&lt;/li&gt;
&lt;li&gt;Code blocks should use three backticks. (```)&lt;/li&gt;
&lt;li&gt;Make sure to use syntax highlighting whenever possible.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/EdOverflow"&gt;EdOverflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GerbenJavado"&gt;GerbenJavado&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BlueTower"&gt;jon_bottarini&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sp1d3r"&gt;sp1d3r&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yasinS"&gt;yasinS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/neutrinoguy"&gt;neutrinoguy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kuromatae"&gt;kuromatae&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EdOverflow/bugbounty-cheatsheet/graphs/contributors"&gt;And many more ...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>EdOverflow</author><guid isPermaLink="false">https://github.com/EdOverflow/bugbounty-cheatsheet</guid><pubDate>Tue, 24 Dec 2019 00:24:00 GMT</pubDate></item><item><title>danistefanovic/build-your-own-x #25 in Unknown languages, Today</title><link>https://github.com/danistefanovic/build-your-own-x</link><description>&lt;p&gt;&lt;i&gt;🤓 Build your own (insert technology here)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;strong&gt;[&lt;a href="https://github.com/danistefanovic/build-your-own-x/issues/new"&gt;Submit tutorial&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="feynman.png"&gt;&lt;img src="feynman.png" alt="Build your own X" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#build-your-own-3d-renderer"&gt;3D Renderer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-augmented-reality"&gt;Augmented Reality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-bittorrent-client"&gt;BitTorrent Client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-blockchain--cryptocurrency"&gt;Blockchain / Cryptocurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-bot"&gt;Bot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-command-line-tool"&gt;Command-Line Tool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-database"&gt;Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-docker"&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-emulator--virtual-machine"&gt;Emulator / Virtual Machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-front-end-framework--library"&gt;Front-end Framework / Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-game"&gt;Game&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-git"&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-network-stack"&gt;Network Stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-neural-network"&gt;Neural Network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-operating-system"&gt;Operating System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-physics-engine"&gt;Physics Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-programming-language"&gt;Programming Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-regex-engine"&gt;Regex Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-search-engine"&gt;Search Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-shell"&gt;Shell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-template-engine"&gt;Template Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-text-editor"&gt;Text Editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-visual-recognition-system"&gt;Visual Recognition System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-voxel-engine"&gt;Voxel Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-web-search-engine"&gt;Web Search Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own-web-server"&gt;Web Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uncategorized"&gt;Uncategorized&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-tutorials" class="anchor" aria-hidden="true" href="#tutorials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tutorials&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-3d-renderer" class="anchor" aria-hidden="true" href="#build-your-own-3d-renderer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;3D Renderer&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.scratchapixel.com/lessons/3d-basic-rendering/introduction-to-ray-tracing/how-does-it-work" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Introduction to Ray Tracing: a Simple Method for Creating 3D Images&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ssloy/tinyrenderer/wiki"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;How OpenGL works: software rendering in 500 lines of code&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://lodev.org/cgtutor/raycasting.html" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Raycasting engine of Wolfenstein 3D&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pbr-book.org/" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Physically Based Rendering:From Theory To Implementation&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.scratchapixel.com/lessons/3d-basic-rendering/rasterization-practical-implementation/overview-rasterization-algorithm" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Rasterization: a Practical Implementation&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.davrous.com/2013/06/13/tutorial-series-learning-how-to-write-a-3d-soft-engine-from-scratch-in-c-typescript-or-javascript/" rel="nofollow"&gt;&lt;strong&gt;C# / TypeScript / JavaScript&lt;/strong&gt;: &lt;em&gt;Learning how to write a 3D soft engine from scratch in C#, TypeScript or JavaScript&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://avik-das.github.io/build-your-own-raytracer/" rel="nofollow"&gt;&lt;strong&gt;Java / JavaScript&lt;/strong&gt;: &lt;em&gt;Build your own 3D renderer&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.rogach.org/2015/08/how-to-create-your-own-simple-3d-render.html" rel="nofollow"&gt;&lt;strong&gt;Java&lt;/strong&gt;: &lt;em&gt;How to create your own simple 3D render engine in pure Java&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gabrielgambetta.com/computer-graphics-from-scratch/introduction.html" rel="nofollow"&gt;&lt;strong&gt;JavaScript / Pseudocode&lt;/strong&gt;: &lt;em&gt;Computer Graphics from scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/a-3d-modeller.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;A 3D Modeller&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-augmented-reality" class="anchor" aria-hidden="true" href="#build-your-own-augmented-reality"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Augmented Reality&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uXNjNcqW4kY" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;How To: Augmented Reality App Tutorial for Beginners with Vuforia and Unity 3D&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLKIKuXdn4ZMjuUAtdQfK1vwTZPQn_rgSv" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;How To Unity ARCore&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLPCqNOwwN794Gz5fzUSi1p4OqLU0HTmvn" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;AR Portal Tutorial with Unity&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fr-film.net/v-how-to-create-a-dragon-in-augmented-reality-in-unity-arcore-tutorial-qTSDPkPyPqs.html" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;How to create a Dragon in Augmented Reality in Unity ARCore&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Z5AmqMuNi08" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;How to Augmented Reality AR Tutorial: ARKit Portal to the Upside Down&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitesofcode.wordpress.com/2017/09/12/augmented-reality-with-python-and-opencv-part-1/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Augmented Reality with Python and OpenCV&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-bittorrent-client" class="anchor" aria-hidden="true" href="#build-your-own-bittorrent-client"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;BitTorrent Client&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.seanjoflynn.com/research/bittorrent.html" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;Building a BitTorrent client from scratch in C#&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xmonader.github.io/nimdays/day02_bencode.html" rel="nofollow"&gt;&lt;strong&gt;Nim&lt;/strong&gt;: &lt;em&gt;Writing a Bencode Parser&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://allenkim67.github.io/programming/2016/05/04/how-to-make-your-own-bittorrent-client.html" rel="nofollow"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;Write your own bittorrent client&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://markuseliasson.se/article/bittorrent-in-python/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;A BitTorrent client in Python 3.5&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-blockchain--cryptocurrency" class="anchor" aria-hidden="true" href="#build-your-own-blockchain--cryptocurrency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Blockchain / Cryptocurrency&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://beta.observablehq.com/@galletti94/functional-blockchain" rel="nofollow"&gt;&lt;strong&gt;ATS&lt;/strong&gt;: &lt;em&gt;Functional Blockchain&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://programmingblockchain.gitbooks.io/programmingblockchain/" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;Programming The Blockchain in C#&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@bradford_hamilton/write-your-own-blockchain-and-pow-algorithm-using-crystal-d53d5d9d0c52" rel="nofollow"&gt;&lt;strong&gt;Crystal&lt;/strong&gt;: &lt;em&gt;Write your own blockchain and PoW algorithm using Crystal&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jeiwan.cc/posts/building-blockchain-in-go-part-1/" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Building Blockchain in Go&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@mycoralhealth/code-your-own-blockchain-in-less-than-200-lines-of-go-e296282bcffc" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Code your own blockchain in less than 200 lines of Go&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codementor.io/codehakase/building-a-simple-blockchain-with-go-k7crur06v" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Building A Simple Blockchain with Go&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/programmers-blockchain/create-simple-blockchain-java-tutorial-from-scratch-6eeed3cb03fa" rel="nofollow"&gt;&lt;strong&gt;Java&lt;/strong&gt;: &lt;em&gt;Creating Your First Blockchain with Java&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/conradoqg/naivecoin"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;A cryptocurrency implementation in less than 1500 lines of code&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nambrot/blockchain-in-js"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build your own Blockchain in JavaScript&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/digital-alchemy-holdings/learn-build-a-javascript-blockchain-part-1-ca61c285821e" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Learn &amp;amp; Build a JavaScript Blockchain&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SavjeeTutorials/SavjeeCoin"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Creating a blockchain with JavaScript&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackernoon.com/how-to-launch-your-own-production-ready-cryptocurrency-ab97cb773371" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;How To Launch Your Own Production-Ready Cryptocurrency&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jsmonday.dev/articles/34/writing-a-blockchain-in-node-js" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Writing a Blockchain in Node.js&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@vasilyf/lets-implement-a-cryptocurrency-in-kotlin-part-1-blockchain-8704069f8580" rel="nofollow"&gt;&lt;strong&gt;Kotlin&lt;/strong&gt;: &lt;em&gt;Let’s implement a cryptocurrency in Kotlin&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackernoon.com/learn-blockchains-by-building-one-117428612f46" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Learn Blockchains by Building One&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ecomunsing.com/build-your-own-blockchain" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Build your own blockchain: a Python tutorial&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://adilmoujahid.com/posts/2018/03/intro-blockchain-bitcoin-python/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;A Practical Introduction to Blockchain with Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/crypto-currently/lets-build-the-tiniest-blockchain-e70965a248b" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Let’s Build the Tiniest Blockchain&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yukimotopress/programming-blockchains-step-by-step"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;Programming Blockchains Step-by-Step (Manuscripts Book Edition)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.freecodecamp.org/how-to-build-a-simple-actor-based-blockchain-aac1e996c177" rel="nofollow"&gt;&lt;strong&gt;Scala&lt;/strong&gt;: &lt;em&gt;How to build a simple actor-based blockchain&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lhartikk.github.io/" rel="nofollow"&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;: &lt;em&gt;Naivecoin: a tutorial for building a cryptocurrency&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://naivecoinstake.learn.uno/" rel="nofollow"&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;: &lt;em&gt;NaivecoinStake: a tutorial for building a cryptocurrency with the Proof of Stake consensus&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-bot" class="anchor" aria-hidden="true" href="#build-your-own-bot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Bot&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.haskell.org/Roll_your_own_IRC_bot" rel="nofollow"&gt;&lt;strong&gt;Haskell&lt;/strong&gt;: &lt;em&gt;Roll your own IRC bot&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@SeloSlav/how-to-make-a-scary-russian-twitter-bot-with-java-b7b62768a3ac" rel="nofollow"&gt;&lt;strong&gt;Java&lt;/strong&gt;: &lt;em&gt;How To Make a Scary Russian Twitter Bot With Java&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tutorials.botsfloor.com/creating-a-simple-facebook-messenger-ai-bot-with-api-ai-in-node-js-50ae2fa5c80d" rel="nofollow"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;Creating a Simple Facebook Messenger AI Bot with API.ai in Node.js&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sohamkamani.com/blog/2016/09/21/making-a-telegram-bot/" rel="nofollow"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;How to make a responsive telegram bot&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discordjs.guide/" rel="nofollow"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;Create a Discord bot&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.scottlogic.com/2017/05/22/gifbot-github-integration.html" rel="nofollow"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;gifbot - Building a GitHub App&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.smashingmagazine.com/2017/08/ai-chatbot-web-speech-api-node-js/" rel="nofollow"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;Building A Simple AI Chatbot With Web Speech API And Node.js&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apps.worldwritable.com/tutorials/chatbot/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Chatbot Fundamentals: An interactive guide to writing bots in Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fullstackpython.com/blog/build-first-slack-bot-python.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;How to Build Your First Slack Bot with Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/freehunch/how-to-build-a-slack-bot-with-python-using-slack-events-api-django-under-20-minute-code-included-269c3a9bf64e" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;How to build a Slack Bot with Python using Slack Events API &amp;amp; Django under 20 minute&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pythonforengineers.com/build-a-reddit-bot-part-1/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Build a Reddit Bot&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=krTUf7BpTc0" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;How To Make A Reddit Bot&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://khashtamov.com/en/how-to-create-a-telegram-bot-using-python/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;How To Create a Telegram Bot Using Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.freecodecamp.org/creating-a-twitter-bot-in-python-with-tweepy-ac524157a607" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Create a Twitter Bot in Python Using Tweepy&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLIFBTFgFpoJ9vmYYlfxRFV6U_XhG-4fpP" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Creating Reddit Bot with Python &amp;amp; PRAW&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://towardsdatascience.com/build-a-cryptocurrency-trading-bot-with-r-1445c429e1b1" rel="nofollow"&gt;&lt;strong&gt;R&lt;/strong&gt;: &lt;em&gt;Build A Cryptocurrency Trading Bot with R&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://habr.com/en/post/436254/" rel="nofollow"&gt;&lt;strong&gt;Rust&lt;/strong&gt;: &lt;em&gt;A bot for Starcraft in Rust, C or any other language&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-command-line-tool" class="anchor" aria-hidden="true" href="#build-your-own-command-line-tool"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Command-Line Tool&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learnto.computer/screencasts/bsd-cat" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Rewriting the cat command from scratch&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flaviocopes.com/go-git-contributions/" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Visualize your local git contributions with Go&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flaviocopes.com/go-tutorial-lolcat/" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Build a command line app with Go: lolcat&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flaviocopes.com/go-tutorial-cowsay/" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Building a cli command with Go: cowsay&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flaviocopes.com/go-tutorial-fortune/" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Go CLI tutorial: fortune clone&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xmonader.github.io/nimdays/day06_nistow.html" rel="nofollow"&gt;&lt;strong&gt;Nim&lt;/strong&gt;: &lt;em&gt;Writing a stow alternative to manage dotfiles&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-database" class="anchor" aria-hidden="true" href="#build-your-own-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Database&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cstack.github.io/db_tutorial/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Let's Build a Simple Database&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://codecapsule.com/2012/11/07/ikvs-implementing-a-key-value-store-table-of-contents/" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Implementing a Key-Value Store&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codeproject.com/Articles/1029838/Build-Your-Own-Database" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;Build Your Own Database&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/an-archaeology-inspired-database.html" rel="nofollow"&gt;&lt;strong&gt;Clojure&lt;/strong&gt;: &lt;em&gt;An Archaeology-Inspired Database&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@marceloboeira/why-you-should-build-your-own-nosql-database-9bbba42039f5" rel="nofollow"&gt;&lt;strong&gt;Crystal&lt;/strong&gt;: &lt;em&gt;Why you should build your own NoSQL Database&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/dagoba-an-in-memory-graph-database.html" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Dagoba: an in-memory graph database&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/dbdb-dog-bed-database.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;DBDB: Dog Bed Database&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://charlesleifer.com/blog/building-a-simple-redis-server-with-python/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Write your own miniature Redis with Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-docker" class="anchor" aria-hidden="true" href="#build-your-own-docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Docker&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.lizzie.io/linux-containers-in-500-loc.html" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Linux containers in 500 lines of code&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.infoq.com/articles/build-a-container-golang" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Build Your Own Container Using Less than 100 Lines of Go&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Utf-A4rODH8" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Building a container from scratch in Go&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Fewbytes/rubber-docker"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;A workshop on Linux containers: Rebuild Docker from Scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tonybaloney/mocker"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;A proof-of-concept imitation of Docker, written in 100% Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/p8952/bocker"&gt;&lt;strong&gt;Shell&lt;/strong&gt;: &lt;em&gt;Docker implemented in around 100 lines of bash&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-emulator--virtual-machine" class="anchor" aria-hidden="true" href="#build-your-own-emulator--virtual-machine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Emulator / Virtual Machine&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.felixangell.com/virtual-machine-in-c/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Virtual machine in C&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://justinmeiners.github.io/lc3-vm/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Write your Own Virtual Machine&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cturt.github.io/cinoop.html" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Writing a Game Boy emulator, Cinoop&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.multigesture.net/articles/how-to-write-an-emulator-chip-8-interpreter/" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;How to write an emulator (CHIP-8 interpreter)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.codeslinger.co.uk/pages/projects/chip8.html" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Emulation tutorial (CHIP-8 interpreter)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.codeslinger.co.uk/pages/projects/gameboy.html" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Emulation tutorial (GameBoy emulator)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.codeslinger.co.uk/pages/projects/mastersystem/memory.html" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Emulation tutorial (Master System emulator)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stevelosh.com/blog/2016/12/chip8-cpu/" rel="nofollow"&gt;&lt;strong&gt;Common Lisp&lt;/strong&gt;: &lt;em&gt;CHIP-8 in Common Lisp&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://imrannazar.com/GameBoy-Emulation-in-JavaScript" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;GameBoy Emulation in JavaScript&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://omokute.blogspot.com.br/2012/06/emulation-basics-write-your-own-chip-8.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Emulation Basics: Write your own Chip 8 Emulator/Interpreter&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-front-end-framework--library" class="anchor" aria-hidden="true" href="#build-your-own-front-end-framework--library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Front-end Framework / Library&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jasonformat.com/wtf-is-jsx/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;WTF is JSX (Let's Build a JSX Renderer)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hexacta/didact"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;A DIY guide to build your own React&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vimeo.com/album/3930691" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Reverse Engineering React&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_MAD4Oly9yg" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Building React From Scratch&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.javascripting.com/2016/10/05/building-your-own-react-clone-in-five-easy-steps/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Building Your Own React Clone in Five Easy Steps&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@sweetpalma/gooact-react-in-160-lines-of-javascript-44e0742ad60f" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Gooact: React in 160 lines of JavaScript&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.mattgreer.org/articles/react-internals-part-one-basic-rendering/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;React Internals&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackernoon.com/learn-you-some-custom-react-renderers-aed7164a4199" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Learn how React Reconciler package works by building your own lightweight React DOM&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zapier.com/engineering/how-to-build-redux/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build Yourself a Redux&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jamasoftware.com/blog/lets-write-redux/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Let’s Write Redux!&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://egghead.io/lessons/react-redux-implementing-store-from-scratch" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Redux: Implementing Store from Scratch&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.mgechev.com/2015/03/09/build-learn-your-own-light-lightweight-angularjs/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build Your own Simplified AngularJS in 200 Lines of JavaScript&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://teropa.info/blog/2013/11/03/make-your-own-angular-part-1-scopes-and-digest.html" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Make Your Own AngularJS&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@deathmood/how-to-write-your-own-virtual-dom-ee74acc13060" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;How to write your own Virtual DOM&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mfrachet.github.io/create-frontend-framework/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Building a frontend framework, from scratch, with components (templating, state, VDOM)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pomb.us/build-your-own-react/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build your own React&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-game" class="anchor" aria-hidden="true" href="#build-your-own-game"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Game&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://handmadehero.org/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Handmade Hero&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nesdoug.com/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;How to Program an NES game in C&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLZ1QII7yudbc-Ky058TEaOstZHVbT-2hg" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Chess Engine In C&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLSkJey49cOgTSj465v2KbLZ7LMn10bCF9" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Let's Make: Dangerous Dave&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLT6WFYYZE6uLMcPGS3qfpYm7T_gViYMMt" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Learn Video Game Programming in C&lt;/em&gt;&lt;/a&gt;
[video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLkTXsX7igf8edTYU92nU-f5Ntzuf-RKvW" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Coding A Sudoku Solver in C&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLkTXsX7igf8erbWGYT4iSAhpnJLJ0Nk5G" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Coding a Rogue/Nethack RPG in C&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://brennan.io/2015/06/12/tetris-reimplementation/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;On Tetris and Reimplementation&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learnopengl.com/In-Practice/2D-Game/Breakout" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Breakout&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://lazyfoo.net/tutorials/SDL/" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Beginning Game Programming v2.0&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://javilop.com/gamedev/tetris-tutorial-in-c-platform-independent-focused-in-game-logic-for-beginners/" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Tetris tutorial in C++ platform independent focused in game logic for beginners&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ETvApbD5xRo&amp;amp;list=PLNOBk_id22bw6LXhrGfhVwqQIa-M2MsLa" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Remaking Cavestory in C++&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PL006xsVEsbKjSKBmLu1clo85yLrwjY67X" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Reconstructing Cave Story&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nicktasios.nl/posts/space-invaders-from-scratch-part-1.html" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Space Invaders from Scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://scottlilly.com/learn-c-by-building-a-simple-rpg-index/" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;Learn C# by Building a Simple RPG&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://roguesharp.wordpress.com/" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;Creating a Roguelike Game in C#&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scottlilly.com/build-a-cwpf-rpg/" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;Build a C#/WPF RPG&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gameswithgo.org/" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Games With Go&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lwjglgamedev.gitbooks.io/3d-game-development-with-lwjgl/content/" rel="nofollow"&gt;&lt;strong&gt;Java&lt;/strong&gt;: &lt;em&gt;3D Game Development with LWJGL 3&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;2D breakout game using Phaser&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lessmilk.com/tutorial/flappy-bird-phaser-1" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;How to Make Flappy Bird in HTML5 With Phaser&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://auth0.com/blog/developing-games-with-react-redux-and-svg-part-1/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Developing Games with React, Redux, and SVG&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aXwCrtAo4Wc" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build your own 8-Ball Pool game from scratch&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gamedevelopment.tutsplus.com/tutorials/how-to-make-your-first-roguelike--gamedev-13677" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;How to Make Your First Roguelike&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.freecodecamp.org/think-like-a-programmer-how-to-build-snake-using-only-javascript-html-and-css-7b1479c3339e" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Think like a programmer: How to build Snake using only JavaScript, HTML &amp;amp; CSS&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SSYGEN/blog/issues/30"&gt;&lt;strong&gt;Lua&lt;/strong&gt;: &lt;em&gt;BYTEPATH&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pythonprogramming.net/pygame-python-3-part-1-intro/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Developing Games With PyGame&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://inventwithpython.com/makinggames.pdf" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Making Games with Python &amp;amp; Pygame&lt;/em&gt;&lt;/a&gt; [pdf]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLKUel_nHsTQ1yX7tQxR_SQRdcOFyXfNAb" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;The Complete Roguelike Tutorial&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="http://rogueliketutorials.com/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Roguelike Tutorial Revised&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leanpub.com/developing-games-with-ruby/read" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;Developing Games With Ruby&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.diatomenterprises.com/gamedev-on-ruby-why-not/" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;Ruby Snake&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://a5huynh.github.io/2018/02/02/adventures-in-rust.html" rel="nofollow"&gt;&lt;strong&gt;Rust&lt;/strong&gt;: &lt;em&gt;Adventures in Rust: A Basic 2D Game&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tomassedovic.github.io/roguelike-tutorial/" rel="nofollow"&gt;&lt;strong&gt;Rust&lt;/strong&gt;: &lt;em&gt;Roguelike Tutorial in Rust + tcod&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-git" class="anchor" aria-hidden="true" href="#build-your-own-git"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Git&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stefan.saasen.me/articles/git-clone-in-haskell-from-the-bottom-up/" rel="nofollow"&gt;&lt;strong&gt;Haskell&lt;/strong&gt;: &lt;em&gt;Reimplementing “git clone” in Haskell from the bottom up&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://gitlet.maryrosecook.com/docs/gitlet.html" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Gitlet&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kushagragour.in/blog/2014/01/build-git-learn-git/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build GIT - Learn GIT&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://benhoyt.com/writings/pygit/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Just enough of a Git client to create a repo, commit, and push itself to GitHub&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wyag.thb.lt/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Write yourself a Git!&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://robots.thoughtbot.com/rebuilding-git-in-ruby" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;Rebuilding Git in Ruby&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-network-stack" class="anchor" aria-hidden="true" href="#build-your-own-network-stack"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Network Stack&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://beej.us/guide/bgnet/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Beej's Guide to Network Programming&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.saminiir.com/lets-code-tcp-ip-stack-1-ethernet-arp/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Let's code a TCP/IP stack&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/geckoboard-under-the-hood/how-to-build-a-network-stack-in-ruby-f73aeb1b661b" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;How to build a network stack in Ruby&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-neural-network" class="anchor" aria-hidden="true" href="#build-your-own-neural-network"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Neural Network&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.codeproject.com/Articles/11285/Neural-Network-OCR" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;Neural Network OCR&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://towardsdatascience.com/building-neural-networks-in-f-part-1-a2832ae972e6" rel="nofollow"&gt;&lt;strong&gt;F#&lt;/strong&gt;: &lt;em&gt;Building Neural Networks in F#&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://made2591.github.io/posts/neuralnetwork" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Build a multilayer perceptron with Golang&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sausheong.github.io/posts/how-to-build-a-simple-artificial-neural-network-with-go/" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;How to build a simple artificial neural network with Go&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datadan.io/neural-net-with-go" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Building a Neural Net from Scratch in Go&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLRqwX-V7Uu6aCibgK1PTWWu9by6XFdCfh" rel="nofollow"&gt;&lt;strong&gt;JavaScript / Java&lt;/strong&gt;: &lt;em&gt;Neural Networks - The Nature of Code&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://franpapers.com/en/machine-learning-ai-en/2017-neural-network-implementation-in-javascript-by-an-example/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Neural Network implementation in JavaScript, by an example&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackernoon.com/neural-networks-from-scratch-for-javascript-linguists-part1-the-perceptron-632a4d1fbad2" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Neural networks from scratch for JavaScript linguists (Part1 — The Perceptron)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://iamtrask.github.io/2015/07/12/basic-python-network/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;A Neural Network in 11 lines of Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://victorzhou.com/blog/intro-to-neural-networks/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Implement a Neural Network from Scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/optical-character-recognition-ocr.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Optical Character Recognition (OCR)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://navoshta.com/traffic-signs-classification/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Traffic signs classification with a convolutional network&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://towardsdatascience.com/how-to-generate-music-using-a-lstm-neural-network-in-keras-68786834d4c5" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Generate Music using LSTM Neural Network in Keras&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://victorzhou.com/blog/intro-to-cnns-part-1/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;An Introduction to Convolutional Neural Networks&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-operating-system" class="anchor" aria-hidden="true" href="#build-your-own-operating-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Operating System&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://joebergeron.io/posts/post_two.html" rel="nofollow"&gt;&lt;strong&gt;Assembly&lt;/strong&gt;: &lt;em&gt;Writing a Tiny x86 Bootloader&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/os/index.html" rel="nofollow"&gt;&lt;strong&gt;Assembly&lt;/strong&gt;: &lt;em&gt;Baking Pi – Operating Systems Development&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ZjwvMcP3Nf0&amp;amp;list=PLU94OURih-CiP4WxKSMt3UcwMSDM3aTtX" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Building a software and hardware stack for a simple computer from scratch&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tuhdo.github.io/os01/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Operating Systems: From 0 to 1&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://littleosbook.github.io/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;The little book about OS development&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jamesmolloy.co.uk/tutorial_html/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Roll your own toy UNIX-clone OS&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arjunsreedharan.org/post/82710718100/kernel-101-lets-write-a-kernel" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Kernel 101 – Let’s write a Kernel&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arjunsreedharan.org/post/99370248137/kernel-201-lets-write-a-kernel-with-keyboard" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Kernel 201 – Let’s write a Kernel with keyboard and screen support&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jserv/mini-arm-os"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Build a minimal multi-tasking kernel for ARM from scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cfenollosa/os-tutorial"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;How to create an OS from scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://danluu.com/malloc-tutorial/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Malloc tutorial&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.holbertonschool.com/hack-the-virtual-memory-c-strings-proc/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Hack the virtual memory&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/s-matyukevich/raspberry-pi-os"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Learning operating system development using Linux kernel and Raspberry Pi&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@lduck11007/operating-systems-development-for-dummies-3d4d786e8ac" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Operating systems development for Dummies&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLHh55M_Kq4OApWScZyPl5HhgsTJS9MZ6M" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Write your own Operating System&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="http://3zanders.co.uk/2017/10/13/writing-a-bootloader/" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Writing a Bootloader&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://os.phil-opp.com/" rel="nofollow"&gt;&lt;strong&gt;Rust&lt;/strong&gt;: &lt;em&gt;Writing an OS in Rust&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-physics-engine" class="anchor" aria-hidden="true" href="#build-your-own-physics-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Physics Engine&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.toptal.com/game/video-game-physics-part-i-an-introduction-to-rigid-body-dynamics" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Video Game Physics Tutorial&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://allenchou.net/game-physics-series/" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Game physics series by Allen Chou&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gamedevelopment.tutsplus.com/series/how-to-create-a-custom-physics-engine--gamedev-12715" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;How to Create a Custom Physics Engine&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLEETnX-uPtBXm1KEr_2zQ6K_0hoGH6JJ0" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;3D Physics Engine Tutorial&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mattmakesgames.tumblr.com/post/127890619821/towerfall-physics" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;TowerFall Physics&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.graphitedigital.com/blog/build-your-own-basic-physics-engine-in-javascript" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build your own basic physics engine in JavaScript&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://buildnewgames.com/gamephysics/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;How Physics Engines Work&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://buildnewgames.com/broad-phase-collision-detection/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Broad Phase Collision Detection Using Spatial Partitioning&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ibm.com/developerworks/library/wa-build2dphysicsengine/index.html" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build a simple 2D physics engine for JavaScript games&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-programming-language" class="anchor" aria-hidden="true" href="#build-your-own-programming-language"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Programming Language&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kanaka/mal#mal---make-a-lisp"&gt;&lt;strong&gt;(any)&lt;/strong&gt;: &lt;em&gt;mal - Make a Lisp&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nornagon/jonesforth/blob/master/jonesforth.S"&gt;&lt;strong&gt;Assembly&lt;/strong&gt;: &lt;em&gt;Jonesforth&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Baby's First Garbage Collector&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.buildyourownlisp.com/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Build Your Own Lisp: Learn C and build your own programming language in 1000 lines of code&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://maplant.com/gc.html" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Writing a Simple Garbage Collector in C&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lotabout/write-a-C-interpreter"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;C interpreter that interprets itself.&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lotabout/Let-s-build-a-compiler"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;A C &amp;amp; x86 version of the "Let's Build a Compiler" by Jack Crenshaw&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gnuu.org/2009/09/18/writing-your-own-toy-compiler/" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Writing Your Own Toy Compiler Using Flex&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=eF9qWbuQLuw" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;How to Create a Compiler&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://llvm.org/docs/tutorial/MyFirstLanguageFrontend/index.html" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Kaleidoscope: Implementing a Language with LLVM&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fsharpforfunandprofit.com/posts/understanding-parser-combinators/" rel="nofollow"&gt;&lt;strong&gt;F#&lt;/strong&gt;: &lt;em&gt;Understanding Parser Combinators&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=zMJYoYwOCd4" rel="nofollow"&gt;&lt;strong&gt;Elixir&lt;/strong&gt;: &lt;em&gt;Demystifying compilers by writing your own&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hazbo/the-super-tiny-compiler"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;The Super Tiny Compiler&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HxaD_trXwRE" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Lexical Scanning in Go&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="http://alephnullplex.github.io/cradle/" rel="nofollow"&gt;&lt;strong&gt;Haskell&lt;/strong&gt;: &lt;em&gt;Let's Build a Compiler&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dev.stephendiehl.com/fun/" rel="nofollow"&gt;&lt;strong&gt;Haskell&lt;/strong&gt;: &lt;em&gt;Write You a Haskell&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours" rel="nofollow"&gt;&lt;strong&gt;Haskell&lt;/strong&gt;: &lt;em&gt;Write Yourself a Scheme in 48 Hours&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wespiser.com/writings/wyas/home.html" rel="nofollow"&gt;&lt;strong&gt;Haskell&lt;/strong&gt;: &lt;em&gt;Write You A Scheme&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.craftinginterpreters.com/" rel="nofollow"&gt;&lt;strong&gt;Java&lt;/strong&gt;: &lt;em&gt;Crafting interpreters: A handbook for making programming languages&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jakubdziworski.github.io/categories.html#Enkel-ref" rel="nofollow"&gt;&lt;strong&gt;Java&lt;/strong&gt;: &lt;em&gt;Creating JVM Language&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jamiebuilds/the-super-tiny-compiler"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;The Super Tiny Compiler&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keyanzhang/the-super-tiny-interpreter"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;The Super Tiny Interpreter&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://maryrosecook.com/blog/post/little-lisp-interpreter" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Little Lisp interpreter&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://lisperator.net/pltut/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;How to implement a programming language in JavaScript&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://norasandler.com/2017/11/29/Write-a-Compiler.html" rel="nofollow"&gt;&lt;strong&gt;OCaml&lt;/strong&gt;: &lt;em&gt;Writing a C Compiler&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bernsteinbear.com/blog/lisp/" rel="nofollow"&gt;&lt;strong&gt;OCaml&lt;/strong&gt;: &lt;em&gt;Writing a Lisp, the series&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://compilers.iecc.com/crenshaw/" rel="nofollow"&gt;&lt;strong&gt;Pascal&lt;/strong&gt;: &lt;em&gt;Let's Build a Compiler&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/a-python-interpreter-written-in-python.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;A Python Interpreter Written in Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://khamidou.com/compilers/lisp.py/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;lisp.py: Make your own Lisp interpreter&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://effbot.org/zone/simple-iterator-parser.htm" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Simple Iterator-based Parsing&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://effbot.org/zone/simple-top-down-parsing.htm" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Simple Top-Down Parsing in Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://norvig.com/lispy.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;How to Write a Lisp Interpreter in Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ruslanspivak.com/lsbasi-part1/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Let’s Build A Simple Interpreter&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dj9CBS3ikGA&amp;amp;list=PLZQftyCk7_SdoVexSmwy_tBgs7P0b97yD&amp;amp;index=1" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Make Your Own Simple Interpreted Programming Language&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://beautifulracket.com/" rel="nofollow"&gt;&lt;strong&gt;Racket&lt;/strong&gt;: &lt;em&gt;Beautiful Racket: How to make your own programming languages with Racket&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.destroyallsoftware.com/screencasts/catalog/a-compiler-from-scratch" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;A Compiler From Scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.beezwax.net/2017/07/07/writing-a-markdown-compiler/" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;Markdown compiler from scratch in Ruby&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.subnetzero.io/post/building-language-vm-part-00/" rel="nofollow"&gt;&lt;strong&gt;Rust&lt;/strong&gt;: &lt;em&gt;So You Want to Build a Language VM&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodil.lol/parser-combinators/" rel="nofollow"&gt;&lt;strong&gt;Rust&lt;/strong&gt;: &lt;em&gt;Learning Parser Combinators With Rust&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.uraimo.com/2017/02/05/building-a-lisp-from-scratch-with-swift/" rel="nofollow"&gt;&lt;strong&gt;Swift&lt;/strong&gt;: &lt;em&gt;Building a LISP from scratch with Swift&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.scottlogic.com/2019/05/17/webassembly-compiler.html" rel="nofollow"&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;: &lt;em&gt;Build your own WebAssembly Compiler&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-regex-engine" class="anchor" aria-hidden="true" href="#build-your-own-regex-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Regex Engine&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.cs.princeton.edu/courses/archive/spr09/cos333/beautiful.html" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;A Regular Expression Matcher&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swtch.com/~rsc/regexp/regexp1.html" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Regular Expression Matching Can Be Simple And Fast&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nickdrane.com/build-your-own-regex/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build a Regex Engine in Less than 40 Lines of Code&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dpk.io/dregs/toydregs" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;How to implement regular expressions in functional javascript using derivatives&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://perl.plover.com/Regex/article.html" rel="nofollow"&gt;&lt;strong&gt;Perl&lt;/strong&gt;: &lt;em&gt;How Regexes Work&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rcoh.svbtle.com/no-magic-regular-expressions" rel="nofollow"&gt;&lt;strong&gt;Scala&lt;/strong&gt;: &lt;em&gt;No Magic: Regular Expressions&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-search-engine" class="anchor" aria-hidden="true" href="#build-your-own-search-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Search Engine&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stories.algolia.com/a-search-engine-in-css-b5ec4e902e97" rel="nofollow"&gt;&lt;strong&gt;CSS&lt;/strong&gt;: &lt;em&gt;A search engine in CSS&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.dr-josiah.com/2010/07/building-search-engine-using-redis-and.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Building a search engine using Redis and redis-py&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://boyter.org/2010/08/build-vector-space-search-engine-python/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Building a Vector Space Indexing Engine in Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cY7pE7vX6MU" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Building A Python-Based Search Engine&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/filament-ai/making-text-search-learn-from-feedback-4fe210fd87b0" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Making text search learn from feedback&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stevenloria.com/tf-idf/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Finding Important Words in Text Using TF-IDF&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-shell" class="anchor" aria-hidden="true" href="#build-your-own-shell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Shell&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://brennan.io/2015/01/16/write-a-shell-in-c/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Tutorial - Write a Shell in C&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kamalmarhubi/shell-workshop"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Let's build a shell!&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://indradhanush.github.io/blog/writing-a-unix-shell-part-1/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Writing a UNIX Shell&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tokenrove/build-your-own-shell"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Build Your Own Shell&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sj14.gitlab.io/post/2018-07-01-go-unix-shell/" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;: &lt;em&gt;Writing a simple shell in Go&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jstorimer.com/blogs/workingwithcode/7766107-a-unix-shell-in-ruby" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;A Unix Shell in Ruby&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.joshmcguigan.com/blog/build-your-own-shell-rust/" rel="nofollow"&gt;&lt;strong&gt;Rust&lt;/strong&gt;: &lt;em&gt;Build Your Own Shell using Rust&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-template-engine" class="anchor" aria-hidden="true" href="#build-your-own-template-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Template Engine&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://krasimirtsonev.com/blog/article/Javascript-template-engine-in-just-20-line" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;JavaScript template engine in just 20 lines&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/wdstack/understanding-javascript-micro-templating-f37a37b3b40e" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Understanding JavaScript Micro-Templating&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://alexmic.net/building-a-template-engine/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Approach: Building a toy template engine in Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/a-template-engine.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;A Template Engine&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bits.citrusbyte.com/how-to-write-a-template-library/" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;How to write a template engine in less than 30 lines of code&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-text-editor" class="anchor" aria-hidden="true" href="#build-your-own-text-editor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Text Editor&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://viewsourcecode.org/snaptoken/kilo/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Build Your Own Text Editor&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.fltk.org/doc-1.1/editor.html" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Designing a Simple Text Editor&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=xqDonHEYPgA" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Python Tutorial: Make Your Own Text Editor&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.instructables.com/id/Create-a-Simple-Python-Text-Editor/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Create a Simple Python Text Editor!&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.aha.io/text-editor/" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;Build a Collaborative Text Editor Using Rails&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-visual-recognition-system" class="anchor" aria-hidden="true" href="#build-your-own-visual-recognition-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Visual Recognition System&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.devcenter.co/developing-a-license-plate-recognition-system-with-machine-learning-in-python-787833569ccd" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Developing a License Plate Recognition System with Machine Learning in Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackernoon.com/building-a-facial-recognition-pipeline-with-deep-learning-in-tensorflow-66e7645015b8" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Building a Facial Recognition Pipeline with Deep Learning in Tensorflow&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-voxel-engine" class="anchor" aria-hidden="true" href="#build-your-own-voxel-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Voxel Engine&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://sites.google.com/site/letsmakeavoxelengine/home" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Let's Make a Voxel Engine&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=C_Fo9PcrVXA&amp;amp;list=PLXa65xzz2vplye7cn1HH4GyE6_FjnDSug&amp;amp;index=1" rel="nofollow"&gt;&lt;strong&gt;Java&lt;/strong&gt;: &lt;em&gt;Let's make a voxel engine&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QZ4Vk2PkPZk&amp;amp;list=PL80Zqpd23vJfyWQi-8FKDbeO_ZQamLKJL" rel="nofollow"&gt;&lt;strong&gt;Java&lt;/strong&gt;: &lt;em&gt;Java Voxel Engine Tutorial&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-web-search-engine" class="anchor" aria-hidden="true" href="#build-your-own-web-search-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Web Search Engine&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://boyter.org/2013/01/code-for-a-search-engine-in-php-part-1/" rel="nofollow"&gt;&lt;strong&gt;PHP&lt;/strong&gt;: &lt;em&gt;Code a Search Engine in PHP&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.saush.com/2009/03/17/write-an-internet-search-engine-with-200-lines-of-ruby-code/" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;Write an Internet search engine with 200 lines of Ruby code&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-build-your-own-web-server" class="anchor" aria-hidden="true" href="#build-your-own-web-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your own &lt;code&gt;Web Server&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.codeproject.com/Articles/859108/Writing-a-Web-Server-from-Scratch" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;Writing a Web Server from Scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codementor.io/ziad-saab/let-s-code-a-web-server-from-scratch-with-nodejs-streams-h4uc9utji" rel="nofollow"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;Let's code a web server from scratch with NodeJS Streams&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/antoaravinth/lets-build-express"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;lets-build-express&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://station.clancats.com/writing-a-webserver-in-pure-php/" rel="nofollow"&gt;&lt;strong&gt;PHP&lt;/strong&gt;: &lt;em&gt;Writing a webserver in pure PHP&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/a-simple-web-server.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;A Simple Web Server&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ruslanspivak.com/lsbaws-part1/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Let’s Build A Web Server.&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://defn.io/2018/02/25/web-app-from-scratch-01/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Web application from scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://joaoventura.net/blog/2017/python-webserver/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Building a basic HTTP Server from scratch in Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.luisrei.com/articles/flaskrest.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Implementing a RESTful Web API with Python &amp;amp; Flask&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.honeybadger.io/building-a-simple-websockets-server-from-scratch-in-ruby/" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;Building a simple websockets server from scratch in Ruby&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-uncategorized" class="anchor" aria-hidden="true" href="#uncategorized"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Uncategorized&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nand2tetris.org/" rel="nofollow"&gt;&lt;strong&gt;(any)&lt;/strong&gt;: &lt;em&gt;From NAND to Tetris: Building a Modern Computer From First Principles&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/the-same-origin-policy.html" rel="nofollow"&gt;&lt;strong&gt;Alloy&lt;/strong&gt;: &lt;em&gt;The Same-Origin Policy&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dranger.com/ffmpeg/ffmpeg.html" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;How to Write a Video Player in Less Than 1000 Lines&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jamesroutley/write-a-hash-table"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Learn how to write a hash table in C&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.uninformativ.de/blog/postings/2018-02-24/0/POSTING-en.html" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;The very basics of a terminal emulator&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://brennan.io/2016/11/14/kernel-dev-ep3/" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Write a System Call&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codepr.github.io/posts/sol-mqtt-broker" rel="nofollow"&gt;&lt;strong&gt;C&lt;/strong&gt;: &lt;em&gt;Sol - An MQTT broker from scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/relativty/Relativ"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Build your own VR headset for $100&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://seasonofcode.com/posts/how-x-window-managers-work-and-how-to-write-one-part-i.html" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;How X Window Managers work and how to write one&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.tartanllama.xyz/writing-a-linux-debugger-setup/" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Writing a Linux Debugger&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lofibucket.com/articles/64k_intro.html" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;How a 64k intro is made&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://16bpp.net/tutorials/csharp-networking" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;C# Networking: Create a TCP chater server, TCP games, UDP Pong and more&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seanjoflynn.com/research/skeletal-animation.html" rel="nofollow"&gt;&lt;strong&gt;C#&lt;/strong&gt;: &lt;em&gt;Loading and rendering 3D skeletal animations from scratch in C# and GLSL&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bernhardwenzel.com/articles/clojure-spellchecker/" rel="nofollow"&gt;&lt;strong&gt;Clojure&lt;/strong&gt;: &lt;em&gt;Building a spell-checker&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kasvith.github.io/posts/lets-create-a-simple-lb-go/" rel="nofollow"&gt;&lt;strong&gt;Go&lt;/strong&gt;, &lt;em&gt;Let's Create a Simple Load Balancer&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLgCYzUzKIBE9HUJU-upNvl3TRVAo9W47y" rel="nofollow"&gt;&lt;strong&gt;Java&lt;/strong&gt;: &lt;em&gt;How to Build an Android Reddit App&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ronami/minipack"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build Your Own Module Bundler - Minipack&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://levelup.gitconnected.com/understand-javascript-promises-by-building-a-promise-from-scratch-84c0fd855720" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Learn JavaScript Promises by Building a Promise from Scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mauriciopoppe.com/notes/computer-science/computation/promises/" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Implementing promises from scratch (TDD way)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.usejournal.com/implement-your-own-call-apply-and-bind-method-in-javascript-42cc85dba1b" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Implement your own — call(), apply() and bind() method in JavaScript&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;JavaScript Algorithms and Data Structures&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=xLHCMMGuN0Q" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;How to Make an Evolutionary Tetris AI&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pusher.com/tutorials/ride-hailing-react-native" rel="nofollow"&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;em&gt;Build a ride hailing app with React Native&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kezhenxu94/cache-lite"&gt;&lt;strong&gt;Kotlin&lt;/strong&gt;: &lt;em&gt;Build Your Own Cache&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xmonader.github.io/nimdays/day12_resp.html" rel="nofollow"&gt;&lt;strong&gt;Nim&lt;/strong&gt;: &lt;em&gt;Writing a Redis Protocol Parser&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xmonader.github.io/nimdays/day11_buildsystem.html" rel="nofollow"&gt;&lt;strong&gt;Nim&lt;/strong&gt;: &lt;em&gt;Writing a Build system&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xmonader.github.io/nimdays/day08_minitest.html" rel="nofollow"&gt;&lt;strong&gt;Nim&lt;/strong&gt;: &lt;em&gt;Writing a MiniTest Framework&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xmonader.github.io/nimdays/day01_dmidecode.html" rel="nofollow"&gt;&lt;strong&gt;Nim&lt;/strong&gt;: &lt;em&gt;Writing a DMIDecode Parser&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xmonader.github.io/nimdays/day05_iniparser.html" rel="nofollow"&gt;&lt;strong&gt;Nim&lt;/strong&gt;: &lt;em&gt;Writing a INI Parser&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xmonader.github.io/nimdays/day04_asynclinkschecker.html" rel="nofollow"&gt;&lt;strong&gt;Nim&lt;/strong&gt;: &lt;em&gt;Writing a Link Checker&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xmonader.github.io/nimdays/day07_shorturl.html" rel="nofollow"&gt;&lt;strong&gt;Nim&lt;/strong&gt;: &lt;em&gt;Writing a URL Shortening Service&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.webdevdrops.com/build-static-site-generator-nodejs-8969ebe34b22/" rel="nofollow"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;Build a static site generator in 40 lines with Node.js&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codeburst.io/building-a-simple-single-sign-on-sso-server-and-solution-from-scratch-in-node-js-ea6ee5fdf340" rel="nofollow"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;Building A Simple Single Sign On(SSO) Server And Solution From Scratch In Node.js.&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.freecodecamp.org/how-to-create-a-real-world-node-cli-app-with-node-391b727bbed3" rel="nofollow"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: &lt;em&gt;How to create a real-world Node CLI app with Node&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chaitya62.github.io/2018/04/29/Writing-your-own-MVC-from-Scratch-in-PHP.html" rel="nofollow"&gt;&lt;strong&gt;PHP&lt;/strong&gt;: &lt;em&gt;Write your own MVC from scratch in PHP&lt;/em&gt; &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ilovephp.jondh.me.uk/en/tutorial/make-your-own-blog" rel="nofollow"&gt;&lt;strong&gt;PHP&lt;/strong&gt;: &lt;em&gt;Make your own blog&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinsmith.io/modern-php-without-a-framework" rel="nofollow"&gt;&lt;strong&gt;PHP&lt;/strong&gt;: &lt;em&gt;Modern PHP Without a Framework&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=o64FV-ez6Gw" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Build a Deep Learning Library&lt;/em&gt;&lt;/a&gt; [video]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pyimagesearch.com/2014/09/01/build-kick-ass-mobile-document-scanner-just-5-minutes/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;How to Build a Kick-Ass Mobile Document Scanner in Just 5 Minutes&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/a-continuous-integration-system.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Continuous Integration System&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.datacamp.com/community/tutorials/recommender-systems-python" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Recommender Systems in Python: Beginner Tutorial&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@kopilov.vlad/detect-sms-spam-in-kaggle-with-scikit-learn-5f6afa7a3ca2" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Write SMS-spam detector with Scikit-learn&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.untrod.com/2016/06/simple-similar-products-recommendation-engine-in-python.html" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;A Simple Content-Based Recommendation Engine in Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.datacamp.com/community/tutorials/lstm-python-stock-market" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Stock Market Predictions with LSTM in Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://franpapers.com/en/algorithmic/2018-introduction-to-fountain-codes-lt-codes-with-python/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Build your own error-correction fountain code with Luby Transform Codes&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.paperspace.com/implementing-gans-in-tensorflow/" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Building a simple Generative Adversial Network (GAN) using Tensorflow&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lethalbrains.com/learn-ml-algorithms-by-coding-decision-trees-439ac503c9a4" rel="nofollow"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;Learn ML Algorithms by coding: Decision Trees&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cheery/json-algorithm"&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;em&gt;JSON Decoding Algorithm&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://aosabook.org/en/500L/a-pedometer-in-the-real-world.html" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;A Pedometer in the Real World&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://iridakos.com/tutorials/2018/01/25/creating-a-gtk-todo-application-with-ruby" rel="nofollow"&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;em&gt;Creating a Linux Desktop application with Ruby&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://limpet.net/mbrubeck/2014/08/08/toy-layout-engine-1.html" rel="nofollow"&gt;&lt;strong&gt;Rust&lt;/strong&gt;: &lt;em&gt;Let's build a browser engine&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EmilHernvall/dnsguide/blob/master/README.md"&gt;&lt;strong&gt;Rust&lt;/strong&gt;: &lt;em&gt;Building a DNS server in Rust&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nbaksalyar.github.io/2015/07/10/writing-chat-in-rust.html" rel="nofollow"&gt;&lt;strong&gt;Rust&lt;/strong&gt;: &lt;em&gt;Writing Scalable Chat Service from Scratch&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/g-plane/tiny-package-manager"&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;: &lt;em&gt;Tiny Package Manager: Learns how npm or Yarn works&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-contribute" class="anchor" aria-hidden="true" href="#how-to-contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to contribute&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Contributions are very welcome: &lt;a href="https://github.com/danistefanovic/build-your-own-x/issues/new"&gt;Submit tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Help me to review &lt;a href="https://github.com/danistefanovic/build-your-own-x/issues"&gt;pending submissions&lt;/a&gt; by leaving comments and "reactions"&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://creativecommons.org/publicdomain/zero/1.0/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/60561947585c982aee67ed3e3b25388184cc0aa3/687474703a2f2f6d6972726f72732e6372656174697665636f6d6d6f6e732e6f72672f70726573736b69742f627574746f6e732f38387833312f7376672f63632d7a65726f2e737667" alt="CC0" data-canonical-src="http://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To the extent possible under law, &lt;a href="http://twitter.com/danistefanovic" rel="nofollow"&gt;Daniel Stefanovic&lt;/a&gt; has waived all copyright and related or neighboring rights to this work.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>danistefanovic</author><guid isPermaLink="false">https://github.com/danistefanovic/build-your-own-x</guid><pubDate>Tue, 24 Dec 2019 00:25:00 GMT</pubDate></item></channel></rss>