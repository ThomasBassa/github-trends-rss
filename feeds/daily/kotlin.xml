<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Kotlin, Today</title><link>https://github.com/trending/kotlin?since=daily</link><description>The top repositories on GitHub for kotlin, measured daily</description><pubDate>Sun, 05 Jan 2020 01:06:52 GMT</pubDate><lastBuildDate>Sun, 05 Jan 2020 01:06:52 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>klinker-apps/pulse-sms-android #1 in Kotlin, Today</title><link>https://github.com/klinker-apps/pulse-sms-android</link><description>&lt;p&gt;&lt;i&gt;The ultimate SMS app for Android, available across all of your devices.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/artwork/repo-header.png"&gt;&lt;img src="/artwork/repo-header.png" alt="feature graphic" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-pulse-sms" class="anchor" aria-hidden="true" href="#pulse-sms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pulse SMS&lt;/h1&gt;
&lt;p&gt;The goal of this project is to create an SMS/MMS app that has full support for all of the features
that users love, is based on material design, and supports a strong end-to-end encryption version of a
tablet/desktop messenger that sends messages through your personal phone number.&lt;/p&gt;
&lt;p&gt;Check out Pulse on the &lt;a href="https://play.google.com/store/apps/details?id=xyz.klinker.messenger" rel="nofollow"&gt;Play Store&lt;/a&gt;
or the app's &lt;a href="https://messenger.klinkerapps.com/overview" rel="nofollow"&gt;website&lt;/a&gt; for a more comprehensive overview
of the app's features, platforms, and functionality!&lt;/p&gt;
&lt;p&gt;Many other Pulse platforms are also open source (all but the backend). If you would like to take a
look at them, you can find them on Klinker Apps &lt;a href="https://github.com/klinker-apps?q=pulse"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling-pulse" class="anchor" aria-hidden="true" href="#compiling-pulse"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling Pulse&lt;/h2&gt;
&lt;p&gt;This repo is &lt;strong&gt;almost&lt;/strong&gt; ready to go, right out of the box. There are just two properties files that you need
to create for the build process to succeed: &lt;code&gt;api_keys.properties&lt;/code&gt; and &lt;code&gt;keystore.properties&lt;/code&gt;. Both files can simply be copy and paste from the examples, if you choose.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-set-up-api-keys" class="anchor" aria-hidden="true" href="#set-up-api-keys"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Set up API keys&lt;/h4&gt;
&lt;p&gt;You'll need to set up a few different API keys. Rename the &lt;code&gt;api_keys.properties.example&lt;/code&gt;
file to &lt;code&gt;api_keys.properties&lt;/code&gt;. This alone will get the build working and might be perfectly fine for your usage.&lt;/p&gt;
&lt;p&gt;If you are using a self-built version of the app on a daily basis, then you might want to put in a few of your own API keys, rather than the public ones I have available. Please see the notes at the top of the file to learn more.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-set-up-release-keystore" class="anchor" aria-hidden="true" href="#set-up-release-keystore"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Set up release keystore&lt;/h4&gt;
&lt;p&gt;Whether you are going to make a release build of the app or not, you will need to copy the &lt;code&gt;keystore.properties.example&lt;/code&gt;
file to &lt;code&gt;keystore.properties&lt;/code&gt;. If you aren't going to make a release build for anything, just leave it as is.&lt;/p&gt;
&lt;p&gt;If you are going to make a release build, you will need to add your keystore to the repo and fill in
fields outlined by that file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-to-pulse" class="anchor" aria-hidden="true" href="#contributing-to-pulse"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to Pulse&lt;/h2&gt;
&lt;p&gt;Contributions are welcome!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you just want to report a bug or file a feature request, I have a &lt;a href="https://github.com/klinker-apps/pulse-sms-issues/issues"&gt;centralized issues repo&lt;/a&gt; for tracking issues/requests across all of Pulse's platforms. Please file the issue there.&lt;/li&gt;
&lt;li&gt;Any other contributions can just go through the &lt;a href="https://github.com/klinker-apps/pulse-sms-android/pulls"&gt;Pull Requests&lt;/a&gt; on this repo.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are looking to make a large change, it is probably best to discuss it with me first. Open up an &lt;a href="https://github.com/klinker-apps/pulse-sms-issues/issues/new?template=contribution_question.md"&gt;issue&lt;/a&gt;, letting me know that this is something that you would like to make a PR for, and I will tell you if it is something I would consider integrating into the app. Even if it ends up being something I do not think would work in a wide-release to all of my users, it is still something that you can add and use yourself!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Copyright (C) 2020 Luke Klinker

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>klinker-apps</author><guid isPermaLink="false">https://github.com/klinker-apps/pulse-sms-android</guid><pubDate>Sun, 05 Jan 2020 00:01:00 GMT</pubDate></item><item><title>mrcsxsiq/Kotlin-Pokedex #2 in Kotlin, Today</title><link>https://github.com/mrcsxsiq/Kotlin-Pokedex</link><description>&lt;p&gt;&lt;i&gt;:cyclone: A Pokedex app using ViewModel, LiveData, Room and Navigation&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1 align="center"&gt;&lt;a id="user-content---pokedex-app-built-with-kotlin" class="anchor" aria-hidden="true" href="#--pokedex-app-built-with-kotlin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;
&lt;br&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/kotlin.png"&gt;&lt;img src="screenshots/kotlin.png" width="300" alt="Kotlin Pokedex" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;br&gt;
&lt;br&gt;
Pokedex app built with Kotlin
&lt;/h1&gt;
&lt;p align="center"&gt;
  &lt;a href="https://github.com/KotlinBy/awesome-kotlin"&gt;
    &lt;img src="https://camo.githubusercontent.com/a0afa2c788fcce72a8d0983a6d6c11cfeaf7f5a9/68747470733a2f2f6b6f746c696e2e6c696e6b2f617765736f6d652d6b6f746c696e2e737667" alt="Awesome Kotlin" data-canonical-src="https://kotlin.link/awesome-kotlin.svg" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/8af705201b0143753136fea6d5fc0409fae21d81/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d7265642e737667" alt="License MIT" data-canonical-src="https://img.shields.io/badge/License-MIT-red.svg" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/mrcsxsiq/Kotlin-Pokedex/stargazers"&gt;
    &lt;img src="https://camo.githubusercontent.com/6635d9f2415b4dbd25f82221d1187d2f007f1adb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5361792532305468616e6b732df09f918d2d3145414544422e737667" alt="Say thanks" data-canonical-src="https://img.shields.io/badge/Say%20Thanks-👍-1EAEDB.svg" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-download" class="anchor" aria-hidden="true" href="#download"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download&lt;/h2&gt;
&lt;p&gt;Go to the &lt;a href="https://github.com/mrcsxsiq/Kotlin-Pokedex/releases"&gt;releases page&lt;/a&gt; to download the latest available apk.&lt;/p&gt;

&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/home.png"&gt;&lt;img src="screenshots/home.png" width="270" alt="Home" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/pokedex.png"&gt;&lt;img src="screenshots/pokedex.png" width="270" alt="Pokedex" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/pokedex-fab.png"&gt;&lt;img src="screenshots/pokedex-fab.png" width="270" alt="Pokedex FAB" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/pokedex-fab-search.png"&gt;&lt;img src="screenshots/pokedex-fab-search.png" width="270" alt="Pokedex Search" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/pokedex-fab-generation.png"&gt;&lt;img src="screenshots/pokedex-fab-generation.png" width="270" alt="Pokedex Generation" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/pokemon-info-about.png"&gt;&lt;img src="screenshots/pokemon-info-about.png" width="270" alt="Pokemon Info - About" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/pokemon-info-base-stats.png"&gt;&lt;img src="screenshots/pokemon-info-base-stats.png" width="270" alt="Pokemon Info - Base Stats" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/pokemon-info-evolution.png"&gt;&lt;img src="screenshots/pokemon-info-evolution.png" width="270" alt="Pokemon Info - Evolution" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/news-detail.png"&gt;&lt;img src="screenshots/news-detail.png" width="270" alt="News Detail" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Kotlin&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Live data&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Navigation&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; ViewModel&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Rest with retrofit&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Offline Persistence with Room&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Todo&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Home&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Pokedex&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Pokedex - FAB&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Pokedex - Search&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Pokedex - Generation&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Pokemon Info&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Pokemon Info - About&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Pokemon Info - Base Stats&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Pokemon Info - Evolution&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; News Detail&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-thanks" class="anchor" aria-hidden="true" href="#thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thanks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dribbble.com/saepulnahwan23" rel="nofollow"&gt;Saepul Nahwan&lt;/a&gt; for his &lt;a href="https://dribbble.com/shots/6545819-Pokedex-App" rel="nofollow"&gt;Pokedex App design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scitbiz/flutter_pokedex/"&gt;Pham Sy Hung&lt;/a&gt; for the Flutter version&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;All the code available under the MIT license. See &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;MIT License

Copyright (c) 2019 Marcos Paulo Farias

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mrcsxsiq</author><guid isPermaLink="false">https://github.com/mrcsxsiq/Kotlin-Pokedex</guid><pubDate>Sun, 05 Jan 2020 00:02:00 GMT</pubDate></item><item><title>Tencent/bk-ci #3 in Kotlin, Today</title><link>https://github.com/Tencent/bk-ci</link><description>&lt;p&gt;&lt;i&gt;蓝鲸CI平台(BlueKing CI) &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/resource/img/bkci_cn.png"&gt;&lt;img src="docs/resource/img/bkci_cn.png" alt="LOGO" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/Tencent/bk-ci/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/bba9d52d3e0d92a3d95a660cff2dcc743cdb5059/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d6d69742d627269676874677265656e2e7376673f7374796c653d666c6174" alt="license" data-canonical-src="https://img.shields.io/badge/license-mit-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/Tencent/bk-ci/releases"&gt;&lt;img src="https://camo.githubusercontent.com/676230c86f26f68784c9e1b271fbafa966122ff5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72656c656173652d302e302e312d627269676874677265656e2e737667" alt="Release Version" data-canonical-src="https://img.shields.io/badge/release-0.0.1-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/Tencent/bk-ci/pulls"&gt;&lt;img src="https://camo.githubusercontent.com/d4e0f63e9613ee474a7dfdc23c240b9795712c96/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e737667" alt="PRs Welcome" data-canonical-src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;重要提示&lt;/strong&gt;: &lt;code&gt;master&lt;/code&gt; 分支在开发过程中可能处于 &lt;em&gt;不稳定或者不可用状态&lt;/em&gt; 。
请通过&lt;a href="https://github.com/tencent/bk-ci/releases"&gt;releases&lt;/a&gt; 而非 &lt;code&gt;master&lt;/code&gt; 去获取稳定的二进制文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;蓝鲸持续集成平台（代号蓝盾）是一个开源的持续集成和持续交付系统，目前服务于腾讯10000+开发人员，现已成为公司指定的CI平台。另外，她也获得行业至今为止唯一一个4级认证的DevOps标准。&lt;/p&gt;
&lt;p&gt;使用蓝盾屏蔽掉所有研发流程中的繁琐环节，让你聚焦于编码。蓝盾通常被用于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;工程编译&lt;/li&gt;
&lt;li&gt;静态代码检查&lt;/li&gt;
&lt;li&gt;运行测试用例，及时发现BUG&lt;/li&gt;
&lt;li&gt;部署与发布&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;蓝盾提供了流水线、代码库、凭证管理、环境管理、研发商店5大核心服务，多重组合，满足企业不同场景的需求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;流水线&lt;/strong&gt;：将团队现有的研发流程以可视化方式呈现出来，编译、测试、部署，一条流水线搞定&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;代码库&lt;/strong&gt;：将企业内已有的代码托管服务关联至蓝盾&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;凭证管理&lt;/strong&gt;：为代码库、流水线等服务提供不同类型的凭据、证书管理功能&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;环境管理&lt;/strong&gt;：可以将企业内部的开发编译机托管至蓝盾&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;研发商店&lt;/strong&gt;：由流水线插件和流水线模板组成，插件用于对接企业内部的各种第三方服务，模板助力企业内部的研发流程规范化&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/overview/architecture.md"&gt;架构设计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/overview/code_framework.md"&gt;代码目录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/overview/design.md"&gt;设计理念&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/resource/img/bk-ci-demo.gif"&gt;&lt;img src="docs/resource/img/bk-ci-demo.gif" alt="front-page" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;持续集成和持续交付: 由于框架的可扩展性，蓝盾既可以用作简单的CI场景，也可以成为企业内所有项目的持续交付中心&lt;/li&gt;
&lt;li&gt;所见即所得:  蓝盾提供了灵活的可视化编排流水线，动动指尖，将研发流程描述与此&lt;/li&gt;
&lt;li&gt;架构平行可扩展: 灵活的架构设计可以随意横向扩容，满足企业大规模使用&lt;/li&gt;
&lt;li&gt;分布式: 蓝盾可以便捷的管控多台构建机，助你更快的跨多平台构建、测试和部署&lt;/li&gt;
&lt;li&gt;流水线插件: 蓝盾拥有完善的插件开发体系，其具备了低门槛、灵活可扩展等特性&lt;/li&gt;
&lt;li&gt;流水线模板: 流水线模板将是企业内部推行研发规范的一大助力&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-experience" class="anchor" aria-hidden="true" href="#experience"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Experience&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/blueking/bk-ci" rel="nofollow"&gt;v1版Docker体验镜像下载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/overview/source_compile.md"&gt;下载与编译&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/overview/installation.md"&gt;一分钟安装部署&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-roadmap" class="anchor" aria-hidden="true" href="#roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RoadMap&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/VERSION.md"&gt;版本规划&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="version.md"&gt;版本日志&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;阅读 &lt;a href="https://github.com/Tencent/bk-ci/wiki"&gt;wiki&lt;/a&gt; 或者寻求帮助&lt;/li&gt;
&lt;li&gt;常见 &lt;a href="https://github.com/Tencent/bk-ci/wiki/FAQ"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;了解蓝鲸整体的社区生态请加入&lt;a href="https://jq.qq.com/?_wv=1027&amp;amp;k=5zk8F7G" rel="nofollow"&gt;蓝鲸社区版交流1群&lt;/a&gt;：495299374&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-blueking-community" class="anchor" aria-hidden="true" href="#blueking-community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BlueKing Community&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/bk-bcs"&gt;BK-BCS&lt;/a&gt;：蓝鲸容器管理平台是以容器技术为基础，为微服务业务提供编排管理的基础服务平台。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/bk-bcs-saas"&gt;BK-BCS-SaaS&lt;/a&gt;：蓝鲸容器管理平台SaaS基于原生Kubernetes和Mesos自研的两种模式，提供给用户高度可扩展、灵活易用的容器产品服务。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/bk-cmdb"&gt;BK-CMDB&lt;/a&gt;：蓝鲸配置平台（蓝鲸CMDB）是一个面向资产及应用的企业级配置管理平台。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/bk-PaaS"&gt;BK-PaaS&lt;/a&gt;：蓝鲸PaaS平台是一个开放式的开发平台，让开发者可以方便快捷地创建、开发、部署和管理SaaS应用。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/bk-sops"&gt;BK-SOPS&lt;/a&gt;：蓝鲸标准运维（SOPS）是通过可视化的图形界面进行任务流程编排和执行的系统，是蓝鲸体系中一款轻量级的调度编排类SaaS产品。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;关于 bk-ci 分支管理、issue 以及 pr 规范，请阅读 &lt;a href="CONTRIBUTING.md"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://opensource.tencent.com/contribution" rel="nofollow"&gt;腾讯开源激励计划&lt;/a&gt; 鼓励开发者的参与和贡献，期待你的加入&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-others" class="anchor" aria-hidden="true" href="#others"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Others&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-they-are-using-bk-ci" class="anchor" aria-hidden="true" href="#they-are-using-bk-ci"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;They are using BK-CI&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/resource/img/using.png"&gt;&lt;img src="docs/resource/img/using.png" alt="Using" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;BK-CI 是基于 MIT 协议， 详细请参考 &lt;a href="LICENSE.txt"&gt;LICENSE&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Tencent</author><guid isPermaLink="false">https://github.com/Tencent/bk-ci</guid><pubDate>Sun, 05 Jan 2020 00:03:00 GMT</pubDate></item><item><title>Kotlin/kotlinx.coroutines #4 in Kotlin, Today</title><link>https://github.com/Kotlin/kotlinx.coroutines</link><description>&lt;p&gt;&lt;i&gt;Library support for Kotlin coroutines &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-kotlinxcoroutines" class="anchor" aria-hidden="true" href="#kotlinxcoroutines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;kotlinx.coroutines&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2457c980f81ed19481871fcda0c94991c01b3e49/68747470733a2f2f6a622e67672f6261646765732f6f6666696369616c2e737667" alt="official JetBrains project" data-canonical-src="https://jb.gg/badges/official.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e7da7b6b632d5ef4bce9a550a5d5cfe400ca1fe/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652532304c6963656e7365253230322e302d626c75652e7376673f7374796c653d666c6174" alt="GitHub license" data-canonical-src="https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bintray.com/kotlin/kotlinx/kotlinx.coroutines/1.3.3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/100bb71a7d486cd56523fa6a1413a319afa53e51/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6b6f746c696e2f6b6f746c696e782f6b6f746c696e782e636f726f7574696e65732f696d616765732f646f776e6c6f61642e7376673f76657273696f6e3d312e332e33" alt="Download" data-canonical-src="https://api.bintray.com/packages/kotlin/kotlinx/kotlinx.coroutines/images/download.svg?version=1.3.3" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Library support for Kotlin coroutines with &lt;a href="#multiplatform"&gt;multiplatform&lt;/a&gt; support.
This is a companion version for Kotlin &lt;code&gt;1.3.61&lt;/code&gt; release.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;suspend&lt;/span&gt; &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; coroutineScope {
    launch { 
       delay(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)
       &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Kotlin Coroutines World!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) 
    }
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Play with coroutines online &lt;a href="https://pl.kotl.in/hG_tKbid_" rel="nofollow"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-modules" class="anchor" aria-hidden="true" href="#modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modules&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="kotlinx-coroutines-core/README.md"&gt;core&lt;/a&gt; — common coroutines across all platforms:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/launch.html" rel="nofollow"&gt;launch&lt;/a&gt; and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/async.html" rel="nofollow"&gt;async&lt;/a&gt; coroutine builders returning &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/index.html" rel="nofollow"&gt;Job&lt;/a&gt; and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/index.html" rel="nofollow"&gt;Deferred&lt;/a&gt; light-weight futures with cancellation support;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/index.html" rel="nofollow"&gt;Dispatchers&lt;/a&gt; object with &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-main.html" rel="nofollow"&gt;Main&lt;/a&gt; dispatcher for Android/Swing/JavaFx, and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-default.html" rel="nofollow"&gt;Default&lt;/a&gt; dispatcher for background coroutines;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/delay.html" rel="nofollow"&gt;delay&lt;/a&gt; and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/yield.html" rel="nofollow"&gt;yield&lt;/a&gt; top-level suspending functions;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-flow/index.html" rel="nofollow"&gt;Flow&lt;/a&gt; — cold asynchronous stream with &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/flow.html" rel="nofollow"&gt;flow&lt;/a&gt; builder and comprehensive operator set (&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/filter.html" rel="nofollow"&gt;filter&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/map.html" rel="nofollow"&gt;map&lt;/a&gt;, etc);&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-channel/index.html" rel="nofollow"&gt;Channel&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.sync/-mutex/index.html" rel="nofollow"&gt;Mutex&lt;/a&gt;, and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.sync/-semaphore/index.html" rel="nofollow"&gt;Semaphore&lt;/a&gt; communication and synchronization primitives;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html" rel="nofollow"&gt;coroutineScope&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/supervisor-scope.html" rel="nofollow"&gt;supervisorScope&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/with-context.html" rel="nofollow"&gt;withContext&lt;/a&gt;, and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/with-timeout.html" rel="nofollow"&gt;withTimeout&lt;/a&gt; scope builders;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-main-scope.html" rel="nofollow"&gt;MainScope()&lt;/a&gt; for Android and UI applications;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-supervisor-job.html" rel="nofollow"&gt;SupervisorJob()&lt;/a&gt; and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-exception-handler/index.html" rel="nofollow"&gt;CoroutineExceptionHandler&lt;/a&gt; for supervision of coroutines hierarchies;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.selects/select.html" rel="nofollow"&gt;select&lt;/a&gt; expression support and more.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="kotlinx-coroutines-core/jvm/"&gt;core/jvm&lt;/a&gt; — additional core features available on Kotlin/JVM:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-i-o.html" rel="nofollow"&gt;Dispatchers.IO&lt;/a&gt; dispatcher for blocking coroutines;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/java.util.concurrent.-executor/as-coroutine-dispatcher.html" rel="nofollow"&gt;Executor.asCoroutineDispatcher&lt;/a&gt; extension, custom thread pools, and more.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="kotlinx-coroutines-core/js/"&gt;core/js&lt;/a&gt; — additional core features available on Kotlin/JS:
&lt;ul&gt;
&lt;li&gt;Integration with &lt;code&gt;Promise&lt;/code&gt; via &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/kotlin.js.-promise/await.html" rel="nofollow"&gt;Promise.await&lt;/a&gt; and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/promise.html" rel="nofollow"&gt;promise&lt;/a&gt; builder;&lt;/li&gt;
&lt;li&gt;Integration with &lt;code&gt;Window&lt;/code&gt; via &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/org.w3c.dom.-window/as-coroutine-dispatcher.html" rel="nofollow"&gt;Window.asCoroutineDispatcher&lt;/a&gt;, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="kotlinx-coroutines-test/README.md"&gt;test&lt;/a&gt; — test utilities for coroutines:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-test/kotlinx.coroutines.test/kotlinx.coroutines.-dispatchers/set-main.html" rel="nofollow"&gt;Dispatchers.setMain&lt;/a&gt; to override &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-main.html" rel="nofollow"&gt;Dispatchers.Main&lt;/a&gt; in tests;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-test/kotlinx.coroutines.test/-test-coroutine-scope/index.html" rel="nofollow"&gt;TestCoroutineScope&lt;/a&gt; to test suspending functions and coroutines.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="kotlinx-coroutines-debug/README.md"&gt;debug&lt;/a&gt; — debug utilities for coroutines:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-debug/kotlinx.coroutines.debug/-debug-probes/index.html" rel="nofollow"&gt;DebugProbes&lt;/a&gt; API to probe, keep track of, print and dump active coroutines;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-debug/kotlinx.coroutines.debug.junit4/-coroutines-timeout/index.html" rel="nofollow"&gt;CoroutinesTimeout&lt;/a&gt; test rule to automatically dump coroutines on test timeout.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="reactive/README.md"&gt;reactive&lt;/a&gt; — modules that provide builders and iteration support for various reactive streams libraries:
&lt;ul&gt;
&lt;li&gt;Reactive Streams (&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-reactive/kotlinx.coroutines.reactive/org.reactivestreams.-publisher/collect.html" rel="nofollow"&gt;Publisher.collect&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-reactive/kotlinx.coroutines.reactive/org.reactivestreams.-publisher/await-single.html" rel="nofollow"&gt;Publisher.awaitSingle&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-reactive/kotlinx.coroutines.reactive/publish.html" rel="nofollow"&gt;publish&lt;/a&gt;, etc),
RxJava 2.x (&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-rx2/kotlinx.coroutines.rx2/rx-flowable.html" rel="nofollow"&gt;rxFlowable&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-rx2/kotlinx.coroutines.rx2/rx-single.html" rel="nofollow"&gt;rxSingle&lt;/a&gt;, etc), and
Project Reactor (&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-reactor/kotlinx.coroutines.reactor/flux.html" rel="nofollow"&gt;flux&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-reactor/kotlinx.coroutines.reactor/mono.html" rel="nofollow"&gt;mono&lt;/a&gt;, etc).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="ui/README.md"&gt;ui&lt;/a&gt; — modules that provide coroutine dispatchers for various single-threaded UI libraries:
&lt;ul&gt;
&lt;li&gt;Android, JavaFX, and Swing.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="integration/README.md"&gt;integration&lt;/a&gt; — modules that provide integration with various asynchronous callback- and future-based libraries:
&lt;ul&gt;
&lt;li&gt;JDK8 &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-jdk8/kotlinx.coroutines.future/java.util.concurrent.-completion-stage/await.html" rel="nofollow"&gt;CompletionStage.await&lt;/a&gt;, Guava &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-guava/kotlinx.coroutines.guava/com.google.common.util.concurrent.-listenable-future/await.html" rel="nofollow"&gt;ListenableFuture.await&lt;/a&gt;, and Google Play Services &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-play-services/kotlinx.coroutines.tasks/com.google.android.gms.tasks.-task/await.html" rel="nofollow"&gt;Task.await&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;SLF4J MDC integration via &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-slf4j/kotlinx.coroutines.slf4j/-m-d-c-context/index.html" rel="nofollow"&gt;MDCContext&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Presentations and videos:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_hfBv0a09Jc" rel="nofollow"&gt;Introduction to Coroutines&lt;/a&gt; (Roman Elizarov at KotlinConf 2017, &lt;a href="https://www.slideshare.net/elizarov/introduction-to-coroutines-kotlinconf-2017" rel="nofollow"&gt;slides&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=YrrUCSi72E8" rel="nofollow"&gt;Deep dive into Coroutines&lt;/a&gt; (Roman Elizarov at KotlinConf 2017, &lt;a href="https://www.slideshare.net/elizarov/deep-dive-into-coroutines-on-jvm-kotlinconf-2017" rel="nofollow"&gt;slides&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=a3agLJQ6vt8" rel="nofollow"&gt;Kotlin Coroutines in Practice&lt;/a&gt; (Roman Elizarov at KotlinConf 2018, &lt;a href="https://www.slideshare.net/elizarov/kotlin-coroutines-in-practice-kotlinconf-2018" rel="nofollow"&gt;slides&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Guides and manuals:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.org/docs/reference/coroutines/coroutines-guide.html" rel="nofollow"&gt;Guide to kotlinx.coroutines by example&lt;/a&gt; (&lt;strong&gt;read it first&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="ui/coroutines-guide-ui.md"&gt;Guide to UI programming with coroutines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/debugging.md"&gt;Debugging capabilities in kotlinx.coroutines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/compatibility.md"&gt;Compatibility policy and experimental annotations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="CHANGES.md"&gt;Change log for kotlinx.coroutines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kotlin/KEEP/blob/master/proposals/coroutines.md"&gt;Coroutines design document (KEEP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines" rel="nofollow"&gt;Full kotlinx.coroutines API reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-using-in-your-projects" class="anchor" aria-hidden="true" href="#using-in-your-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using in your projects&lt;/h2&gt;
&lt;p&gt;The libraries are published to &lt;a href="https://bintray.com/kotlin/kotlinx/kotlinx.coroutines" rel="nofollow"&gt;kotlinx&lt;/a&gt; bintray repository,
linked to &lt;a href="https://bintray.com/bintray/jcenter?filterByPkgName=kotlinx.coroutines" rel="nofollow"&gt;JCenter&lt;/a&gt; and
pushed to &lt;a href="https://search.maven.org/#search%7Cga%7C1%7Cg%3Aorg.jetbrains.kotlinx%20a%3Akotlinx-coroutines*" rel="nofollow"&gt;Maven Central&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-maven" class="anchor" aria-hidden="true" href="#maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven&lt;/h3&gt;
&lt;p&gt;Add dependencies (you can also add other modules that you need):&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.jetbrains.kotlinx&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;kotlinx-coroutines-core&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;1.3.3&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And make sure that you use the latest Kotlin version:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;properties&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;kotlin&lt;/span&gt;.version&amp;gt;1.3.61&amp;lt;/&lt;span class="pl-ent"&gt;kotlin&lt;/span&gt;.version&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;properties&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-gradle" class="anchor" aria-hidden="true" href="#gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle&lt;/h3&gt;
&lt;p&gt;Add dependencies (you can also add other modules that you need):&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;dependencies {
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And make sure that you use the latest Kotlin version:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;buildscript {
    ext&lt;span class="pl-k"&gt;.&lt;/span&gt;kotlin_version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1.3.61&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make sure that you have either &lt;code&gt;jcenter()&lt;/code&gt; or &lt;code&gt;mavenCentral()&lt;/code&gt; in the list of repositories:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;repository {
    jcenter()
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-gradle-kotlin-dsl" class="anchor" aria-hidden="true" href="#gradle-kotlin-dsl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle Kotlin DSL&lt;/h3&gt;
&lt;p&gt;Add dependencies (you can also add other modules that you need):&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;dependencies {
    implementation(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And make sure that you use the latest Kotlin version:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;plugins {
    kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jvm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.3.61&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make sure that you have either &lt;code&gt;jcenter()&lt;/code&gt; or &lt;code&gt;mavenCentral()&lt;/code&gt; in the list of repositories.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-multiplatform" class="anchor" aria-hidden="true" href="#multiplatform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiplatform&lt;/h3&gt;
&lt;p&gt;Core modules of &lt;code&gt;kotlinx.coroutines&lt;/code&gt; are also available for
&lt;a href="#js"&gt;Kotlin/JS&lt;/a&gt; and &lt;a href="#native"&gt;Kotlin/Native&lt;/a&gt;.
In common code that should get compiled for different platforms, add dependency to&lt;br&gt;
&lt;a href="https://search.maven.org/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-core-common/1.3.3/jar" rel="nofollow"&gt;&lt;code&gt;kotlinx-coroutines-core-common&lt;/code&gt;&lt;/a&gt;
(follow the link to get the dependency declaration snippet).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-android" class="anchor" aria-hidden="true" href="#android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android&lt;/h3&gt;
&lt;p&gt;Add &lt;a href="ui/kotlinx-coroutines-android"&gt;&lt;code&gt;kotlinx-coroutines-android&lt;/code&gt;&lt;/a&gt;
module as dependency when using &lt;code&gt;kotlinx.coroutines&lt;/code&gt; on Android:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This gives you access to Android &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-main.html" rel="nofollow"&gt;Dispatchers.Main&lt;/a&gt;
coroutine dispatcher and also makes sure that in case of crashed coroutine with unhandled exception this
exception is logged before crashing Android application, similarly to the way uncaught exceptions in
threads are handled by Android runtime.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-r8-and-proguard" class="anchor" aria-hidden="true" href="#r8-and-proguard"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;R8 and ProGuard&lt;/h4&gt;
&lt;p&gt;For R8 no actions required, it will take obfuscation rules from the jar.&lt;/p&gt;
&lt;p&gt;For Proguard  you need to add options from &lt;a href="kotlinx-coroutines-core/jvm/resources/META-INF/proguard/coroutines.pro"&gt;coroutines.pro&lt;/a&gt; to your rules manually.&lt;/p&gt;
&lt;p&gt;R8 is a replacement for ProGuard in Android ecosystem, it is enabled by default since Android gradle plugin 3.4.0 (3.3.0-beta also had it enabled).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-js" class="anchor" aria-hidden="true" href="#js"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JS&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://kotlinlang.org/docs/reference/js-overview.html" rel="nofollow"&gt;Kotlin/JS&lt;/a&gt; version of &lt;code&gt;kotlinx.coroutines&lt;/code&gt; is published as
&lt;a href="https://search.maven.org/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-core-js/1.3.3/jar" rel="nofollow"&gt;&lt;code&gt;kotlinx-coroutines-core-js&lt;/code&gt;&lt;/a&gt;
(follow the link to get the dependency declaration snippet).&lt;/p&gt;
&lt;p&gt;You can also use &lt;a href="https://www.npmjs.com/package/kotlinx-coroutines-core" rel="nofollow"&gt;&lt;code&gt;kotlinx-coroutines-core&lt;/code&gt;&lt;/a&gt; package via NPM.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-native" class="anchor" aria-hidden="true" href="#native"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Native&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://kotlinlang.org/docs/reference/native-overview.html" rel="nofollow"&gt;Kotlin/Native&lt;/a&gt; version of &lt;code&gt;kotlinx.coroutines&lt;/code&gt; is published as
&lt;a href="https://search.maven.org/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-core-native/1.3.3/jar" rel="nofollow"&gt;&lt;code&gt;kotlinx-coroutines-core-native&lt;/code&gt;&lt;/a&gt;
(follow the link to get the dependency declaration snippet).&lt;/p&gt;
&lt;p&gt;Only single-threaded code (JS-style) on Kotlin/Native is currently supported.
Kotlin/Native supports only Gradle version 4.10 and you need to enable Gradle metadata in your
&lt;code&gt;settings.gradle&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;enableFeaturePreview(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GRADLE_METADATA&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since Kotlin/Native does not generally provide binary compatibility between versions,
you should use the same version of Kotlin/Native compiler as was used to build &lt;code&gt;kotlinx.coroutines&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;This library is built with Gradle. To build it, use &lt;code&gt;./gradlew build&lt;/code&gt;.
You can import this project into IDEA, but you have to delegate build actions
to Gradle (in Preferences -&amp;gt; Build, Execution, Deployment -&amp;gt; Build Tools -&amp;gt; Gradle -&amp;gt; Runner)&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;JDK &amp;gt;= 1.8 referred to by the &lt;code&gt;JAVA_HOME&lt;/code&gt; environment variable. JDK must include JavaFX.&lt;/li&gt;
&lt;li&gt;JDK 1.6 referred to by the &lt;code&gt;JDK_16&lt;/code&gt; environment variable. It is okay to have &lt;code&gt;JDK_16&lt;/code&gt; pointing to &lt;code&gt;JAVA_HOME&lt;/code&gt; for external contributions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributions-and-releases" class="anchor" aria-hidden="true" href="#contributions-and-releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions and releases&lt;/h2&gt;
&lt;p&gt;All development (both new features and bug fixes) is performed in &lt;code&gt;develop&lt;/code&gt; branch.
This way &lt;code&gt;master&lt;/code&gt; sources always contain sources of the most recently released version.
Please send PRs with bug fixes to &lt;code&gt;develop&lt;/code&gt; branch.
Fixes to documentation in markdown files are an exception to this rule. They are updated directly in &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;develop&lt;/code&gt; branch is pushed to &lt;code&gt;master&lt;/code&gt; during release.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Full release procedure checklist is &lt;a href="RELEASE.md"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Steps for contributing new integration modules are explained &lt;a href="integration/README.md#Contributing"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


























&lt;/article&gt;&lt;/div&gt;</description><author>Kotlin</author><guid isPermaLink="false">https://github.com/Kotlin/kotlinx.coroutines</guid><pubDate>Sun, 05 Jan 2020 00:04:00 GMT</pubDate></item><item><title>mockk/mockk #5 in Kotlin, Today</title><link>https://github.com/mockk/mockk</link><description>&lt;p&gt;&lt;i&gt;mocking library for Kotlin&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/logo-site.png"&gt;&lt;img src="doc/logo-site.png" alt="mockk" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="doc/kotlin-logo.png"&gt;&lt;img src="doc/kotlin-logo.png" alt="kotlin" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitter.im/mockk-io/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=body_badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80bc8efa76dc0cf5ca6986388b531727f8175e0b/68747470733a2f2f6261646765732e6769747465722e696d2f6d6f636b6b2d696f2f4c6f6262792e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/mockk-io/Lobby.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cmockk" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/796303e3aab882a1d006714740d84ff88ea2c27f/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f696f2e6d6f636b6b2f6d6f636b6b2e7376673f6c6162656c3d72656c65617365" alt="Relase Version" data-canonical-src="https://img.shields.io/maven-central/v/io.mockk/mockk.svg?label=release" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/mockk/mockk/releases"&gt;&lt;img src="https://camo.githubusercontent.com/4b80b416a3eb6d258c6129b611b2e1282dcb13ae/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6368616e67652532306c6f672d2545322539362541342d79656c6c6f772e737667" alt="Change log" data-canonical-src="https://img.shields.io/badge/change%20log-%E2%96%A4-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/mockk/mockk" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bc1720be5e820ef52ffb7b39cc6d6a8baae88519/68747470733a2f2f636f6465636f762e696f2f67682f6d6f636b6b2f6d6f636b6b2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/mockk/mockk/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/mockk/mockk"&gt;&lt;img src="https://camo.githubusercontent.com/d7053a4fd5cad19da5f27682cc96c6132031f0db/68747470733a2f2f75732d63656e7472616c312d626f742d6d6f636b6b2e636c6f756466756e6374696f6e732e6e65742f626f742d6d6f636b6b" alt="Weekly users" data-canonical-src="https://us-central1-bot-mockk.cloudfunctions.net/bot-mockk" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://mockk.io/ANDROID" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/eb54d63dadf4ca40382d1b11f736ec31a24e0aff/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616e64726f69642d737570706f72742d677265656e2e737667" alt="Android" data-canonical-src="https://img.shields.io/badge/android-support-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://mockk.io/MATRIX" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7b12541a0ec9de961a18d048bb6653ce57ba0aa0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d61747269782d746573742d6535333939342e737667" alt="Matrix tests" data-canonical-src="https://img.shields.io/badge/matrix-test-e53994.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="/DEPRECATED"&gt;&lt;img src="https://camo.githubusercontent.com/9c322b6ecbfe2c08c972f56102f121fa525731cf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646570726563617465642d4150492d7265642e737667" alt="Deprecated" data-canonical-src="https://img.shields.io/badge/deprecated-API-red.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codetriage.com/mockk/mockk" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f8d16063b65c0842c15d486145436b5d434d485b/68747470733a2f2f7777772e636f64657472696167652e636f6d2f6d6f636b6b2f6d6f636b6b2f6261646765732f75736572732e737667" alt="Open Source Helpers" data-canonical-src="https://www.codetriage.com/mockk/mockk/badges/users.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-kotlin-academy-articles-" class="anchor" aria-hidden="true" href="#kotlin-academy-articles-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kotlin Academy articles &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0e6d19294a352483115460090f4a9a25109f8251/68747470733a2f2f63646e2d696d616765732d312e6d656469756d2e636f6d2f6c6574746572626f782f34372f34372f35302f35302f312a465558714938386d7474565f6b56386154724b6a4f672e706e673f736f757263653d6c6f676f4176617461722d3166396637376234623364312d2d2d653537623330343830316566"&gt;&lt;img src="https://camo.githubusercontent.com/0e6d19294a352483115460090f4a9a25109f8251/68747470733a2f2f63646e2d696d616765732d312e6d656469756d2e636f6d2f6c6574746572626f782f34372f34372f35302f35302f312a465558714938386d7474565f6b56386154724b6a4f672e706e673f736f757263653d6c6f676f4176617461722d3166396637376234623364312d2d2d653537623330343830316566" width="20px" data-canonical-src="https://cdn-images-1.medium.com/letterbox/47/47/50/50/1*FUXqI88mttV_kV8aTrKjOg.png?source=logoAvatar-1f9f77b4b3d1---e57b304801ef" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Check the series of articles "Mocking is not rocket science" at &lt;a href="https://blog.kotlin-academy.com" rel="nofollow"&gt;Kt. Academy&lt;/a&gt; describing MockK from the very basics of mocking up to description of all advanced features.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.kotlin-academy.com/mocking-is-not-rocket-science-basics-ae55d0aadf2b" rel="nofollow"&gt;Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.kotlin-academy.com/mocking-is-not-rocket-science-expected-behavior-and-behavior-verification-3862dd0e0f03" rel="nofollow"&gt;Expected behavior and behavior verification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.kotlin-academy.com/mocking-is-not-rocket-science-mockk-features-e5d55d735a98" rel="nofollow"&gt;MockK features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.kotlin-academy.com/mocking-is-not-rocket-science-mockk-advanced-features-42277e5983b5" rel="nofollow"&gt;MockK advanced features&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-spring-support" class="anchor" aria-hidden="true" href="#spring-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring support&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Ninja-Squad/springmockk"&gt;springmockk&lt;/a&gt; introduced in official &lt;a href="https://spring.io/guides/tutorials/spring-boot-kotlin/" rel="nofollow"&gt;Spring Boot Kotlin tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-version-twist" class="anchor" aria-hidden="true" href="#version-twist"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version twist&lt;/h3&gt;
&lt;p&gt;From version 1.9 MockK switched to Kotlin 1.3 and Coroutines 1.0 by default and other branch 1.9.kotlin12 may be used for compatibility with Kotlin 1.2.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/19-verison-twist.png"&gt;&lt;img src="doc/19-verison-twist.png" alt="Switch of versions" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-known-issues--worth-to-remember" class="anchor" aria-hidden="true" href="#known-issues--worth-to-remember"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known issues &amp;amp; worth to remember&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Some known issues related to Kotlin 1.3, Gradle 5 and Spring Boot were fixed in MockK 1.9. Please report if you face any problems.&lt;/li&gt;
&lt;li&gt;PowerMock needs a workaround to run together with MockK &lt;a href="https://github.com/mockk/mockk/issues/79#issuecomment-437646333"&gt;#79&lt;/a&gt;. (not sure after workaround if it is generally usable or not, please somebody report it)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Table of contents:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;auto-gen TOC:
{:toc}&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-examples--articles" class="anchor" aria-hidden="true" href="#examples--articles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples &amp;amp; articles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.raywenderlich.com/5443751-testing-with-mockk" rel="nofollow"&gt;Testing With MockK paid course on raywenderlich.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;TDD for Android tutorial &lt;a href="https://www.youtube.com/watch?v=60KFJTb_HwU" rel="nofollow"&gt;part 1&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=32pnzGirvgM" rel="nofollow"&gt;part 2&lt;/a&gt; by Ryan Kay&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PhilippeBoisney/NoBullshit"&gt;https://github.com/PhilippeBoisney/NoBullshit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@Phil_Boisney/playing-with-kotlin-you-know-everything-john-doe-8275a6e98a96" rel="nofollow"&gt;https://medium.com/@Phil_Boisney/playing-with-kotlin-you-know-everything-john-doe-8275a6e98a96&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/joe-tsai/mockk-%E4%B8%80%E6%AC%BE%E5%BC%B7%E5%A4%A7%E7%9A%84-kotlin-mocking-library-part-1-4-39a85e42b8" rel="nofollow"&gt;用 Kotlin + Mockito 寫單元測試會碰到什麼問題？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/joe-tsai/mockk-%E4%B8%80%E6%AC%BE%E5%BC%B7%E5%A4%A7%E7%9A%84-kotlin-mocking-library-part-2-4-4be059331110" rel="nofollow"&gt;MockK 功能介紹：mockk, every, Annotation, verify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/joe-tsai/mockk-%E4%B8%80%E6%AC%BE%E5%BC%B7%E5%A4%A7%E7%9A%84-kotlin-mocking-library-part-3-4-79b40fb73964" rel="nofollow"&gt;MockK 功能介紹：Relaxed Mocks, 再談 Verify, Capture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/joe-tsai/mockk-%E4%B8%80%E6%AC%BE%E5%BC%B7%E5%A4%A7%E7%9A%84-kotlin-mocking-library-part-4-4-f82443848a3a" rel="nofollow"&gt;如何測試 Static Method, Singleton&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=h8_LZn1DFDI" rel="nofollow"&gt;YouTube: Android Developer Live Coding #13: Unit Testing with Mockk, Coroutines, Test Driven Development
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@oleksiypylypenko/mockk-intentions-dbe378106a6b" rel="nofollow"&gt;MockK: intentions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RX_g65J14H0&amp;amp;feature=youtu.be&amp;amp;t=940" rel="nofollow"&gt;KotlinConf 2018 - Best Practices for Unit Testing in Kotlin by Philipp Hauer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kotlin/kotlin-fullstack-sample/pull/28/files#diff-eade18fbfd0abfb6338dbfa647b3215dR17"&gt;kotlin-fullstack-sample&lt;/a&gt; project covered with tests&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dzone.com/articles/new-mocking-tool-for-kotlin-an-alternative-to-java" rel="nofollow"&gt;DZone article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://habrahabr.ru/post/341202/" rel="nofollow"&gt;Habrahabr article&lt;/a&gt; (RU)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ordina-jworks.github.io/testing/2018/02/05/Writing-tests-in-Kotlin-with-MockK.html" rel="nofollow"&gt;Mocking in Kotlin with MockK - Yannick De Turck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;All you need to get started is just to add a dependency to &lt;code&gt;MockK&lt;/code&gt; library.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-gradlemaven-dependency" class="anchor" aria-hidden="true" href="#gradlemaven-dependency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle/maven dependency&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Approach&lt;/th&gt;&lt;th&gt;Instruction&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/gradle.png"&gt;&lt;img src="doc/gradle.png" alt="Gradle" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
    &lt;pre&gt;testImplementation "io.mockk:mockk:{version}"&lt;/pre&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/gradle.png"&gt;&lt;img src="doc/gradle.png" alt="Gradle" style="max-width:100%;"&gt;&lt;/a&gt; (Kotlin DSL)&lt;/td&gt;
&lt;td&gt;
    &lt;pre&gt;testImplementation("io.mockk:mockk:{version}")&lt;/pre&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/maven.png"&gt;&lt;img src="doc/maven.png" alt="Maven" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;pre&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;io.mockk&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;mockk&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;{version}&amp;lt;/version&amp;gt;
    &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;&lt;/pre&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="ANDROID.md"&gt;&lt;img align="top" src="doc/robot-small.png" height="20" alt="android" style="max-width:100%;"&gt; Unit&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
    &lt;pre&gt;testImplementation "io.mockk:mockk:{version}"&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="ANDROID.md"&gt;&lt;img align="top" src="doc/robot-small.png" height="20" alt="android" style="max-width:100%;"&gt; Instrumented&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
    &lt;pre&gt;androidTestImplementation "io.mockk:mockk-android:{version}"&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Common multiplatform&lt;/td&gt;
&lt;td&gt;
    &lt;pre&gt;testImplementation "io.mockk:mockk-common:{version}"&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;where &lt;code&gt;{version}&lt;/code&gt; corresponds to version as below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kotlin 1.3+ and Coroutines 1.0+ Version: &lt;a href="https://bintray.com/bintray/jcenter/io.mockk%3Amockk-dsl-jvm/1.9.3/link" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4c8bb6d85465f2ac66d21dbb744eacb97ce7d7e1/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f62696e747261792f6a63656e7465722f696f2e6d6f636b6b2533416d6f636b6b2d64736c2d6a766d2f696d616765732f646f776e6c6f61642e7376673f76657273696f6e3d312e392e33" alt="Download" data-canonical-src="https://api.bintray.com/packages/bintray/jcenter/io.mockk%3Amockk-dsl-jvm/images/download.svg?version=1.9.3" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kotlin 1.2 Compatible Version: &lt;a href="https://bintray.com/bintray/jcenter/io.mockk%3Amockk-dsl-jvm/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/190c63f0257652e56fd3a852d41f9f96646f3913/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f62696e747261792f6a63656e7465722f696f2e6d6f636b6b2533416d6f636b6b2d64736c2d6a766d2f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/bintray/jcenter/io.mockk%3Amockk-dsl-jvm/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-dsl-examples" class="anchor" aria-hidden="true" href="#dsl-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DSL examples&lt;/h2&gt;
&lt;p&gt;Simplest example. By default mocks are strict, so you need to provide some behaviour.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; car &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;Car&lt;/span&gt;&amp;gt;()

every { car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) } returns &lt;span class="pl-en"&gt;Outcome&lt;/span&gt;.&lt;span class="pl-en"&gt;OK&lt;/span&gt;

car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns OK&lt;/span&gt;

verify { car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) }

confirmVerified(car)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-annotations" class="anchor" aria-hidden="true" href="#annotations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Annotations&lt;/h3&gt;
&lt;p&gt;You can use annotations to simplify the creation of mock objects:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;TrafficSystem&lt;/span&gt; {
  &lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; car1&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;
  
  &lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; car2&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;
  
  &lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; car3&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;CarTest&lt;/span&gt; {
  &lt;span class="pl-k"&gt;@MockK&lt;/span&gt;
  &lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; car1&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;

  &lt;span class="pl-k"&gt;@RelaxedMockK&lt;/span&gt;
  &lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; car2&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;

  &lt;span class="pl-k"&gt;@MockK&lt;/span&gt;(&lt;span class="pl-c1"&gt;relaxUnitFun&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
  &lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; car3&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;

  &lt;span class="pl-k"&gt;@SpyK&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; car4 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;()
  
  &lt;span class="pl-k"&gt;@InjectMockKs&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; trafficSystem &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;TrafficSystem&lt;/span&gt;()
  
  &lt;span class="pl-k"&gt;@Before&lt;/span&gt;
  &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;setUp&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MockKAnnotations&lt;/span&gt;.&lt;span class="pl-en"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;this&lt;/span&gt;, relaxUnitFun &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; turn relaxUnitFun on for all mocks&lt;/span&gt;

  &lt;span class="pl-k"&gt;@Test&lt;/span&gt;
  &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;calculateAddsValues1&lt;/span&gt;() {
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... use car1, car2, car3 and car4&lt;/span&gt;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Injection first tries to match properties by name, then by class or superclass.
Check the &lt;code&gt;lookupType&lt;/code&gt; parameter for customization.&lt;/p&gt;
&lt;p&gt;Properties are injected even if &lt;code&gt;private&lt;/code&gt; is applied. Constructors for injection are selected from the biggest
number of arguments to lowest.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@InjectMockKs&lt;/code&gt; by default is injecting only &lt;code&gt;lateinit var&lt;/code&gt;s or &lt;code&gt;var&lt;/code&gt;s that are not assigned.
To change this, use &lt;code&gt;overrideValues = true&lt;/code&gt;. This would assign the value even if it is already somehow initialized.
To inject &lt;code&gt;val&lt;/code&gt;s, use &lt;code&gt;injectImmutable = true&lt;/code&gt;. For a shorter notation use &lt;code&gt;@OverrideMockKs&lt;/code&gt; which does the same as
&lt;code&gt;@InjectMockKs&lt;/code&gt; by default, but turns these two flags on.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-junit5" class="anchor" aria-hidden="true" href="#junit5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JUnit5&lt;/h4&gt;
&lt;p&gt;In JUnit5 you can use &lt;code&gt;MockKExtension&lt;/code&gt; to initialize your mocks.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@ExtendWith&lt;/span&gt;(&lt;span class="pl-en"&gt;MockKExtension&lt;/span&gt;::&lt;span class="pl-c1"&gt;class&lt;/span&gt;)
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;CarTest&lt;/span&gt; {
  &lt;span class="pl-k"&gt;@MockK&lt;/span&gt;
  &lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; car1&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;

  &lt;span class="pl-k"&gt;@RelaxedMockK&lt;/span&gt;
  &lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; car2&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;

  &lt;span class="pl-k"&gt;@MockK&lt;/span&gt;(&lt;span class="pl-c1"&gt;relaxUnitFun&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
  &lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; car3&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;

  &lt;span class="pl-k"&gt;@SpyK&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; car4 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;()

  &lt;span class="pl-k"&gt;@Test&lt;/span&gt;
  &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;calculateAddsValues1&lt;/span&gt;() {
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... use car1, car2, car3 and car4&lt;/span&gt;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Additionally, it adds the possibility to use &lt;code&gt;@MockK&lt;/code&gt; and &lt;code&gt;@RelaxedMockK&lt;/code&gt; on test function parameters:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@Test&lt;/span&gt;
&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;calculateAddsValues1&lt;/span&gt;(&lt;span class="pl-k"&gt;@MockK&lt;/span&gt; &lt;span class="pl-smi"&gt;car1&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;, &lt;span class="pl-k"&gt;@RelaxedMockK&lt;/span&gt; &lt;span class="pl-smi"&gt;car2&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;) {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... use car1 and car2&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-spy" class="anchor" aria-hidden="true" href="#spy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spy&lt;/h3&gt;
&lt;p&gt;Spies allow to mix mocks and real objects.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; car &lt;span class="pl-k"&gt;=&lt;/span&gt; spyk(&lt;span class="pl-en"&gt;Car&lt;/span&gt;()) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or spyk&amp;lt;Car&amp;gt;() to call default constructor&lt;/span&gt;

car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns whatever real function of Car returns&lt;/span&gt;

verify { car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) }

confirmVerified(car)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: the spy object is a copy of a passed object.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-relaxed-mock" class="anchor" aria-hidden="true" href="#relaxed-mock"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Relaxed mock&lt;/h3&gt;
&lt;p&gt;A &lt;code&gt;relaxed mock&lt;/code&gt; is the mock that returns some simple value for all functions.
This allows to skip specifying behavior for each case, while still allowing to stub things you need.
For reference types, chained mocks are returned.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; car &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;Car&lt;/span&gt;&amp;gt;(relaxed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)

car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns null&lt;/span&gt;

verify { car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) }

confirmVerified(car)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: relaxed mocking is working badly with generic return types. A class cast exception is usually thrown in this case.
Opt for stubbing manually in case of a generic return type.&lt;/p&gt;
&lt;p&gt;Workaround:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; func &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;() &lt;span class="pl-k"&gt;-&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(relaxed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; in this case invoke function has generic return type&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this line is workaround, without it the relaxed mock would throw a class cast exception on the next line&lt;/span&gt;
every { func() } returns &lt;span class="pl-en"&gt;Car&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or you can return mockk() for example &lt;/span&gt;

func()&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-mock-relaxed-for-functions-returning-unit" class="anchor" aria-hidden="true" href="#mock-relaxed-for-functions-returning-unit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mock relaxed for functions returning Unit&lt;/h3&gt;
&lt;p&gt;In case you would like &lt;code&gt;Unit&lt;/code&gt; returning functions to be relaxed, you can use &lt;code&gt;relaxUnitFun = true&lt;/code&gt; as an argument to the &lt;code&gt;mockk&lt;/code&gt; function,
&lt;code&gt;@MockK&lt;/code&gt;annotation or &lt;code&gt;MockKAnnotations.init&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;Function:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;mockk&amp;lt;&lt;span class="pl-en"&gt;MockCls&lt;/span&gt;&amp;gt;(relaxUnitFun &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Annotation:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@MockK&lt;/span&gt;(&lt;span class="pl-c1"&gt;relaxUnitFun&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
&lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; mock1&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;RurfMockCls&lt;/span&gt;
&lt;span class="pl-en"&gt;init&lt;/span&gt; {
    &lt;span class="pl-en"&gt;MockKAnnotations&lt;/span&gt;.&lt;span class="pl-en"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;this&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;MockKAnnotations.init:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@MockK&lt;/span&gt;
&lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; mock2&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;RurfMockCls&lt;/span&gt;
&lt;span class="pl-en"&gt;init&lt;/span&gt; {
    &lt;span class="pl-en"&gt;MockKAnnotations&lt;/span&gt;.&lt;span class="pl-en"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;this&lt;/span&gt;, relaxUnitFun &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-object-mocks" class="anchor" aria-hidden="true" href="#object-mocks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Object mocks&lt;/h3&gt;
&lt;p&gt;Objects can be transformed to mocks in the following way:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;object&lt;/span&gt; MockObj {
  &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;add&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;=&lt;/span&gt; a &lt;span class="pl-k"&gt;+&lt;/span&gt; b
}

mockkObject(&lt;span class="pl-en"&gt;MockObj&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; applies mocking to an Object&lt;/span&gt;

assertEquals(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-en"&gt;MockObj&lt;/span&gt;.add(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;))

every { &lt;span class="pl-en"&gt;MockObj&lt;/span&gt;.add(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;) } returns &lt;span class="pl-c1"&gt;55&lt;/span&gt;

assertEquals(&lt;span class="pl-c1"&gt;55&lt;/span&gt;, &lt;span class="pl-en"&gt;MockObj&lt;/span&gt;.add(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To revert back, use &lt;code&gt;unmockkAll&lt;/code&gt; or &lt;code&gt;unmockkObject&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@Before&lt;/span&gt;
&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;beforeTests&lt;/span&gt;() {
    mockkObject(&lt;span class="pl-en"&gt;MockObj&lt;/span&gt;)
    every { &lt;span class="pl-en"&gt;MockObj&lt;/span&gt;.add(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;) } returns &lt;span class="pl-c1"&gt;55&lt;/span&gt;
}

&lt;span class="pl-k"&gt;@Test&lt;/span&gt;
&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;willUseMockBehaviour&lt;/span&gt;() {
    assertEquals(&lt;span class="pl-c1"&gt;55&lt;/span&gt;, &lt;span class="pl-en"&gt;MockObj&lt;/span&gt;.add(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;))
}

&lt;span class="pl-k"&gt;@After&lt;/span&gt;
&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;afterTests&lt;/span&gt;() {
    unmockkAll()
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or unmockkObject(MockObj)&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Despite the Kotlin language limits, you can create new instances of objects if required by testing logic:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; newObjectMock &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;MockObj&lt;/span&gt;&amp;gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-class-mock" class="anchor" aria-hidden="true" href="#class-mock"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Class mock&lt;/h3&gt;
&lt;p&gt;Sometimes you need a mock of arbitrary class. Use &lt;code&gt;mockkClass&lt;/code&gt; in those cases.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; car &lt;span class="pl-k"&gt;=&lt;/span&gt; mockkClass(&lt;span class="pl-smi"&gt;Car&lt;/span&gt;::&lt;span class="pl-c1"&gt;class&lt;/span&gt;)

every { car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) } returns &lt;span class="pl-en"&gt;Outcome&lt;/span&gt;.&lt;span class="pl-en"&gt;OK&lt;/span&gt;

car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns OK&lt;/span&gt;

verify { car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) }&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-enumeration-mocks" class="anchor" aria-hidden="true" href="#enumeration-mocks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enumeration mocks&lt;/h3&gt;
&lt;p&gt;Enums can be mocked using &lt;code&gt;mockkObject&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Enumeration&lt;/span&gt;(&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;goodInt&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) {
    &lt;span class="pl-en"&gt;CONSTANT&lt;/span&gt;(&lt;span class="pl-c1"&gt;35&lt;/span&gt;),
    &lt;span class="pl-en"&gt;OTHER_CONSTANT&lt;/span&gt;(&lt;span class="pl-c1"&gt;45&lt;/span&gt;);
}

mockkObject(&lt;span class="pl-en"&gt;Enumeration&lt;/span&gt;.&lt;span class="pl-en"&gt;CONSTANT&lt;/span&gt;)
every { &lt;span class="pl-en"&gt;Enumeration&lt;/span&gt;.&lt;span class="pl-en"&gt;CONSTANT&lt;/span&gt;.goodInt } returns &lt;span class="pl-c1"&gt;42&lt;/span&gt;
assertEquals(&lt;span class="pl-c1"&gt;42&lt;/span&gt;, &lt;span class="pl-en"&gt;Enumeration&lt;/span&gt;.&lt;span class="pl-en"&gt;CONSTANT&lt;/span&gt;.goodInt)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-constructor-mocks" class="anchor" aria-hidden="true" href="#constructor-mocks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Constructor mocks&lt;/h3&gt;
&lt;p&gt;Sometimes, especially in code you don't own, you need to mock newly created objects.
For this purpose, the following constructs are provided:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MockCls&lt;/span&gt; {
  &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;add&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;=&lt;/span&gt; a &lt;span class="pl-k"&gt;+&lt;/span&gt; b
}

mockkConstructor(&lt;span class="pl-smi"&gt;MockCls&lt;/span&gt;::&lt;span class="pl-c1"&gt;class&lt;/span&gt;)

every { anyConstructed&amp;lt;&lt;span class="pl-en"&gt;MockCls&lt;/span&gt;&amp;gt;().add(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;) } returns &lt;span class="pl-c1"&gt;4&lt;/span&gt;

assertEquals(&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-en"&gt;MockCls&lt;/span&gt;().add(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; note new object is created&lt;/span&gt;

verify { anyConstructed&amp;lt;&lt;span class="pl-en"&gt;MockCls&lt;/span&gt;&amp;gt;().add(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;) }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The basic idea is that just after the constructor of the mocked class is executed (any of them), objects become a &lt;code&gt;constructed mock&lt;/code&gt;.
Mocking behavior of such a mock is connected to the special &lt;code&gt;prototype mock&lt;/code&gt; denoted by &lt;code&gt;anyConstructed&amp;lt;MockCls&amp;gt;()&lt;/code&gt;.
There is one instance per class of such a &lt;code&gt;prototype mock&lt;/code&gt;. Call recording also happens to the &lt;code&gt;prototype mock&lt;/code&gt;.
If no behavior for the function is specified then the original function is executed.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-partial-argument-matching" class="anchor" aria-hidden="true" href="#partial-argument-matching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Partial argument matching&lt;/h3&gt;
&lt;p&gt;You can mix both regular arguments and matchers:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; car &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;Car&lt;/span&gt;&amp;gt;()

every { 
  car.recordTelemetry(
    speed &lt;span class="pl-k"&gt;=&lt;/span&gt; more(&lt;span class="pl-c1"&gt;50&lt;/span&gt;),
    direction &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; here eq() is used&lt;/span&gt;
    lat &lt;span class="pl-k"&gt;=&lt;/span&gt; any(),
    long &lt;span class="pl-k"&gt;=&lt;/span&gt; any()
  )
} returns &lt;span class="pl-en"&gt;Outcome&lt;/span&gt;.&lt;span class="pl-en"&gt;RECORDED&lt;/span&gt;

obj.recordTelemetry(&lt;span class="pl-c1"&gt;60&lt;/span&gt;, &lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;, &lt;span class="pl-c1"&gt;51.1377382&lt;/span&gt;, &lt;span class="pl-c1"&gt;17.0257142&lt;/span&gt;)

verify { obj.recordTelemetry(&lt;span class="pl-c1"&gt;60&lt;/span&gt;, &lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;, &lt;span class="pl-c1"&gt;51.1377382&lt;/span&gt;, &lt;span class="pl-c1"&gt;17.0257142&lt;/span&gt;) }

confirmVerified(obj)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-chained-calls" class="anchor" aria-hidden="true" href="#chained-calls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chained calls&lt;/h3&gt;
&lt;p&gt;You can stub chains of calls:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; car &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;Car&lt;/span&gt;&amp;gt;()

every { car.door(&lt;span class="pl-en"&gt;DoorType&lt;/span&gt;.&lt;span class="pl-en"&gt;FRONT_LEFT&lt;/span&gt;).windowState() } returns &lt;span class="pl-en"&gt;WindowState&lt;/span&gt;.&lt;span class="pl-en"&gt;UP&lt;/span&gt;

car.door(&lt;span class="pl-en"&gt;DoorType&lt;/span&gt;.&lt;span class="pl-en"&gt;FRONT_LEFT&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns chained mock for Door&lt;/span&gt;
car.door(&lt;span class="pl-en"&gt;DoorType&lt;/span&gt;.&lt;span class="pl-en"&gt;FRONT_LEFT&lt;/span&gt;).windowState() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns WindowState.UP&lt;/span&gt;

verify { car.door(&lt;span class="pl-en"&gt;DoorType&lt;/span&gt;.&lt;span class="pl-en"&gt;FRONT_LEFT&lt;/span&gt;).windowState() }

confirmVerified(car)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: in case the function's return type is generic then the information about the actual type is gone.
To make chained calls work, additional information is required.
Most of the time the framework will catch the cast exception and do &lt;code&gt;autohinting&lt;/code&gt;.
In the case it is explicitly required, use &lt;code&gt;hint&lt;/code&gt; before making the next call.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;every { obj.op2(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;).hint(&lt;span class="pl-smi"&gt;Int&lt;/span&gt;::&lt;span class="pl-c1"&gt;class&lt;/span&gt;).op1(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;) } returns &lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-hierarchical-mocking" class="anchor" aria-hidden="true" href="#hierarchical-mocking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hierarchical mocking&lt;/h3&gt;
&lt;p&gt;From version 1.9.1 mocks may be chained into hierarchies:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;AddressBook&lt;/span&gt; {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; contacts&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Contact&lt;/span&gt;&amp;gt;
}

&lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;Contact&lt;/span&gt; {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; telephone&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; address&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Address&lt;/span&gt;
}

&lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;Address&lt;/span&gt; {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; city&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; zip&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; addressBook &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;AddressBook&lt;/span&gt;&amp;gt; {
    every { contacts } returns &lt;span class="pl-c1"&gt;listOf&lt;/span&gt;(
        mockk {
            every { name } returns &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            every { telephone } returns &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;123-456-789&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            every { address.city } returns &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;New-York&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            every { address.zip } returns &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;123-45&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        },
        mockk {
            every { name } returns &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Alex&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            every { telephone } returns &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;789-456-123&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            every { address } returns mockk {
                every { city } returns &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Wroclaw&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                every { zip } returns &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;543-21&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            }
        }
    )
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-capturing" class="anchor" aria-hidden="true" href="#capturing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Capturing&lt;/h3&gt;
&lt;p&gt;You can capture an argument to a &lt;code&gt;CapturingSlot&lt;/code&gt; or &lt;code&gt;MutableList&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; car &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;Car&lt;/span&gt;&amp;gt;()

&lt;span class="pl-k"&gt;val&lt;/span&gt; slot &lt;span class="pl-k"&gt;=&lt;/span&gt; slot&amp;lt;&lt;span class="pl-c1"&gt;Double&lt;/span&gt;&amp;gt;()
&lt;span class="pl-k"&gt;val&lt;/span&gt; list &lt;span class="pl-k"&gt;=&lt;/span&gt; mutableListOf&amp;lt;&lt;span class="pl-c1"&gt;Double&lt;/span&gt;&amp;gt;()

every {
  obj.recordTelemetry(
    speed &lt;span class="pl-k"&gt;=&lt;/span&gt; capture(slot), &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; makes mock match call with any value for `speed` and record it in a slot&lt;/span&gt;
    direction &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; makes mock and capturing only match calls with specific `direction`. Use `any()` to match calls with any `direction`&lt;/span&gt;
  )
} answers {
  &lt;span class="pl-c1"&gt;println&lt;/span&gt;(slot.captured)

  &lt;span class="pl-en"&gt;Outcome&lt;/span&gt;.&lt;span class="pl-en"&gt;RECORDED&lt;/span&gt;
}


every {
  obj.recordTelemetry(
    speed &lt;span class="pl-k"&gt;=&lt;/span&gt; capture(list),
    direction &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;SOUTH&lt;/span&gt;
  )
} answers {
  &lt;span class="pl-c1"&gt;println&lt;/span&gt;(list)

  &lt;span class="pl-en"&gt;Outcome&lt;/span&gt;.&lt;span class="pl-en"&gt;RECORDED&lt;/span&gt;
}

obj.recordTelemetry(speed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;15&lt;/span&gt;, direction &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints 15&lt;/span&gt;
obj.recordTelemetry(speed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;16&lt;/span&gt;, direction &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;SOUTH&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints 16&lt;/span&gt;

verify(exactly &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;) { obj.recordTelemetry(speed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;or&lt;/span&gt;(&lt;span class="pl-c1"&gt;15&lt;/span&gt;, &lt;span class="pl-c1"&gt;16&lt;/span&gt;), direction &lt;span class="pl-k"&gt;=&lt;/span&gt; any()) }

confirmVerified(obj)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-verification-atleast-atmost-or-exactly-times" class="anchor" aria-hidden="true" href="#verification-atleast-atmost-or-exactly-times"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verification atLeast, atMost or exactly times&lt;/h3&gt;
&lt;p&gt;You can check the call count with the &lt;code&gt;atLeast&lt;/code&gt;, &lt;code&gt;atMost&lt;/code&gt; or &lt;code&gt;exactly&lt;/code&gt; parameters:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; car &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;Car&lt;/span&gt;&amp;gt;(relaxed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)

car.accelerate(fromSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, toSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;)
car.accelerate(fromSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, toSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;)
car.accelerate(fromSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;, toSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; all pass&lt;/span&gt;
verify(atLeast &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;) { car.accelerate(allAny()) }
verify(atMost  &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;) { car.accelerate(fromSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, toSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;or&lt;/span&gt;(&lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;30&lt;/span&gt;)) }
verify(exactly &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) { car.accelerate(fromSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, toSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;) }
verify(exactly &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) { car.accelerate(fromSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;, toSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;) } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; means no calls were performed&lt;/span&gt;

confirmVerified(car)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-verification-order" class="anchor" aria-hidden="true" href="#verification-order"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verification order&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;verifyAll&lt;/code&gt; verifies that all calls happened without checking their order.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;verifySequence&lt;/code&gt; verifies that the calls happened in a specified sequence.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;verifyOrder&lt;/code&gt; verifies that calls happened in a specific order.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wasNot Called&lt;/code&gt; verifies that the mock or the list of mocks was not called at all.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MockedClass&lt;/span&gt; {
    &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;sum&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;=&lt;/span&gt; a &lt;span class="pl-k"&gt;+&lt;/span&gt; b
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; obj &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;MockedClass&lt;/span&gt;&amp;gt;()
&lt;span class="pl-k"&gt;val&lt;/span&gt; slot &lt;span class="pl-k"&gt;=&lt;/span&gt; slot&amp;lt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;&amp;gt;()

every {
    obj.sum(any(), capture(slot))
} answers {
    &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; firstArg&amp;lt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;&amp;gt;() &lt;span class="pl-k"&gt;+&lt;/span&gt; slot.captured
}

obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns 4&lt;/span&gt;
obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns 5&lt;/span&gt;
obj.sum(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns 5&lt;/span&gt;

verifyAll {
    obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;)
    obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
    obj.sum(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
}

verifySequence {
    obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
    obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;)
    obj.sum(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
}

verifyOrder {
    obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
    obj.sum(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; obj2 &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;MockedClass&lt;/span&gt;&amp;gt;()
&lt;span class="pl-k"&gt;val&lt;/span&gt; obj3 &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;MockedClass&lt;/span&gt;&amp;gt;()
verify {
    &lt;span class="pl-c1"&gt;listOf&lt;/span&gt;(obj2, obj3) wasNot &lt;span class="pl-en"&gt;Called&lt;/span&gt;
}

confirmVerified(obj)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-verification-confirmation" class="anchor" aria-hidden="true" href="#verification-confirmation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verification confirmation&lt;/h3&gt;
&lt;p&gt;To double check that all calls were verified by &lt;code&gt;verify...&lt;/code&gt; constructs, you can use &lt;code&gt;confirmVerified&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;confirmVerified(mock1, mock2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It does not make much sense to use it for &lt;code&gt;verifySequence&lt;/code&gt; and &lt;code&gt;verifyAll&lt;/code&gt; as these verification methods already exhaustively cover all calls with verification.&lt;/p&gt;
&lt;p&gt;It will throw an exception in case there are some calls left without verification.&lt;/p&gt;
&lt;p&gt;Some calls may be skipped from such confirmation, check the next section for more details.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;val car = mockk&amp;lt;Car&amp;gt;()

every { car.drive(Direction.NORTH) } returns Outcome.OK
every { car.drive(Direction.SOUTH) } returns Outcome.OK

car.drive(Direction.NORTH) // returns OK
car.drive(Direction.SOUTH) // returns OK

verify {
    car.drive(Direction.SOUTH)
    car.drive(Direction.NORTH)
}

confirmVerified(car) // makes sure all calls were covered with verification
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-recording-exclusions" class="anchor" aria-hidden="true" href="#recording-exclusions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Recording exclusions&lt;/h3&gt;
&lt;p&gt;To exclude some not so important calls from being recorded you can use &lt;code&gt;excludeRecords&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;excludeRecords { mock.operation(any(), 5) }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All matching calls will be excluded from recording. This may be useful in case you are using exhaustive verification: &lt;code&gt;verifyAll&lt;/code&gt;, &lt;code&gt;verifySequence&lt;/code&gt; or &lt;code&gt;confirmVerified&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;val car = mockk&amp;lt;Car&amp;gt;()

every { car.drive(Direction.NORTH) } returns Outcome.OK
every { car.drive(Direction.SOUTH) } returns Outcome.OK

excludeRecords { car.drive(Direction.SOUTH) }

car.drive(Direction.NORTH) // returns OK
car.drive(Direction.SOUTH) // returns OK

verify {
    car.drive(Direction.NORTH)
}

confirmVerified(car) // car.drive(Direction.SOUTH) was excluded, so confirmation is fine with only car.drive(Direction.NORTH)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-verification-timeout" class="anchor" aria-hidden="true" href="#verification-timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verification timeout&lt;/h3&gt;
&lt;p&gt;To verify concurrent operations, you can use &lt;code&gt;timeout = xxx&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;mockk&amp;lt;&lt;span class="pl-en"&gt;MockCls&lt;/span&gt;&amp;gt; {
    every { sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;) } returns &lt;span class="pl-c1"&gt;4&lt;/span&gt;

    &lt;span class="pl-en"&gt;Thread&lt;/span&gt; {
        &lt;span class="pl-en"&gt;Thread&lt;/span&gt;.sleep(&lt;span class="pl-c1"&gt;2000&lt;/span&gt;)
        sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
    }.start()

    verify(timeout &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3000&lt;/span&gt;) { sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;) }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will wait until one of two following states: either verification is passed or timeout is reached.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-returning-unit" class="anchor" aria-hidden="true" href="#returning-unit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Returning Unit&lt;/h3&gt;
&lt;p&gt;If the function is returning &lt;code&gt;Unit&lt;/code&gt; you can use the &lt;code&gt;just Runs&lt;/code&gt; construct:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MockedClass&lt;/span&gt; {
    &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;sum&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Unit&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;println&lt;/span&gt;(a &lt;span class="pl-k"&gt;+&lt;/span&gt; b)
    }
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; obj &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;MockedClass&lt;/span&gt;&amp;gt;()

every { obj.sum(any(), &lt;span class="pl-c1"&gt;3&lt;/span&gt;) } just &lt;span class="pl-en"&gt;Runs&lt;/span&gt;

obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;)

verify {
    obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
    obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
    obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-coroutines" class="anchor" aria-hidden="true" href="#coroutines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coroutines&lt;/h3&gt;
&lt;p&gt;To mock coroutines you need to add another dependency to the support library.&lt;/p&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
    &lt;th&gt;Gradle&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;
&lt;pre&gt;testCompile "org.jetbrains.kotlinx:kotlinx-coroutines-core:x.x"&lt;/pre&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
    &lt;th&gt;Maven&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    &lt;pre&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.jetbrains.kotlinx&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;kotlinx-coroutines-core&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;x.x&amp;lt;/version&amp;gt;
    &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;&lt;/pre&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;Then you can use &lt;code&gt;coEvery&lt;/code&gt;, &lt;code&gt;coVerify&lt;/code&gt;, &lt;code&gt;coMatch&lt;/code&gt;, &lt;code&gt;coAssert&lt;/code&gt;, &lt;code&gt;coRun&lt;/code&gt;, &lt;code&gt;coAnswers&lt;/code&gt; or &lt;code&gt;coInvoke&lt;/code&gt; to mock suspend functions.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; car &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;Car&lt;/span&gt;&amp;gt;()

coEvery { car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) } returns &lt;span class="pl-en"&gt;Outcome&lt;/span&gt;.&lt;span class="pl-en"&gt;OK&lt;/span&gt;

car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns OK&lt;/span&gt;

coVerify { car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) }&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-extension-functions" class="anchor" aria-hidden="true" href="#extension-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extension functions&lt;/h3&gt;
&lt;p&gt;There are three cases of extension function:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;class wide&lt;/li&gt;
&lt;li&gt;object wide&lt;/li&gt;
&lt;li&gt;module wide&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In case of an object or a class, you can mock extension functions just by creating a
regular &lt;code&gt;mockk&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Obj&lt;/span&gt;(&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;)

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Ext&lt;/span&gt; {
    &lt;span class="pl-k"&gt;fun&lt;/span&gt; Obj.&lt;span class="pl-en"&gt;extensionFunc&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; value &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;
}

&lt;span class="pl-c1"&gt;with&lt;/span&gt;(mockk&amp;lt;&lt;span class="pl-en"&gt;Ext&lt;/span&gt;&amp;gt;()) {
    every {
        &lt;span class="pl-en"&gt;Obj&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;).extensionFunc()
    } returns &lt;span class="pl-c1"&gt;11&lt;/span&gt;

    assertEquals(&lt;span class="pl-c1"&gt;11&lt;/span&gt;, &lt;span class="pl-en"&gt;Obj&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;).extensionFunc())

    verify {
        &lt;span class="pl-en"&gt;Obj&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;).extensionFunc()
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To mock module wide extension functions you need to
build &lt;code&gt;mockkStatic(...)&lt;/code&gt; with as argument the module's class name.
For example "pkg.FileKt" for module &lt;code&gt;File.kt&lt;/code&gt; in the &lt;code&gt;pkg&lt;/code&gt; package.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Obj&lt;/span&gt;(&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; declared in File.kt ("pkg" package)&lt;/span&gt;
&lt;span class="pl-k"&gt;fun&lt;/span&gt; Obj.&lt;span class="pl-en"&gt;extensionFunc&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; value &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;

mockkStatic(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pkg.FileKt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

every {
    &lt;span class="pl-en"&gt;Obj&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;).extensionFunc()
} returns &lt;span class="pl-c1"&gt;11&lt;/span&gt;

assertEquals(&lt;span class="pl-c1"&gt;11&lt;/span&gt;, &lt;span class="pl-en"&gt;Obj&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;).extensionFunc())

verify {
    &lt;span class="pl-en"&gt;Obj&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;).extensionFunc()
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If &lt;code&gt;@JvmName&lt;/code&gt; is used, specify it as a class name.&lt;/p&gt;
&lt;p&gt;KHttp.kt:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@file:JvmName("KHttp")

package khttp
// ... KHttp code 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Testing code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mockkStatic("khttp.KHttp")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sometimes you need to know a little bit more to mock an extension function.
For example &lt;code&gt;File.endsWith()&lt;/code&gt; extension function has a totally unpredictable &lt;code&gt;classname&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;   mockkStatic(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kotlin.io.FilesKt__UtilsKt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
   every { &lt;span class="pl-en"&gt;File&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;abc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).endsWith(any&amp;lt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&amp;gt;()) } returns &lt;span class="pl-c1"&gt;true&lt;/span&gt;
   &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-en"&gt;File&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;abc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).endsWith(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;abc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is standard Kotlin behaviour that may be unpredictable.
Use &lt;code&gt;Tools -&amp;gt; Kotlin -&amp;gt; Show Kotlin Bytecode&lt;/code&gt; or check &lt;code&gt;.class&lt;/code&gt; files in JAR archive to detect such names.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-varargs" class="anchor" aria-hidden="true" href="#varargs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Varargs&lt;/h3&gt;
&lt;p&gt;From version 1.9.1 more extended vararg handling is possible:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;ClsWithManyMany&lt;/span&gt; {
        &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;manyMany&lt;/span&gt;(&lt;span class="pl-k"&gt;vararg&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Any&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;val&lt;/span&gt; obj &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;ClsWithManyMany&lt;/span&gt;&amp;gt;()

    every { obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-k"&gt;*&lt;/span&gt;varargAll { it &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;7&lt;/span&gt; }) } returns &lt;span class="pl-c1"&gt;3&lt;/span&gt;

    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3&lt;/span&gt;
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3&lt;/span&gt;
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3&lt;/span&gt;

    every { obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-k"&gt;*&lt;/span&gt;anyVararg(), &lt;span class="pl-c1"&gt;7&lt;/span&gt;) } returns &lt;span class="pl-c1"&gt;4&lt;/span&gt;

    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4&lt;/span&gt;
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4&lt;/span&gt;
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4&lt;/span&gt;

    every { obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-k"&gt;*&lt;/span&gt;varargAny { nArgs &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt; }, &lt;span class="pl-c1"&gt;7&lt;/span&gt;) } returns &lt;span class="pl-c1"&gt;5&lt;/span&gt;

    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 5&lt;/span&gt;
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 5&lt;/span&gt;

    every {
        obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-k"&gt;*&lt;/span&gt;varargAny {
            &lt;span class="pl-k"&gt;if&lt;/span&gt; (position &amp;lt; 3) it &lt;span class="pl-k"&gt;==&lt;/span&gt; 3 else it &lt;span class="pl-k"&gt;==&lt;/span&gt; 4
        }, 7)
    } returns 6
    
    println(obj.manyMany(5, 6, 3, 4, 7)) &lt;span class="pl-k"&gt;//&lt;/span&gt; 6
    println(obj.manyMany(5, 6, 3, 4, 4, 7)) &lt;span class="pl-k"&gt;//&lt;/span&gt; 6&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-private-functions-mocking--dynamic-calls" class="anchor" aria-hidden="true" href="#private-functions-mocking--dynamic-calls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Private functions mocking / dynamic calls&lt;/h3&gt;
&lt;p&gt;In case you have a need to mock private functions, you can do it via a dynamic call.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt; {
    &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;drive&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; accelerate()

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;accelerate&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;going faster&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; mock &lt;span class="pl-k"&gt;=&lt;/span&gt; spyk&amp;lt;&lt;span class="pl-en"&gt;Car&lt;/span&gt;&amp;gt;(recordPrivateCalls &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)

every { mock[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;accelerate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]() } returns &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;going not so fast&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

assertEquals(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;going not so fast&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, mock.drive())

verifySequence {
    mock.drive()
    mock[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;accelerate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]()
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In case you want private calls to be verified, you should create a &lt;code&gt;spyk&lt;/code&gt; with &lt;code&gt;recordPrivateCalls = true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Additionally, a more verbose syntax allows you to get and set properties, combined with the same dynamic calls:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; mock &lt;span class="pl-k"&gt;=&lt;/span&gt; spyk(&lt;span class="pl-en"&gt;Team&lt;/span&gt;(), recordPrivateCalls &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)

every { mock getProperty &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;speed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; } returns &lt;span class="pl-c1"&gt;33&lt;/span&gt;
every { mock setProperty &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;acceleration&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; value less(&lt;span class="pl-c1"&gt;5&lt;/span&gt;) } just runs
every { mock invokeReturnsUnit &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;privateMethod&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; } just runs
every { mock invoke &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;openDoor&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; withArguments &lt;span class="pl-c1"&gt;listOf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rear&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) } returns &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;OK&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

verify { mock getProperty &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;speed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
verify { mock setProperty &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;acceleration&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; value less(&lt;span class="pl-c1"&gt;5&lt;/span&gt;) }
verify { mock invoke &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;openDoor&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; withArguments &lt;span class="pl-c1"&gt;listOf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rear&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) }&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-property-backing-fields" class="anchor" aria-hidden="true" href="#property-backing-fields"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Property backing fields&lt;/h3&gt;
&lt;p&gt;You can access the backing fields via &lt;code&gt;fieldValue&lt;/code&gt; and use &lt;code&gt;value&lt;/code&gt; for value being set.&lt;/p&gt;
&lt;p&gt;Note: in the examples below, we use &lt;code&gt;propertyType&lt;/code&gt; to specify the type of the &lt;code&gt;fieldValue&lt;/code&gt;.
This is needed because it is possible to capture the type automatically for the getter.
Use &lt;code&gt;nullablePropertyType&lt;/code&gt; to specify a nullable type.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; mock &lt;span class="pl-k"&gt;=&lt;/span&gt; spyk(&lt;span class="pl-en"&gt;MockCls&lt;/span&gt;(), recordPrivateCalls &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)

every { mock.property } answers { fieldValue &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt; }
every { mock.property &lt;span class="pl-k"&gt;=&lt;/span&gt; any() } propertyType &lt;span class="pl-c1"&gt;Int&lt;/span&gt;::&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;answers&lt;/span&gt; { fieldValue &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; value }
every { mock getProperty &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;property&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; } propertyType &lt;span class="pl-c1"&gt;Int&lt;/span&gt;::&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;answers&lt;/span&gt; { fieldValue &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt; }
every { mock setProperty &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;property&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; value any&amp;lt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;&amp;gt;() } propertyType &lt;span class="pl-c1"&gt;Int&lt;/span&gt;::&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;answers&lt;/span&gt;  { fieldValue &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; value }
every {
    mock.property &lt;span class="pl-k"&gt;=&lt;/span&gt; any()
} propertyType &lt;span class="pl-c1"&gt;Int&lt;/span&gt;::&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;answers&lt;/span&gt; {
    fieldValue &lt;span class="pl-k"&gt;=&lt;/span&gt; value &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
} andThen {
    fieldValue &lt;span class="pl-k"&gt;=&lt;/span&gt; value &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-multiple-interfaces" class="anchor" aria-hidden="true" href="#multiple-interfaces"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiple interfaces&lt;/h3&gt;
&lt;p&gt;Adding additional behaviours via interfaces and stubbing them:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; spy &lt;span class="pl-k"&gt;=&lt;/span&gt; spyk(&lt;span class="pl-en"&gt;System&lt;/span&gt;.out, moreInterfaces &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Runnable&lt;/span&gt;::&lt;span class="pl-c1"&gt;class&lt;/span&gt;)

spy.&lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-c1"&gt;555&lt;/span&gt;)

every {
    (spy &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-en"&gt;Runnable&lt;/span&gt;).&lt;span class="pl-c1"&gt;run&lt;/span&gt;()
} answers {
    (self &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-en"&gt;PrintStream&lt;/span&gt;).&lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Run! Run! Run!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; thread &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Thread&lt;/span&gt;(spy &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-en"&gt;Runnable&lt;/span&gt;)
thread.start()
thread.join()&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-mocking-nothing" class="anchor" aria-hidden="true" href="#mocking-nothing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mocking Nothing&lt;/h3&gt;
&lt;p&gt;Nothing special here. If you have a function returning &lt;code&gt;Nothing&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;quit&lt;/span&gt;(&lt;span class="pl-smi"&gt;status&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Nothing&lt;/span&gt; {
    exitProcess(status)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then you can for example throw an exception as behaviour:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;every { quit(&lt;span class="pl-c1"&gt;1&lt;/span&gt;) } throws &lt;span class="pl-en"&gt;Exception&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;this is a test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-clearing-vs-unmocking" class="anchor" aria-hidden="true" href="#clearing-vs-unmocking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clearing vs Unmocking&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;clear - deletes internal state of objects associated with mock resulting in empty object&lt;/li&gt;
&lt;li&gt;unmock - re-assigns transformation of classes back to original state prior to mock&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-matcher-extensibility" class="anchor" aria-hidden="true" href="#matcher-extensibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Matcher extensibility&lt;/h2&gt;
&lt;p&gt;A very simple way is to create new matchers by attaching a function
to &lt;code&gt;MockKMatcherScope&lt;/code&gt; or &lt;code&gt;MockKVerificationScope&lt;/code&gt; and using the &lt;code&gt;match&lt;/code&gt; function:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    fun MockKMatcherScope.seqEq(seq: Sequence&amp;lt;String&amp;gt;) = match&amp;lt;Sequence&amp;lt;String&amp;gt;&amp;gt; {
        it.toList() == seq.toList()
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Also, it is possible to create more advanced matchers by implementing the &lt;code&gt;Matcher&lt;/code&gt; interface.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-settings-file" class="anchor" aria-hidden="true" href="#settings-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Settings file&lt;/h2&gt;
&lt;p&gt;To adjust parameters globally, there is a possibility to specify a few settings in a resource file.&lt;/p&gt;
&lt;p&gt;How to use:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a &lt;code&gt;io/mockk/settings.properties&lt;/code&gt; file in the resources.&lt;/li&gt;
&lt;li&gt;Put one of following options:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-ini"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;relaxed&lt;/span&gt;=true|false
&lt;span class="pl-k"&gt;relaxUnitFun&lt;/span&gt;=true|false
&lt;span class="pl-k"&gt;recordPrivateCalls&lt;/span&gt;=true|false&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-dsl-tables" class="anchor" aria-hidden="true" href="#dsl-tables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DSL tables&lt;/h2&gt;
&lt;p&gt;Here are a few tables to help you master the DSL.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-top-level-functions" class="anchor" aria-hidden="true" href="#top-level-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Top level functions&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mockk&amp;lt;T&amp;gt;(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;builds a regular mock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;spyk&amp;lt;T&amp;gt;()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;builds a spy using the default constructor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;spyk(obj)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;builds a spy by copying from &lt;code&gt;obj&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;slot&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;creates a capturing slot&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;every&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;starts a stubbing block&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coEvery&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;starts a stubbing block for coroutines&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verify&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;starts a verification block&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coVerify&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;starts a verification block for coroutines&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verifyAll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;starts a verification block that should include all calls&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coVerifyAll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;starts a verification block that should include all calls for coroutines&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verifyOrder&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;starts a verification block that checks the order&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coVerifyOrder&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;starts a verification block that checks the order for coroutines&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verifySequence&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;starts a verification block that checks whether all calls were made in a specified sequence&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coVerifySequence&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;starts a verification block that checks whether all calls were made in a specified sequence for coroutines&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;excludeRecords&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;exclude some calls from being recorded&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;confirmVerified&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;confirms that all recorded calls were verified&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clearMocks&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;clears specified mocks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;registerInstanceFactory&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;allows you to redefine the way of instantiation for certain object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mockkClass&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;builds a regular mock by passing the class as parameter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mockkObject&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;makes an object an object mock or clears it if was already transformed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unmockkObject&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;makes an object mock back to a regular object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mockkStatic&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;makes a static mock out of a class or clears it if it was already transformed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unmockkStatic&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;makes a static mock back to a regular class&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clearStaticMockk&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;clears a static mock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mockkConstructor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;makes a constructor mock out of a class or clears it if it was already transformed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unmockkConstructor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;makes a constructor mock back to a regular class&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clearConstructorMockk&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;clears the constructor mock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unmockkAll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;unmocks object, static and constructor mocks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clearAllMocks&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;clears regular, object, static and constructor mocks&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-matchers" class="anchor" aria-hidden="true" href="#matchers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Matchers&lt;/h3&gt;
&lt;p&gt;By default, simple arguments are matched using &lt;code&gt;eq()&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Matcher&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;any()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches any argument&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;allAny()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;special matcher that uses &lt;code&gt;any()&lt;/code&gt; instead of &lt;code&gt;eq()&lt;/code&gt; for matchers that are provided as simple arguments&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isNull()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;checks if the value is null&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isNull(inverse=true)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;checks if the value is not null&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ofType(type)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;checks if the value belongs to the type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;match { it.startsWith("string") }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches via the passed predicate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coMatch { it.startsWith("string") }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches via the passed coroutine predicate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;matchNullable { it?.startsWith("string") }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches nullable value via the passed predicate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coMatchNullable { it?.startsWith("string") }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches nullable value via the passed coroutine predicate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eq(value)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is equal to the provided value via the &lt;code&gt;deepEquals&lt;/code&gt; function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eq(value, inverse=true)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is not equal to the provided value via the &lt;code&gt;deepEquals&lt;/code&gt; function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;neq(value)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is not equal to the provided value via &lt;code&gt;deepEquals&lt;/code&gt; function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;refEq(value)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is equal to the provided value via reference comparison&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;refEq(value, inverse=true)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is not equal to the provided value via reference comparison&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nrefEq(value)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is not equal to the provided value via reference comparison&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cmpEq(value)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is equal to the provided value via the &lt;code&gt;compareTo&lt;/code&gt; function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;less(value)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is less than the provided value via the &lt;code&gt;compareTo&lt;/code&gt; function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;more(value)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is more than the provided value via the &lt;code&gt;compareTo&lt;/code&gt; function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;less(value, andEquals=true)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is less than or equal to the provided value via the &lt;code&gt;compareTo&lt;/code&gt; function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;more(value, andEquals=true)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is more than or equal to the provided value via the &lt;code&gt;compareTo&lt;/code&gt; function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;range(from, to, fromInclusive=true, toInclusive=true)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is in range via the &lt;code&gt;compareTo&lt;/code&gt; function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;and(left, right)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;combines two matchers via a logical and&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;or(left, right)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;combines two matchers via a logical or&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;not(matcher)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;negates the matcher&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;capture(slot)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;captures a value to a &lt;code&gt;CapturingSlot&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;capture(mutableList)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;captures a value to a list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;captureNullable(mutableList)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;captures a value to a list together with null values&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;captureLambda()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;captures a lambda&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;captureCoroutine()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;captures a coroutine&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;invoke(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;calls a matched argument&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coInvoke(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;calls a matched argument for a coroutine&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hint(cls)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;hints the next return type in case it's gotten erased&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;anyVararg()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches any elements in a vararg&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;varargAny(matcher)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if any element is matching the matcher&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;varargAll(matcher)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if all elements are matching the matcher&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;any...Vararg()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches any elements in vararg (specific to primitive type)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;varargAny...(matcher)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if any element is matching the matcher (specific to the primitive type)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;varargAll...(matcher)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if all elements are matching the matcher (specific to the primitive type)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;A few special matchers available in verification mode only:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Matcher&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;withArg { code }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches any value and allows to execute some code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;withNullableArg { code }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches any nullable value and allows to execute some code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coWithArg { code }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches any value and allows to execute some coroutine code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coWithNullableArg { code }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches any nullable value and allows to execute some coroutine code&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-validators" class="anchor" aria-hidden="true" href="#validators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Validators&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Validator&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verify { mock.call() }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do unordered verification that a call was performed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verify(inverse=true) { mock.call() }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do unordered verification that a call was not performed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verify(atLeast=n) { mock.call() }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do unordered verification that a call was performed at least &lt;code&gt;n&lt;/code&gt; times&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verify(atMost=n) { mock.call() }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do unordered verification that a call was performed at most &lt;code&gt;n&lt;/code&gt; times&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verify(exactly=n) { mock.call() }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do unordered verification that a call was performed exactly &lt;code&gt;n&lt;/code&gt; times&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verifyAll { mock.call1(); mock.call2() }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do unordered verification that only the specified calls were executed for the mentioned mocks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verifyOrder { mock.call1(); mock.call2() }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do verification that the sequence of calls went one after another&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verifySequence { mock.call1(); mock.call2() }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do verification that only the specified sequence of calls were executed for the mentioned mocks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verify { mock wasNot Called }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do verification that a mock was not called&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verify { listOf(mock1, mock2) wasNot Called }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do verification that a list of mocks were not called&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-answers" class="anchor" aria-hidden="true" href="#answers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Answers&lt;/h3&gt;
&lt;p&gt;An Answer can be followed up by one or more additional answers.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Answer&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;returns value&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call returns a specified value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;returnsMany list&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call returns a value from the list, with subsequent calls returning the next element&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;throws ex&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call throws an exception&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;answers { code }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call answers with a code block scoped with &lt;code&gt;answer scope&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coAnswers { code }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call answers with a coroutine code block  with &lt;code&gt;answer scope&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;answers answerObj&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call answers with an Answer object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;answers { nothing }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call answers null&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;just Runs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call is returning Unit (returns null)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;propertyType Class&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify the type of backing field accessor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nullablePropertyType Class&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify the type of backing field accessor as a nullable type&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-additional-answers" class="anchor" aria-hidden="true" href="#additional-answers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional answer(s)&lt;/h3&gt;
&lt;p&gt;A next answer is returned on each consequent call and the last value is persisted.
So this is similar to the &lt;code&gt;returnsMany&lt;/code&gt; semantics.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Additional answer&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;andThen value&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call returns one specified value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;andThenMany list&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call returns value from the list, returning each time next element&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;andThenThrows ex&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call throws an exception&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;andThen { code }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call answers with a code block scoped with &lt;code&gt;answer scope&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coAndThen { code }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call answers with a coroutine code block with &lt;code&gt;answer scope&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;andThenAnswer answerObj&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call answers with an Answer object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;andThen { nothing }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call answers null&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-answer-scope" class="anchor" aria-hidden="true" href="#answer-scope"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Answer scope&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;call&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;a call object that consists of an invocation and a matcher&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;invocation&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;contains information regarding the actual function invoked&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;matcher&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;contains information regarding the matcher used to match the invocation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;self&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;reference to the object invocation made&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;method&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;reference to the function invocation made&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;args&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;reference to the arguments of invocation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nArgs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;number of invocation argument&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;arg(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;n-th argument&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;firstArg()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;first argument&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;secondArg()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;second argument&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;thirdArg()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;third argument&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lastArg()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;last argument&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;captured()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;the last element in the list for convenience when capturing to a list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lambda&amp;lt;...&amp;gt;().invoke()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;call the captured lambda&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coroutine&amp;lt;...&amp;gt;().coInvoke()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;call the captured coroutine&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nothing&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;null value for returning nothing as an answer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fieldValue&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;accessor to the property backing field&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fieldValueAny&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;accessor to the property backing field with &lt;code&gt;Any?&lt;/code&gt; type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;value&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;value being set casted to same type as the property backing field&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;valueAny&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;value being set with &lt;code&gt;Any?&lt;/code&gt; type&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-vararg-scope" class="anchor" aria-hidden="true" href="#vararg-scope"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vararg scope&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;position&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;the position of an argument in vararg array&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nArgs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;overall count of arguments in vararg array&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-funding" class="anchor" aria-hidden="true" href="#funding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Funding&lt;/h2&gt;
&lt;p&gt;You can also support this project by becoming a sponsor. Your logo will show up here with a link to your website.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h3&gt;
&lt;a href="https://opencollective.com/mockk/sponsor/0/website" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/688e79ae82c588668a986f4feb24465c1963abc7/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6f636b6b2f73706f6e736f722f302f6176617461722e737667" data-canonical-src="https://opencollective.com/mockk/sponsor/0/avatar.svg" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://opencollective.com/mockk/sponsor/1/website" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/6d4d46629ab9a01f0798ebc0a57d7bd9093df73e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6f636b6b2f73706f6e736f722f312f6176617461722e737667" data-canonical-src="https://opencollective.com/mockk/sponsor/1/avatar.svg" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-backers" class="anchor" aria-hidden="true" href="#backers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backers&lt;/h3&gt;
&lt;p&gt;Thank you to all our backers! &lt;g-emoji class="g-emoji" alias="pray" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png"&gt;🙏&lt;/g-emoji&gt;&lt;/p&gt;
&lt;a href="https://opencollective.com/mockk#backers" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/1e7fa5e0babc6be0603eb9bda258fa1bcee5033c/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6f636b6b2f6261636b6572732e7376673f77696474683d383930" data-canonical-src="https://opencollective.com/mockk/backers.svg?width=890" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h3&gt;
&lt;p&gt;This project exists thanks to all the people who contribute.&lt;/p&gt;
&lt;a href="https://github.com/mockk/mockk/graphs/contributors"&gt;
  &lt;img src="https://camo.githubusercontent.com/8c224a0ec70d6faa7bfa5940f512212eb10902c6/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6f636b6b2f636f6e7472696275746f72732e7376673f77696474683d383930" data-canonical-src="https://opencollective.com/mockk/contributors.svg?width=890" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h2&gt;
&lt;p&gt;To ask questions, please use Stack Overflow or Gitter.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Chat/Gitter: &lt;a href="https://gitter.im/mockk-io/Lobby" rel="nofollow"&gt;https://gitter.im/mockk-io/Lobby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Stack Overflow: &lt;a href="http://stackoverflow.com/questions/tagged/mockk" rel="nofollow"&gt;http://stackoverflow.com/questions/tagged/mockk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To report bugs, please use the GitHub project.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Project Page: &lt;a href="https://github.com/mockk/mockk"&gt;https://github.com/mockk/mockk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reporting Bugs: &lt;a href="https://github.com/mockk/mockk/issues"&gt;https://github.com/mockk/mockk/issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mockk</author><guid isPermaLink="false">https://github.com/mockk/mockk</guid><pubDate>Sun, 05 Jan 2020 00:05:00 GMT</pubDate></item><item><title>kotlintest/kotlintest #6 in Kotlin, Today</title><link>https://github.com/kotlintest/kotlintest</link><description>&lt;p&gt;&lt;i&gt;Powerful, elegant and flexible test framework for Kotlin&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/logo4.png"&gt;&lt;img src="doc/logo4.png" alt="KotlinTest" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/kotlintest/kotlintest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a752cb654acbc30010e8e640973fafc116a7d4f3/68747470733a2f2f7472617669732d63692e6f72672f6b6f746c696e746573742f6b6f746c696e746573742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/kotlintest/kotlintest.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/sksamuel/kotlintest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e4ee9449f210342e3296a71f40804bcf22e24640/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f7372323674673439666b3636796438323f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/sr26tg49fk66yd82?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://search.maven.org/#search%7Cga%7C1%7Ckotlintest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f98545af8f0de2641c76e3308c8d6d89c30df193/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f696f2e6b6f746c696e746573742f6b6f746c696e746573742d636f72652e7376673f6c6162656c3d6c617465737425323072656c65617365" data-canonical-src="https://img.shields.io/maven-central/v/io.kotlintest/kotlintest-core.svg?label=latest%20release" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href=""&gt;&lt;img src="https://camo.githubusercontent.com/d2b0db392ac6bfc0d97bae7d30d6268b0c8b915a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6b6f746c696e746573742f6b6f746c696e746573742e737667" alt="GitHub license" data-canonical-src="https://img.shields.io/github/license/kotlintest/kotlintest.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://oss.sonatype.org/content/repositories/snapshots/io/kotest/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a1205be64696e1a7c6e754c4cd178cd1b06a4f33/68747470733a2f2f696d672e736869656c64732e696f2f6e657875732f732f68747470732f6f73732e736f6e61747970652e6f72672f696f2e6b6f746573742f6b6f746573742d636f72652e7376673f6c6162656c3d6c6174657374253230736e617073686f74267374796c653d706c6173746963" data-canonical-src="https://img.shields.io/nexus/s/https/oss.sonatype.org/io.kotest/kotest-core.svg?label=latest%20snapshot&amp;amp;style=plastic" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;KotlinTest is a flexible and comprehensive testing tool for &lt;a href="https://kotlinlang.org/" rel="nofollow"&gt;Kotlin&lt;/a&gt;.&lt;/strong&gt;&lt;br&gt;
&lt;a href="doc/reference.md"&gt;Full documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For latest updates see &lt;a href="CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/tagged/kotlintest" rel="nofollow"&gt;Stack Overflow&lt;/a&gt; (don't forget to use the tag "kotlintest".)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.slack.com/messages/kotlintest" rel="nofollow"&gt;KotlinTest channel&lt;/a&gt; in the Kotlin Slack (get an invite &lt;a href="http://slack.kotlinlang.org/" rel="nofollow"&gt;here&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kotlintest/kotlintest/wiki/contribute"&gt;Contribute&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-test-with-style" class="anchor" aria-hidden="true" href="#test-with-style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test with Style&lt;/h2&gt;
&lt;p&gt;Write simple and beautiful tests with the &lt;code&gt;StringSpec&lt;/code&gt; style:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyTests&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;StringSpec&lt;/span&gt;({
  "length should return size of string" {
    "hello".length shouldBe 5
  }
  "startsWith should test for a prefix" {
    "world" should startWith("wor")
  }
})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;KotlinTest comes with several &lt;a href="doc/reference.md#testing-styles"&gt;testing styles&lt;/a&gt; so you can choose one that fits your needs.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-multitude-of-matchers" class="anchor" aria-hidden="true" href="#multitude-of-matchers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multitude of Matchers&lt;/h2&gt;
&lt;p&gt;Use over 120 provided matchers to test assertions on many different types:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;substring&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.shouldContain(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;str&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

user.email.shouldBeLowerCase()

myImageFile.shouldHaveExtension(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.jpg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

cityMap.shouldContainKey(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;London&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;withClue&lt;/code&gt; and &lt;code&gt;asClue&lt;/code&gt; helpers can add extra context to assertions so failures are self explanatory:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;withClue(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Name should be present&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { user.name shouldNotBe &lt;span class="pl-c1"&gt;null&lt;/span&gt; }

&lt;span class="pl-k"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;HttpResponse&lt;/span&gt;(&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;status&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-smi"&gt;body&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;)
&lt;span class="pl-k"&gt;val&lt;/span&gt; response &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;HttpResponse&lt;/span&gt;(&lt;span class="pl-c1"&gt;200&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;the content&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
response.asClue {
    it.status shouldBe &lt;span class="pl-c1"&gt;200&lt;/span&gt;
    it.body shouldBe &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;the content&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nesting is allowed in both cases and will show all available clues.&lt;/p&gt;
&lt;p&gt;Matchers are extension methods and so your IDE will auto complete. See the &lt;a href="doc/matchers.md"&gt;full list of matchers&lt;/a&gt; or write your own.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-let-the-computer-generate-your-test-data" class="anchor" aria-hidden="true" href="#let-the-computer-generate-your-test-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Let the Computer Generate Your Test Data&lt;/h2&gt;
&lt;p&gt;Use &lt;a href="doc/reference.md#property-based"&gt;property based testing&lt;/a&gt; to test your code with automatically generated test data:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PropertyExample&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;StringSpec&lt;/span&gt;() {
  &lt;span class="pl-en"&gt;init&lt;/span&gt; {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;String size&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; {
      assertAll { a&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, b&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
        (a &lt;span class="pl-k"&gt;+&lt;/span&gt; b) should haveLength(a.length &lt;span class="pl-k"&gt;+&lt;/span&gt; b.length)
      }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-check-all-the-tricky-cases-with-data-driven-testing" class="anchor" aria-hidden="true" href="#check-all-the-tricky-cases-with-data-driven-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Check all the Tricky Cases With Data Driven Testing&lt;/h2&gt;
&lt;p&gt;Handle even an enormous amount of input parameter combinations easily with &lt;a href="doc/reference.md#table-driven-testing"&gt;data driven tests&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;StringSpecExample&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;StringSpec&lt;/span&gt;({
  "maximum of two numbers" {
    forall(
        row(1, 5, 5),
        row(1, 0, 1),
        row(0, 0, 0)
    ) { a, b, max &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="pl-en"&gt;Math&lt;/span&gt;.max(a, b) shouldBe max
    }
  }
})&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-test-exceptions" class="anchor" aria-hidden="true" href="#test-exceptions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test Exceptions&lt;/h2&gt;
&lt;p&gt;Testing for &lt;a href="doc/reference.md#exceptions"&gt;exceptions&lt;/a&gt; is easy with KotlinTest:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; exception &lt;span class="pl-k"&gt;=&lt;/span&gt; shouldThrow&amp;lt;&lt;span class="pl-en"&gt;IllegalAccessException&lt;/span&gt;&amp;gt; {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; code in here that you expect to throw an IllegalAccessException&lt;/span&gt;
}
exception.message should startWith(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Something went wrong&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-fine-tune-test-execution" class="anchor" aria-hidden="true" href="#fine-tune-test-execution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fine Tune Test Execution&lt;/h2&gt;
&lt;p&gt;You can specify the number of invocations, parallelism, and a timeout for each test or for all tests.
And you can group tests by tags or disable them conditionally.
All you need is &lt;a href="doc/reference.md#config"&gt;&lt;code&gt;config&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MySpec&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;StringSpec&lt;/span&gt;() {

  &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; defaultTestCaseConfig &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;TestCaseConfig&lt;/span&gt;(invocations &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;)

  &lt;span class="pl-en"&gt;init&lt;/span&gt; {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;should use config&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.config(timeout &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;.seconds, invocations &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, threads &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, tags &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;setOf&lt;/span&gt;(&lt;span class="pl-en"&gt;Database&lt;/span&gt;, &lt;span class="pl-en"&gt;Linux&lt;/span&gt;)) {
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-and-more-" class="anchor" aria-hidden="true" href="#and-more-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;And More ...&lt;/h2&gt;
&lt;p&gt;This page gives you just a short overview of KotlinTest. There are many more features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Test whole collections with &lt;a href="doc/reference.md#inspectors"&gt;Inspectors&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Write elegant conditions with the &lt;a href="doc/reference.md#matchers-and-assertions"&gt;matcher DSL&lt;/a&gt;: &lt;code&gt;"hello".shouldHaveSubstring("ell")&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Reuse test logic for setup or tear down, with &lt;a href="doc/reference.md#listeners"&gt;Listeners&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Test asynchronous code with &lt;a href="doc/reference.md#whenReady"&gt;&lt;code&gt;whenReady&lt;/code&gt;&lt;/a&gt; and non-deterministic code with &lt;a href="doc/nondeterministic.md"&gt;&lt;code&gt;eventually&lt;/code&gt;&lt;/a&gt; or &lt;a href="doc/nondeterministic.md"&gt;&lt;code&gt;continually&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Let KotlinTest &lt;a href="doc/reference.md#autoclose"&gt;close resources automatically&lt;/a&gt;: &lt;code&gt;val reader = autoClose(StringReader("xyz"))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Handle tricky scenarios such as System Environment with &lt;a href="doc/extensions.md"&gt;extensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use the &lt;a href="doc/extensions.md#Spring"&gt;Spring extension&lt;/a&gt; to automatically inject your spring test classes.&lt;/li&gt;
&lt;li&gt;Test &lt;a href="doc/extensions.md#Arrow"&gt;Arrow&lt;/a&gt; data types with the Arrow extension.&lt;/li&gt;
&lt;li&gt;Make use of custom plugins for integrations with tools such as &lt;a href="doc/plugins.md#Pitest"&gt;Pitest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href="doc/reference.md"&gt;full documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-use" class="anchor" aria-hidden="true" href="#use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-gradle" class="anchor" aria-hidden="true" href="#gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle&lt;/h4&gt;
&lt;p&gt;To use in gradle, configure your build to use the &lt;a href="https://junit.org/junit5/docs/current/user-guide/#running-tests-build-gradle" rel="nofollow"&gt;JUnit Platform&lt;/a&gt;. For Gradle 4.6 and higher this is
as simple as adding &lt;code&gt;useJUnitPlatform()&lt;/code&gt; inside the tasks with type &lt;code&gt;Test&lt;/code&gt; and then adding the KotlinTest dependency.&lt;/p&gt;
&lt;details open=""&gt;
&lt;summary&gt;Groovy (build.gradle)&lt;/summary&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;test {
  useJUnitPlatform()
}

dependencies {
  testImplementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;io.kotlintest:kotlintest-runner-junit5:3.3.2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details open=""&gt;
&lt;summary&gt;Android Project (Groovy)&lt;/summary&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;android&lt;span class="pl-k"&gt;.&lt;/span&gt;testOptions {
    unitTests&lt;span class="pl-k"&gt;.&lt;/span&gt;all {
        useJUnitPlatform()
    }
}

dependencies {
    testImplementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;io.kotlintest:kotlintest-runner-junit5:3.3.2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;If you are using Gradle+Kotlin, this works for both Android and non-Android projects:&lt;/p&gt;
&lt;details open=""&gt;
&lt;summary&gt;Kotlin (build.gradle.kts)&lt;/summary&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;tasks.withType&amp;lt;&lt;span class="pl-en"&gt;Test&lt;/span&gt;&amp;gt; {
  useJUnitPlatform()
}

dependencies {
  testImplementation(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.kotlintest:kotlintest-runner-junit5:3.3.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;h4&gt;&lt;a id="user-content-maven" class="anchor" aria-hidden="true" href="#maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven&lt;/h4&gt;
&lt;p&gt;For maven you must configure the surefire plugin for junit tests.&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.apache.maven.plugins&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;maven-surefire-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;2.22.2&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then add the KotlinTest JUnit5 runner to your build.&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;io.kotlintest&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;kotlintest-runner-junit5&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;3.3.2&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;scope&lt;/span&gt;&amp;gt;test&amp;lt;/&lt;span class="pl-ent"&gt;scope&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-snapshots" class="anchor" aria-hidden="true" href="#snapshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Snapshots&lt;/h4&gt;
&lt;p&gt;If you want to test the latest snapshot build, setup the same way described above, change the version to the current snapshot version and add the following repository to your &lt;code&gt;repositories&lt;/code&gt; block:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;repositories {
    maven(url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://oss.sonatype.org/content/repositories/snapshots/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Currently, in snapshot builds only, our artifacts and packages are using a new name: &lt;strong&gt;Kotest&lt;/strong&gt;. To use them, change every instance of &lt;code&gt;io.kotlintest&lt;/code&gt; to &lt;code&gt;io.kotest&lt;/code&gt;, and you should be good to go.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>kotlintest</author><guid isPermaLink="false">https://github.com/kotlintest/kotlintest</guid><pubDate>Sun, 05 Jan 2020 00:06:00 GMT</pubDate></item><item><title>Kotlin/kotlinx.serialization #7 in Kotlin, Today</title><link>https://github.com/Kotlin/kotlinx.serialization</link><description>&lt;p&gt;&lt;i&gt;Kotlin multiplatform / multi-format serialization &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-kotlin-cross-platform--multi-format-reflectionless-serialization" class="anchor" aria-hidden="true" href="#kotlin-cross-platform--multi-format-reflectionless-serialization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kotlin cross-platform / multi-format reflectionless serialization&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ffbc2cf12975da475694a83019dce310c45ddd32/68747470733a2f2f6a622e67672f6261646765732f696e63756261746f722e737667" alt="JetBrains incubator project" data-canonical-src="https://jb.gg/badges/incubator.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e7da7b6b632d5ef4bce9a550a5d5cfe400ca1fe/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652532304c6963656e7365253230322e302d626c75652e7376673f7374796c653d666c6174" alt="GitHub license" data-canonical-src="https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://teamcity.jetbrains.com/viewType.html?buildTypeId=KotlinTools_KotlinxSerialization_Ko&amp;amp;guest=1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/24b79a2682cf6998fba9870f2507e2df8c701bb5/68747470733a2f2f696d672e736869656c64732e696f2f7465616d636974792f687474702f7465616d636974792e6a6574627261696e732e636f6d2f732f4b6f746c696e546f6f6c735f4b6f746c696e7853657269616c697a6174696f6e5f4b6f2e737667" alt="TeamCity build" data-canonical-src="https://img.shields.io/teamcity/http/teamcity.jetbrains.com/s/KotlinTools_KotlinxSerialization_Ko.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bintray.com/kotlin/kotlinx/kotlinx.serialization.runtime/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4d87843548743546c9106826021a1f42c95ad60d/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6b6f746c696e2f6b6f746c696e782f6b6f746c696e782e73657269616c697a6174696f6e2e72756e74696d652f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/kotlin/kotlinx/kotlinx.serialization.runtime/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Kotlin serialization consists of a compiler plugin, which automatically produces visitor code for classes, and runtime library, which uses generated code to serialize objects without reflection.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Supports Kotlin classes marked as &lt;code&gt;@Serializable&lt;/code&gt; and standard collections.&lt;/li&gt;
&lt;li&gt;Supports JSON, CBOR, and Protobuf formats out-of-the-box.&lt;/li&gt;
&lt;li&gt;The same code works on Kotlin/JVM, Kotlin/JS and Kotlin/Native&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-runtime-overview" class="anchor" aria-hidden="true" href="#runtime-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Runtime overview&lt;/h2&gt;
&lt;p&gt;This project contains the runtime library. Runtime library provides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Interfaces which are called by compiler-generated code (&lt;code&gt;Encoder&lt;/code&gt;, &lt;code&gt;Decoder&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Basic skeleton implementations of these interfaces in which you should override some methods if you want to
implement custom data format.&lt;/li&gt;
&lt;li&gt;Some internal classes like built-ins and collections serializers.&lt;/li&gt;
&lt;li&gt;Ready-to-use serialization formats.&lt;/li&gt;
&lt;li&gt;Other useful classes that benefit from serialization framework (e.g. object-to-Map transformer)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can open example projects for &lt;a href="examples/example-js"&gt;JS&lt;/a&gt;, &lt;a href="examples/example-jvm"&gt;JVM&lt;/a&gt; or &lt;a href="examples/example-native"&gt;Native&lt;/a&gt; to get started playing with it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#quick-example"&gt;Quick example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#current-project-status"&gt;Current status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setup"&gt;Library installing&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#gradle"&gt;Gradle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gradle-with-plugins-block"&gt;Gradle (with &lt;code&gt;plugins&lt;/code&gt; block)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#androidjvm"&gt;Android/JVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#multiplatform-common-js-native"&gt;Multiplatform (common, JS, Native)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mavenjvm"&gt;Maven/JVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#incompatible-changes"&gt;Incompatible changes from older versions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#troubleshooting-intellij-idea"&gt;Troubleshooting IntelliJ IDEA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/runtime_usage.md"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/examples.md"&gt;More examples of supported Kotlin classes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/custom_serializers.md"&gt;Writing custom serializers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/polymorphism.md"&gt;Multiplatform polymorphic serialization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="formats/README.md"&gt;Add-on formats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/building.md"&gt;Building library and compiler plugin from source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/old12.md"&gt;Instructions for old versions under Kotlin 1.2 and migration guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-quick-example" class="anchor" aria-hidden="true" href="#quick-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick example&lt;/h2&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;kotlinx.serialization.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;kotlinx.serialization.json.*&lt;/span&gt;

&lt;span class="pl-k"&gt;@Serializable&lt;/span&gt;
&lt;span class="pl-k"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Data&lt;/span&gt;(&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;42&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Json also has .Default configuration which provides more reasonable settings,&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; but is subject to change in future versions&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; json &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Json&lt;/span&gt;(&lt;span class="pl-en"&gt;JsonConfiguration&lt;/span&gt;.&lt;span class="pl-en"&gt;Stable&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serializing objects&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; jsonData &lt;span class="pl-k"&gt;=&lt;/span&gt; json.stringify(&lt;span class="pl-en"&gt;Data&lt;/span&gt;.serializer(), &lt;span class="pl-en"&gt;Data&lt;/span&gt;(&lt;span class="pl-c1"&gt;42&lt;/span&gt;))
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serializing lists&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; jsonList &lt;span class="pl-k"&gt;=&lt;/span&gt; json.stringify(&lt;span class="pl-en"&gt;Data&lt;/span&gt;.serializer().list, &lt;span class="pl-c1"&gt;listOf&lt;/span&gt;(&lt;span class="pl-en"&gt;Data&lt;/span&gt;(&lt;span class="pl-c1"&gt;42&lt;/span&gt;)))
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(jsonData) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {"a": 42, "b": "42"}&lt;/span&gt;
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(jsonList) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [{"a": 42, "b": "42"}]&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; parsing data back&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; obj &lt;span class="pl-k"&gt;=&lt;/span&gt; json.parse(&lt;span class="pl-en"&gt;Data&lt;/span&gt;.serializer(), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;{"a":42}&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; b is optional since it has default value&lt;/span&gt;
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(obj) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Data(a=42, b="42")&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To learn more about JSON usage and other formats, see &lt;a href="docs/runtime_usage.md"&gt;usage&lt;/a&gt;.
More examples of various kinds of Kotlin classes that can be serialized can be found &lt;a href="docs/examples.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-current-project-status" class="anchor" aria-hidden="true" href="#current-project-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Current project status&lt;/h2&gt;
&lt;p&gt;Starting from Kotlin 1.3-RC2, serialization plugin is shipped with the rest of Kotlin compiler distribution, and the IDEA plugin is bundled into the Kotlin plugin.&lt;/p&gt;
&lt;p&gt;Runtime library is under reconstruction to match the corresponding &lt;a href="https://github.com/Kotlin/KEEP/blob/serialization/proposals/extensions/serialization.md"&gt;KEEP&lt;/a&gt;, so some features described there can be not implemented yet. While library is stable and has successfully been used in various scenarios, there is no API compatibility guarantees between versions, that's why it is called experimental.
This document describes setup for Kotlin 1.3 and higher. To watch instructions regarding 1.2, follow &lt;a href="docs/old12.md"&gt;this document&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h2&gt;
&lt;p&gt;Using Kotlin Serialization requires Kotlin compiler &lt;code&gt;1.3.30&lt;/code&gt; or higher.
Make sure that you have corresponding Kotlin plugin installed in the IDE.
Since serialization is now bundled into Kotlin plugin, no additional plugins for IDE are required (but make sure you have deleted old additional plugin for 1.2, if you had one).
Example projects on JVM are available for &lt;a href="examples/example-jvm/build.gradle"&gt;Gradle&lt;/a&gt; and &lt;a href="examples/example-jvm/pom.xml"&gt;Maven&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-gradle" class="anchor" aria-hidden="true" href="#gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle&lt;/h3&gt;
&lt;p&gt;You have to add the serialization plugin as the other &lt;a href="https://kotlinlang.org/docs/reference/compiler-plugins.html" rel="nofollow"&gt;compiler plugins&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;buildscript&lt;/span&gt; {
    ext&lt;span class="pl-k"&gt;.&lt;/span&gt;kotlin_version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1.3.60&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    repositories { jcenter() }

    dependencies {
        classpath &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlin:kotlin-gradle-plugin:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;otlin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        classpath &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlin:kotlin-serialization:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;otlin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don't forget to apply the plugin:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;kotlin&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or 'kotlin-multiplatform' for multiplatform projects&lt;/span&gt;
apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;kotlinx-serialization&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, you have to add dependency on the serialization runtime library. Note that while plugin have version the same as compiler one, runtime library has different coordinates, repository and versioning.&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;repositories&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; artifacts are published to JCenter&lt;/span&gt;
    jcenter()
}

&lt;span class="pl-en"&gt;dependencies&lt;/span&gt; {
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlin:kotlin-stdlib:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;otlin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.14.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; JVM dependency&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-gradle-with-plugins-block" class="anchor" aria-hidden="true" href="#gradle-with-plugins-block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle (with &lt;code&gt;plugins&lt;/code&gt; block)&lt;/h3&gt;
&lt;p&gt;You can setup serialization plugin with the kotlin plugin using &lt;a href="https://docs.gradle.org/current/userguide/plugins.html#sec:plugins_block" rel="nofollow"&gt;Gradle plugins DSL&lt;/a&gt; &lt;strong&gt;instead&lt;/strong&gt; of traditional &lt;code&gt;apply plugin&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;plugins&lt;/span&gt; {
    id &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.kotlin.multiplatform&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1.3.60&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or any other kotlin plugin&lt;/span&gt;
    id &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.kotlin.plugin.serialization&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1.3.60&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: plugin marker for serialization has been published in Kotlin 1.3.50. If you need to use the earlier Kotlin version, see &lt;a href="https://youtrack.jetbrains.com/issue/KT-27612" rel="nofollow"&gt;KT-27612&lt;/a&gt; for workaround with &lt;a href="https://docs.gradle.org/current/userguide/plugins.html#sec:plugin_resolution_rules" rel="nofollow"&gt;plugin resolution rules&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Runtime library should be added to dependencies the same way as before.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-androidjvm" class="anchor" aria-hidden="true" href="#androidjvm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android/JVM&lt;/h3&gt;
&lt;p&gt;Library should work on Android "as is". If you're using proguard, you need
to add this to your &lt;code&gt;proguard-rules.pro&lt;/code&gt;:&lt;/p&gt;
&lt;pre lang="proguard"&gt;&lt;code&gt;-keepattributes *Annotation*, InnerClasses
-dontnote kotlinx.serialization.SerializationKt
-keep,includedescriptorclasses class com.yourcompany.yourpackage.**$$serializer { *; } # &amp;lt;-- change package name to your app's
-keepclassmembers class com.yourcompany.yourpackage.** { # &amp;lt;-- change package name to your app's
    *** Companion;
}
-keepclasseswithmembers class com.yourcompany.yourpackage.** { # &amp;lt;-- change package name to your app's
    kotlinx.serialization.KSerializer serializer(...);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You may also want to keep all custom serializers you've defined.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-multiplatform-common-js-native" class="anchor" aria-hidden="true" href="#multiplatform-common-js-native"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiplatform (common, JS, Native)&lt;/h3&gt;
&lt;p&gt;Platform artifacts have the same names as JVM one, but with additional suffix (e.g. &lt;code&gt;org.jetbrains.kotlinx:kotlinx-serialization-runtime-native&lt;/code&gt;). For Native artifact, Gradle metadata is required (put the line &lt;code&gt;enableFeaturePreview('GRADLE_METADATA')&lt;/code&gt; in your &lt;code&gt;gradle.properties&lt;/code&gt;) and minimal supported version of Gradle is 5.3.&lt;/p&gt;
&lt;p&gt;Typically, you need the following dependencies in your multiplatform project (don't forget to rename &lt;a href="https://kotlinlang.org/docs/reference/building-mpp-with-gradle.html#configuring-source-sets" rel="nofollow"&gt;source sets&lt;/a&gt; according to your setup):&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;sourceSets&lt;/span&gt; {
    commonMain {
        dependencies {
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stdlib-common&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
            implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:&lt;span class="pl-smi"&gt;$s&lt;span class="pl-smi"&gt;erialization_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
    }
    commonTest {
        dependencies {
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test-common&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test-annotations-common&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
        }
    }
    jvmMain {
        dependencies {
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stdlib-jdk8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
            implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-serialization-runtime:&lt;span class="pl-smi"&gt;$s&lt;span class="pl-smi"&gt;erialization_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
    }
    jvmTest {
        dependencies {
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test-junit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
        }
    }
    jsMain {
        dependencies {
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stdlib-js&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
            implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:&lt;span class="pl-smi"&gt;$s&lt;span class="pl-smi"&gt;erialization_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
    }
    jsTest {
        dependencies {
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test-js&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
        }
    }
    nativeMain {
        dependencies {
            implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:&lt;span class="pl-smi"&gt;$s&lt;span class="pl-smi"&gt;erialization_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
    }
    nativeTest {}
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;JavaScript example is located at &lt;a href="examples/example-js"&gt;&lt;code&gt;example-js&lt;/code&gt;&lt;/a&gt; folder.
Multiplatform example is located at &lt;a href="examples/example-multiplatform"&gt;&lt;code&gt;example-multiplatform&lt;/code&gt;&lt;/a&gt; folder.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mavenjvm" class="anchor" aria-hidden="true" href="#mavenjvm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven/JVM&lt;/h3&gt;
&lt;p&gt;Ensure the proper version of Kotlin and serialization version:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;properties&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;kotlin&lt;/span&gt;.version&amp;gt;1.3.60&amp;lt;/&lt;span class="pl-ent"&gt;kotlin&lt;/span&gt;.version&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;serialization&lt;/span&gt;.version&amp;gt;0.14.0&amp;lt;/&lt;span class="pl-ent"&gt;serialization&lt;/span&gt;.version&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;properties&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Include kotlinx bintray repository for library:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;repositories&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;repository&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;bintray-kotlin-kotlinx&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;name&lt;/span&gt;&amp;gt;bintray&amp;lt;/&lt;span class="pl-ent"&gt;name&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;https://kotlin.bintray.com/kotlinx&amp;lt;/&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;repository&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;repositories&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You also can use JCenter.&lt;/p&gt;
&lt;p&gt;Add serialization plugin to Kotlin compiler plugin:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;build&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;plugins&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.jetbrains.kotlin&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;kotlin-maven-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${kotlin.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;compile&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;compile&amp;lt;/&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
                        &amp;lt;&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;compile&amp;lt;/&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;
                    &amp;lt;/&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
                &amp;lt;/&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;compilerPlugins&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;kotlinx-serialization&amp;lt;/&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
                &amp;lt;/&lt;span class="pl-ent"&gt;compilerPlugins&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;dependencies&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.jetbrains.kotlin&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;kotlin-maven-serialization&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${kotlin.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
                &amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;dependencies&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;plugins&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;build&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add dependency on serialization runtime library:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.jetbrains.kotlinx&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;kotlinx-serialization-runtime&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${serialization.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-incompatible-changes" class="anchor" aria-hidden="true" href="#incompatible-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Incompatible changes&lt;/h3&gt;
&lt;p&gt;Library versions &lt;code&gt;0.14.0&lt;/code&gt; and higher require Kotlin 1.3.60 and higher and incompatible with previous versions.&lt;/p&gt;
&lt;p&gt;All versions of library before &lt;code&gt;0.13.0&lt;/code&gt; are using Gradle metadata v0.4 and therefore it is recommended to use Gradle 4.8-5.1 to build.&lt;/p&gt;
&lt;p&gt;Library versions &lt;code&gt;0.11.0&lt;/code&gt; and higher require Kotlin 1.3.30 and higher and incompatible with previous versions.&lt;/p&gt;
&lt;p&gt;All versions of library before &lt;code&gt;0.10.0&lt;/code&gt; are using Gradle metadata v0.3 and therefore require Gradle 4.7 for build.&lt;/p&gt;
&lt;p&gt;Maven plugin coordinates before Kotlin 1.3.20 were &lt;code&gt;kotlinx-maven-serialization-plugin&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For deprecated &lt;code&gt;kotlin-platform-native&lt;/code&gt; plugin, you need to use &lt;code&gt;kotlinx-serialization-native&lt;/code&gt; plugin (see &lt;a href="https://github.com/JetBrains/kotlin-native/issues/2210#issuecomment-429753168"&gt;#2210&lt;/a&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting-intellij-idea" class="anchor" aria-hidden="true" href="#troubleshooting-intellij-idea"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting IntelliJ IDEA&lt;/h2&gt;
&lt;p&gt;Serialization support should work out of the box, if you have 1.3.x Kotlin plugin installed and have imported the project from Maven or Gradle with serialization enabled in their buildscripts. If you have Kotlin 1.3.10 or lower, you have to delegate build to Gradle (&lt;code&gt;Settings - Build, Execution, Deployment - Build Tools - Gradle - Runner -&lt;/code&gt; tick &lt;code&gt;Delegate IDE build/run actions to gradle&lt;/code&gt;). Starting from 1.3.11, no delegation is required.
In case of problems, force project re-import from Gradle.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Kotlin</author><guid isPermaLink="false">https://github.com/Kotlin/kotlinx.serialization</guid><pubDate>Sun, 05 Jan 2020 00:07:00 GMT</pubDate></item><item><title>nhaarman/mockito-kotlin #8 in Kotlin, Today</title><link>https://github.com/nhaarman/mockito-kotlin</link><description>&lt;p&gt;&lt;i&gt;Using Mockito with Kotlin&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-mockito-kotlin" class="anchor" aria-hidden="true" href="#mockito-kotlin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mockito-Kotlin&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://maven-badges.herokuapp.com/maven-central/com.nhaarman.mockitokotlin2/mockito-kotlin" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/2cabef32cf24397397d8e1f658fda2a369136e8a/68747470733a2f2f6d6176656e2d6261646765732e6865726f6b756170702e636f6d2f6d6176656e2d63656e7472616c2f636f6d2e6e686161726d616e2e6d6f636b69746f6b6f746c696e322f6d6f636b69746f2d6b6f746c696e2f62616467652e737667" alt="Download" data-canonical-src="https://maven-badges.herokuapp.com/maven-central/com.nhaarman.mockitokotlin2/mockito-kotlin/badge.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A small library that provides helper functions to work with &lt;a href="https://github.com/mockito/mockito"&gt;Mockito&lt;/a&gt; in Kotlin.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;Mockito-Kotlin is available on Maven Central and JCenter.
For Gradle users, add the following to your &lt;code&gt;build.gradle&lt;/code&gt;, replacing &lt;code&gt;x.x.x&lt;/code&gt; with the latest version:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;testImplementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.nhaarman.mockitokotlin2:mockito-kotlin:x.x.x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;p&gt;A test using Mockito-Kotlin typically looks like the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@Test&lt;/span&gt;
&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;doAction_doesSomething&lt;/span&gt;(){ 
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Given &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;val&lt;/span&gt; mock &lt;span class="pl-k"&gt;=&lt;/span&gt; mock&amp;lt;&lt;span class="pl-en"&gt;MyClass&lt;/span&gt;&amp;gt; {
    on { getText() } doReturn &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  }
  &lt;span class="pl-k"&gt;val&lt;/span&gt; classUnderTest &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;ClassUnderTest&lt;/span&gt;(mock)
  
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; When &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  classUnderTest.doAction()
  
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Then &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  verify(mock).doSomething(any())
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more info and samples, see the &lt;a href="https://github.com/nhaarman/mockito-kotlin/wiki"&gt;Wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;Mockito-Kotlin is built with Gradle.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;./gradlew build&lt;/code&gt; builds the project&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./gradlew publishToMavenLocal&lt;/code&gt; installs the maven artifacts in your local repository&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./gradlew assemble &amp;amp;&amp;amp; ./gradlew test&lt;/code&gt; runs the test suite (See Testing below)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-versioning" class="anchor" aria-hidden="true" href="#versioning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Versioning&lt;/h3&gt;
&lt;p&gt;Mockito-Kotlin roughly follows SEMVER; version names are parsed from
git tags using &lt;code&gt;git describe&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h3&gt;
&lt;p&gt;Mockito-Kotlin's test suite is located in a separate &lt;code&gt;tests&lt;/code&gt; module,
to allow running the tests using several Kotlin versions whilst still
keeping the base module at a recent version.&lt;/p&gt;
&lt;p&gt;Testing thus must be done in two stages: one to build the base artifact
to test against, and the actual execution of the tests against the
built artifact:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;./gradlew assemble&lt;/code&gt; builds the base artifact&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./gradlew test&lt;/code&gt; runs the tests against the built artifact.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Usually it is enough to test only using the default Kotlin versions;
CI will test against multiple versions.
If you want to test using a different Kotlin version locally, set
an environment variable &lt;code&gt;KOTLIN_VERSION&lt;/code&gt; and run the tests.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>nhaarman</author><guid isPermaLink="false">https://github.com/nhaarman/mockito-kotlin</guid><pubDate>Sun, 05 Jan 2020 00:08:00 GMT</pubDate></item><item><title>arturbosch/detekt #9 in Kotlin, Today</title><link>https://github.com/arturbosch/detekt</link><description>&lt;p&gt;&lt;i&gt;Static code analysis for Kotlin&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-detekt" class="anchor" aria-hidden="true" href="#detekt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;detekt&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://kotlinlang.slack.com/messages/C88E12QH4/convo/C0BQ5GZ0S-1511956674.000289/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2d0597f5aa9fb869b5a06de0c585518ab51e1825/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6f6e5f736c61636b2d7265642e7376673f7374796c653d666c61742d737175617265" alt="Join the chat at https://kotlinlang.slack.com/messages/C88E12QH4/convo/C0BQ5GZ0S-1511956674.000289/" data-canonical-src="https://img.shields.io/badge/chat-on_slack-red.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://arturbosch.github.io/detekt/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bfa154918b549d9ef86b4d1f37a5354faa79a557/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f76697369742d776562736974652d7265642e7376673f7374796c653d666c61742d737175617265" alt="Visit the website at https://arturbosch.github.io/detekt/" data-canonical-src="https://img.shields.io/badge/visit-website-red.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bintray.com/arturbosch/code-analysis/detekt/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/40cddc8394da2f174aee79a7dc9b68c2d7baf151/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6172747572626f7363682f636f64652d616e616c797369732f646574656b742f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/arturbosch/code-analysis/detekt/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;
&lt;a href="https://plugins.gradle.org/plugin/io.gitlab.arturbosch.detekt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7496401c4c4189148aa628ab1cacce3c281e331b/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d6d657461646174612f762f68747470732f706c7567696e732e677261646c652e6f72672f6d322f696f2f6769746c61622f6172747572626f7363682f646574656b742f696f2e6769746c61622e6172747572626f7363682e646574656b742e677261646c652e706c7567696e2f6d6176656e2d6d657461646174612e786d6c2e7376673f6c6162656c3d477261646c65267374796c653d666c61742d737175617265" alt="gradle plugin" data-canonical-src="https://img.shields.io/maven-metadata/v/https/plugins.gradle.org/m2/io/gitlab/arturbosch/detekt/io.gitlab.arturbosch.detekt.gradle.plugin/maven-metadata.xml.svg?label=Gradle&amp;amp;style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/arturbosch/detekt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab771bc0f1633ad8a0658f3c96a9fb9fd417e057/68747470733a2f2f7472617669732d63692e6f72672f6172747572626f7363682f646574656b742e7376673f6272616e63683d6d6173746572" alt="build status" data-canonical-src="https://travis-ci.org/arturbosch/detekt.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/arturbosch/detekt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2e77608d3050726a00da67b16244d7ba6419194c/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f33713967393876766569756c377975742f6272616e63682f6d61737465723f7376673d74727565" alt="build status windows" data-canonical-src="https://ci.appveyor.com/api/projects/status/3q9g98vveiul7yut/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/arturbosch/detekt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fcbc936f557db3a0c069ac026bb808e76100fc33/68747470733a2f2f636f6465636f762e696f2f67682f6172747572626f7363682f646574656b742f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/arturbosch/detekt/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codefactor.io/repository/github/arturbosch/detekt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2139fc6ffd5236f628c793e7278df80cdbd40da7/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f6172747572626f7363682f646574656b742f6261646765" alt="CodeFactor" data-canonical-src="https://www.codefactor.io/repository/github/arturbosch/detekt/badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://app.fossa.io/projects/git%2Bgithub.com%2Farturbosch%2Fdetekt?ref=badge_shield" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9c01a4d26147dd796cbbd54f80f3ec2152ca2f66/68747470733a2f2f6170702e666f7373612e696f2f6170692f70726f6a656374732f6769742532426769746875622e636f6d2532466172747572626f736368253246646574656b742d696e74656c6c696a2d706c7567696e2e7376673f747970653d736869656c64" alt="FOSSA Status" data-canonical-src="https://app.fossa.io/api/projects/git%2Bgithub.com%2Farturbosch%2Fdetekt-intellij-plugin.svg?type=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/KotlinBy/awesome-kotlin"&gt;&lt;img src="https://camo.githubusercontent.com/a0afa2c788fcce72a8d0983a6d6c11cfeaf7f5a9/68747470733a2f2f6b6f746c696e2e6c696e6b2f617765736f6d652d6b6f746c696e2e737667" alt="Awesome Kotlin Badge" data-canonical-src="https://kotlin.link/awesome-kotlin.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Meet &lt;em&gt;detekt&lt;/em&gt;, a static code analysis tool for the &lt;em&gt;Kotlin&lt;/em&gt; programming language.
It operates on the abstract syntax tree provided by the Kotlin compiler.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/images/detekt_in_action.png"&gt;&lt;img src="docs/images/detekt_in_action.png" alt="detekt in action" title="detekt in action" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Code smell analysis for your Kotlin projects&lt;/li&gt;
&lt;li&gt;Complexity reports based on lines of code, cyclomatic complexity and amount of code smells&lt;/li&gt;
&lt;li&gt;Highly configurable rule sets&lt;/li&gt;
&lt;li&gt;Suppression of findings with Kotlin's &lt;code&gt;@Suppress&lt;/code&gt; and Java's &lt;code&gt;@SuppressWarnings&lt;/code&gt; annotations&lt;/li&gt;
&lt;li&gt;Specification of quality gates which will break your build&lt;/li&gt;
&lt;li&gt;Code Smell baseline and whitelisting for legacy projects&lt;/li&gt;
&lt;li&gt;&lt;a href="#with-gradle"&gt;Gradle plugin&lt;/a&gt; for code analysis via Gradle builds&lt;/li&gt;
&lt;li&gt;Gradle tasks to use local &lt;code&gt;IntelliJ&lt;/code&gt; distribution for formatting and inspecting Kotlin code&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arturbosch/sonar-kotlin"&gt;SonarQube integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Extensibility by enabling incorporation of personal rule sets, &lt;code&gt;FileProcessListener's&lt;/code&gt; and &lt;code&gt;OutputReport's&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arturbosch/detekt-intellij-plugin"&gt;IntelliJ integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Unofficial &lt;a href="https://github.com/Ozsie/detekt-maven-plugin"&gt;Maven plugin&lt;/a&gt; by &lt;a href="https://github.com/Ozsie"&gt;Ozsie&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-project-website" class="anchor" aria-hidden="true" href="#project-website"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Website&lt;/h3&gt;
&lt;p&gt;Visit &lt;a href="https://arturbosch.github.io/detekt/" rel="nofollow"&gt;the project website&lt;/a&gt; for installation guides, release notes, migration guides, rule descriptions and configuration options.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-quick-links" class="anchor" aria-hidden="true" href="#quick-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick-Links&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arturbosch.github.io/detekt/changelog.html" rel="nofollow"&gt;Changelog and migration guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arturbosch.github.io/detekt/cli.html" rel="nofollow"&gt;Available CLI options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arturbosch.github.io/detekt/complexity.html" rel="nofollow"&gt;Rule set and rule descriptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arturbosch.github.io/detekt/extensions.html" rel="nofollow"&gt;Writing custom rules and extending detekt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arturbosch.github.io/detekt/suppressing-rules.html" rel="nofollow"&gt;Suppressing issues in code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arturbosch.github.io/detekt/baseline.html" rel="nofollow"&gt;Suppressing issues via baseline file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arturbosch.github.io/detekt/configurations.html" rel="nofollow"&gt;Configuring detekt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sample Gradle integrations examples:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/arturbosch/detekt/blob/master/build.gradle.kts"&gt;multi project (Kotlin DSL)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arturbosch/kutils/blob/master/build.gradle"&gt;single project (Groovy DSL)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arturbosch/sonar-kotlin/blob/master/pom.xml"&gt;single project (Unofficial Maven plugin)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arturbosch/detekt/blob/3357abba87e1550c65b6610012bb291e0fbb64ce/build.gradle.kts#L280-L295"&gt;setup additional detekt task for all modules (Kotlin DSL)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arturbosch/detekt/blob/3357abba87e1550c65b6610012bb291e0fbb64ce/build.gradle.kts#L262-L278"&gt;setup additional formatting task for all modules (Kotlin DSL)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-quick-start-" class="anchor" aria-hidden="true" href="#quick-start-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start ...&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-with-the-command-line-interface" class="anchor" aria-hidden="true" href="#with-the-command-line-interface"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;with the command-line interface&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/arturbosch/detekt
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; detekt
./gradlew build shadowJar
java -jar detekt-cli/build/libs/detekt-cli-[version]-all.jar --help&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-with-gradle" class="anchor" aria-hidden="true" href="#with-gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;with Gradle&lt;/h4&gt;
&lt;p&gt;Gradle 5.0+ is required:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;buildscript {
    repositories {
        jcenter()
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or&lt;/span&gt;

    mavenCentral()
    jcenter {
        content {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; just allow to include kotlinx projects&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; detekt needs 'kotlinx-html' for the html report&lt;/span&gt;
            includeGroup &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlinx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
    }
}

plugins {
    id(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.gitlab.arturbosch.detekt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).version(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[version]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

detekt {
    failFast &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fail build on any finding&lt;/span&gt;
    buildUponDefaultConfig &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; preconfigure defaults&lt;/span&gt;
    config &lt;span class="pl-k"&gt;=&lt;/span&gt; files(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$projectDir/config/detekt.yml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; point to your custom config defining rules to run, overwriting default behavior&lt;/span&gt;
    baseline &lt;span class="pl-k"&gt;=&lt;/span&gt; file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$projectDir/config/baseline.xml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a way of suppressing issues before introducing detekt&lt;/span&gt;

    reports {
        html.enabled &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; observe findings in your browser with structure and code snippets&lt;/span&gt;
        xml.enabled &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; checkstyle like format mainly for integrations like Jenkins&lt;/span&gt;
        txt.enabled &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; similar to the console output, contains issue signature to manually edit baseline files&lt;/span&gt;
    }
}

tasks {
    withType&amp;lt;&lt;span class="pl-en"&gt;Detekt&lt;/span&gt;&amp;gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Target version of the generated JVM bytecode. It is used for type resolution.&lt;/span&gt;
        &lt;span class="pl-c1"&gt;this&lt;/span&gt;.jvmTarget &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="https://bintray.com/arturbosch/code-analysis/detekt" rel="nofollow"&gt;bintray&lt;/a&gt; for releases and &lt;a href="https://oss.jfrog.org/artifactory/webapp/#/artifacts/browse/tree/General/oss-snapshot-local/io/gitlab/arturbosch/detekt/detekt-cli/" rel="nofollow"&gt;artifactory&lt;/a&gt; for snapshots.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-adding-more-rule-sets" class="anchor" aria-hidden="true" href="#adding-more-rule-sets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding more rule sets&lt;/h3&gt;
&lt;p&gt;detekt itself provides a wrapper over &lt;a href="https://github.com/shyiko/ktlint"&gt;KtLint&lt;/a&gt; as a &lt;code&gt;formatting&lt;/code&gt; rule set
which can be easily added to the Gradle configuration:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;dependencies {
    detektPlugins &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.gitlab.arturbosch.detekt:detekt-formatting:[version]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Likewise custom &lt;a href="https://arturbosch.github.io/detekt/extensions.html" rel="nofollow"&gt;extensions&lt;/a&gt; can be added to detekt.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h3&gt;
&lt;p&gt;If you contributed to detekt but your name is not in the list, please feel free to add yourself to it!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/arturbosch"&gt;Artur Bosch&lt;/a&gt; - Maintainer&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Mauin"&gt;Marvin Ramin&lt;/a&gt; - Collaborator, Bunch of rules, Active on Issues, refactorings, MultiRule&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/schalkms"&gt;schalks&lt;/a&gt; - Collaborator, Active on Issues, Bunch of rules, Project metrics&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vanniktech"&gt;Niklas Baudy&lt;/a&gt; - Active on Issues, Bunch of rules, Bug fixes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lummax"&gt;lummax&lt;/a&gt; - Cli enhancements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MyDogTom"&gt;Svyatoslav Chatchenko&lt;/a&gt; - Active on Issues, NamingConventions and UnusedImport fixes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/seanf"&gt;Sean Flanigan&lt;/a&gt; - Config from classpath resource&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sschuberth"&gt;Sebastian Schuberth&lt;/a&gt; - Active on Issues, Windows support&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/olivierlemasle"&gt;Olivier Lemasle&lt;/a&gt; - NP-Bugfix, rules fixes, Gradle plugin improvement&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/winterDroid"&gt;Marc Prengemann&lt;/a&gt; - Support for custom output formats, prototyped Rule-Context-Issue separation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rock3r"&gt;Sebastiano Poggi&lt;/a&gt; - Enhanced milestone report script, Magic number fixes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jvilya"&gt;Ilya Tretyakov&lt;/a&gt; - Sonar runs should not auto correct formatting.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mr-procrastinator"&gt;Andrey T&lt;/a&gt; - Readme fix&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tagantroy"&gt;Ivan Balaksha&lt;/a&gt; - Rules: UnsafeCast, SpreadOperator, UnsafeCallOnNullableType, LabeledExpression&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nevvea7"&gt;Anna Y&lt;/a&gt; - Readme fix&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/koral--"&gt;Karol Wrótniak&lt;/a&gt; - Treat comments as not empty blocks&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radimvaculik"&gt;Radim Vaculik&lt;/a&gt; - VariableMaxLength - bugfix&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mnonnenmacher"&gt;Martin Nonnenmacher&lt;/a&gt; - UndocumentedPublicClass - enum support&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DmytroTroynikov"&gt;Dmytro Troynikov&lt;/a&gt; - Updated Magic Number rule to ignore Named Arguments&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aochsner"&gt;Andrew Ochsner&lt;/a&gt; - Updated Readme for &lt;code&gt;failFast&lt;/code&gt; option&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eskatos"&gt;Paul Merlin&lt;/a&gt; - Gradle build improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vacxe"&gt;Konstantin Aksenov&lt;/a&gt; - Coding improvement&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/3flex"&gt;Matthew Haughton&lt;/a&gt; - Added type resolution, Dependency updates, Coding + Documentation improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jbaginski"&gt;Janusz Bagiński&lt;/a&gt; - Fixed line number reporting for MaxLineLengthRule&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mkobit"&gt;Mike Kobit&lt;/a&gt; - Gradle build improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/philipphofmann"&gt;Philipp Hofmann&lt;/a&gt; - Readme improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/olivierperez"&gt;Olivier PEREZ&lt;/a&gt; - Fixed Typo in Readme&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pocmo"&gt;Sebastian Kaspari&lt;/a&gt; - Html-Output-Format, Documentation fix&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/geralt-encore"&gt;Ilya Zorin&lt;/a&gt; - Rule improvement: UnnecessaryAbstractClass&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/markov"&gt;Gesh Markov&lt;/a&gt; - Improve error message for incorrect configuration file&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/patrickpilch"&gt;Patrick Pilch&lt;/a&gt; - Rule improvement: ReturnCount&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serj-lotutovici"&gt;Serj Lotutovici&lt;/a&gt; - Rule improvement: LongParameterList&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/deeprim"&gt;Dmitry Primshyts&lt;/a&gt; - Rule improvement: MagicNumber&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/egor-n"&gt;Egor Neliuba&lt;/a&gt; - Rule improvement: EmptyFunctionBlock, EmptyClassBlock&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tasomaniac/"&gt;Said Tahsin Dane&lt;/a&gt; - Gradle plugin improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/misaelmt"&gt;Misa Torres&lt;/a&gt; - Added: TrailingWhitespace and NoTabs rules&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/coyotesqrl"&gt;R.A. Porter&lt;/a&gt; - Updated Readme links to RuleSets&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rvoortman"&gt;Robbin Voortman&lt;/a&gt; - Rule improvement: MaxLineLength&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/Miha-x64/"&gt;Mike Gorunov&lt;/a&gt; — Rule improvement: UndocumentedPublicFunction&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jkaan"&gt;Joey Kaan&lt;/a&gt; - New rule: MandatoryBracesIfStatements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/samarjan92"&gt;Dmitriy Samaryan&lt;/a&gt; - Rule fix: SerialVersionUIDInSerializableClass&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marianosimone"&gt;Mariano Simone&lt;/a&gt; - Rule improvement: UnusedPrivateMember. New Rules: UnusedPrivateClass, VarCouldBeVal&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/duck8823"&gt;Shunsuke Maeda&lt;/a&gt; - Fix: to work on multi module project using &lt;a href="https://github.com/Ozsie/detekt-maven-plugin"&gt;maven plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mishkun"&gt;Mikhail Levchenko&lt;/a&gt; - New rules: Unnecessary let, ExplicitItLambdaParameter&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scottkennedy"&gt;Scott Kennedy&lt;/a&gt; - Minor fixes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mickele"&gt;Mickele Moriconi&lt;/a&gt; - Added: ConstructorParameterNaming and FunctionParameterNaming rules&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ljazgar"&gt;Lukasz Jazgar&lt;/a&gt; - Fixed configuring formatting rules&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pavlospt"&gt;Pavlos-Petros Tournaris&lt;/a&gt; - Lazy evaluation of Regex in Rules&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/epeee"&gt;Erhard Pointl&lt;/a&gt; - Kotlin DSL and Gradle enhancements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/snowe2010"&gt;Tyler Thrailkill&lt;/a&gt; - FunctionNaming rule enhancements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tokou"&gt;Tarek Belkahia&lt;/a&gt; - TooManyFunctions rule options&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/karimkod"&gt;Bournane Abdelkrim&lt;/a&gt; - Fix typos&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rafaeltoledo"&gt;Rafael Toledo&lt;/a&gt; - Fix Gradle plugin badge&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aballano"&gt;Alberto Ballano&lt;/a&gt; - ExceptionRaisedInUnexpectedLocation rule improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gmariotti"&gt;Guido Pio Mariotti&lt;/a&gt; - Documentation improvement&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Mygod"&gt;Mygod&lt;/a&gt; - UnusedImports rule improvement&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AndreasVolkmann"&gt;Andreas Volkmann&lt;/a&gt; - yaml code comments&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/glammers"&gt;glammers&lt;/a&gt; - Documentation improvement&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mlegy"&gt;Ahmad El-Melegy&lt;/a&gt; - yaml syntax fix&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arjank"&gt;Arjan Kleene&lt;/a&gt; - Add unnecessary apply rule&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pawegio"&gt;Paweł Gajda&lt;/a&gt; - Rule improvement: FunctionParameterNaming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alistairsykes"&gt;Alistair Sykes&lt;/a&gt; - Doc improvement&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andrew-arnott"&gt;Andrew Arnott&lt;/a&gt; - UnusedPrivateMember improvement&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tylerbwong"&gt;Tyler Wong&lt;/a&gt; - UnderscoresInNumericLiterals rule&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fourlastor"&gt;Daniele Conti&lt;/a&gt; - ObjectPropertyNaming improvement&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cortinico"&gt;Nicola Corti&lt;/a&gt; - Fixed Suppress of MaxLineLenght&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DownMoney"&gt;Michael Lotkowski&lt;/a&gt; - Rule improvement: False positive UnusedImport for componentN&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Pak3nuh"&gt;Nuno Caro&lt;/a&gt; - Adds TXT report support on Gradle plugin&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/boxresin"&gt;Minsuk Eom&lt;/a&gt; - Rule fix: PackageNaming&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-mentions" class="anchor" aria-hidden="true" href="#mentions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mentions&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://androidweekly.net/issues/issue-259" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fa593137dbff51627e4d8c3649ac274551064e89/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616e64726f69647765656b6c792e6e65742d3235392d6f72616e67652e7376673f7374796c653d666c61742d737175617265" alt="androidweekly" data-canonical-src="https://img.shields.io/badge/androidweekly.net-259-orange.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://androidweekly.cn/android-dev-wekly-issue-154/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7a5a32c8803fe231487350ec347083dd78ac4bc1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616e64726f69647765656b6c792e636e2d3135342d6f72616e67652e7376673f7374796c653d666c61742d737175617265" alt="androidweekly" data-canonical-src="https://img.shields.io/badge/androidweekly.cn-154-orange.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As mentioned in...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://doi.org/10.1145/3267183.3267186" rel="nofollow"&gt;SBCARS '18 -  Are you still smelling it?: A comparative study between Java and Kotlin language&lt;/a&gt; by &lt;a href="https://github.com/matheusflauzino/smells-experiment-Kotlin-and-Java"&gt;Flauzino et al.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=yjhQiP0329M" rel="nofollow"&gt;KotlinConf 2018 - Safe(r) Kotlin Code - Static Analysis Tools for Kotlin by Marvin Ramin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=LT6m5_LO2DQ" rel="nofollow"&gt;droidcon NYC 2018 - Static Code Analysis For Kotlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kotlin on Code Quality Tools - by @vanniktech &lt;a href="https://docs.google.com/presentation/d/1sUoQCRHTR01JfaS67Qkd7K1rdRLOhO6QGCelZZwxOKs/edit" rel="nofollow"&gt;Slides&lt;/a&gt; &lt;a href="https://www.youtube.com/watch?v=FKDNE6PPTTE" rel="nofollow"&gt;Presentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@acerezoluna/static-code-analysis-tools-for-kotlin-in-android-fa072125fd50" rel="nofollow"&gt;@medium/acerezoluna/static-code-analysis-tools-for-kotlin-in-android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://proandroiddev.com/writing-custom-lint-rules-for-your-kotlin-project-with-detekt-653e4dbbe8b9" rel="nofollow"&gt;@medium/annayan/writing-custom-lint-rules-for-your-kotlin-project-with-detekt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tips.seebrock3r.me/free-continuous-integration-for-modern-android-apps-with-circleci-940e33451c83" rel="nofollow"&gt;Free Continuous Integration for modern Android apps with CircleCI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.thefuntasty.com/static-code-analysis-for-kotlin-in-android-8676c8d6a3c5" rel="nofollow"&gt;Static code analysis for Kotlin in Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.undabot.com/the-art-of-android-devops-fa29396bc9ee" rel="nofollow"&gt;The Art of Android DevOps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://academy.realm.io/posts/360-andev-2017-mark-scheel-continuous-integration-android/" rel="nofollow"&gt;Android Basics: Continuous Integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://proandroiddev.com/kotlin-static-analysis-why-and-how-a12042e34a98" rel="nofollow"&gt;Kotlin Static Analysis — why and how?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.frankel.ch/check-quality-kotlin-code/" rel="nofollow"&gt;Check the quality of Kotlin code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Integrations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.sonarqube.org/display/PLUG/SonarKotlin" rel="nofollow"&gt;SonarKotlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codacy.com" rel="nofollow"&gt;Codacy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vanniktech/gradle-code-quality-tools-plugin"&gt;Gradle plugin that generates ErrorProne, Findbugs, Checkstyle, PMD, CPD, Lint, Detekt &amp;amp; Ktlint Tasks for every subproject&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tomasbjerre/violations-lib"&gt;Java library for parsing report files from static code analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TouK/sputnik"&gt;sputnik is a free tool for static code review and provides support for detekt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/novoda/gradle-static-analysis-plugin"&gt;Novoda Gradle Static Analysis plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ozsie/detekt-maven-plugin"&gt;Maven plugin that wraps the Detekt CLI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/btkelly/gnag"&gt;Gradle plugin that helps facilitate GitHub PR checking and automatic commenting of violations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://codefactor.io/" rel="nofollow"&gt;Codefactor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jetbrains/"&gt;JetBrains&lt;/a&gt; - Creating IntelliJ + Kotlin&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pmd/pmd"&gt;PMD&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/checkstyle/checkstyle"&gt;Checkstyle&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/shyiko/ktlint"&gt;KtLint&lt;/a&gt; - Ideas for threshold values and style rules&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>arturbosch</author><guid isPermaLink="false">https://github.com/arturbosch/detekt</guid><pubDate>Sun, 05 Jan 2020 00:09:00 GMT</pubDate></item><item><title>android/architecture-components-samples #10 in Kotlin, Today</title><link>https://github.com/android/architecture-components-samples</link><description>&lt;p&gt;&lt;i&gt;Samples for Android Architecture Components. &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-android-architecture-components-samples" class="anchor" aria-hidden="true" href="#android-architecture-components-samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android Architecture Components samples&lt;/h1&gt;
&lt;p&gt;A collection of samples using the &lt;a href="https://developer.android.com/arch" rel="nofollow"&gt;Architecture Components&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/room" rel="nofollow"&gt;Room&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/lifecycle" rel="nofollow"&gt;Lifecycle-aware components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/viewmodel" rel="nofollow"&gt;ViewModels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/livedata" rel="nofollow"&gt;LiveData&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/paging/" rel="nofollow"&gt;Paging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/navigation/" rel="nofollow"&gt;Navigation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/workmanager/" rel="nofollow"&gt;WorkManager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-samples" class="anchor" aria-hidden="true" href="#samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Samples&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/googlesamples/android-architecture-components/blob/master/BasicSample"&gt;BasicSample&lt;/a&gt;&lt;/strong&gt; - Shows how to persist data using a SQLite database and Room. Also uses ViewModels and LiveData.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/googlesamples/android-architecture-components/blob/master/PersistenceContentProviderSample"&gt;PersistenceContentProviderSample&lt;/a&gt;&lt;/strong&gt; - Shows how to expose data via a Content Provider using Room.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/googlesamples/android-architecture-components/blob/master/GithubBrowserSample"&gt;GithubBrowserSample&lt;/a&gt;&lt;/strong&gt; - An &lt;strong&gt;advanced&lt;/strong&gt;  sample that uses the Architecture components, Dagger and the Github API, in Kotlin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/googlesamples/android-architecture-components/blob/master/BasicRxJavaSample"&gt;BasicRxJavaSample&lt;/a&gt;&lt;/strong&gt; - Shows how to use Room with RxJava 2. Also uses ViewModels.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/googlesamples/android-architecture-components/blob/master/PersistenceMigrationsSample"&gt;PersistenceMigrationsSample&lt;/a&gt;&lt;/strong&gt; - Shows how to implement migrations in Room.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/googlesamples/android-architecture-components/blob/master/BasicRxJavaSampleKotlin"&gt;BasicRxJavaKotlinSample&lt;/a&gt;&lt;/strong&gt; - Shows
how to use ViewModels and Room together with RxJava, in Kotlin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/googlesamples/android-architecture-components/tree/master/PagingSample"&gt;PagingSample&lt;/a&gt;&lt;/strong&gt; - Shows
how to use the Paging library with Room, in Kotlin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/googlesamples/android-architecture-components/tree/master/PagingWithNetworkSample"&gt;PagingNetworkSample&lt;/a&gt;&lt;/strong&gt; - Shows
how to use the Paging library with a backend API via Retrofit, in Kotlin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/googlesamples/android-architecture-components/tree/master/NavigationBasicSample"&gt;NavigationBasicSample&lt;/a&gt;&lt;/strong&gt; - Shows
how to use Navigation to perform navigation and deep linking in Kotlin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/googlesamples/android-architecture-components/tree/master/NavigationAdvancedSample"&gt;NavigationAdvancedSample&lt;/a&gt;&lt;/strong&gt; - Shows
how to handle multiple back stacks with Navigation and a BottomNavigationView.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/googlesamples/android-architecture-components/tree/master/WorkManagerSample"&gt;WorkManagerSample&lt;/a&gt;&lt;/strong&gt; - Shows
how to use WorkManager to do background work, in Kotlin.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-reporting-issues" class="anchor" aria-hidden="true" href="#reporting-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting Issues&lt;/h3&gt;
&lt;p&gt;You can report an &lt;a href="https://github.com/googlesamples/android-architecture-components/issues"&gt;Issue&lt;/a&gt; on the samples using this repository. If you find an issue with the Architecture Components, report it using the &lt;a href="https://issuetracker.google.com/issues/new?component=197448&amp;amp;template=878802" rel="nofollow"&gt;Architecture Components Issue Tracker&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright 2018 The Android Open Source Project, Inc.&lt;/p&gt;
&lt;p&gt;Licensed to the Apache Software Foundation (ASF) under one or more contributor
license agreements.  See the NOTICE file distributed with this work for
additional information regarding copyright ownership.  The ASF licenses this
file to you under the Apache License, Version 2.0 (the "License"); you may not
use this file except in compliance with the License.  You may obtain a copy of
the License at&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
License for the specific language governing permissions and limitations under
the License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>android</author><guid isPermaLink="false">https://github.com/android/architecture-components-samples</guid><pubDate>Sun, 05 Jan 2020 00:10:00 GMT</pubDate></item><item><title>ktorio/ktor #11 in Kotlin, Today</title><link>https://github.com/ktorio/ktor</link><description>&lt;p&gt;&lt;i&gt;Framework for quickly creating connected applications in Kotlin with minimal effort&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ff8d543d1bc5951292d40f105ca2a96d6eeee1fa/687474703a2f2f6b746f722e696f2f6173736574732f696d616765732f6b746f725f6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/ff8d543d1bc5951292d40f105ca2a96d6eeee1fa/687474703a2f2f6b746f722e696f2f6173736574732f696d616765732f6b746f725f6c6f676f2e706e67" alt="Ktor" width="600" data-canonical-src="http://ktor.io/assets/images/ktor_logo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c558aa8079c9095e7e944ab3db6d8e69ea01af97/687474703a2f2f6a622e67672f6261646765732f6f6666696369616c2e737667" alt="Official JetBrains project" data-canonical-src="http://jb.gg/badges/official.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bintray.com/kotlin/ktor/ktor/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/76c5686c960e934f6ab17a4d8d0ff52afbeba163/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6b6f746c696e2f6b746f722f6b746f722f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/kotlin/ktor/ktor/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;
&lt;a href="https://teamcity.jetbrains.com/viewType.html?buildTypeId=KotlinTools_Ktor_BuildGradle&amp;amp;branch_KotlinTools_Ktor=%3Cdefault%3E&amp;amp;tab=buildTypeStatusDiv" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3396da43c1cfe89882cbec1818376f2d7e6ef4d0/68747470733a2f2f696d672e736869656c64732e696f2f7465616d636974792f687474702f7465616d636974792e6a6574627261696e732e636f6d2f732f4b6f746c696e546f6f6c735f4b746f725f4275696c64477261646c652e737667" alt="TeamCity Build" data-canonical-src="https://img.shields.io/teamcity/http/teamcity.jetbrains.com/s/KotlinTools_Ktor_BuildGradle.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e7da7b6b632d5ef4bce9a550a5d5cfe400ca1fe/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652532304c6963656e7365253230322e302d626c75652e7376673f7374796c653d666c6174" alt="GitHub License" data-canonical-src="https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;io.ktor.server.netty.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;io.ktor.routing.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;io.ktor.application.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;io.ktor.http.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;io.ktor.response.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;io.ktor.server.engine.*&lt;/span&gt;

&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-smi"&gt;args&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&amp;gt;) {
    embeddedServer(&lt;span class="pl-en"&gt;Netty&lt;/span&gt;, &lt;span class="pl-c1"&gt;8080&lt;/span&gt;) {
        routing {
            get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
                call.respondText(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello, world!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;ContentType&lt;/span&gt;.&lt;span class="pl-en"&gt;Text&lt;/span&gt;.&lt;span class="pl-en"&gt;Html&lt;/span&gt;)
            }
        }
    }.start(wait &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Runs embedded web server on &lt;code&gt;localhost:8080&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Installs routing and responds with &lt;code&gt;Hello, world!&lt;/code&gt; when receiving GET http request for root path&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-principles" class="anchor" aria-hidden="true" href="#principles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Principles&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-unopinionated" class="anchor" aria-hidden="true" href="#unopinionated"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unopinionated&lt;/h4&gt;
&lt;p&gt;Ktor Framework doesn't impose a lot of constraints on what technology a project is going to use – logging,
templating, messaging, persistent, serializing, dependency injection, etc.
Sometimes it may be required to implement a simple interface, but usually it is a matter of writing a
transforming or intercepting function. Features are installed into application using unified &lt;em&gt;interception&lt;/em&gt; mechanism
which allows building arbitrary pipelines.&lt;/p&gt;
&lt;p&gt;Ktor Application can be hosted in any servlet container with Servlet 3.0+ API support such as Tomcat, or
standalone using Netty or Jetty. Support for other hosts can be added through the unified hosting API.&lt;/p&gt;
&lt;p&gt;Ktor APIs are mostly functions calls with lambdas. Thanks to Kotlin DSL capabilities, code looks declarative.
Application composition is entirely developer's choice – with functions or classes, using dependency injection
framework or doing it all manually in main function.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-asynchronous" class="anchor" aria-hidden="true" href="#asynchronous"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asynchronous&lt;/h4&gt;
&lt;p&gt;Ktor pipeline machinery and API is utilising Kotlin coroutines to provide easy-to-use asynchronous
programming model without making it too cumbersome. All host implementations are using asynchronous I/O facilities
to avoid thread blocking.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-testable" class="anchor" aria-hidden="true" href="#testable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testable&lt;/h4&gt;
&lt;p&gt;Ktor application can be hosted in a special test environment, which emulates to some
extent web server without actually doing any networking. It provides easy way to test an application without mocking
too much stuff, and still achieve good performance while validating application calls. Integration tests with real
embedded web server are of course possible, too.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Please visit &lt;a href="http://ktor.io" rel="nofollow"&gt;ktor.io&lt;/a&gt; for Quick Start and detailed explanations of features, usage and machinery.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Getting started with &lt;a href="http://ktor.io/quickstart/gradle.html" rel="nofollow"&gt;Gradle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Getting started with &lt;a href="http://ktor.io/quickstart/maven.html" rel="nofollow"&gt;Maven&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Getting started with &lt;a href="http://ktor.io/quickstart/intellij-idea.html" rel="nofollow"&gt;IDEA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-inspirations" class="anchor" aria-hidden="true" href="#inspirations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inspirations&lt;/h2&gt;
&lt;p&gt;Kotlin web frameworks such as Wasabi and Kara, which are currently deprecated.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reporting-security-vulnerabilities" class="anchor" aria-hidden="true" href="#reporting-security-vulnerabilities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting Security Vulnerabilities&lt;/h2&gt;
&lt;p&gt;If you find a security vulnerability in Ktor, we kindly request that instead of using our public issue tracker, you instead reach out to the JetBrains security team via our &lt;a href="https://www.jetbrains.com/legal/terms/responsible-disclosure.html" rel="nofollow"&gt;responsible disclosure process&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please see &lt;a href="CONTRIBUTING.md"&gt;the contribution guide&lt;/a&gt; before contirbuting and &lt;a href="CODE_OF_CONDUCT.md"&gt;Code of conduct&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ktorio</author><guid isPermaLink="false">https://github.com/ktorio/ktor</guid><pubDate>Sun, 05 Jan 2020 00:11:00 GMT</pubDate></item><item><title>JetBrains/Exposed #12 in Kotlin, Today</title><link>https://github.com/JetBrains/Exposed</link><description>&lt;p&gt;&lt;i&gt;Kotlin SQL Framework&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c7357c8edb1815997fc5d3f70135ae6bc179306f/68747470733a2f2f6a622e67672f6261646765732f7465616d2e737667" alt="JetBrains team project" data-canonical-src="https://jb.gg/badges/team.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://kotlinlang.slack.com/archives/C0CG7E0A1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8d44a46fb56e91d37d445517b096ee5b6ef3edb9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736c61636b2d406b6f746c696e6c616e672f6578706f7365642d79656c6c6f772e7376673f6c6f676f3d736c61636b3f7374796c653d666c6174" alt="Kotlinlang Slack Channel" data-canonical-src="https://img.shields.io/badge/slack-@kotlinlang/exposed-yellow.svg?logo=slack?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://teamcity.jetbrains.com/viewType.html?buildTypeId=KotlinTools_Exposed_Build&amp;amp;guest=1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b9bf478598a11f724675f63adf944d3ffbcc2cb0/68747470733a2f2f7465616d636974792e6a6574627261696e732e636f6d2f6170702f726573742f6275696c64732f6275696c64547970653a2869643a4b6f746c696e546f6f6c735f4578706f7365645f4275696c64292f73746174757349636f6e" alt="TC Build status" data-canonical-src="https://teamcity.jetbrains.com/app/rest/builds/buildType:(id:KotlinTools_Exposed_Build)/statusIcon" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bintray.com/kotlin/exposed/exposed-core/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/25e4664ddbf4d2daaf281f2fa70c843ea8dac46c/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6b6f746c696e2f6578706f7365642f6578706f7365642d636f72652f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/kotlin/exposed/exposed-core/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;
&lt;a href="https://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e7da7b6b632d5ef4bce9a550a5d5cfe400ca1fe/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652532304c6963656e7365253230322e302d626c75652e7376673f7374796c653d666c6174" alt="GitHub License" data-canonical-src="https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-exposed---kotlin-sql-library" class="anchor" aria-hidden="true" href="#exposed---kotlin-sql-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exposed - Kotlin SQL Library&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Exposed&lt;/em&gt; is a lightweight SQL library written for &lt;a href="https://github.com/JetBrains/kotlin"&gt;Kotlin&lt;/a&gt; language.
It does have two layers of database access: typesafe SQL wrapping DSL and lightweight data access objects.&lt;/p&gt;
&lt;p&gt;Exposed is currently available for maven/gradle builds at &lt;a href="https://bintray.com/kotlin/exposed/exposed/view#" rel="nofollow"&gt;https://bintray.com/kotlin/exposed/exposed/view#&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can inspect project &lt;a href="ROADMAP.md"&gt;roadmap&lt;/a&gt; to see what's coming next or look into &lt;a href="ChangeLog.md"&gt;Change log&lt;/a&gt; for list of bug fixes and improvements.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dialects" class="anchor" aria-hidden="true" href="#dialects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dialects&lt;/h2&gt;
&lt;p&gt;Currently supported database dialects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PostgreSQL&lt;/li&gt;
&lt;li&gt;MySQL&lt;/li&gt;
&lt;li&gt;MariaDB&lt;/li&gt;
&lt;li&gt;&lt;a href="ORACLE.md"&gt;Oracle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SQLite&lt;/li&gt;
&lt;li&gt;H2&lt;/li&gt;
&lt;li&gt;&lt;a href="SQLServer.md"&gt;SQL Server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-sql-dsl-sample" class="anchor" aria-hidden="true" href="#sql-dsl-sample"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL DSL sample:&lt;/h2&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.jetbrains.exposed.sql.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.jetbrains.exposed.sql.transactions.transaction&lt;/span&gt;

&lt;span class="pl-k"&gt;object&lt;/span&gt; Users &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;Table&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; varchar(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Column&amp;lt;String&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; varchar(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, length &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Column&amp;lt;String&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; cityId &lt;span class="pl-k"&gt;=&lt;/span&gt; (integer(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;city_id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) references &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.id).nullable() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Column&amp;lt;Int?&amp;gt;&lt;/span&gt;

    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; primaryKey &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;PrimaryKey&lt;/span&gt;(id, name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PK_User_ID&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; name is optional here&lt;/span&gt;
}

&lt;span class="pl-k"&gt;object&lt;/span&gt; Cities &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;Table&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; integer(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).autoIncrement() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Column&amp;lt;Int&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; varchar(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;50&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Column&amp;lt;String&amp;gt;&lt;/span&gt;

    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; primaryKey &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;PrimaryKey&lt;/span&gt;(id, name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PK_Cities_ID&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
    &lt;span class="pl-en"&gt;Database&lt;/span&gt;.connect(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jdbc:h2:mem:test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, driver &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.h2.Driver&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, user &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;root&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, password &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

    transaction {
        addLogger(&lt;span class="pl-en"&gt;StdOutSqlLogger&lt;/span&gt;)

        &lt;span class="pl-en"&gt;SchemaUtils&lt;/span&gt;.create (&lt;span class="pl-en"&gt;Cities&lt;/span&gt;, &lt;span class="pl-en"&gt;Users&lt;/span&gt;)

        &lt;span class="pl-k"&gt;val&lt;/span&gt; saintPetersburgId &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.insert {
            it[name] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;St. Petersburg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        } get &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.id

        &lt;span class="pl-k"&gt;val&lt;/span&gt; munichId &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.insert {
            it[name] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Munich&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        } get &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.id

        &lt;span class="pl-k"&gt;val&lt;/span&gt; pragueId &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.insert {
            it.update(name, stringLiteral(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;   Prague   &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).trim().substring(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;))
        }[&lt;span class="pl-en"&gt;Cities&lt;/span&gt;.id]

        &lt;span class="pl-k"&gt;val&lt;/span&gt; pragueName &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.select { &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.id eq pragueId }.single()[&lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name]
        assertEquals(pragueName, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Pr&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

        &lt;span class="pl-en"&gt;Users&lt;/span&gt;.insert {
            it[id] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;andrey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            it[name] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Andrey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            it[&lt;span class="pl-en"&gt;Users&lt;/span&gt;.cityId] &lt;span class="pl-k"&gt;=&lt;/span&gt; saintPetersburgId
        }

        &lt;span class="pl-en"&gt;Users&lt;/span&gt;.insert {
            it[id] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sergey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            it[name] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Sergey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            it[&lt;span class="pl-en"&gt;Users&lt;/span&gt;.cityId] &lt;span class="pl-k"&gt;=&lt;/span&gt; munichId
        }

        &lt;span class="pl-en"&gt;Users&lt;/span&gt;.insert {
            it[id] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;eugene&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            it[name] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Eugene&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            it[&lt;span class="pl-en"&gt;Users&lt;/span&gt;.cityId] &lt;span class="pl-k"&gt;=&lt;/span&gt; munichId
        }

        &lt;span class="pl-en"&gt;Users&lt;/span&gt;.insert {
            it[id] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;alex&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            it[name] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Alex&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            it[&lt;span class="pl-en"&gt;Users&lt;/span&gt;.cityId] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;
        }

        &lt;span class="pl-en"&gt;Users&lt;/span&gt;.insert {
            it[id] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;smth&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            it[name] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Something&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            it[&lt;span class="pl-en"&gt;Users&lt;/span&gt;.cityId] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;
        }

        &lt;span class="pl-en"&gt;Users&lt;/span&gt;.update({ &lt;span class="pl-en"&gt;Users&lt;/span&gt;.id eq &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;alex&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}) {
            it[name] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Alexey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }

        &lt;span class="pl-en"&gt;Users&lt;/span&gt;.deleteWhere{ &lt;span class="pl-en"&gt;Users&lt;/span&gt;.name like &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%thing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}

        &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;All cities:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

        &lt;span class="pl-k"&gt;for&lt;/span&gt; (city &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.selectAll()) {
            &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-e"&gt;${city[&lt;span class="pl-en"&gt;Cities&lt;/span&gt;.id]}&lt;/span&gt;: &lt;span class="pl-e"&gt;${city[&lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name]}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }

        &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Manual join:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        (&lt;span class="pl-en"&gt;Users&lt;/span&gt; innerJoin &lt;span class="pl-en"&gt;Cities&lt;/span&gt;).slice(&lt;span class="pl-en"&gt;Users&lt;/span&gt;.name, &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name).
            select {(&lt;span class="pl-en"&gt;Users&lt;/span&gt;.id.eq(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;andrey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;or&lt;/span&gt; &lt;span class="pl-en"&gt;Users&lt;/span&gt;.name.eq(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Sergey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) &lt;span class="pl-k"&gt;and&lt;/span&gt;
                    &lt;span class="pl-en"&gt;Users&lt;/span&gt;.id.eq(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sergey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;and&lt;/span&gt; &lt;span class="pl-en"&gt;Users&lt;/span&gt;.cityId.eq(&lt;span class="pl-en"&gt;Cities&lt;/span&gt;.id)}.forEach {
            &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-e"&gt;${it[&lt;span class="pl-en"&gt;Users&lt;/span&gt;.name]}&lt;/span&gt; lives in &lt;span class="pl-e"&gt;${it[&lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name]}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }

        &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Join with foreign key:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)


        (&lt;span class="pl-en"&gt;Users&lt;/span&gt; innerJoin &lt;span class="pl-en"&gt;Cities&lt;/span&gt;).slice(&lt;span class="pl-en"&gt;Users&lt;/span&gt;.name, &lt;span class="pl-en"&gt;Users&lt;/span&gt;.cityId, &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name).
                select { &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name.eq(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;St. Petersburg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;or&lt;/span&gt; &lt;span class="pl-en"&gt;Users&lt;/span&gt;.cityId.isNull()}.forEach {
            &lt;span class="pl-k"&gt;if&lt;/span&gt; (it[&lt;span class="pl-en"&gt;Users&lt;/span&gt;.cityId] &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;) {
                &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-e"&gt;${it[&lt;span class="pl-en"&gt;Users&lt;/span&gt;.name]}&lt;/span&gt; lives in &lt;span class="pl-e"&gt;${it[&lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name]}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            }
            &lt;span class="pl-k"&gt;else&lt;/span&gt; {
                &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-e"&gt;${it[&lt;span class="pl-en"&gt;Users&lt;/span&gt;.name]}&lt;/span&gt; lives nowhere&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            }
        }

        &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Functions and group by:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

        ((&lt;span class="pl-en"&gt;Cities&lt;/span&gt; innerJoin &lt;span class="pl-en"&gt;Users&lt;/span&gt;).slice(&lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name, &lt;span class="pl-en"&gt;Users&lt;/span&gt;.id.count()).selectAll().groupBy(&lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name)).forEach {
            &lt;span class="pl-k"&gt;val&lt;/span&gt; cityName &lt;span class="pl-k"&gt;=&lt;/span&gt; it[&lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name]
            &lt;span class="pl-k"&gt;val&lt;/span&gt; userCount &lt;span class="pl-k"&gt;=&lt;/span&gt; it[&lt;span class="pl-en"&gt;Users&lt;/span&gt;.id.count()]

            &lt;span class="pl-k"&gt;if&lt;/span&gt; (userCount &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
                &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$userCount user(s) live(s) in $cityName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
                &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Nobody lives in $cityName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            }
        }

        &lt;span class="pl-en"&gt;SchemaUtils&lt;/span&gt;.drop (&lt;span class="pl-en"&gt;Users&lt;/span&gt;, &lt;span class="pl-en"&gt;Cities&lt;/span&gt;)
    }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Outputs:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    SQL: CREATE TABLE IF NOT EXISTS Cities (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(50) NOT NULL, CONSTRAINT pk_Cities PRIMARY KEY (id))
    SQL: CREATE TABLE IF NOT EXISTS Users (id VARCHAR(10) NOT NULL, name VARCHAR(50) NOT NULL, city_id INT NULL, CONSTRAINT pk_Users PRIMARY KEY (id))
    SQL: ALTER TABLE Users ADD FOREIGN KEY (city_id) REFERENCES Cities(id)
    SQL: INSERT INTO Cities (name) VALUES ('St. Petersburg')
    SQL: INSERT INTO Cities (name) VALUES ('Munich')
    SQL: INSERT INTO Cities (name) VALUES ('Prague')
    SQL: INSERT INTO Users (id, name, city_id) VALUES ('andrey', 'Andrey', 1)
    SQL: INSERT INTO Users (id, name, city_id) VALUES ('sergey', 'Sergey', 2)
    SQL: INSERT INTO Users (id, name, city_id) VALUES ('eugene', 'Eugene', 2)
    SQL: INSERT INTO Users (id, name, city_id) VALUES ('alex', 'Alex', NULL)
    SQL: INSERT INTO Users (id, name, city_id) VALUES ('smth', 'Something', NULL)
    SQL: UPDATE Users SET name='Alexey' WHERE Users.id = 'alex'
    SQL: DELETE FROM Users WHERE Users.name LIKE '%thing'
    All cities:
    SQL: SELECT Cities.id, Cities.name FROM Cities
    1: St. Petersburg
    2: Munich
    3: Prague
    Manual join:
    SQL: SELECT Users.name, Cities.name FROM Users INNER JOIN Cities ON Cities.id = Users.city_id WHERE ((Users.id = 'andrey') or (Users.name = 'Sergey')) and Users.id = 'sergey' and Users.city_id = Cities.id
    Sergey lives in Munich
    Join with foreign key:
    SQL: SELECT Users.name, Users.city_id, Cities.name FROM Users INNER JOIN Cities ON Cities.id = Users.city_id WHERE (Cities.name = 'St. Petersburg') or (Users.city_id IS NULL)
    Andrey lives in St. Petersburg
    Functions and group by:
    SQL: SELECT Cities.name, COUNT(Users.id) FROM Cities INNER JOIN Users ON Cities.id = Users.city_id GROUP BY Cities.name
    1 user(s) live(s) in St. Petersburg
    2 user(s) live(s) in Munich
    SQL: DROP TABLE Users
    SQL: DROP TABLE Cities
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-dao-sample" class="anchor" aria-hidden="true" href="#dao-sample"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DAO sample&lt;/h2&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.jetbrains.exposed.dao.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.jetbrains.exposed.dao.id.EntityID&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.jetbrains.exposed.sql.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.jetbrains.exposed.sql.transactions.transaction&lt;/span&gt;

&lt;span class="pl-k"&gt;object&lt;/span&gt; Users &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;IntIdTable&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; varchar(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;50&lt;/span&gt;).index()
    &lt;span class="pl-k"&gt;val&lt;/span&gt; city &lt;span class="pl-k"&gt;=&lt;/span&gt; reference(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;city&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;Cities&lt;/span&gt;)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; age &lt;span class="pl-k"&gt;=&lt;/span&gt; integer(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;object&lt;/span&gt; Cities&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;IntIdTable&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; varchar(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;50&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;User&lt;/span&gt;(&lt;span class="pl-smi"&gt;id&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;EntityID&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;&amp;gt;) &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;IntEntity&lt;/span&gt;(id) {
    &lt;span class="pl-k"&gt;companion&lt;/span&gt; &lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;IntEntityClass&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;User&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;Users&lt;/span&gt;)

    &lt;span class="pl-k"&gt;var&lt;/span&gt; name by &lt;span class="pl-en"&gt;Users&lt;/span&gt;.name
    &lt;span class="pl-k"&gt;var&lt;/span&gt; city by &lt;span class="pl-en"&gt;City&lt;/span&gt; referencedOn &lt;span class="pl-en"&gt;Users&lt;/span&gt;.city
    &lt;span class="pl-k"&gt;var&lt;/span&gt; age by &lt;span class="pl-en"&gt;Users&lt;/span&gt;.age
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;City&lt;/span&gt;(&lt;span class="pl-smi"&gt;id&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;EntityID&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;&amp;gt;) &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;IntEntity&lt;/span&gt;(id) {
    &lt;span class="pl-k"&gt;companion&lt;/span&gt; &lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;IntEntityClass&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;City&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;Cities&lt;/span&gt;)

    &lt;span class="pl-k"&gt;var&lt;/span&gt; name by &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name
    &lt;span class="pl-k"&gt;val&lt;/span&gt; users by &lt;span class="pl-en"&gt;User&lt;/span&gt; referrersOn &lt;span class="pl-en"&gt;Users&lt;/span&gt;.city
}

&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
    &lt;span class="pl-en"&gt;Database&lt;/span&gt;.connect(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jdbc:h2:mem:test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, driver &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.h2.Driver&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, user &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;root&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, password &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

    transaction {
        addLogger(&lt;span class="pl-en"&gt;StdOutSqlLogger&lt;/span&gt;)

        &lt;span class="pl-en"&gt;SchemaUtils&lt;/span&gt;.create (&lt;span class="pl-en"&gt;Cities&lt;/span&gt;, &lt;span class="pl-en"&gt;Users&lt;/span&gt;)

        &lt;span class="pl-k"&gt;val&lt;/span&gt; stPete &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;City&lt;/span&gt;.new {
            name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;St. Petersburg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }

        &lt;span class="pl-k"&gt;val&lt;/span&gt; munich &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;City&lt;/span&gt;.new {
            name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Munich&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }

        &lt;span class="pl-en"&gt;User&lt;/span&gt;.new {
            name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            city &lt;span class="pl-k"&gt;=&lt;/span&gt; stPete
            age &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;
        }

        &lt;span class="pl-en"&gt;User&lt;/span&gt;.new {
            name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            city &lt;span class="pl-k"&gt;=&lt;/span&gt; stPete
            age &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;27&lt;/span&gt;
        }

        &lt;span class="pl-en"&gt;User&lt;/span&gt;.new {
            name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            city &lt;span class="pl-k"&gt;=&lt;/span&gt; munich
            age &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;42&lt;/span&gt;
        }

        &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Cities: &lt;span class="pl-e"&gt;${&lt;span class="pl-en"&gt;City&lt;/span&gt;.all().joinToString {it.name}}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Users in &lt;span class="pl-e"&gt;${stPete.name}&lt;/span&gt;: &lt;span class="pl-e"&gt;${stPete.users.joinToString {it.name}}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Adults: &lt;span class="pl-e"&gt;${&lt;span class="pl-en"&gt;User&lt;/span&gt;.find { &lt;span class="pl-en"&gt;Users&lt;/span&gt;.age greaterEq &lt;span class="pl-c1"&gt;18&lt;/span&gt; }.joinToString {it.name}}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Outputs:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    SQL: CREATE TABLE IF NOT EXISTS Cities (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(50) NOT NULL, CONSTRAINT pk_Cities PRIMARY KEY (id))
    SQL: CREATE TABLE IF NOT EXISTS Users (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(50) NOT NULL, city INT NOT NULL, age INT NOT NULL, CONSTRAINT pk_Users PRIMARY KEY (id))
    SQL: CREATE INDEX Users_name ON Users (name)
    SQL: ALTER TABLE Users ADD FOREIGN KEY (city) REFERENCES Cities(id)
    SQL: INSERT INTO Cities (name) VALUES ('St. Petersburg'),('Munich')
    SQL: SELECT Cities.id, Cities.name FROM Cities
    Cities: St. Petersburg, Munich
    SQL: INSERT INTO Users (name, city, age) VALUES ('a', 1, 5),('b', 1, 27),('c', 2, 42)
    SQL: SELECT Users.id, Users.name, Users.city, Users.age FROM Users WHERE Users.city = 1
    Users in St. Petersburg: a, b
    SQL: SELECT Users.id, Users.name, Users.city, Users.age FROM Users WHERE Users.age &amp;gt;= 18
    Adults: b, c
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Find more examples and documentation on the &lt;a href="https://github.com/JetBrains/Exposed/wiki"&gt;wiki&lt;/a&gt;.
If you have any questions feel free to ask at our &lt;a href="https://kotlinlang.slack.com/archives/C0CG7E0A1" rel="nofollow"&gt;#exposed&lt;/a&gt; channel on &lt;a href="https://kotlinlang.slack.com" rel="nofollow"&gt;kotlinlang.slack.com&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>JetBrains</author><guid isPermaLink="false">https://github.com/JetBrains/Exposed</guid><pubDate>Sun, 05 Jan 2020 00:12:00 GMT</pubDate></item><item><title>android/databinding-samples #13 in Kotlin, Today</title><link>https://github.com/android/databinding-samples</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-android-data-binding-library-samples" class="anchor" aria-hidden="true" href="#android-data-binding-library-samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android Data Binding Library samples&lt;/h1&gt;
&lt;p&gt;A collection of samples using the &lt;a href="https://developer.android.com/topic/libraries/data-binding/index.html" rel="nofollow"&gt;Android Data Binding Library&lt;/a&gt;:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-samples" class="anchor" aria-hidden="true" href="#samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Samples&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/googlesamples/android-databinding/blob/master/BasicSample"&gt;BasicSample&lt;/a&gt;&lt;/strong&gt; - (Kotlin) Shows basic usage of layout expressions, binding adapters, and integration with ViewModels.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/googlesamples/android-databinding/blob/master/TwoWaySample"&gt;TwoWaySample&lt;/a&gt;&lt;/strong&gt; - (Kotlin) Shows usage of two-way data binding, advanced Binding Adapters, animations, converters and inverse converters.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-other-official-samples-using-data-binding" class="anchor" aria-hidden="true" href="#other-official-samples-using-data-binding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other official samples using Data Binding&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/googlesamples/android-architecture/tree/todo-mvvm-live-kotlin/"&gt;Android Architecture Blueprints (todo-mvvm-live-kotlin branch)&lt;/a&gt;&lt;/strong&gt; - Shows basic Data Binding usage with architecture best practices and Architecture Components, in Kotlin.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/googlesamples/android-architecture-components/tree/master/GithubBrowserSample"&gt;Android Architecture Components Samples&lt;/a&gt;&lt;/strong&gt; - An advanced sample that uses the Architecture components, Dagger and the Github API, in Kotlin.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/googlesamples/android-sunflower"&gt;Android Sunflower&lt;/a&gt;&lt;/strong&gt; - A gardening app illustrating Android development best practices with Android Jetpack, including Data Binding.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-reporting-issues" class="anchor" aria-hidden="true" href="#reporting-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting Issues&lt;/h3&gt;
&lt;p&gt;You can report an &lt;a href="https://github.com/googlesamples/android-databinding/issues"&gt;Issue&lt;/a&gt; on the samples using this repository. If you find an issue with the library related to build, report it using the &lt;a href="https://b.corp.google.com/issues/new?component=192709&amp;amp;template=842921" rel="nofollow"&gt;Gradle Plugin issue tracker&lt;/a&gt;. If it's related to the Android Studio integration, report it using the &lt;a href="https://b.corp.google.com/issues/new?component=192708&amp;amp;template=840533" rel="nofollow"&gt;Android Studio issue tracker&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright 2018 The Android Open Source Project, Inc.&lt;/p&gt;
&lt;p&gt;Licensed to the Apache Software Foundation (ASF) under one or more contributor
license agreements.  See the NOTICE file distributed with this work for
additional information regarding copyright ownership.  The ASF licenses this
file to you under the Apache License, Version 2.0 (the "License"); you may not
use this file except in compliance with the License.  You may obtain a copy of
the License at&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
License for the specific language governing permissions and limitations under
the License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>android</author><guid isPermaLink="false">https://github.com/android/databinding-samples</guid><pubDate>Sun, 05 Jan 2020 00:13:00 GMT</pubDate></item><item><title>arrow-kt/arrow #14 in Kotlin, Today</title><link>https://github.com/arrow-kt/arrow</link><description>&lt;p&gt;&lt;i&gt;Functional companion to Kotlin's Standard Library&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/29458023?v=4&amp;amp;s=200"&gt;&lt;img height="100" src="https://avatars2.githubusercontent.com/u/29458023?v=4&amp;amp;s=200" width="100" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://maven-badges.herokuapp.com/maven-central/io.arrow-kt/arrow-core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e3ce56510f82ef7a55a44e370aeea0c93c5ae176/68747470733a2f2f6d6176656e2d6261646765732e6865726f6b756170702e636f6d2f6d6176656e2d63656e7472616c2f696f2e6172726f772d6b742f6172726f772d636f72652d646174612f62616467652e737667" alt="Maven Central" data-canonical-src="https://maven-badges.herokuapp.com/maven-central/io.arrow-kt/arrow-core-data/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://oss.jfrog.org/artifactory/oss-snapshot-local/io/arrow-kt/arrow-core/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b314f4b2e0a8960bad8bd262358ba7433d24da81/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d6d657461646174612f763f636f6c6f723d253233303537366236266c6162656c3d6c6174657374253230736e617073686f74266d6574616461746155726c3d68747470732533412532462532466f73732e6a66726f672e6f726725324661727469666163746f72792532466f73732d736e617073686f742d6c6f63616c253246696f2532466172726f772d6b742532466172726f772d636f72652532466d6176656e2d6d657461646174612e786d6c" alt="Latest snapshot" data-canonical-src="https://img.shields.io/maven-metadata/v?color=%230576b6&amp;amp;label=latest%20snapshot&amp;amp;metadataUrl=https%3A%2F%2Foss.jfrog.org%2Fartifactory%2Foss-snapshot-local%2Fio%2Farrow-kt%2Farrow-core%2Fmaven-metadata.xml" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/arrow-kt/arrow/actions?query=workflow%3ARelease+branch%3Amaster"&gt;&lt;img src="https://github.com/arrow-kt/arrow/workflows/Release/badge.svg" alt="Release Status" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://kotlinlang.org/docs/reference/whatsnew13.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b603eed9e5a08b6223ab35f7190a6a8f7c3ce3d1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6b6f746c696e2d312e332d626c75652e737667" alt="Kotlin version badge" data-canonical-src="https://img.shields.io/badge/kotlin-1.3-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8051e9938a1ab39cf002818dfceb6b6092f34d68/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/License-Apache%202.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://stackoverflow.com/questions/tagged/arrow-kt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5aa6b0cb4fe2c4db4daf2dd8d7cfc7f70aa2674d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6172726f772d2d6b742d626c61636b2e7376673f6c6f676f3d737461636b6f766572666c6f77" alt="StackOverflow" data-canonical-src="https://img.shields.io/badge/arrow--kt-black.svg?logo=stackoverflow" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Λrrow is a library for Typed Functional Programming in Kotlin.&lt;/p&gt;
&lt;p&gt;Arrow aims to provide a &lt;a href="https://en.wikipedia.org/wiki/Lingua_franca" rel="nofollow"&gt;&lt;em&gt;lingua franca&lt;/em&gt;&lt;/a&gt; of interfaces and abstractions across Kotlin libraries.
For this, it includes the most popular data types, type classes and abstractions such as &lt;code&gt;Option&lt;/code&gt;, &lt;code&gt;Try&lt;/code&gt;, &lt;code&gt;Either&lt;/code&gt;, &lt;code&gt;IO&lt;/code&gt;, &lt;code&gt;Functor&lt;/code&gt;, &lt;code&gt;Applicative&lt;/code&gt;, &lt;code&gt;Monad&lt;/code&gt; to empower users to write pure FP apps and libraries built atop higher order abstractions.&lt;/p&gt;
&lt;p&gt;Use the list below to learn more about Λrrow's main features.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://arrow-kt.io" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://arrow-kt.io/docs/patterns/glossary/" rel="nofollow"&gt;Patterns&lt;/a&gt;: tutorials and approaches to day-to-day challenges using FP&lt;/li&gt;
&lt;li&gt;&lt;a href="http://arrow-kt.io/docs/quickstart/libraries/" rel="nofollow"&gt;Libraries&lt;/a&gt;: all the libraries provided by Λrrow&lt;/li&gt;
&lt;li&gt;&lt;a href="http://arrow-kt.io/docs/typeclasses/intro/" rel="nofollow"&gt;Type classes&lt;/a&gt;: defining behaviors for data&lt;/li&gt;
&lt;li&gt;&lt;a href="http://arrow-kt.io/docs/datatypes/intro/" rel="nofollow"&gt;Data types&lt;/a&gt;: common abstractions&lt;/li&gt;
&lt;li&gt;&lt;a href="http://arrow-kt.io/docs/effects/io/" rel="nofollow"&gt;Effects&lt;/a&gt;: interfacing with external systems&lt;/li&gt;
&lt;li&gt;&lt;a href="http://arrow-kt.io/docs/optics/iso/" rel="nofollow"&gt;Optics&lt;/a&gt;: inspecting and modifying data structures&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-curated-external-links" class="anchor" aria-hidden="true" href="#curated-external-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Curated external links&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://arrow-kt.io/docs/quickstart/projects/" rel="nofollow"&gt;Projects and Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://arrow-kt.io/docs/quickstart/blogs/" rel="nofollow"&gt;Blogs and Presentations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-join-us" class="anchor" aria-hidden="true" href="#join-us"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Join Us&lt;/h2&gt;
&lt;p&gt;Arrow is an inclusive community powered by awesome individuals like you. As an actively growing ecosystem, Arrow and its associated libraries and toolsets are in need of new contributors! We have issues suited for all levels, from entry to advanced, and our maintainers are happy to provide 1:1 mentoring. All are welcome in Arrow.&lt;/p&gt;
&lt;p&gt;If you’re looking to contribute, have questions, or want to keep up-to-date about what’s happening, please follow us here and say hello!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/arrow_kt" rel="nofollow"&gt;Arrow on Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.slack.com/" rel="nofollow"&gt;#Arrow on Kotlin Slack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitter.im/arrow-kt/Lobby" rel="nofollow"&gt;Arrow on Gitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-next-development-version" class="anchor" aria-hidden="true" href="#next-development-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Next development version&lt;/h3&gt;
&lt;p&gt;If you want to try the last features, replace &lt;code&gt;0.10.4&lt;/code&gt; by &lt;code&gt;0.10.5-SNAPSHOT&lt;/code&gt; in the following guideline.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-jdk" class="anchor" aria-hidden="true" href="#jdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JDK&lt;/h3&gt;
&lt;p&gt;Make sure to have the latest version of JDK 1.8 installed.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-android" class="anchor" aria-hidden="true" href="#android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android&lt;/h3&gt;
&lt;p&gt;Arrow supports Android out of the box starting on API 21 and up.&lt;/p&gt;
&lt;p&gt;We'll be working on a Arrow-Android integration module that adds some helpers and integrations.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-gradle" class="anchor" aria-hidden="true" href="#gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-basic-setup" class="anchor" aria-hidden="true" href="#basic-setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Setup&lt;/h4&gt;
&lt;p&gt;In your project's root &lt;code&gt;build.gradle&lt;/code&gt; append these repositories to your list:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;allprojects {
    repositories {
        mavenCentral()
        jcenter()
        maven { url &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://dl.bintray.com/arrow-kt/arrow-kt/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; } 
        maven { url &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://oss.jfrog.org/artifactory/oss-snapshot-local/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; for SNAPSHOT builds&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add the dependencies into the project's &lt;code&gt;build.gradle&lt;/code&gt;:&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-λrrow-core" class="anchor" aria-hidden="true" href="#λrrow-core"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Λrrow Core&lt;/h5&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;kotlin-kapt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; arrow_version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.10.4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
dependencies {
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-core:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-syntax:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    kapt    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-meta:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-λrrow-core--λrrow-optics" class="anchor" aria-hidden="true" href="#λrrow-core--λrrow-optics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Λrrow Core + Λrrow Optics&lt;/h5&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;kotlin-kapt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; arrow_version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.10.4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
dependencies {
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-optics:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-syntax:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    kapt    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-meta:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-λrrow-core--λrrow-fx" class="anchor" aria-hidden="true" href="#λrrow-core--λrrow-fx"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Λrrow Core + Λrrow Fx&lt;/h5&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;kotlin-kapt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; arrow_version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.10.4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
dependencies {
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-fx:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-syntax:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    kapt    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-meta:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-λrrow-core--λrrow-optics--λrrow-fx" class="anchor" aria-hidden="true" href="#λrrow-core--λrrow-optics--λrrow-fx"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Λrrow Core + Λrrow Optics + Λrrow Fx&lt;/h5&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;kotlin-kapt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; arrow_version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.10.4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
dependencies {
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-fx:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-optics:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-syntax:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    kapt    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-meta:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-other-libraries" class="anchor" aria-hidden="true" href="#other-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other libraries&lt;/h5&gt;
&lt;p&gt;Here is the complete [library list]({{ '/docs/quickstart/libraries/' | relative_url }}) for a more granular dependency set-up.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-additional-setup" class="anchor" aria-hidden="true" href="#additional-setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional Setup&lt;/h4&gt;
&lt;p&gt;For projects that wish to use their own &lt;code&gt;@higherkind&lt;/code&gt;, &lt;code&gt;@optics&lt;/code&gt; and other meta programming facilities provided by Λrrow
the setup below is also required:&lt;/p&gt;
&lt;p&gt;Add the dependencies into the project's &lt;code&gt;build.gradle&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;kotlin-kapt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;optional&lt;/span&gt;
apply &lt;span class="pl-c1"&gt;from&lt;/span&gt;: rootProject&lt;span class="pl-k"&gt;.&lt;/span&gt;file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;gradle/generated-kotlin-sources.gradle&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;only for Android projects&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; arrow_version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.10.4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
dependencies {
    &lt;span class="pl-k"&gt;..&lt;/span&gt;.
    kapt    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-meta:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;optional&lt;/span&gt;
    &lt;span class="pl-k"&gt;..&lt;/span&gt;.
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;gradle/generated-kotlin-sources.gradle&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;idea&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

idea {
    module {
        sourceDirs &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; files(
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kapt/main&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kapt/debug&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kapt/release&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kaptKotlin/main&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kaptKotlin/debug&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kaptKotlin/release&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/tmp/kapt/main/kotlinGenerated&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
        generatedSourceDirs &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; files(
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kapt/main&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kapt/debug&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kapt/release&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kaptKotlin/main&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kaptKotlin/debug&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kaptKotlin/release&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/tmp/kapt/main/kotlinGenerated&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-maven" class="anchor" aria-hidden="true" href="#maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-basic-setup-1" class="anchor" aria-hidden="true" href="#basic-setup-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Setup&lt;/h4&gt;
&lt;p&gt;Add to your &lt;code&gt;pom.xml&lt;/code&gt; file the following properties:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;properties&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;kotlin&lt;/span&gt;.version&amp;gt;1.3.0&amp;lt;/&lt;span class="pl-ent"&gt;kotlin&lt;/span&gt;.version&amp;gt;
     &amp;lt;&lt;span class="pl-ent"&gt;arrow&lt;/span&gt;.version&amp;gt;0.10.4&amp;lt;/&lt;span class="pl-ent"&gt;arrow&lt;/span&gt;.version&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;properties&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add the dependencies that you want to use&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;io.arrow-kt&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;arrow-core&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${arrow.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;io.arrow-kt&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;arrow-syntax&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${arrow.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-enabling-kapt" class="anchor" aria-hidden="true" href="#enabling-kapt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enabling kapt&lt;/h4&gt;
&lt;p&gt;Enable annotation processing using kotlin plugin&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.jetbrains.kotlin&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;kotlin-maven-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${kotlin.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;kapt&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;kapt&amp;lt;/&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;sourceDirs&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;sourceDir&lt;/span&gt;&amp;gt;src/main/kotlin&amp;lt;/&lt;span class="pl-ent"&gt;sourceDir&lt;/span&gt;&amp;gt;
                &amp;lt;/&lt;span class="pl-ent"&gt;sourceDirs&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;annotationProcessorPaths&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;annotationProcessorPath&lt;/span&gt;&amp;gt;
                        &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;io.arrow-kt&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
                        &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;arrow-meta&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
                        &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${arrow.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
                    &amp;lt;/&lt;span class="pl-ent"&gt;annotationProcessorPath&lt;/span&gt;&amp;gt;
                &amp;lt;/&lt;span class="pl-ent"&gt;annotationProcessorPaths&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;compile&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;compile&amp;lt;/&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;compile&amp;lt;/&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;sourceDirs&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;sourceDir&lt;/span&gt;&amp;gt;src/main/kotlin&amp;lt;/&lt;span class="pl-ent"&gt;sourceDir&lt;/span&gt;&amp;gt;
                &amp;lt;/&lt;span class="pl-ent"&gt;sourceDirs&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;test-compile&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;test-compile&amp;lt;/&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;test-compile&amp;lt;/&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Copyright (C) 2017 The Λrrow Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>arrow-kt</author><guid isPermaLink="false">https://github.com/arrow-kt/arrow</guid><pubDate>Sun, 05 Jan 2020 00:14:00 GMT</pubDate></item><item><title>edvin/tornadofx #15 in Kotlin, Today</title><link>https://github.com/edvin/tornadofx</link><description>&lt;p&gt;&lt;i&gt;Lightweight JavaFX Framework for Kotlin&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="graphics/tornado-fx-logo.png?raw=true"&gt;&lt;img src="graphics/tornado-fx-logo.png?raw=true" alt="TornadoFX Logo" title="TornadoFX" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-tornadofx" class="anchor" aria-hidden="true" href="#tornadofx"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TornadoFX&lt;/h1&gt;
&lt;p&gt;JavaFX Framework for Kotlin&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/edvin/tornadofx" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/694f286a75aba027692fa6f747d41b0d4a9cac25/68747470733a2f2f7472617669732d63692e6f72672f656476696e2f746f726e61646f66782e737667" alt="Travis CI" data-canonical-src="https://travis-ci.org/edvin/tornadofx.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://search.maven.org/#search%7Cga%7C1%7Cno.tornado.tornadofx" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/40aca2f76cd71c283a7e6480278f1ab1bb2326f4/68747470733a2f2f6d6176656e2d6261646765732e6865726f6b756170702e636f6d2f6d6176656e2d63656e7472616c2f6e6f2e746f726e61646f2f746f726e61646f66782f62616467652e7376673f636163686562757374" alt="Maven Central" data-canonical-src="https://maven-badges.herokuapp.com/maven-central/no.tornado/tornadofx/badge.svg?cachebust" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/264c1d54ac99e2b6f94e00139f14bb91819f398d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652532304c6963656e7365253230322e302d626c75652e737667" alt="Apache License" data-canonical-src="https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Important: TornadoFX is not yet compatible with Java 9/10&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Oracle is intending to decouple JavaFX from the JDK. We will wait
until the decoupled JavaFX is available and stable before upgrading TornadoFX to support
it. As of now there is little value and significant effort involved in updating to JDK 9/10,
while there will be an enormous value in updating to the decoupled version.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Supports both MVC, MVP and their derivatives&lt;/li&gt;
&lt;li&gt;Dependency injection&lt;/li&gt;
&lt;li&gt;Type safe GUI builders&lt;/li&gt;
&lt;li&gt;Type safe CSS builders&lt;/li&gt;
&lt;li&gt;First class FXML support&lt;/li&gt;
&lt;li&gt;Async task execution&lt;/li&gt;
&lt;li&gt;EventBus with thread targeting&lt;/li&gt;
&lt;li&gt;Hot reload of Views and Stylesheets&lt;/li&gt;
&lt;li&gt;OSGi support&lt;/li&gt;
&lt;li&gt;REST client with automatic JSON conversion&lt;/li&gt;
&lt;li&gt;Zero config, no XML, no annotations&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-important-version-note" class="anchor" aria-hidden="true" href="#important-version-note"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important version note&lt;/h2&gt;
&lt;p&gt;TornadoFX requires Kotlin 1.1.2 and jvmTarget 1.8. Make sure you update your IDE plugins (Kotlin + TornadoFX).&lt;/p&gt;
&lt;p&gt;After updating IntelliJ IDEA, make sure your Kotlin target version is 1.1 (Project Settings -&amp;gt; Modules -&amp;gt; Kotlin -&amp;gt; Language Version / API Version)&lt;/p&gt;
&lt;p&gt;Remember to update your build system to configure the &lt;code&gt;jvmTarget&lt;/code&gt; as well.&lt;/p&gt;
&lt;p&gt;For Maven, you add the following configuration block to &lt;code&gt;kotlin-maven-plugin&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;jvmTarget&lt;/span&gt;&amp;gt;1.8&amp;lt;/&lt;span class="pl-ent"&gt;jvmTarget&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For Gradle, it means configuring the &lt;code&gt;kotlinOptions&lt;/code&gt; of the Kotlin compilation task:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;compileKotlin&lt;/span&gt; {
    kotlinOptions&lt;span class="pl-k"&gt;.&lt;/span&gt;jvmTarget&lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Failing to do so will yield errors about the compiler not being able to inline certain calls.&lt;/p&gt;
&lt;p&gt;You also need a full rebuild of your code after a version upgrade. If you run into trouble, try to clean caches and restart IDEA (File -&amp;gt; Invalidate caches / Restart).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/MrEdvinsyse" rel="nofollow"&gt;Screencasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://edvin.gitbooks.io/tornadofx-guide/content/" rel="nofollow"&gt;Guide&lt;/a&gt; We are gradually migrating all information from the Wiki into the Guide&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tornadofx.io/dokka/tornadofx/tornadofx/index.html" rel="nofollow"&gt;KDocs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edvin/tornadofx/wiki"&gt;Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.slack.com/messages/tornadofx/details/" rel="nofollow"&gt;Slack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/ask?tags=tornadofx" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edvin/tornadofx/wiki/Documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edvin/tornadofx-idea-plugin"&gt;IntelliJ IDEA Plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edvin/tornadofx-samples"&gt;Example Application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edvin/tornadofx-quickstart-archetype"&gt;Maven QuickStart Archetype&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-generate-a-quickstart-application-with-maven" class="anchor" aria-hidden="true" href="#generate-a-quickstart-application-with-maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generate a quickstart application with Maven&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mvn archetype:generate -DarchetypeGroupId=no.tornado \
  -DarchetypeArtifactId=tornadofx-quickstart-archetype \
  -DarchetypeVersion=1.7.17&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-add-tornadofx-to-your-project" class="anchor" aria-hidden="true" href="#add-tornadofx-to-your-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add TornadoFX to your project&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-maven" class="anchor" aria-hidden="true" href="#maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven&lt;/h4&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;no.tornado&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;tornadofx&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;1.7.17&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-gradle" class="anchor" aria-hidden="true" href="#gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle&lt;/h3&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;no.tornado:tornadofx:1.7.17&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-snapshots-are-published-to-sonatype" class="anchor" aria-hidden="true" href="#snapshots-are-published-to-sonatype"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Snapshots are published to Sonatype&lt;/h3&gt;
&lt;p&gt;Configure your build environment to use snapshots if you want to try out the latest features:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt; &amp;lt;&lt;span class="pl-ent"&gt;repositories&lt;/span&gt;&amp;gt;
   &amp;lt;&lt;span class="pl-ent"&gt;repository&lt;/span&gt;&amp;gt;
     &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;snapshots-repo&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
     &amp;lt;&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;https://oss.sonatype.org/content/repositories/snapshots&amp;lt;/&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;
     &amp;lt;&lt;span class="pl-ent"&gt;releases&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;enabled&lt;/span&gt;&amp;gt;false&amp;lt;/&lt;span class="pl-ent"&gt;enabled&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;releases&lt;/span&gt;&amp;gt;
     &amp;lt;&lt;span class="pl-ent"&gt;snapshots&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;enabled&lt;/span&gt;&amp;gt;true&amp;lt;/&lt;span class="pl-ent"&gt;enabled&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;snapshots&lt;/span&gt;&amp;gt;
   &amp;lt;/&lt;span class="pl-ent"&gt;repository&lt;/span&gt;&amp;gt;
 &amp;lt;/&lt;span class="pl-ent"&gt;repositories&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Snapshots are published every day at GMT 16:00 if there has been any changes.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-what-does-it-look-like-code-snippets" class="anchor" aria-hidden="true" href="#what-does-it-look-like-code-snippets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What does it look like? (Code snippets)&lt;/h3&gt;
&lt;p&gt;Create a View&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;HelloWorld&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;View&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; root &lt;span class="pl-k"&gt;=&lt;/span&gt; hbox {
        label(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Start your application and show the primary &lt;code&gt;View&lt;/code&gt; and add a type safe stylesheet&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;javafx.scene.text.FontWeight&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;tornadofx.*&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;HelloWorldApp&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;App&lt;/span&gt;(&lt;span class="pl-en"&gt;HelloWorld&lt;/span&gt;::class, &lt;span class="pl-en"&gt;Styles&lt;/span&gt;::class)

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Styles&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;Stylesheet&lt;/span&gt;() {
    &lt;span class="pl-en"&gt;init&lt;/span&gt; {
        label {
            fontSize &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;.px
            fontWeight &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;FontWeight&lt;/span&gt;.&lt;span class="pl-en"&gt;BOLD&lt;/span&gt;
            backgroundColor &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#cecece&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }    
    }    
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Start app and load a type safe stylesheet&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Use &lt;a href="https://github.com/edvin/tornadofx/wiki/Type-Safe-Builders"&gt;Type Safe Builders&lt;/a&gt; to quickly create complex user interfaces&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyView&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;View&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; persons &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;FXCollections&lt;/span&gt;.observableArrayList(
            &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Samantha Stuart&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;LocalDate&lt;/span&gt;.of(&lt;span class="pl-c1"&gt;1981&lt;/span&gt;,&lt;span class="pl-c1"&gt;12&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;)),
            &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Tom Marks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;LocalDate&lt;/span&gt;.of(&lt;span class="pl-c1"&gt;2001&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;)),
            &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Stuart Gills&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;LocalDate&lt;/span&gt;.of(&lt;span class="pl-c1"&gt;1989&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;23&lt;/span&gt;)),
            &lt;span class="pl-en"&gt;Person&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Nicole Williams&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;LocalDate&lt;/span&gt;.of(&lt;span class="pl-c1"&gt;1998&lt;/span&gt;,&lt;span class="pl-c1"&gt;8&lt;/span&gt;,&lt;span class="pl-c1"&gt;11&lt;/span&gt;))
    )

    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; root &lt;span class="pl-k"&gt;=&lt;/span&gt; tableview(persons) {
        column(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ID&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;Person&lt;/span&gt;::id)
        column(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;Person&lt;/span&gt;::name)
        column(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Birthday&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;Person&lt;/span&gt;::birthday)
        column(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;Person&lt;/span&gt;::age)
        columnResizePolicy &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;SmartResize&lt;/span&gt;.&lt;span class="pl-en"&gt;POLICY&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;RENDERED UI&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/21d91e000f36556b67bea322ff1152199aee483e/68747470733a2f2f692e696d6775722e636f6d2f41474d435038532e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/21d91e000f36556b67bea322ff1152199aee483e/68747470733a2f2f692e696d6775722e636f6d2f41474d435038532e706e67" alt="" data-canonical-src="https://i.imgur.com/AGMCP8S.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Create a Customer model object that can be converted to and from JSON and exposes both a JavaFX Property and getter/setter pairs:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;tornadofx.getValue&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;tornadofx.setValue&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Customer&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;JsonModel&lt;/span&gt; {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; idProperty &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;SimpleIntegerProperty&lt;/span&gt;()
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id by idProperty

    &lt;span class="pl-k"&gt;val&lt;/span&gt; nameProperty &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;SimpleStringProperty&lt;/span&gt;()
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name by nameProperty

    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;updateModel&lt;/span&gt;(&lt;span class="pl-smi"&gt;json&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;JsonObject&lt;/span&gt;) {
        &lt;span class="pl-c1"&gt;with&lt;/span&gt;(json) {
            id &lt;span class="pl-k"&gt;=&lt;/span&gt; int(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;?:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
            name &lt;span class="pl-k"&gt;=&lt;/span&gt; string(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }
    }

    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;toJSON&lt;/span&gt;(&lt;span class="pl-smi"&gt;json&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;JsonBuilder&lt;/span&gt;) {
        &lt;span class="pl-c1"&gt;with&lt;/span&gt;(json) {
            add(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, id)
            add(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, name)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create a controller which downloads a JSON list of customers with the REST api:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;HelloWorldController&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;Controller&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; api &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Rest&lt;/span&gt; by inject()
    
    &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;loadCustomers&lt;/span&gt;()&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;ObservableList&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Customer&lt;/span&gt;&amp;gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; 
        api.get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;customers&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).list().toModel() 
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configure the REST API with a base URI and Basic Authentication:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;with&lt;/span&gt; (api) {
    baseURI &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://contoso.com/api&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    setBasicAuth(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Load customers in the background and update a TableView on the UI thread:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;runAsync {
    controller.loadCustomers()
} ui {
    customerTable.items &lt;span class="pl-k"&gt;=&lt;/span&gt; it
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Load customers and apply to table declaratively:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;customerTable.asyncItems { controller.loadCustomers() }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Define a type safe CSS stylesheet:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Styles&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;Stylesheet&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;companion&lt;/span&gt; &lt;span class="pl-k"&gt;object&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Define css classes&lt;/span&gt;
        &lt;span class="pl-k"&gt;val&lt;/span&gt; heading by cssclass()
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Define colors&lt;/span&gt;
        &lt;span class="pl-k"&gt;val&lt;/span&gt; mainColor &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#bdbd22&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }

    &lt;span class="pl-en"&gt;init&lt;/span&gt; {
        heading {
            textFill &lt;span class="pl-k"&gt;=&lt;/span&gt; mainColor
            fontSize &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;.px
            fontWeight &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;BOLD&lt;/span&gt;
        }
        
        button {
            padding &lt;span class="pl-k"&gt;=&lt;/span&gt; box(&lt;span class="pl-c1"&gt;10&lt;/span&gt;.px, &lt;span class="pl-c1"&gt;20&lt;/span&gt;.px)
            fontWeight &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;BOLD&lt;/span&gt;
        }

        &lt;span class="pl-k"&gt;val&lt;/span&gt; flat &lt;span class="pl-k"&gt;=&lt;/span&gt; mixin {
            backgroundInsets &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; box(&lt;span class="pl-c1"&gt;0&lt;/span&gt;.px)
            borderColor &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; box(&lt;span class="pl-en"&gt;Color&lt;/span&gt;.&lt;span class="pl-en"&gt;DARKGRAY&lt;/span&gt;)
        }

        s(button, textInput) {
            &lt;span class="pl-k"&gt;+&lt;/span&gt;flat
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create an HBox with a Label and a TextField with type safe builders:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;hbox {
    label(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
        addClass(heading)
    }
    
    textfield {
        promptText &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Enter your name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Get and set per component configuration settings:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; set prefWidth from setting or default to 200.0&lt;/span&gt;
node.prefWidth(config.double(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;width&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;200.0&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; set username and age, then save&lt;/span&gt;
&lt;span class="pl-c1"&gt;with&lt;/span&gt; (config) {
    set(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;username&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;john&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    set(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;30&lt;/span&gt;)
    save()
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create a &lt;code&gt;Fragment&lt;/code&gt; instead of a &lt;code&gt;View&lt;/code&gt;. A &lt;code&gt;Fragment&lt;/code&gt; is not a &lt;code&gt;Singleton&lt;/code&gt; like &lt;code&gt;View&lt;/code&gt; is, so you will
create a new instance and you can reuse the Fragment in multiple ui locations simultaneously.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyFragment&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;Fragment&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; root &lt;span class="pl-k"&gt;=&lt;/span&gt; hbox {
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Open it in a Modal Window:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;find&amp;lt;&lt;span class="pl-en"&gt;MyFragment&lt;/span&gt;&amp;gt;().openModal()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lookup and embed a &lt;code&gt;View&lt;/code&gt; inside another &lt;code&gt;Pane&lt;/code&gt; in one go&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;add&amp;lt;&lt;span class="pl-en"&gt;MyFragment&lt;/span&gt;&amp;gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inject a &lt;code&gt;View&lt;/code&gt; and embed inside another &lt;code&gt;Pane&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; myView&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;MyView&lt;/span&gt; by inject()
 
&lt;span class="pl-en"&gt;init&lt;/span&gt; {
    root.add(myFragment)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Swap a View for another (change Scene root or embedded View)&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;button(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Go to next page&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    action {
        replaceWith&amp;lt;&lt;span class="pl-en"&gt;PageTwo&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;ViewTransition&lt;/span&gt;.&lt;span class="pl-en"&gt;Slide&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.3&lt;/span&gt;.seconds, &lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;LEFT&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Open a View in an internal window over the current scene graph&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;button(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Open&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    action {
        openInternalWindow&amp;lt;&lt;span class="pl-en"&gt;MyOtherView&lt;/span&gt;&amp;gt;()
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>edvin</author><guid isPermaLink="false">https://github.com/edvin/tornadofx</guid><pubDate>Sun, 05 Jan 2020 00:15:00 GMT</pubDate></item><item><title>android/camera-samples #16 in Kotlin, Today</title><link>https://github.com/android/camera-samples</link><description>&lt;p&gt;&lt;i&gt;Multiple samples showing the best practices in camera APIs on Android.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-camera-samples-repository" class="anchor" aria-hidden="true" href="#camera-samples-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Camera Samples Repository&lt;/h1&gt;
&lt;p&gt;This repository contains a set of individual Android Studio projects to help you get
started with the &lt;a href="https://developer.android.com/guide/topics/media/camera" rel="nofollow"&gt;Camera APIs&lt;/a&gt; in Android.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-samples" class="anchor" aria-hidden="true" href="#samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Samples&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Sample&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="Camera2BasicJava"&gt;Camera2Basic Java&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Java version of Camera2BasicKotlin.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="Camera2BasicKotlin"&gt;Camera2Basic Kotlin&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Demonstrates the basic functionalities of the Camera2 API.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="Camera2Formats"&gt;Camera2Formats&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Demostrates capturing RAW and DEPTH images, e.g. unprocessed pixel data directly from the camera sensor.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="Camera2SlowMotion"&gt;Camera2SlowMotion&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Demostrates capturing high-speed video in a constrained camera capture session&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="Camera2VideoJava"&gt;Camera2VideoJava&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Java version of Camera2VideoKotlin.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="Camera2VideoKotlin"&gt;Camera2Video Kotlin&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Demonstrates recording video using the Camera2 API and MediaRecorder.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="CameraXBasic"&gt;CameraXBasic&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Demonstrates how to use CameraX APIs written in Kotlin.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="HdrViewfinder"&gt;HdrViewfinder&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Demonstrates use of RenderScript to display a live HDR feed from camera frames using Camera2 API.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>android</author><guid isPermaLink="false">https://github.com/android/camera-samples</guid><pubDate>Sun, 05 Jan 2020 00:16:00 GMT</pubDate></item><item><title>square/leakcanary #17 in Kotlin, Today</title><link>https://github.com/square/leakcanary</link><description>&lt;p&gt;&lt;i&gt;LeakCanary is a memory leak detection library for Android.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-leakcanary-" class="anchor" aria-hidden="true" href="#leakcanary-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LeakCanary &lt;g-emoji class="g-emoji" alias="baby_chick" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f424.png"&gt;🐤&lt;/g-emoji&gt;&lt;/h1&gt;
&lt;p&gt;A memory leak detection library for Android.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-squaregithubioleakcanary" class="anchor" aria-hidden="true" href="#squaregithubioleakcanary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://square.github.io/leakcanary" rel="nofollow"&gt;square.github.io/leakcanary&lt;/a&gt;&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Copyright 2015 Square, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>square</author><guid isPermaLink="false">https://github.com/square/leakcanary</guid><pubDate>Sun, 05 Jan 2020 00:17:00 GMT</pubDate></item><item><title>corda/corda #18 in Kotlin, Today</title><link>https://github.com/corda/corda</link><description>&lt;p&gt;&lt;i&gt;Corda is an open source blockchain project, designed for business from the start. Only Corda allows you to build interoperable blockchain networks that transact in strict privacy. Corda's smart contract technology allows businesses to transact directly, with value.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/449f6c010c462e4a3673f9f32f96a4a40ab78af3/68747470733a2f2f7777772e636f7264612e6e65742f77702d636f6e74656e742f7468656d65732f636f7264612f6173736574732f696d616765732f637264612d6c6f676f2d6269672e737667"&gt;&lt;img src="https://camo.githubusercontent.com/449f6c010c462e4a3673f9f32f96a4a40ab78af3/68747470733a2f2f7777772e636f7264612e6e65742f77702d636f6e74656e742f7468656d65732f636f7264612f6173736574732f696d616765732f637264612d6c6f676f2d6269672e737667" alt="Corda" width="500" data-canonical-src="https://www.corda.net/wp-content/themes/corda/assets/images/crda-logo-big.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ci-master.corda.r3cev.com/viewType.html?buildTypeId=Corda_CordaBuild&amp;amp;tab=buildTypeStatusDiv&amp;amp;guest=1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/653aebb2330d5a28e141a2d8294bac1769abb5fd/68747470733a2f2f63692e636f7264612e72336365762e636f6d2f6170702f726573742f6275696c64732f6275696c64547970653a436f7264615f436f7264614275696c642f73746174757349636f6e" data-canonical-src="https://ci.corda.r3cev.com/app/rest/builds/buildType:Corda_CordaBuild/statusIcon" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/Apache-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8051e9938a1ab39cf002818dfceb6b6092f34d68/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/License-Apache%202.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-corda" class="anchor" aria-hidden="true" href="#corda"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Corda&lt;/h1&gt;
&lt;p&gt;Corda is an open source blockchain project, designed for business from the start. Only Corda allows you to build interoperable blockchain networks that transact in strict privacy. Corda's smart contract technology allows businesses to transact directly, with value.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Smart contracts that can be written in Java and other JVM languages&lt;/li&gt;
&lt;li&gt;Flow framework to manage communication and negotiation between participants&lt;/li&gt;
&lt;li&gt;Peer-to-peer network of nodes&lt;/li&gt;
&lt;li&gt;"Notary" infrastructure to validate uniqueness and sequencing of transactions without global broadcast&lt;/li&gt;
&lt;li&gt;Enables the development and deployment of distributed apps called CorDapps&lt;/li&gt;
&lt;li&gt;Written in &lt;a href="https://kotlinlang.org" rel="nofollow"&gt;Kotlin&lt;/a&gt;, targeting the JVM&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Read the &lt;a href="https://docs.corda.net/getting-set-up.html" rel="nofollow"&gt;Getting Started&lt;/a&gt; documentation&lt;/li&gt;
&lt;li&gt;Run the &lt;a href="https://docs.corda.net/tutorial-cordapp.html" rel="nofollow"&gt;Example CorDapp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Read about Corda's &lt;a href="https://docs.corda.net/key-concepts.html" rel="nofollow"&gt;Key Concepts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Follow the &lt;a href="https://docs.corda.net/hello-world-introduction.html" rel="nofollow"&gt;Hello, World! tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-useful-links" class="anchor" aria-hidden="true" href="#useful-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Useful links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://corda.net" rel="nofollow"&gt;Project Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.io/g/corda-dev/" rel="nofollow"&gt;Mailing List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.corda.net" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/tagged/corda" rel="nofollow"&gt;Stack Overflow Tag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://slack.corda.net/" rel="nofollow"&gt;Slack Channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/cordadlt" rel="nofollow"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/pro/corda/" rel="nofollow"&gt;Meetups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.corda.net/corda-training/" rel="nofollow"&gt;Training Courses&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Corda is an open-source project and contributions are welcome!&lt;/p&gt;
&lt;p&gt;To find out how to contribute, please see our &lt;a href="https://docs.corda.net/head/contributing-index.html" rel="nofollow"&gt;contributing docs&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="./LICENSE"&gt;Apache 2.0&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/97fa03cac759a772255b93c64ab1c9f76a103681/68747470733a2f2f7777772e796f75726b69742e636f6d2f696d616765732f796b6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/97fa03cac759a772255b93c64ab1c9f76a103681/68747470733a2f2f7777772e796f75726b69742e636f6d2f696d616765732f796b6c6f676f2e706e67" alt="YourKit" data-canonical-src="https://www.yourkit.com/images/yklogo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;YourKit supports open source projects with its full-featured Java Profiler.&lt;/p&gt;
&lt;p&gt;YourKit, LLC is the creator of &lt;a href="https://www.yourkit.com/java/profiler/" rel="nofollow"&gt;YourKit Java Profiler&lt;/a&gt; and &lt;a href="https://www.yourkit.com/.net/profiler/" rel="nofollow"&gt;YourKit .NET Profiler&lt;/a&gt;, innovative and intelligent tools for profiling Java and .NET applications.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>corda</author><guid isPermaLink="false">https://github.com/corda/corda</guid><pubDate>Sun, 05 Jan 2020 00:18:00 GMT</pubDate></item><item><title>pinterest/ktlint #19 in Kotlin, Today</title><link>https://github.com/pinterest/ktlint</link><description>&lt;p&gt;&lt;i&gt;An anti-bikeshedding Kotlin linter with built-in formatter&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1 align="center"&gt;&lt;a id="user-content---" class="anchor" aria-hidden="true" href="#--"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;
&lt;a href="https://ktlint.github.io/" rel="nofollow"&gt;
  &lt;img src="https://cloud.githubusercontent.com/assets/370176/26518284/38b680da-4262-11e7-8d27-2b9e849fb55f.png" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;/h1&gt;
&lt;p align="center"&gt;
&lt;a href="https://travis-ci.org/pinterest/ktlint" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/50b73eb45b31e1c1d3d88fe78460444532ea3c62/68747470733a2f2f7472617669732d63692e6f72672f70696e7465726573742f6b746c696e742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/pinterest/ktlint.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.pinterest%22%20AND%20a%3A%22ktlint%22" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3780c0933a020b54b5e469be14566af509036763/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f636f6d2e70696e7465726573742f6b746c696e742e737667" alt="Maven Central" data-canonical-src="https://img.shields.io/maven-central/v/com.pinterest/ktlint.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ktlint.github.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5652fd33142bf88d0f46018325126931fe65d01d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d2545322539442541342d4646343038312e737667" alt="ktlint" data-canonical-src="https://img.shields.io/badge/code%20style-%E2%9D%A4-FF4081.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
&lt;a href="https://kotlinlang.org/" rel="nofollow"&gt;Kotlin&lt;/a&gt; linter in spirit of &lt;a href="https://github.com/feross/standard"&gt;feross/standard&lt;/a&gt; (JavaScript) and &lt;a href="https://golang.org/cmd/gofmt/" rel="nofollow"&gt;gofmt&lt;/a&gt; (Go).  
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;No configuration.&lt;/strong&gt;&lt;a href="https://github.com/pinterest/ktlint#how-do-i-globally-disable-a-rule"&gt;*&lt;/a&gt; Which means no decisions to make, nothing to argue about and no special files to manage.&lt;br&gt;
While this might sound extreme, keep in mind that &lt;code&gt;ktlint&lt;/code&gt; tries to capture (reflect) &lt;strong&gt;official code style&lt;/strong&gt;&lt;a href="https://github.com/pinterest/ktlint/issues/284#issuecomment-425177186"&gt;*&lt;/a&gt; from &lt;a href="https://kotlinlang.org/docs/reference/coding-conventions.html" rel="nofollow"&gt;kotlinlang.org&lt;/a&gt; and &lt;a href="https://android.github.io/kotlin-guides/style.html" rel="nofollow"&gt;Android Kotlin Style Guide&lt;/a&gt;
(+ &lt;a href="#editorconfig"&gt;we respect your .editorconfig&lt;/a&gt; and support additional &lt;a href="#creating-a-ruleset"&gt;ruleset&lt;/a&gt;|s).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Built-in formatter.&lt;/strong&gt; So that you wouldn't have to fix all style violations by hand.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Customizable output.&lt;/strong&gt; &lt;code&gt;plain&lt;/code&gt; (+ &lt;code&gt;plain?group_by_file&lt;/code&gt;), &lt;code&gt;json&lt;/code&gt; and &lt;code&gt;checkstyle&lt;/code&gt; reporters are available out-of-the-box.
It's also &lt;a href="#creating-a-reporter"&gt;easy to create your own&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A single executable jar with all dependencies included.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p align="center"&gt;
&lt;a href="#installation"&gt;Installation&lt;/a&gt; | &lt;a href="#usage"&gt;Usage&lt;/a&gt; | &lt;a href="#integration"&gt;Integration&lt;/a&gt; with &lt;a href="#-with-maven"&gt;Maven&lt;/a&gt; / &lt;a href="#-with-gradle"&gt;Gradle&lt;/a&gt; / &lt;a href="#-with-intellij-idea"&gt;IntelliJ IDEA&lt;/a&gt; / &lt;a href="#-with-emacs"&gt;Emacs&lt;/a&gt; | Creating &lt;a href="#creating-a-ruleset"&gt;a ruleset&lt;/a&gt; | &lt;a href="#creating-a-reporter"&gt;a reporter&lt;/a&gt; | &lt;a href="#badge"&gt;Badge&lt;/a&gt; | &lt;a href="#faq"&gt;FAQ&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-standard-rules" class="anchor" aria-hidden="true" href="#standard-rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Standard rules&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;4 spaces for indentation&lt;br&gt;
(unless a different &lt;code&gt;indent_size&lt;/code&gt; value is set in .editorconfig (see &lt;a href="#editorconfig"&gt;EditorConfig&lt;/a&gt; section for more))&lt;/li&gt;
&lt;li&gt;No semicolons (unless used to separate multiple statements on the same line)&lt;/li&gt;
&lt;li&gt;No unused &lt;code&gt;import&lt;/code&gt;s&lt;/li&gt;
&lt;li&gt;No consecutive blank lines&lt;/li&gt;
&lt;li&gt;No blank lines before &lt;code&gt;}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;No trailing whitespaces&lt;/li&gt;
&lt;li&gt;No &lt;code&gt;Unit&lt;/code&gt; returns (&lt;code&gt;fun fn {}&lt;/code&gt; instead of &lt;code&gt;fun fn: Unit {}&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;No empty (&lt;code&gt;{}&lt;/code&gt;) class bodies&lt;/li&gt;
&lt;li&gt;No spaces around range (&lt;code&gt;..&lt;/code&gt;) operator&lt;/li&gt;
&lt;li&gt;No newline before (binary) &lt;code&gt;+&lt;/code&gt; &amp;amp; &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code&gt;||&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;No wildcard &lt;code&gt;import&lt;/code&gt;s&lt;/li&gt;
&lt;li&gt;When wrapping chained calls &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;?.&lt;/code&gt; and &lt;code&gt;?:&lt;/code&gt; should be placed on the next line&lt;/li&gt;
&lt;li&gt;When a line is broken at an assignment (&lt;code&gt;=&lt;/code&gt;) operator the break comes after the symbol&lt;/li&gt;
&lt;li&gt;When class/function signature doesn't fit on a single line, each parameter must be on a separate line&lt;/li&gt;
&lt;li&gt;Consistent string templates (&lt;code&gt;$v&lt;/code&gt; instead of &lt;code&gt;${v}&lt;/code&gt;, &lt;code&gt;${p.v}&lt;/code&gt; instead of &lt;code&gt;${p.v.toString()}&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Consistent order of modifiers&lt;/li&gt;
&lt;li&gt;Consistent spacing after keywords, commas; around colons, curly braces, parens, infix operators, comments, etc&lt;/li&gt;
&lt;li&gt;Newline at the end of each file (enabled by default)
(set &lt;code&gt;insert_final_newline=false&lt;/code&gt; in .editorconfig to disable (see &lt;a href="#editorconfig"&gt;EditorConfig&lt;/a&gt; section for more)).&lt;/li&gt;
&lt;li&gt;Imports ordered in alphabetic order with no spaces between major groups&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-experimental-rules" class="anchor" aria-hidden="true" href="#experimental-rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Experimental rules&lt;/h2&gt;
&lt;p&gt;New rules will be added into the &lt;a href="https://github.com/pinterest/ktlint/tree/master/ktlint-ruleset-experimental"&gt;experimental ruleset&lt;/a&gt;, which can be enabled
by passing the &lt;code&gt;--experimental&lt;/code&gt; flag to &lt;code&gt;ktlint&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Indentation formatting - respects &lt;code&gt;.editorconfig&lt;/code&gt; &lt;code&gt;indent_size&lt;/code&gt; with no continuation indent&lt;/li&gt;
&lt;li&gt;Annotation formatting - multiple annotations should be on a separate line than the annotated declaration; annotations with parameters should each be on separate lines; annotations should be followed by a space&lt;/li&gt;
&lt;li&gt;No underscores in package names&lt;/li&gt;
&lt;li&gt;Braces required for multiline if/else statements&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-editorconfig" class="anchor" aria-hidden="true" href="#editorconfig"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;EditorConfig&lt;/h2&gt;
&lt;p&gt;ktlint recognizes the following &lt;a href="http://editorconfig.org/" rel="nofollow"&gt;.editorconfig&lt;/a&gt; properties (provided they are specified under &lt;code&gt;[*.{kt,kts}]&lt;/code&gt;):&lt;br&gt;
(values shown below are the defaults and do not need to be specified explicitly)&lt;/p&gt;
&lt;div class="highlight highlight-source-ini"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;[*.{kt,kts}]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; possible values: number (e.g. 2), "unset" (makes ktlint ignore indentation completely)  &lt;/span&gt;
&lt;span class="pl-k"&gt;indent_size&lt;/span&gt;=4
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; true (recommended) / false&lt;/span&gt;
&lt;span class="pl-k"&gt;insert_final_newline&lt;/span&gt;=true
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; possible values: number (e.g. 120) (package name, imports &amp;amp; comments are ignored), "off"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; it's automatically set to 100 on `ktlint --android ...` (per Android Kotlin Style Guide)&lt;/span&gt;
&lt;span class="pl-k"&gt;max_line_length&lt;/span&gt;=off&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-custom-editorconfig-properties" class="anchor" aria-hidden="true" href="#custom-editorconfig-properties"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom EditorConfig properties&lt;/h3&gt;
&lt;div class="highlight highlight-source-ini"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Comma-separated list of rules to disable (Since 0.34.0)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Note that rules in any ruleset other than the standard ruleset will need to be prefixed &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; by the ruleset identifier.&lt;/span&gt;
&lt;span class="pl-k"&gt;disabled_rules&lt;/span&gt;=no-wildcard-imports,experimental:annotation,my-custom-ruleset:my-custom-rule&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Skip all the way to the "Integration" section if you don't plan to use &lt;code&gt;ktlint&lt;/code&gt;'s command line interface.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -sSLO https://github.com/pinterest/ktlint/releases/download/0.36.0/ktlint &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  chmod a+x ktlint &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  sudo mv ktlint /usr/local/bin/&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... or just download &lt;code&gt;ktlint&lt;/code&gt; from the &lt;a href="https://github.com/pinterest/ktlint/releases"&gt;releases&lt;/a&gt; page  (&lt;code&gt;ktlint.asc&lt;/code&gt; contains PGP signature which you can verify with &lt;code&gt;curl -sS https://keybase.io/pinterestandroid/pgp_keys.asc | gpg --import &amp;amp;&amp;amp; gpg --verify ktlint.asc&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;On macOS (&lt;a href="http://linuxbrew.sh/" rel="nofollow"&gt;or Linux&lt;/a&gt;) you can also use &lt;a href="https://brew.sh/" rel="nofollow"&gt;brew&lt;/a&gt; - &lt;code&gt;brew install ktlint&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you don't have curl installed - replace &lt;code&gt;curl -sL&lt;/code&gt; with &lt;code&gt;wget -qO-&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are behind a proxy see -
&lt;a href="https://curl.haxx.se/docs/manpage.html#ENVIRONMENT" rel="nofollow"&gt;curl&lt;/a&gt; /
&lt;a href="https://www.gnu.org/software/wget/manual/wget.html#Proxies" rel="nofollow"&gt;wget&lt;/a&gt; manpage.
Usually simple &lt;code&gt;http_proxy=http://proxy-server:port https_proxy=http://proxy-server:port curl -sL ...&lt;/code&gt; is enough.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; check the style of all Kotlin files inside the current dir (recursively)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; (hidden folders will be skipped)&lt;/span&gt;
$ ktlint --color [--color-name&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RED&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
  src/main/kotlin/Main.kt:10:10: Unused import
  
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; check only certain locations (prepend ! to negate the pattern,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Ktlint uses .gitignore pattern style syntax)&lt;/span&gt;
$ ktlint &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/**/*.kt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;!src/**/*Test.kt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; auto-correct style violations&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; (if some errors cannot be fixed automatically they will be printed to stderr) &lt;/span&gt;
$ ktlint -F &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/**/*.kt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; print style violations grouped by file&lt;/span&gt;
$ ktlint --reporter=plain&lt;span class="pl-k"&gt;?&lt;/span&gt;group_by_file
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; print style violations as usual + create report in checkstyle format &lt;/span&gt;
$ ktlint --reporter=plain --reporter=checkstyle,output=ktlint-report-in-checkstyle-format.xml

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install git hook to automatically check files for style violations on commit&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Run "ktlint installGitPrePushHook" if you wish to run ktlint on push instead&lt;/span&gt;
$ ktlint installGitPreCommitHook&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;on Windows you'll have to use &lt;code&gt;java -jar ktlint ...&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;ktlint --help&lt;/code&gt; for more.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-integration" class="anchor" aria-hidden="true" href="#integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integration&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content--with-maven" class="anchor" aria-hidden="true" href="#-with-maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... with &lt;a href="https://github.com/shyiko/mvnw"&gt;Maven&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;pom.xml&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;...
&amp;lt;&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.apache.maven.plugins&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;maven-antrun-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;1.8&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;ktlint&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;verify&amp;lt;/&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;target&lt;/span&gt; &lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ktlint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;java&lt;/span&gt; &lt;span class="pl-e"&gt;taskname&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ktlint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;dir&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;${basedir}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;fork&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;true&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;failonerror&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;true&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                    &lt;span class="pl-e"&gt;classpathref&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;maven.plugin.classpath&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;classname&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.pinterest.ktlint.Main&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;arg&lt;/span&gt; &lt;span class="pl-e"&gt;value&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/**/*.kt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;/&amp;gt;
                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; to generate report in checkstyle format prepend following args: &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; &lt;/span&gt;
&lt;span class="pl-c"&gt;                    &amp;lt;arg value="--reporter=plain"/&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;                    &amp;lt;arg value="--reporter=checkstyle,output=${project.build.directory}/ktlint.xml"/&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;                    &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; see https://github.com/shyiko/ktlint#usage for more &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;                    
                &amp;lt;/&lt;span class="pl-ent"&gt;java&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;target&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;run&amp;lt;/&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;ktlint-format&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;target&lt;/span&gt; &lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ktlint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;java&lt;/span&gt; &lt;span class="pl-e"&gt;taskname&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ktlint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;dir&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;${basedir}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;fork&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;true&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;failonerror&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;true&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                    &lt;span class="pl-e"&gt;classpathref&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;maven.plugin.classpath&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;classname&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.pinterest.ktlint.Main&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;arg&lt;/span&gt; &lt;span class="pl-e"&gt;value&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-F&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;/&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;arg&lt;/span&gt; &lt;span class="pl-e"&gt;value&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/**/*.kt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;/&amp;gt;
                &amp;lt;/&lt;span class="pl-ent"&gt;java&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;target&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;run&amp;lt;/&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;dependencies&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;com.pinterest&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;ktlint&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;0.36.0&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; additional 3rd party ruleset(s) can be specified here &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;dependencies&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
...&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;If you want ktlint to run before code compilation takes place - change &lt;code&gt;&amp;lt;phase&amp;gt;verify&amp;lt;/phase&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;phase&amp;gt;validate&amp;lt;/phase&amp;gt;&lt;/code&gt; (see &lt;a href="https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html" rel="nofollow"&gt;Maven Build Lifecycle&lt;/a&gt; for more).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To check code style - &lt;code&gt;mvn antrun:run@ktlint&lt;/code&gt; (it's also bound to &lt;code&gt;mvn verify&lt;/code&gt;).&lt;br&gt;
To run formatter - &lt;code&gt;mvn antrun:run@ktlint-format&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Another option&lt;/strong&gt; is to use a dedicated Maven plugin - &lt;a href="https://github.com/gantsign/ktlint-maven-plugin"&gt;gantsign/ktlint-maven-plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content--with-gradle" class="anchor" aria-hidden="true" href="#-with-gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... with &lt;a href="https://gradle.org/" rel="nofollow"&gt;Gradle&lt;/a&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-with-a-plugin---recommended" class="anchor" aria-hidden="true" href="#with-a-plugin---recommended"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;(with a plugin - Recommended)&lt;/h4&gt;
&lt;p&gt;Gradle plugins (in order of appearance):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jlleitschuh/ktlint-gradle"&gt;jlleitschuh/ktlint-gradle&lt;/a&gt;&lt;br&gt;
Gradle plugin that automatically creates check and format tasks for project Kotlin sources,
supports different kotlin plugins and Gradle build caching.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jeremymailen/kotlinter-gradle"&gt;jeremymailen/kotlinter-gradle&lt;/a&gt;&lt;br&gt;
Gradle plugin featuring incremental build support, file reports, and &lt;code&gt;*.kts&lt;/code&gt; source support.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You might also want to take a look at &lt;a href="https://github.com/diffplug/spotless/tree/master/plugin-gradle#applying-ktlint-to-kotlin-files"&gt;diffplug/spotless&lt;/a&gt; which has a built-in support for ktlint. In addition to linting/formatting kotlin code it allows you to keep license headers, markdown documentation, etc. in check.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-without-a-plugin" class="anchor" aria-hidden="true" href="#without-a-plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;(without a plugin)&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;build.gradle&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; kotlin-gradle-plugin must be applied for configuration below to work&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (see https://kotlinlang.org/docs/reference/using-gradle.html)&lt;/span&gt;

apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;java&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

repositories {
    jcenter()
}

configurations {
    ktlint
}

dependencies {
    ktlint &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.pinterest:ktlint:0.36.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; additional 3rd party ruleset(s) can be specified here&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; just add them to the classpath (e.g. ktlint 'groupId:artifactId:version') and &lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ktlint will pick them up&lt;/span&gt;
}

task ktlint(&lt;span class="pl-c1"&gt;type&lt;/span&gt;: &lt;span class="pl-k"&gt;JavaExec&lt;/span&gt;, &lt;span class="pl-c1"&gt;group&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;verification&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    description &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Check Kotlin code style.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    classpath &lt;span class="pl-k"&gt;=&lt;/span&gt; configurations&lt;span class="pl-k"&gt;.&lt;/span&gt;ktlint
    main &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.pinterest.ktlint.Main&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    args &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/**/*.kt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; to generate report in checkstyle format prepend following args:&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; see https://github.com/pinterest/ktlint#usage for more&lt;/span&gt;
}
check&lt;span class="pl-k"&gt;.&lt;/span&gt;dependsOn ktlint

task ktlintFormat(&lt;span class="pl-c1"&gt;type&lt;/span&gt;: &lt;span class="pl-k"&gt;JavaExec&lt;/span&gt;, &lt;span class="pl-c1"&gt;group&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;formatting&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    description &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Fix Kotlin code style deviations.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    classpath &lt;span class="pl-k"&gt;=&lt;/span&gt; configurations&lt;span class="pl-k"&gt;.&lt;/span&gt;ktlint
    main &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.pinterest.ktlint.Main&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    args &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-F&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/**/*.kt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To check code style - &lt;code&gt;gradle ktlint&lt;/code&gt; (it's also bound to &lt;code&gt;gradle check&lt;/code&gt;).&lt;br&gt;
To run formatter - &lt;code&gt;gradle ktlintFormat&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://proandroiddev.com/making-your-gradle-tasks-incremental-7f26e4ef09c3" rel="nofollow"&gt;Making your Gradle tasks incremental&lt;/a&gt; by &lt;a href="https://github.com/vanniktech"&gt;Niklas Baudy&lt;/a&gt; on how to make tasks above incremental.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content--with-intellij-idea" class="anchor" aria-hidden="true" href="#-with-intellij-idea"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... with &lt;a href="https://www.jetbrains.com/idea/" rel="nofollow"&gt;IntelliJ IDEA&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;While this is not strictly necessary it makes Intellij IDEA's built-in formatter produce 100% ktlint-compatible
code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;&lt;a id="user-content-option-1-recommended" class="anchor" aria-hidden="true" href="#option-1-recommended"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Option #1 (recommended)&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;(inside project's root directory)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;ktlint applyToIDEAProject
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or if you want to be compliant with Android Kotlin Style Guide&lt;/span&gt;
ktlint --android applyToIDEAProject&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-option-2" class="anchor" aria-hidden="true" href="#option-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Option #2&lt;/h5&gt;
&lt;p&gt;Apply to all IDEA projects:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./ktlint applyToIDEA&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or if you want to use android specific code style:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./ktlint --android applyToIDEA&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-option-3" class="anchor" aria-hidden="true" href="#option-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Option #3&lt;/h5&gt;
&lt;p&gt;Go to &lt;kbd&gt;File&lt;/kbd&gt; -&amp;gt; &lt;kbd&gt;Settings...&lt;/kbd&gt; -&amp;gt; &lt;kbd&gt;Editor&lt;/kbd&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;kbd&gt;General&lt;/kbd&gt; -&amp;gt; &lt;kbd&gt;Auto Import&lt;/kbd&gt;
&lt;ul&gt;
&lt;li&gt;check &lt;code&gt;Optimize imports on the fly (for current project)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;Code Style&lt;/kbd&gt; -&amp;gt; &lt;kbd&gt;Kotlin&lt;/kbd&gt;
&lt;ul&gt;
&lt;li&gt;&lt;kbd&gt;Set from...&lt;/kbd&gt; -&amp;gt; &lt;kbd&gt;Predefined style&lt;/kbd&gt; -&amp;gt; &lt;kbd&gt;Kotlin style guide&lt;/kbd&gt; (Kotlin plugin 1.2.20+).&lt;/li&gt;
&lt;li&gt;open &lt;kbd&gt;Code Generation&lt;/kbd&gt; tab
&lt;ul&gt;
&lt;li&gt;uncheck &lt;code&gt;Line comment at first column&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;select &lt;code&gt;Add a space at comment start&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;open &lt;kbd&gt;Imports&lt;/kbd&gt; tab
&lt;ul&gt;
&lt;li&gt;select &lt;code&gt;Use single name import&lt;/code&gt; (all of them);&lt;/li&gt;
&lt;li&gt;remove &lt;code&gt;import java.util.*&lt;/code&gt; from &lt;code&gt;Packages to Use Import with '*'&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;open &lt;kbd&gt;Blank Lines&lt;/kbd&gt; tab
&lt;ul&gt;
&lt;li&gt;change &lt;code&gt;Keep Maximum Blank Lines&lt;/code&gt; / &lt;code&gt;In declarations&lt;/code&gt; &amp;amp; &lt;code&gt;In code&lt;/code&gt; to 1 and &lt;code&gt;Before '}'&lt;/code&gt; to 0.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(optional but recommended) open &lt;kbd&gt;Wrapping and Braces&lt;/kbd&gt; tab
&lt;ul&gt;
&lt;li&gt;uncheck &lt;code&gt;Method declaration parameters&lt;/code&gt; / &lt;code&gt;Align when multiline&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(optional but recommended) open &lt;kbd&gt;Tabs and Indents&lt;/kbd&gt; tab
&lt;ul&gt;
&lt;li&gt;change &lt;code&gt;Continuation indent&lt;/code&gt; to the same value as &lt;code&gt;Indent&lt;/code&gt; (4 by default).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;Inspections&lt;/kbd&gt;
&lt;ul&gt;
&lt;li&gt;change &lt;code&gt;Severity&lt;/code&gt; level of &lt;code&gt;Unused import directive&lt;/code&gt; and &lt;code&gt;Redundant semicolon&lt;/code&gt; to &lt;code&gt;ERROR&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content--with-gnu-emacs" class="anchor" aria-hidden="true" href="#-with-gnu-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... with &lt;a href="https://www.gnu.org/software/emacs/" rel="nofollow"&gt;GNU Emacs&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;See &lt;a href="https://github.com/whirm/flycheck-kotlin"&gt;whirm/flycheck-kotlin&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content--with-vim" class="anchor" aria-hidden="true" href="#-with-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... with &lt;a href="https://www.vim.org/" rel="nofollow"&gt;Vim&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;See &lt;a href="https://github.com/w0rp/ale"&gt;w0rp/ale&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Integrated with something else? Send a PR.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-creating-a-ruleset" class="anchor" aria-hidden="true" href="#creating-a-ruleset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating a ruleset&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;See also &lt;a href="https://medium.com/@vanniktech/writing-your-first-ktlint-rule-5a1707f4ca5b" rel="nofollow"&gt;Writing your first ktlint rule&lt;/a&gt; by &lt;a href="https://github.com/vanniktech"&gt;Niklas Baudy&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In a nutshell: "ruleset" is a JAR containing one or more &lt;a href="ktlint-core/src/main/kotlin/com/pinterest/ktlint/core/Rule.kt"&gt;Rule&lt;/a&gt;s gathered together in a &lt;a href="ktlint-core/src/main/kotlin/com/github/shyiko/ktlint/core/RuleSet.kt"&gt;RuleSet&lt;/a&gt;. &lt;code&gt;ktlint&lt;/code&gt; is relying on
&lt;a href="https://docs.oracle.com/javase/8/docs/api/java/util/ServiceLoader.html" rel="nofollow"&gt;ServiceLoader&lt;/a&gt; to discover all available "RuleSet"s
on the classpath (as a ruleset author, all you need to do is to include a &lt;code&gt;META-INF/services/com.pinterest.ktlint.core.RuleSetProvider&lt;/code&gt; file
containing a fully qualified name of your &lt;a href="ktlint-core/src/main/kotlin/com/pinterest/ktlint/core/RuleSetProvider.kt"&gt;RuleSetProvider&lt;/a&gt; implementation).&lt;/p&gt;
&lt;p&gt;Once packaged in a JAR &lt;sup&gt;&lt;a href="https://github.com/pinterest/ktlint/issues/300#issuecomment-432408753"&gt;e.g. via &lt;code&gt;./gradlew build&lt;/code&gt;&lt;/a&gt;&lt;/sup&gt; you can load it with&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; enable additional 3rd party ruleset by pointing ktlint to its location on the file system&lt;/span&gt;
$ ktlint -R /path/to/custom/rulseset.jar &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/test/**/*.kt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Loading custom (3rd party) ruleset via built-in maven dependency resolver is deprecated,
see &lt;a href="https://github.com/pinterest/ktlint/issues/451"&gt;https://github.com/pinterest/ktlint/issues/451&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A complete sample project (with tests and build files) is included in this repo under the &lt;a href="ktlint-ruleset-template"&gt;ktlint-ruleset-template&lt;/a&gt; directory
(make sure to check &lt;a href="ktlint-ruleset-template/src/test/kotlin/yourpkgname/NoVarRuleTest.kt"&gt;NoVarRuleTest&lt;/a&gt; as it contains some useful information).&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-ast" class="anchor" aria-hidden="true" href="#ast"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AST&lt;/h4&gt;
&lt;p&gt;While writing/debugging &lt;a href="ktlint-core/src/main/kotlin/com/pinterest/ktlint/core/Rule.kt"&gt;Rule&lt;/a&gt;s it's often helpful to have an AST
printed out to see the structure rules have to work with. ktlint &amp;gt;= 0.15.0 has a &lt;code&gt;printAST&lt;/code&gt; subcommand (or &lt;code&gt;--print-ast&lt;/code&gt; flag for ktlint &amp;lt; 0.34.0) specifically for this purpose
(usage: &lt;code&gt;ktlint --color printAST &amp;lt;file&amp;gt;&lt;/code&gt;).
An example of the output is shown below.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;printf&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fun main() {}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; ktlint --color printAST --stdin

1: &lt;span class="pl-k"&gt;~&lt;/span&gt;.psi.KtFile (~.psi.stubs.elements.KtFileElementType.kotlin.FILE)
1:   &lt;span class="pl-k"&gt;~&lt;/span&gt;.psi.KtPackageDirective (~.psi.stubs.elements.KtPlaceHolderStubElementType.PACKAGE_DIRECTIVE) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
1:   &lt;span class="pl-k"&gt;~&lt;/span&gt;.psi.KtImportList (~.psi.stubs.elements.KtPlaceHolderStubElementType.IMPORT_LIST) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
1:   &lt;span class="pl-k"&gt;~&lt;/span&gt;.psi.KtScript (~.psi.stubs.elements.KtScriptElementType.SCRIPT)
1:     &lt;span class="pl-k"&gt;~&lt;/span&gt;.psi.KtBlockExpression (~.KtNodeType.BLOCK)
1:       &lt;span class="pl-k"&gt;~&lt;/span&gt;.psi.KtNamedFunction (~.psi.stubs.elements.KtFunctionElementType.FUN)
1:         &lt;span class="pl-k"&gt;~&lt;/span&gt;.c.i.p.impl.source.tree.LeafPsiElement (~.lexer.KtKeywordToken.fun) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fun&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
1:         &lt;span class="pl-k"&gt;~&lt;/span&gt;.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (~.c.i.p.tree.IElementType.WHITE_SPACE) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
1:         &lt;span class="pl-k"&gt;~&lt;/span&gt;.c.i.p.impl.source.tree.LeafPsiElement (~.lexer.KtToken.IDENTIFIER) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;main&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
1:         &lt;span class="pl-k"&gt;~&lt;/span&gt;.psi.KtParameterList 
  (~.psi.stubs.elements.KtPlaceHolderStubElementType.VALUE_PARAMETER_LIST)
1:           &lt;span class="pl-k"&gt;~&lt;/span&gt;.c.i.p.impl.source.tree.LeafPsiElement (~.lexer.KtSingleValueToken.LPAR) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
1:           &lt;span class="pl-k"&gt;~&lt;/span&gt;.c.i.p.impl.source.tree.LeafPsiElement (~.lexer.KtSingleValueToken.RPAR) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
1:         &lt;span class="pl-k"&gt;~&lt;/span&gt;.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (~.c.i.p.tree.IElementType.WHITE_SPACE) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
1:         &lt;span class="pl-k"&gt;~&lt;/span&gt;.psi.KtBlockExpression (~.KtNodeType.BLOCK)
1:           &lt;span class="pl-k"&gt;~&lt;/span&gt;.c.i.p.impl.source.tree.LeafPsiElement (~.lexer.KtSingleValueToken.LBRACE) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
1:           &lt;span class="pl-k"&gt;~&lt;/span&gt;.c.i.p.impl.source.tree.LeafPsiElement (~.lexer.KtSingleValueToken.RBRACE) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

   format: &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;line_number:&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;node.psi::class&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;node.elementType&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;node.text&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
   legend: &lt;span class="pl-k"&gt;~&lt;/span&gt; = org.jetbrains.kotlin, c.i.p = com.intellij.psi
   &lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-creating-a-reporter" class="anchor" aria-hidden="true" href="#creating-a-reporter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating a reporter&lt;/h2&gt;
&lt;p&gt;Take a look at &lt;a href="ktlint-reporter-plain"&gt;ktlint-reporter-plain&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In short, all you need to do is to implement a
&lt;a href="ktlint-core/src/main/kotlin/com/pinterest/ktlint/core/Reporter.kt"&gt;Reporter&lt;/a&gt; and make it available by registering
a custom &lt;a href="ktlint-core/src/main/kotlin/com/pinterest/ktlint/core/ReporterProvider.kt"&gt;ReporterProvider&lt;/a&gt; using
&lt;code&gt;META-INF/services/com.pinterest.ktlint.core.ReporterProvider&lt;/code&gt;. Pack all of that into a JAR and you're done.&lt;/p&gt;
&lt;p&gt;To load a custom (3rd party) reporter use &lt;code&gt;ktlint --reporter=name,artifact=/path/to/custom-ktlint-reporter.jar&lt;/code&gt;
(see &lt;code&gt;ktlint --help&lt;/code&gt; for more).&lt;/p&gt;
&lt;p&gt;Loading custom (3rd party) reporter via built-in maven dependency resolver is deprecated,
see &lt;a href="https://github.com/pinterest/ktlint/issues/451"&gt;https://github.com/pinterest/ktlint/issues/451&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Third-party:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mcassiano/ktlint-html-reporter"&gt;mcassiano/ktlint-html-reporter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-badge" class="anchor" aria-hidden="true" href="#badge"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Badge&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://ktlint.github.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5652fd33142bf88d0f46018325126931fe65d01d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d2545322539442541342d4646343038312e737667" alt="ktlint" data-canonical-src="https://img.shields.io/badge/code%20style-%E2%9D%A4-FF4081.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lisp"&gt;&lt;pre&gt;[![ktlint](https://img.shields.io/badge/code%20style-%E2%9D%A4-FF4081.svg)](https://ktlint.github.io/)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-why-should-i-use-ktlint" class="anchor" aria-hidden="true" href="#why-should-i-use-ktlint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why should I use ktlint?&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Simplicity&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Spending time on configuration (&amp;amp; maintenance down the road) of hundred-line long style config file(s) is counter-productive. Instead of wasting your energy on something that has no business value - focus on what really matters (not debating whether to use tabs or spaces).&lt;/p&gt;
&lt;p&gt;By using ktlint you put the importance of code clarity and community conventions over personal preferences. This makes things easier for people reading your code as well as frees you from having to document &amp;amp; explain what style potential contributor(s) have to follow.&lt;/p&gt;
&lt;p&gt;ktlint is a single binary with both linter &amp;amp; formatter included. All you need is to drop it in (no need to get &lt;a href="https://en.wikipedia.org/wiki/Decision_fatigue" rel="nofollow"&gt;overwhelmed&lt;/a&gt; while choosing among &lt;a href="http://checkstyle.sourceforge.net/checks.html" rel="nofollow"&gt;dozens of code style options&lt;/a&gt;).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-can-i-have-my-own-rules-on-top-of-ktlint" class="anchor" aria-hidden="true" href="#can-i-have-my-own-rules-on-top-of-ktlint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Can I have my own rules on top of ktlint?&lt;/h3&gt;
&lt;p&gt;Absolutely, "no configuration" doesn't mean "no extensibility". You can add your own ruleset(s) to discover potential bugs, check for anti-patterns, etc.&lt;/p&gt;
&lt;p&gt;See &lt;a href="#creating-a-ruleset"&gt;Creating A Ruleset&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-do-i-suppress-an-error-for-a-lineblockfile" class="anchor" aria-hidden="true" href="#how-do-i-suppress-an-error-for-a-lineblockfile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I suppress an error for a line/block/file?&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;This is meant primarily as an escape latch for the rare cases when &lt;strong&gt;ktlint&lt;/strong&gt; is not able
to produce the correct result (please report any such instances using &lt;a href="https://github.com/pinterest/ktlint/issues"&gt;GitHub Issues&lt;/a&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To disable a specific rule you'll need to turn on the verbose mode (&lt;code&gt;ktlint --verbose ...&lt;/code&gt;). At the end of each line
you'll see an error code. Use it as an argument for &lt;code&gt;ktlint-disable&lt;/code&gt; directive (shown below).&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;package.*&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ktlint-disable no-wildcard-imports&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ktlint-disable no-wildcard-imports &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;package.a.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;package.b.*&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ktlint-enable no-wildcard-imports &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To disable all checks:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;package.*&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ktlint-disable&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-how-do-i-globally-disable-a-rule" class="anchor" aria-hidden="true" href="#how-do-i-globally-disable-a-rule"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I globally disable a rule?&lt;/h3&gt;
&lt;p&gt;See the &lt;a href="https://github.com/pinterest/ktlint#editorconfig"&gt;EditorConfig section&lt;/a&gt; for details on how to use the &lt;code&gt;disabled_rules&lt;/code&gt; property.&lt;/p&gt;
&lt;p&gt;You may also pass a list of disabled rules via the &lt;code&gt;--disabled_rules&lt;/code&gt; command line flag. It has the same syntax as the EditorConfig property.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Make sure to read &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/pinterest/ktlint &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; ktlint
./mvnw &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; shows how to build, test, run, etc. project&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;To open ktlint in Intellij IDEA:&lt;br&gt;
&lt;kbd&gt;File&lt;/kbd&gt; -&amp;gt; &lt;kbd&gt;Open...&lt;/kbd&gt; (you may need to right-click on &lt;code&gt;pom.xml&lt;/code&gt; (in the project dir) and then &lt;kbd&gt;Maven&lt;/kbd&gt; -&amp;gt; &lt;kbd&gt;Reimport&lt;/kbd&gt;).&lt;br&gt;
You'll also need to set "Project SDK" to &lt;a href="https://github.com/shyiko/jabba#usage"&gt;1.8&lt;/a&gt;, "Project language level" to 8 in "Project Settings" (&lt;kbd&gt;File&lt;/kbd&gt; -&amp;gt; &lt;kbd&gt;Project Structure...&lt;/kbd&gt;).&lt;br&gt;
To run &lt;code&gt;ktlint&lt;/code&gt; - right-click on &lt;code&gt;ktlint/src/main/kotlin/com/pinterest/ktlint/Main.kt&lt;/code&gt; -&amp;gt; &lt;kbd&gt;Run&lt;/kbd&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-access-to-the-latest-master-snapshot" class="anchor" aria-hidden="true" href="#access-to-the-latest-master-snapshot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Access to the latest &lt;code&gt;master&lt;/code&gt; snapshot&lt;/h4&gt;
&lt;p&gt;Whenever a commit is added to the &lt;code&gt;master&lt;/code&gt; branch a snapshot build is automatically uploaded to &lt;a href="https://oss.sonatype.org/content/repositories/snapshots/com/pinterest/ktlint/" rel="nofollow"&gt;Sonatype's snapshots repository&lt;/a&gt;.
If you are eager to try upcoming changes (that might or might not be included in the next stable release) you can do
so by changing version of ktlint to &lt;code&gt;&amp;lt;latest-version&amp;gt;-SNAPSHOT&lt;/code&gt; + adding a repo:&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-maven" class="anchor" aria-hidden="true" href="#maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven&lt;/h5&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;...
&amp;lt;&lt;span class="pl-ent"&gt;repository&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;sonatype-snapshots&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;https://oss.sonatype.org/content/repositories/snapshots&amp;lt;/&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;snapshots&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;enabled&lt;/span&gt;&amp;gt;true&amp;lt;/&lt;span class="pl-ent"&gt;enabled&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;snapshots&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;releases&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;enabled&lt;/span&gt;&amp;gt;false&amp;lt;/&lt;span class="pl-ent"&gt;enabled&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;releases&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;repository&lt;/span&gt;&amp;gt;
...&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-gradle" class="anchor" aria-hidden="true" href="#gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle&lt;/h5&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;repositories {
  maven {
    url &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://oss.sonatype.org/content/repositories/snapshots&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-legal" class="anchor" aria-hidden="true" href="#legal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Legal&lt;/h2&gt;
&lt;p&gt;This project is not affiliated with nor endorsed by JetBrains.&lt;br&gt;
All code, unless specified otherwise, is licensed under the &lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;MIT&lt;/a&gt; license.&lt;br&gt;
Copyright (c) 2019 Pinterest, Inc.&lt;br&gt;
Copyright (c) 2016-2019 Stanley Shyiko.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pinterest</author><guid isPermaLink="false">https://github.com/pinterest/ktlint</guid><pubDate>Sun, 05 Jan 2020 00:19:00 GMT</pubDate></item><item><title>afollestad/material-dialogs #20 in Kotlin, Today</title><link>https://github.com/afollestad/material-dialogs</link><description>&lt;p&gt;&lt;i&gt;😍 A beautiful, fluid, and extensible dialogs API for Kotlin &amp; Android.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-material-dialogs" class="anchor" aria-hidden="true" href="#material-dialogs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Material Dialogs&lt;/h1&gt;
&lt;h4&gt;&lt;a id="user-content-view-releases-and-changelogs" class="anchor" aria-hidden="true" href="#view-releases-and-changelogs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/afollestad/material-dialogs/releases"&gt;View Releases and Changelogs&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/afollestad/material-dialogs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b46904a8a2a38c62bb4c451cc353798fe7bfcf1b/68747470733a2f2f7472617669732d63692e6f72672f61666f6c6c65737461642f6d6174657269616c2d6469616c6f67732e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/afollestad/material-dialogs.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codacy.com/app/drummeraidan_50/material-dialogs?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=afollestad/material-dialogs&amp;amp;utm_campaign=Badge_Grade" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/68cbeb1e48b30817cde8ea35b39f8188bf4c6b89/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3061346163633330613963653434303038376637363838373335333539626238" alt="Codacy Badge" data-canonical-src="https://api.codacy.com/project/badge/Grade/0a4acc30a9ce440087f7688735359bb8" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opensource.org/licenses/Apache-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8051e9938a1ab39cf002818dfceb6b6092f34d68/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/License-Apache%202.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/afollestad/material-dialogs/master/art/showcase4.png"&gt;&lt;img src="https://raw.githubusercontent.com/afollestad/material-dialogs/master/art/showcase4.png" alt="Showcase" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-modules" class="anchor" aria-hidden="true" href="#modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modules&lt;/h1&gt;
&lt;p&gt;The core module is the fundamental module that you need in order to use this library. The others
are extensions to core.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-core" class="anchor" aria-hidden="true" href="#core"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://bintray.com/drummer-aidan/maven/material-dialogs%3Acore/_latestVersion" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/ee80dea8b9405438878566aac3fa422adf921864/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6472756d6d65722d616964616e2f6d6176656e2f6d6174657269616c2d6469616c6f6773253341636f72652f696d616765732f646f776e6c6f61642e737667" alt="Core" data-canonical-src="https://api.bintray.com/packages/drummer-aidan/maven/material-dialogs%3Acore/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-core-tutorial-and-samples" class="anchor" aria-hidden="true" href="#core-tutorial-and-samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="documentation/CORE.md"&gt;Core Tutorial and Samples&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;core&lt;/code&gt; module contains everything you need to get started with the library. It contains all
core and normal-use functionality.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/afollestad/material-dialogs/master/art/basic_with_buttons.png"&gt;&lt;img src="https://raw.githubusercontent.com/afollestad/material-dialogs/master/art/basic_with_buttons.png" width="250px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;dependencies&lt;/span&gt; {
  &lt;span class="pl-k"&gt;..&lt;/span&gt;.
  implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.afollestad.material-dialogs:core:3.1.1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-input" class="anchor" aria-hidden="true" href="#input"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Input&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://bintray.com/drummer-aidan/maven/material-dialogs%3Ainput/_latestVersion" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/ba83051fc5fe8cd5f496da5c7a3f9908d4937f73/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6472756d6d65722d616964616e2f6d6176656e2f6d6174657269616c2d6469616c6f6773253341696e7075742f696d616765732f646f776e6c6f61642e737667" alt="Input" data-canonical-src="https://api.bintray.com/packages/drummer-aidan/maven/material-dialogs%3Ainput/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-input-tutorial-and-samples" class="anchor" aria-hidden="true" href="#input-tutorial-and-samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="documentation/INPUT.md"&gt;Input Tutorial and Samples&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;input&lt;/code&gt; module contains extensions to the core module, such as a text input dialog.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/afollestad/material-dialogs/master/art/input.png"&gt;&lt;img src="https://raw.githubusercontent.com/afollestad/material-dialogs/master/art/input.png" width="250px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;dependencies&lt;/span&gt; {
  &lt;span class="pl-k"&gt;..&lt;/span&gt;.
  implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.afollestad.material-dialogs:input:3.1.1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-files" class="anchor" aria-hidden="true" href="#files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Files&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://bintray.com/drummer-aidan/maven/material-dialogs%3Afiles/_latestVersion" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/a07cb39662be153828ac9a0d07751d6a65040553/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6472756d6d65722d616964616e2f6d6176656e2f6d6174657269616c2d6469616c6f677325334166696c65732f696d616765732f646f776e6c6f61642e737667" alt="Files" data-canonical-src="https://api.bintray.com/packages/drummer-aidan/maven/material-dialogs%3Afiles/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-files-tutorial-and-samples" class="anchor" aria-hidden="true" href="#files-tutorial-and-samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="documentation/FILES.md"&gt;Files Tutorial and Samples&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;files&lt;/code&gt; module contains extensions to the core module, such as a file and folder chooser.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/afollestad/material-dialogs/master/art/file_chooser.png"&gt;&lt;img src="https://raw.githubusercontent.com/afollestad/material-dialogs/master/art/file_chooser.png" width="250px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;dependencies&lt;/span&gt; {
  &lt;span class="pl-k"&gt;..&lt;/span&gt;.
  implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.afollestad.material-dialogs:files:3.1.1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-color" class="anchor" aria-hidden="true" href="#color"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Color&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://bintray.com/drummer-aidan/maven/material-dialogs%3Acolor/_latestVersion" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/c1072c2a53fc6395eacbc13c74d08d745aa4a16d/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6472756d6d65722d616964616e2f6d6176656e2f6d6174657269616c2d6469616c6f6773253341636f6c6f722f696d616765732f646f776e6c6f61642e737667" alt="Color" data-canonical-src="https://api.bintray.com/packages/drummer-aidan/maven/material-dialogs%3Acolor/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-color-tutorial-and-samples" class="anchor" aria-hidden="true" href="#color-tutorial-and-samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="documentation/COLOR.md"&gt;Color Tutorial and Samples&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;color&lt;/code&gt; module contains extensions to the core module, such as a color chooser.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/afollestad/material-dialogs/master/art/color_chooser.png"&gt;&lt;img src="https://raw.githubusercontent.com/afollestad/material-dialogs/master/art/color_chooser.png" width="250px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;dependencies&lt;/span&gt; {
  &lt;span class="pl-k"&gt;..&lt;/span&gt;.
  implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.afollestad.material-dialogs:color:3.1.1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-datetime" class="anchor" aria-hidden="true" href="#datetime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DateTime&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://bintray.com/drummer-aidan/maven/material-dialogs%3Adatetime/_latestVersion" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/f24c44556e219e988fde3c49acfe2f4177fb850f/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6472756d6d65722d616964616e2f6d6176656e2f6d6174657269616c2d6469616c6f67732533416461746574696d652f696d616765732f646f776e6c6f61642e737667" alt="DateTime" data-canonical-src="https://api.bintray.com/packages/drummer-aidan/maven/material-dialogs%3Adatetime/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-datetime-tutorial-and-samples" class="anchor" aria-hidden="true" href="#datetime-tutorial-and-samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="documentation/DATETIME.md"&gt;DateTime Tutorial and Samples&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;datetime&lt;/code&gt; module contains extensions to make date, time, and date-time picker dialogs.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/afollestad/material-dialogs/master/art/datetimepicker.png"&gt;&lt;img src="https://raw.githubusercontent.com/afollestad/material-dialogs/master/art/datetimepicker.png" width="500px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;dependencies&lt;/span&gt; {
  &lt;span class="pl-k"&gt;..&lt;/span&gt;.
  implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.afollestad.material-dialogs:datetime:3.1.1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-bottom-sheets" class="anchor" aria-hidden="true" href="#bottom-sheets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bottom Sheets&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://bintray.com/drummer-aidan/maven/material-dialogs%3Abottomsheets/_latestVersion" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/1e9c20e7c3d3a1934cede5716a0700f4069b1cd4/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6472756d6d65722d616964616e2f6d6176656e2f6d6174657269616c2d6469616c6f6773253341626f74746f6d7368656574732f696d616765732f646f776e6c6f61642e737667" alt="Bottom Sheets" data-canonical-src="https://api.bintray.com/packages/drummer-aidan/maven/material-dialogs%3Abottomsheets/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-bottom-sheets-tutorial-and-samples" class="anchor" aria-hidden="true" href="#bottom-sheets-tutorial-and-samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="documentation/BOTTOMSHEETS.md"&gt;Bottom Sheets Tutorial and Samples&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;bottomsheets&lt;/code&gt; module contains extensions to turn modal dialogs into bottom sheets, among
other functionality like showing a grid of items. Be sure to checkout the sample project for this,
too!&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/afollestad/material-dialogs/master/art/bottomsheet_customview.png"&gt;&lt;img src="https://raw.githubusercontent.com/afollestad/material-dialogs/master/art/bottomsheet_customview.png" width="250px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;dependencies&lt;/span&gt; {
  &lt;span class="pl-k"&gt;..&lt;/span&gt;.
  implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.afollestad.material-dialogs:bottomsheets:3.1.1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-lifecycle" class="anchor" aria-hidden="true" href="#lifecycle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lifecycle&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://bintray.com/drummer-aidan/maven/material-dialogs%3Alifecycle/_latestVersion" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/e7e85f919cd2295395fe708b53253ac20a08aa18/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6472756d6d65722d616964616e2f6d6176656e2f6d6174657269616c2d6469616c6f67732533416c6966656379636c652f696d616765732f646f776e6c6f61642e737667" alt="Lifecycle" data-canonical-src="https://api.bintray.com/packages/drummer-aidan/maven/material-dialogs%3Alifecycle/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-lifecycle-tutorial-and-samples" class="anchor" aria-hidden="true" href="#lifecycle-tutorial-and-samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="documentation/LIFECYCLE.md"&gt;Lifecycle Tutorial and Samples&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;lifecycle&lt;/code&gt; module contains extensions to make dialogs work with AndroidX lifecycles.&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;dependencies&lt;/span&gt; {
  &lt;span class="pl-k"&gt;..&lt;/span&gt;.
  implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.afollestad.material-dialogs:lifecycle:3.1.1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>afollestad</author><guid isPermaLink="false">https://github.com/afollestad/material-dialogs</guid><pubDate>Sun, 05 Jan 2020 00:20:00 GMT</pubDate></item><item><title>JakeWharton/RxBinding #21 in Kotlin, Today</title><link>https://github.com/JakeWharton/RxBinding</link><description>&lt;p&gt;&lt;i&gt;RxJava binding APIs for Android's UI widgets.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-rxbinding" class="anchor" aria-hidden="true" href="#rxbinding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RxBinding&lt;/h1&gt;
&lt;p&gt;RxJava binding APIs for Android UI widgets from the platform and support libraries.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-download" class="anchor" aria-hidden="true" href="#download"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download&lt;/h2&gt;
&lt;p&gt;Platform bindings:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.jakewharton.rxbinding3:rxbinding:3.1.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;AndroidX library bindings:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.jakewharton.rxbinding3:rxbinding-core:3.1.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.jakewharton.rxbinding3:rxbinding-appcompat:3.1.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.jakewharton.rxbinding3:rxbinding-drawerlayout:3.1.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.jakewharton.rxbinding3:rxbinding-leanback:3.1.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.jakewharton.rxbinding3:rxbinding-recyclerview:3.1.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.jakewharton.rxbinding3:rxbinding-slidingpanelayout:3.1.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.jakewharton.rxbinding3:rxbinding-swiperefreshlayout:3.1.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.jakewharton.rxbinding3:rxbinding-viewpager:3.1.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.jakewharton.rxbinding3:rxbinding-viewpager2:3.1.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Google 'material' library bindings:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.jakewharton.rxbinding3:rxbinding-material:3.1.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Snapshots of the development version are available in &lt;a href="https://oss.sonatype.org/content/repositories/snapshots/" rel="nofollow"&gt;Sonatype's &lt;code&gt;snapshots&lt;/code&gt; repository&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Copyright (C) 2015 Jake Wharton

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>JakeWharton</author><guid isPermaLink="false">https://github.com/JakeWharton/RxBinding</guid><pubDate>Sun, 05 Jan 2020 00:21:00 GMT</pubDate></item><item><title>android/compose-samples #22 in Kotlin, Today</title><link>https://github.com/android/compose-samples</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-compose-samples-repository" class="anchor" aria-hidden="true" href="#compose-samples-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compose Samples Repository&lt;/h1&gt;
&lt;p&gt;This repository contains a set of individual Android Studio projects to help you learn about
Compose in Android.&lt;/p&gt;
&lt;p&gt;For more information, please &lt;a href="https://developer.android.com/jetpack/compose" rel="nofollow"&gt;read our documentation&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-samples" class="anchor" aria-hidden="true" href="#samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Samples&lt;/h2&gt;
&lt;p&gt;&lt;a href="JetNews/"&gt;Jetnews&lt;/a&gt;: A sample blog post viewer that demonstrates the use of Compose.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>android</author><guid isPermaLink="false">https://github.com/android/compose-samples</guid><pubDate>Sun, 05 Jan 2020 00:22:00 GMT</pubDate></item><item><title>igorwojda/android-showcase #23 in Kotlin, Today</title><link>https://github.com/igorwojda/android-showcase</link><description>&lt;p&gt;&lt;i&gt;💎Android application following best practices:  Kotlin, coroutines, Clean Architecture, feature modules, tests, MVVM, static analysis...&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-project-description" class="anchor" aria-hidden="true" href="#project-description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project description&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/igorwojda/android-showcase" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/84df787776e2bf52bffc2302f0c49234cc9f1bfb/68747470733a2f2f636972636c6563692e636f6d2f67682f69676f72776f6a64612f616e64726f69642d73686f77636173652e7376673f7374796c653d736869656c64" alt="CircleCI" data-canonical-src="https://circleci.com/gh/igorwojda/android-showcase.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://kotlinlang.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e70cd612be29ffccb056f5d060338cb8b6a2a0af/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4b6f746c696e2d312e332e35302d626c75652e737667" alt="Kotlin Version" data-canonical-src="https://img.shields.io/badge/Kotlin-1.3.50-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://android-arsenal.com/api?level=21" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7dbf5ff82d288dd3dda80bb9684b713f85f4f010/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4150492d32312532422d627269676874677265656e2e7376673f7374796c653d666c6174" alt="API" data-canonical-src="https://img.shields.io/badge/API-21%2B-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://codebeat.co/projects/github-com-igorwojda-android-showcase-master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b58f2c92a2f9a3abcfd70184000151ee149b0f53/68747470733a2f2f636f6465626561742e636f2f6261646765732f37663633323036342d306265352d343530662d623239662d663065313436303538326162" alt="codebeat badge" data-canonical-src="https://codebeat.co/badges/7f632064-0be5-450f-b29f-f0e1460582ab" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://app.codacy.com/app/igorwojda/android-showcase?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=igorwojda/android-showcase&amp;amp;utm_campaign=Badge_Grade_Dashboard" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57af6c88e0557e5b2ee96fc7b7316c2f583206de/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6137656630373436373033653463383162306534616632633436653238383565" alt="Codacy Badge" data-canonical-src="https://api.codacy.com/project/badge/Grade/a7ef0746703e4c81b0e4af2c46e2885e" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codefactor.io/repository/github/igorwojda/android-showcase" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/eeb2aee0b20cd33ac5a33f11ecaba45e87a120f2/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f69676f72776f6a64612f616e64726f69642d73686f77636173652f6261646765" alt="CodeFactor" data-canonical-src="https://www.codefactor.io/repository/github/igorwojda/android-showcase/badge" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Showcase is a sample project that presents modern, 2019 approach to
&lt;a href="https://en.wikipedia.org/wiki/Android_(operating_system)" rel="nofollow"&gt;Android&lt;/a&gt; application development using
&lt;a href="https://kotlinlang.org/" rel="nofollow"&gt;Kotlin&lt;/a&gt; and latest tech-stack.&lt;/p&gt;
&lt;p&gt;The goal of the project is to demonstrate best practices, provide a set of guidelines, and present modern Android
application architecture that is modular, scalable, maintainable and testable. This application may look simple, but it
has all of these small details that will set the rock-solid foundation of the larger app suitable for bigger teams and
long &lt;a href="https://en.wikipedia.org/wiki/Application_lifecycle_management" rel="nofollow"&gt;application lifecycle&lt;/a&gt;. Many of the project design
decisions follow official Google recommendations.&lt;/p&gt;
&lt;p&gt;This project is being heavily maintained to match current industry standards. In upcoming weeks (Q4 2019) I plan to
write an extensive series of articles explaining many of this project architectural &lt;a href="#design-decisions"&gt;design decisions&lt;/a&gt; , so &lt;a href="https://twitter.com/igorwojda" rel="nofollow"&gt;stay tuned&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-project-characteristics" class="anchor" aria-hidden="true" href="#project-characteristics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project characteristics&lt;/h2&gt;
&lt;p&gt;This project brings to table set of best practices, tools, and solutions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;100% &lt;a href="https://kotlinlang.org/" rel="nofollow"&gt;Kotlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Modern architecture (feature modules, Clean Architecture, Model-View-ViewModel, Model-View-Intent)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/jetpack" rel="nofollow"&gt;Android Jetpack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A single-activity architecture, using the &lt;a href="https://developer.android.com/guide/navigation/navigation-getting-started" rel="nofollow"&gt;Navigation component&lt;/a&gt; to manage fragment operations&lt;/li&gt;
&lt;li&gt;Reactive UI&lt;/li&gt;
&lt;li&gt;CI pipeline&lt;/li&gt;
&lt;li&gt;Testing&lt;/li&gt;
&lt;li&gt;Static analysis tools&lt;/li&gt;
&lt;li&gt;Dependency Injection&lt;/li&gt;
&lt;li&gt;Material design&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-tech-stack" class="anchor" aria-hidden="true" href="#tech-stack"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tech-stack&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="misc/image/application_anim.gif"&gt;&lt;img src="misc/image/application_anim.gif" width="336" align="right" hspace="20" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Min API level is set to &lt;a href="https://android-arsenal.com/api?level=21" rel="nofollow"&gt;&lt;code&gt;21&lt;/code&gt;&lt;/a&gt;, so the presented approach is suitable for over
&lt;a href="https://developer.android.com/about/dashboards" rel="nofollow"&gt;85% of devices&lt;/a&gt; running Android. This project takes advantage of many
popular libraries and tools of the Android ecosystem. Most of the libraries are in the stable version, unless there is a
good reason to use non-stable dependency.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tech-stack
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.org/" rel="nofollow"&gt;Kotlin&lt;/a&gt; + &lt;a href="https://kotlinlang.org/docs/reference/coroutines-overview.html" rel="nofollow"&gt;Coroutines&lt;/a&gt; - perform background operations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kodein.org/Kodein-DI/" rel="nofollow"&gt;Kodein&lt;/a&gt; - dependency injection&lt;/li&gt;
&lt;li&gt;&lt;a href="https://square.github.io/retrofit/" rel="nofollow"&gt;Retrofit&lt;/a&gt; - networking&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/jetpack" rel="nofollow"&gt;Jetpack&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/navigation/" rel="nofollow"&gt;Navigation&lt;/a&gt; - deal with whole in-app navigation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/livedata" rel="nofollow"&gt;LiveData&lt;/a&gt; - notify views about database change&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/lifecycle" rel="nofollow"&gt;Lifecycle&lt;/a&gt; - perform action when lifecycle state changes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/viewmodel" rel="nofollow"&gt;ViewModel&lt;/a&gt; - store and manage UI-related data in a lifecycle conscious way&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/coil-kt/coil"&gt;Coil&lt;/a&gt; - image loading library with Kotlin idiomatic API&lt;/li&gt;
&lt;li&gt;&lt;a href="http://airbnb.io/lottie" rel="nofollow"&gt;Lottie&lt;/a&gt; - animation library&lt;/li&gt;
&lt;li&gt;&lt;a href="http://facebook.github.io/stetho/" rel="nofollow"&gt;Stetho&lt;/a&gt; - application debugging tool&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/igorwojda/android-showcase/blob/master/buildSrc/src/main/kotlin/LibraryDependency.kt"&gt;and more...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Architecture
&lt;ul&gt;
&lt;li&gt;Clean Architecture (at module level)&lt;/li&gt;
&lt;li&gt;MVVM + MVI (presentation layer)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/studio/projects/dynamic-delivery" rel="nofollow"&gt;Dynamic feature modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture" rel="nofollow"&gt;Android Architecture components&lt;/a&gt; (&lt;a href="https://developer.android.com/topic/libraries/architecture/viewmodel" rel="nofollow"&gt;ViewModel&lt;/a&gt;, &lt;a href="https://developer.android.com/topic/libraries/architecture/livedata" rel="nofollow"&gt;LiveData&lt;/a&gt;, &lt;a href="https://developer.android.com/jetpack/androidx/releases/navigation" rel="nofollow"&gt;Navigation&lt;/a&gt;, &lt;a href="https://developer.android.com/guide/navigation/navigation-pass-data#Safe-args" rel="nofollow"&gt;SafeArgs&lt;/a&gt; plugin)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tests
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Unit_testing" rel="nofollow"&gt;Unit Tests&lt;/a&gt; (&lt;a href="https://junit.org/junit4/" rel="nofollow"&gt;JUnit&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mockito/mockito"&gt;Mockito&lt;/a&gt; + &lt;a href="https://github.com/nhaarman/mockito-kotlin"&gt;Mockito-Kotlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MarkusAmshove/Kluent"&gt;Kluent&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Gradle
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.gradle.org/current/userguide/kotlin_dsl.html" rel="nofollow"&gt;Gradle Kotlin DSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Custom tasks&lt;/li&gt;
&lt;li&gt;Plugins (&lt;a href="https://github.com/JLLeitschuh/ktlint-gradle"&gt;Ktlint&lt;/a&gt;, &lt;a href="https://github.com/arturbosch/detekt#with-gradle"&gt;Detekt&lt;/a&gt;, &lt;a href="https://github.com/ben-manes/gradle-versions-plugin"&gt;Versions&lt;/a&gt;, &lt;a href="https://developer.android.com/guide/navigation/navigation-pass-data#Safe-args" rel="nofollow"&gt;SafeArgs&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-architecture" class="anchor" aria-hidden="true" href="#architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture&lt;/h2&gt;
&lt;p&gt;Feature related code is placed inside one of the feature modules. This modularized approach provides better
&lt;a href="https://en.wikipedia.org/wiki/Separation_of_concerns" rel="nofollow"&gt;separation of concerns&lt;/a&gt; in the codebase and allows for feature to
be developed in isolation, independently from other features.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-module-dependencies" class="anchor" aria-hidden="true" href="#module-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Module dependencies&lt;/h3&gt;
&lt;p&gt;This is a simplified diagram of dependencies between gradle modules.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/igorwojda/android-showcase/blob/master/misc/image/module_dependencies.png?raw=true"&gt;&lt;img src="https://github.com/igorwojda/android-showcase/raw/master/misc/image/module_dependencies.png?raw=true" alt="module_dependencies" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Clean architecture&lt;/code&gt; is the "core architecture" of the application. Each feature module contains own set of Clean architecture layers. &lt;code&gt;app&lt;/code&gt; module structure is a bit different, because it mostly contains  "fundamental app configuration" (dependency injection, application class, retrofit configurations, etc.) and code that wire multiple module together (eg. &lt;code&gt;NavHostActivity&lt;/code&gt;).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that due usage of Android &lt;code&gt;dynamic-feature&lt;/code&gt; module dependencies are reversed (feature modules are depending on
&lt;code&gt;app&lt;/code&gt; module, not another way around).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/igorwojda/android-showcase/blob/master/misc/image/module_dependencies_layers.png?raw=true"&gt;&lt;img src="https://github.com/igorwojda/android-showcase/raw/master/misc/image/module_dependencies_layers.png?raw=true" alt="feature_structure" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Each layer has a distinct set of responsibilities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Presentation layer&lt;/code&gt; - presents data to a screen and handle user interactions&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Domain layer&lt;/code&gt; - contains business logic&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Data layer&lt;/code&gt; - access, retrieve and manage application data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/igorwojda/android-showcase/blob/master/misc/image/feature_structure.png?raw=true"&gt;&lt;img src="https://github.com/igorwojda/android-showcase/raw/master/misc/image/feature_structure.png?raw=true" alt="feature_structure" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Presentation&lt;/code&gt; layer is as mix of &lt;code&gt;MVVM&lt;/code&gt; (Jetpack
&lt;code&gt;ViewModel&lt;/code&gt; used to preserve data across activity restart) and &lt;code&gt;MVI&lt;/code&gt; (&lt;code&gt;actions&lt;/code&gt; modify &lt;code&gt;common state&lt;/code&gt; of the view and
then new state is edited to a view via &lt;code&gt;LiveData&lt;/code&gt; to be rendered).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;common state&lt;/code&gt; (for each view) approach derives from
&lt;a href="https://en.wikipedia.org/wiki/Unidirectional_Data_Flow_(computer_science)" rel="nofollow"&gt;Unidirectional Data Flow&lt;/a&gt; and &lt;a href="https://redux.js.org/introduction/three-principles" rel="nofollow"&gt;Redux
principles&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-data-flow" class="anchor" aria-hidden="true" href="#data-flow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data flow&lt;/h3&gt;
&lt;p&gt;Below diagram presents application data flow when a user interacts with &lt;code&gt;album list screen&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/igorwojda/android-showcase/blob/master/misc/image/app_data_flow.png?raw=true"&gt;&lt;img src="https://github.com/igorwojda/android-showcase/raw/master/misc/image/app_data_flow.png?raw=true" alt="app_data_flow" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ci-pipeline" class="anchor" aria-hidden="true" href="#ci-pipeline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ci pipeline&lt;/h2&gt;
&lt;p&gt;&lt;a href="circle.yml"&gt;CI pipeline&lt;/a&gt; verifies project correctness which each PR. Some of the tasks run in parallel, while
others like &lt;code&gt;app build&lt;/code&gt; will not be stared until all &lt;code&gt;static checks&lt;/code&gt; and &lt;code&gt;tests&lt;/code&gt; complete successfully:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="misc/image/ci_pipeline.jpg"&gt;&lt;img src="misc/image/ci_pipeline.jpg" alt="ci_pipeline.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;These are all of the Gradle tasks (cmd commands) that are &lt;a href="/circle.yml"&gt;executed by CI&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;./gradlew lintDebug&lt;/code&gt; - runs Android lint&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./gradlew detekt&lt;/code&gt; - runs detekt&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./gradlew ktlintCheck&lt;/code&gt; - runs ktlint&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./gradlew testDebugUnitTest&lt;/code&gt; - run unit tests&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./gradlew :app:bundleDebug&lt;/code&gt; - create app bundle&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On top of that project contains custom &lt;code&gt;./gradlew staticCheck&lt;/code&gt; task that mimics all CI tasks and is intended to run on
local computer.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-design-decisions" class="anchor" aria-hidden="true" href="#design-decisions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design decisions&lt;/h3&gt;
&lt;p&gt;Read related articles to have better understanding of underlying design decisions and various trade offs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://proandroiddev.com/multiple-ways-of-defining-clean-architecture-layers-bbb70afa5d4a" rel="nofollow"&gt;Multiple ways of defining Clean Architecture layers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;More coming soon (Q4 2019)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-what-this-project-does-not-cover" class="anchor" aria-hidden="true" href="#what-this-project-does-not-cover"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What this project does not cover?&lt;/h2&gt;
&lt;p&gt;The interface of the app utilises some of modern material design components, however, is deliberately kept simple to
focus on application architecture.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-upcoming-improvements" class="anchor" aria-hidden="true" href="#upcoming-improvements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Upcoming improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Add test coverage support (Jacoco)&lt;/li&gt;
&lt;li&gt;Improve error handling&lt;/li&gt;
&lt;li&gt;Improve multi-module navigation&lt;/li&gt;
&lt;li&gt;UI tests (including CI pipeline emulator configuration)&lt;/li&gt;
&lt;li&gt;Caching layer (memory + disk)&lt;/li&gt;
&lt;li&gt;Android Dynamic delivery&lt;/li&gt;
&lt;li&gt;Add Room&lt;/li&gt;
&lt;li&gt;Data binding&lt;/li&gt;
&lt;li&gt;Add Custom &lt;code&gt;android lint&lt;/code&gt;, &lt;code&gt;ktlint&lt;/code&gt; and &lt;code&gt;detekt&lt;/code&gt; checks/rules&lt;/li&gt;
&lt;li&gt;Add script to update all dependencies in the project, create PR to run all checks&lt;/li&gt;
&lt;li&gt;Continuous deployment (automatically publish app to Google play store using CI)&lt;/li&gt;
&lt;li&gt;Support for DayNight MaterialTheme&lt;/li&gt;
&lt;li&gt;and much more…&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h2&gt;
&lt;p&gt;There are a few ways to open this project.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-android-studio" class="anchor" aria-hidden="true" href="#android-studio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android Studio&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Android Studio -&amp;gt; File -&amp;gt; New -&amp;gt; From Version control -&amp;gt; Git&lt;/li&gt;
&lt;li&gt;Enter &lt;code&gt;https://github.com/igorwojda/android-showcase.git&lt;/code&gt; into URL field&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-command-line--android-studio" class="anchor" aria-hidden="true" href="#command-line--android-studio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command line + Android Studio&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Run &lt;code&gt;git clone https://github.com/igorwojda/android-showcase.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Android Studio -&amp;gt; File -&amp;gt; Open&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-inspiration" class="anchor" aria-hidden="true" href="#inspiration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inspiration&lt;/h2&gt;
&lt;p&gt;This is project is a sample, to inspire you and should handle most of the common cases, but please take a look at
additional resources.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-projects" class="anchor" aria-hidden="true" href="#projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Projects&lt;/h3&gt;
&lt;p&gt;Other high-quality projects will help you to find solutions that works for your project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/google/iosched"&gt;Iosched&lt;/a&gt; - official Android application from google IO 2019&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/googlesamples/android-architecture"&gt;Android Architecture Blueprints v2&lt;/a&gt; - showcase of various
Android architecture approaches&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/googlesamples/android-sunflower"&gt;Android sunflower&lt;/a&gt; complete &lt;code&gt;Jetpack&lt;/code&gt; sample covering all
libraries&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/googlesamples/android-architecture-components"&gt;GithubBrowserSample&lt;/a&gt; - multiple small projects
demonstrating usage of Android Architecture Components&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/android/plaid"&gt;Plaid&lt;/a&gt; - showcase of Android material design&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bufferapp/android-clean-architecture-boilerplate"&gt;Clean Architecture boilerplate&lt;/a&gt; - contains nice
diagrams of Clean Architecture layers&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/android"&gt;Android samples&lt;/a&gt; - official Android samples repository&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ww-tech/roxie"&gt;Roxie&lt;/a&gt; - solid example of &lt;code&gt;common state&lt;/code&gt; approach together witch very good
documentation&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known issues&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;API 21 crash on start&lt;/li&gt;
&lt;li&gt;Android Extensions experimental mode doesn't work with Gradle Kotlin DSL (&lt;a href="https://youtrack.jetbrains.com/issue/KT-22213" rel="nofollow"&gt;Fixed in upcoming Kotlin 1.3.60&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;CI sometimes fails with ConcurrentModificationException when running various tasks (&lt;a href="https://youtrack.jetbrains.com/issue/KT-32853" rel="nofollow"&gt;Fixed in upcoming Kotlin 1.3.60&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Kotlin option type is not defined (&lt;a href="https://youtrack.jetbrains.com/issue/KT-31077" rel="nofollow"&gt;Fixed in upcoming Kotlin 1.3.60&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ktlint&lt;/code&gt; ignores multiple file extensions when space is present in &lt;code&gt;.editorconfig&lt;/code&gt; (&lt;a href="https://github.com/pinterest/ktlint/pull/561"&gt;Fixed in upcoming 0.34.2+ release&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ktlint&lt;/code&gt; &lt;code&gt;import-ordering&lt;/code&gt; rule conflicts with IDE default formatting rule, so it have to be &lt;a href=".editorconfig"&gt;disabled&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Classes generated by &lt;code&gt;SafeArgs&lt;/code&gt; plugin (&lt;code&gt;AlbumListFragmentDirections&lt;/code&gt;, &lt;code&gt;AlbumDetailFragmentArgs&lt;/code&gt;...) are not properly
recognized by IDE in the multi-module configuration. Code will run however IDE will mark these classes as non-
existing. Also sometimes code has to be cleaned before running tests. This needs more investigation.&lt;/li&gt;
&lt;li&gt;False positive "Unused symbol" for a custom Android application class referenced in AndroidManifest.xml file (&lt;a href="https://youtrack.jetbrains.net/issue/KT-27971" rel="nofollow"&gt;Issue&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;False positive "Function can be private" (&lt;a href="https://youtrack.jetbrains.com/issue/KT-33610" rel="nofollow"&gt;Issue&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Gradle Kotlin Script is not fully supported by Android Studio&lt;/li&gt;
&lt;li&gt;Unit tests are running in IDE but fail after running gradle task because of missing Agrs class (&lt;a href="https://issuetracker.google.com/issues/139242292" rel="nofollow"&gt;Issue&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contribute" class="anchor" aria-hidden="true" href="#contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute&lt;/h2&gt;
&lt;p&gt;Feedback and new contributions are welcome whether it's through bug reports or new PRs.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://twitter.com/igorwojda" rel="nofollow"&gt;&lt;img src="https://github.com/igorwojda/android-showcase/raw/master/misc/image/avatar.png" alt="Follow me" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/igorwojda" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c8902d008ceb6afbf4cfd294b1c6ed0f790e0a11/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f69676f72776f6a64613f7374796c653d736f6369616c" alt="Follow me" data-canonical-src="https://img.shields.io/twitter/follow/igorwojda?style=social" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;MIT License

Copyright (c) 2019 Igor Wojda

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and 
associated documentation files (the "Software"), to deal in the Software without restriction, including 
without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to 
the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial 
portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT 
LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN 
NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE 
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-animations-license" class="anchor" aria-hidden="true" href="#animations-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Animations License&lt;/h2&gt;
&lt;p&gt;Flowing animations and are distributed under &lt;code&gt;Creative Commons License 2.0&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lottiefiles.com/8049-error-screen" rel="nofollow"&gt;Error screen&lt;/a&gt; by Chetan Potnuru&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lottiefiles.com/1271-building-screen" rel="nofollow"&gt;Building Screen&lt;/a&gt; by Carolina Cajazeira&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>igorwojda</author><guid isPermaLink="false">https://github.com/igorwojda/android-showcase</guid><pubDate>Sun, 05 Jan 2020 00:23:00 GMT</pubDate></item><item><title>kittinunf/fuel #24 in Kotlin, Today</title><link>https://github.com/kittinunf/fuel</link><description>&lt;p&gt;&lt;i&gt;The easiest HTTP networking library for Kotlin/Android&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-fuel" class="anchor" aria-hidden="true" href="#fuel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fuel&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://bintray.com/kittinunf/maven/Fuel-Android/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fe89103687fd265c76717416f83287457fd91b74/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6b697474696e756e662f6d6176656e2f4675656c2d416e64726f69642f696d616765732f646f776e6c6f61642e737667" alt="bintray" data-canonical-src="https://api.bintray.com/packages/kittinunf/maven/Fuel-Android/images/download.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/kittinunf/fuel" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b8444ae133e24073026aaac5f84b23a896fa8dd2/68747470733a2f2f7472617669732d63692e6f72672f6b697474696e756e662f6675656c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/kittinunf/fuel.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/kittinunf/fuel" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/62429596fc8f3463e7880dc9d2aac9bb63f0c280/68747470733a2f2f636f6465636f762e696f2f6769746875622f6b697474696e756e662f6675656c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="Codecov" data-canonical-src="https://codecov.io/github/kittinunf/fuel/coverage.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The easiest HTTP networking library for Kotlin/Android.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You are looking at the documentation for &lt;strong&gt;2.x.y.&lt;/strong&gt;. If you are looking for the documentation for &lt;strong&gt;1.x.y&lt;/strong&gt;, checkout &lt;a href="https://github.com/kittinunf/Fuel/blob/1.16.0/README.md"&gt;the 1.16.0 README.md&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; HTTP &lt;code&gt;GET&lt;/code&gt;/&lt;code&gt;POST&lt;/code&gt;/&lt;code&gt;PUT&lt;/code&gt;/&lt;code&gt;DELETE&lt;/code&gt;/&lt;code&gt;HEAD&lt;/code&gt;/&lt;code&gt;PATCH&lt;/code&gt; requests in a fluent style interface&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Asynchronous and blocking requests&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Download as a file&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Upload files, &lt;code&gt;Blob&lt;/code&gt;s, &lt;code&gt;DataPart&lt;/code&gt;s as &lt;code&gt;multipart/form-data&lt;/code&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Cancel asynchronous request&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Debug logging / convert to cUrl call&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Deserialization into POJO / POKO&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Requests as &lt;a href="https://github.com/Kotlin/kotlinx.coroutines"&gt;coroutines&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; API Routing&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;We offer maven and jitpack installations. Maven via bintray only has stable releases but jitpack can be used to build any branch, commit and version.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-maven" class="anchor" aria-hidden="true" href="#maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven&lt;/h3&gt;
&lt;p&gt;You can &lt;a href="https://bintray.com/kittinunf/maven/Fuel-Android/_latestVersion" rel="nofollow"&gt;download&lt;/a&gt; and install &lt;code&gt;Fuel&lt;/code&gt; with &lt;code&gt;Maven&lt;/code&gt; and &lt;code&gt;Gradle&lt;/code&gt;. The core package has the following dependencies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kotlin - &lt;a href="https://kotlinlang.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/98eb57d560e26aa3de7027f6dfd4af0d1bcfcbb0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4b6f746c696e2d312e332e33302d626c75652e737667" alt="Kotlin" data-canonical-src="https://img.shields.io/badge/Kotlin-1.3.30-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Result - 2.2.0&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;core&lt;/span&gt;
  implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.github.kittinunf.fuel:fuel:&amp;lt;latest-version&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;packages&lt;/span&gt;
  implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.github.kittinunf.fuel:&amp;lt;package&amp;gt;:&amp;lt;latest-version&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Each of the extensions / integrations has to be installed separately.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Package&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="./fuel"&gt;&lt;code&gt;fuel&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Core package&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="./fuel-android"&gt;&lt;code&gt;fuel-android&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Android&lt;/em&gt;: Automatically invoke handler on Main Thread when using Android Module&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="./fuel-coroutines"&gt;&lt;code&gt;fuel-coroutines&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;KotlinX&lt;/em&gt;: Execution with &lt;a href="https://github.com/Kotlin/kotlinx.coroutines"&gt;coroutines&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="./fuel-forge"&gt;&lt;code&gt;fuel-forge&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Deserialization&lt;/em&gt;: &lt;a href="https://github.com/kittinunf/Forge/"&gt;&lt;code&gt;Forge&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="./fuel-gson"&gt;&lt;code&gt;fuel-gson&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;(De)serialization&lt;/em&gt;: &lt;a href="https://github.com/google/gson"&gt;&lt;code&gt;Gson&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="./fuel-jackson"&gt;&lt;code&gt;fuel-jackson&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Deserialization&lt;/em&gt;: &lt;a href="https://github.com/FasterXML/jackson-module-kotlin"&gt;&lt;code&gt;Jackson&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/fuel-json"&gt;&lt;code&gt;fuel-json&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Deserialization&lt;/em&gt;: &lt;a href="http://www.json.org/" rel="nofollow"&gt;&lt;code&gt;Json&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/fuel-kotlinx-serialization"&gt;&lt;code&gt;fuel-kotlinx-serialization&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;(De)serialization&lt;/em&gt;: &lt;a href="https://github.com/Kotlin/kotlinx.serialization"&gt;&lt;code&gt;KotlinX Serialization&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="./fuel-livedata"&gt;&lt;code&gt;fuel-livedata&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Android Architectures&lt;/em&gt;: Responses as &lt;a href="https://developer.android.com/topic/libraries/architecture/livedata.html" rel="nofollow"&gt;&lt;code&gt;LiveData&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="./fuel-moshi"&gt;&lt;code&gt;fuel-moshi&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Deserialization&lt;/em&gt;: &lt;a href="https://github.com/square/moshi"&gt;&lt;code&gt;Moshi&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="./fuel-reactor"&gt;&lt;code&gt;fuel-reactor&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Reactive Programming&lt;/em&gt;: Responses as &lt;a href="https://projectreactor.io/docs/core/release/reference/#mono" rel="nofollow"&gt;&lt;code&gt;Mono&lt;/code&gt;&lt;/a&gt; (&lt;strong&gt;Project Reactor 3.x&lt;/strong&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="./fuel-rxjava"&gt;&lt;code&gt;fuel-rxjava&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Reactive Programming&lt;/em&gt;: Responses as &lt;a href="http://reactivex.io/RxJava/2.x/javadoc/io/reactivex/Single.html" rel="nofollow"&gt;&lt;code&gt;Single&lt;/code&gt;&lt;/a&gt; (&lt;strong&gt;RxJava 2.x&lt;/strong&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="./fuel-stetho"&gt;&lt;code&gt;fuel-stetho&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Utility&lt;/em&gt;: Debug utility for Android on Chrome Developer Tools, &lt;a href="https://github.com/facebook/stetho"&gt;&lt;code&gt;Stetho&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-jitpack" class="anchor" aria-hidden="true" href="#jitpack"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jitpack&lt;/h3&gt;
&lt;p&gt;If you want a SNAPSHOT distribution, you can use &lt;a href="https://jitpack.io/#kittinunf/fuel" rel="nofollow"&gt;&lt;code&gt;Jitpack&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;repositories {
  maven(url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://www.jitpack.io&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jitpack&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  }
}

dependencies {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;core&lt;/span&gt;
  implementation(group &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.github.kittinunf.fuel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fuel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-SNAPSHOT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;packages&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; replace &amp;lt;package&amp;gt; with the package name e.g. fuel-coroutines&lt;/span&gt;
  implementation(group &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.github.kittinunf.fuel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;package&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-SNAPSHOT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;dependencies {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;core and/or packages&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; replace &amp;lt;package&amp;gt; with the package name e.g. fuel-coroutines&lt;/span&gt;
  listof(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fuel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;package&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).forEach {
    implementation(group &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.github.kittinunf.fuel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, name &lt;span class="pl-k"&gt;=&lt;/span&gt; it, version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-SNAPSHOT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;group&lt;/code&gt; is made up of &lt;code&gt;com.github&lt;/code&gt; as well as username and project name&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;name&lt;/code&gt; is the subproject, this may be any of the packages listed in the &lt;a href="https://github.com/kittinunf/fuel#installation"&gt;installation instructions&lt;/a&gt;
eg. &lt;code&gt;fuel&lt;/code&gt;, &lt;code&gt;fuel-coroutines&lt;/code&gt;, &lt;code&gt;fuel-kotlinx-serialization&lt;/code&gt;, etc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;version&lt;/code&gt; can be the latest &lt;code&gt;master-SMAPSHOT&lt;/code&gt; or &lt;code&gt;-SNAPSHOT&lt;/code&gt; which always points at the HEAD or any other branch, tag or commit hash, e.g. as listed on &lt;a href="https://jitpack.io/#kittinunf/fuel" rel="nofollow"&gt;jitpack.io&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We recommend &lt;em&gt;not&lt;/em&gt; using &lt;code&gt;SNAPSHOT&lt;/code&gt; builds, but a specific commit in a specific branch (like a commit on master), because your build will then be stable.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-build-time-out" class="anchor" aria-hidden="true" href="#build-time-out"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build time-out&lt;/h4&gt;
&lt;p&gt;Have patience when updating the version of fuel or building for the first time as jitpack will build it, and this may cause the request to jitpack to time out. Wait a few minutes and try again (or check the status on jitpack).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; do &lt;em&gt;not&lt;/em&gt; forget to add the &lt;code&gt;kotlinx&lt;/code&gt; repository when using &lt;code&gt;coroutines&lt;/code&gt; or &lt;code&gt;serialization&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-forks" class="anchor" aria-hidden="true" href="#forks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Forks&lt;/h3&gt;
&lt;p&gt;Jitpack.io also allows to build from &lt;code&gt;fuel&lt;/code&gt; forks. If a fork's username is &lt;code&gt;$yourname&lt;/code&gt;,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;adjust &lt;code&gt;group&lt;/code&gt; to &lt;code&gt;com.github.$yourName.fuel&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;and look for &lt;code&gt;version&lt;/code&gt; on &lt;code&gt;https://jitpack.io/#$yourName/Fuel&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick start&lt;/h2&gt;
&lt;p&gt;Fuel requests can be made on the &lt;code&gt;Fuel&lt;/code&gt; namespace object, any &lt;code&gt;FuelManager&lt;/code&gt; or using one of the &lt;code&gt;String&lt;/code&gt; extension methods. If you specify a callback the call is &lt;code&gt;async&lt;/code&gt;, if you don't it's &lt;code&gt;blocking&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-async-usage-example" class="anchor" aria-hidden="true" href="#async-usage-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Async Usage Example&lt;/h4&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.github.kittinunf.fuel.httpGet&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.github.kittinunf.result.Result;&lt;/span&gt;

&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-smi"&gt;args&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&amp;gt;) {

    &lt;span class="pl-k"&gt;val&lt;/span&gt; httpAsync &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://httpbin.org/get&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        .httpGet()
        .responseString { request, response, result &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="pl-k"&gt;when&lt;/span&gt; (result) {
                &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-en"&gt;Result&lt;/span&gt;.&lt;span class="pl-en"&gt;Failure&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; {
                    &lt;span class="pl-k"&gt;val&lt;/span&gt; ex &lt;span class="pl-k"&gt;=&lt;/span&gt; result.getException()
                    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(ex)
                }
                &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-en"&gt;Result&lt;/span&gt;.&lt;span class="pl-en"&gt;Success&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; {
                    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; result.get()
                    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-k"&gt;data&lt;/span&gt;)
                }
            }
        }

    httpAsync.join()
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-blocking-usage-example" class="anchor" aria-hidden="true" href="#blocking-usage-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blocking Usage Example&lt;/h4&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.github.kittinunf.fuel.httpGet&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.github.kittinunf.result.Result;&lt;/span&gt;

&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-smi"&gt;args&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&amp;gt;) {

    &lt;span class="pl-k"&gt;val&lt;/span&gt; (request, response, result) &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://httpbin.org/get&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        .httpGet()
        .responseString()

    &lt;span class="pl-k"&gt;when&lt;/span&gt; (result) {
        &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-en"&gt;Result&lt;/span&gt;.&lt;span class="pl-en"&gt;Failure&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; {
            &lt;span class="pl-k"&gt;val&lt;/span&gt; ex &lt;span class="pl-k"&gt;=&lt;/span&gt; result.getException()
            &lt;span class="pl-c1"&gt;println&lt;/span&gt;(ex)
        }
        &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-en"&gt;Result&lt;/span&gt;.&lt;span class="pl-en"&gt;Success&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; {
            &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; result.get()
            &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-k"&gt;data&lt;/span&gt;)
        }
    }

}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You can also use Fuel.get("https://httpbin.org/get").responseString { ... }&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You can also use FuelManager.instance.get("...").responseString { ... }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Fuel&lt;/code&gt; and the extension methods use the &lt;code&gt;FuelManager.instance&lt;/code&gt; under the hood. You can use this FuelManager to change the default behaviour of all requests:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;FuelManager&lt;/span&gt;.instance.basePath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://httpbin.org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/get&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  .httpGet()
  .responseString { request, response, result &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;...&lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; }
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This is a GET request to "https://httpbin.org/get"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-detailed-usage" class="anchor" aria-hidden="true" href="#detailed-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Detailed usage&lt;/h2&gt;
&lt;p&gt;Check each of the packages documentations or the Wiki for more features, usages and examples. Are you looking for basic usage on how to set headers, authentication, request bodies and more? &lt;a href="./fuel/README.md"&gt;&lt;code&gt;fuel&lt;/code&gt;: Basic usage&lt;/a&gt; is all you need.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-basic-functionality" class="anchor" aria-hidden="true" href="#basic-functionality"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic functionality&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./fuel/README.md"&gt;&lt;code&gt;fuel&lt;/code&gt;: Basic usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./fuel-android/README.md"&gt;&lt;code&gt;fuel-android&lt;/code&gt;: Android usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./fuel-coroutines/README.md"&gt;&lt;code&gt;fuel-coroutines&lt;/code&gt;: Execution with coroutines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-responses" class="anchor" aria-hidden="true" href="#responses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Responses&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./fuel-livedata/README.md"&gt;&lt;code&gt;fuel-livedata&lt;/code&gt;: Responses as LiveData&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./fuel-reactor/README.md"&gt;&lt;code&gt;fuel-reactor&lt;/code&gt;: Responses as Mono&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./fuel-rxjava/README.md"&gt;&lt;code&gt;fuel-rxjava&lt;/code&gt;: Responses as Single&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-deserialization" class="anchor" aria-hidden="true" href="#deserialization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;(De)serialization&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./fuel-forge/README.md"&gt;&lt;code&gt;fuel-forge&lt;/code&gt;: Deserialization with Forge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./fuel-gson/README.md"&gt;&lt;code&gt;fuel-gson&lt;/code&gt;: (De)serialization with Gson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./fuel-jackson/README.md"&gt;&lt;code&gt;fuel-jackson&lt;/code&gt;: Deserialization with Jackson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./fuel-json/README.md"&gt;&lt;code&gt;fuel-json&lt;/code&gt;: Deserialization with Json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/fuel-kotlinx-serialization/README.md"&gt;&lt;code&gt;fuel-kotlinx-serialization&lt;/code&gt;: (De)serialization with KotlinX Serialization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./fuel-moshi/README.md"&gt;&lt;code&gt;fuel-moshi&lt;/code&gt;: Deserialization with Moshi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-utility" class="anchor" aria-hidden="true" href="#utility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Utility&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./fuel-stetho/README.md"&gt;&lt;code&gt;fuel-stetho&lt;/code&gt; : Debugging bridge for Android with Stetho&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-other-libraries" class="anchor" aria-hidden="true" href="#other-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other libraries&lt;/h2&gt;
&lt;p&gt;If you like Fuel, you might also like other libraries of mine;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kittinunf/Result"&gt;Result&lt;/a&gt; - The modelling for success/failure of operations in Kotlin&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kittinunf/Fuse"&gt;Fuse&lt;/a&gt; - A simple generic LRU memory/disk cache for Android written in Kotlin&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kittinunf/Forge"&gt;Forge&lt;/a&gt; - Functional style JSON parsing written in Kotlin&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kittinunf/ReactiveAndroid"&gt;ReactiveAndroid&lt;/a&gt; - Reactive events and properties with RxJava for Android SDK&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Fuel is brought to you by &lt;a href="https://github.com/kittinunf/Fuel/graphs/contributors"&gt;contributors&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-licenses" class="anchor" aria-hidden="true" href="#licenses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licenses&lt;/h2&gt;
&lt;p&gt;Fuel is released under the &lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>kittinunf</author><guid isPermaLink="false">https://github.com/kittinunf/fuel</guid><pubDate>Sun, 05 Jan 2020 00:24:00 GMT</pubDate></item><item><title>sanogueralorenzo/Android-Kotlin-Clean-Architecture #25 in Kotlin, Today</title><link>https://github.com/sanogueralorenzo/Android-Kotlin-Clean-Architecture</link><description>&lt;p&gt;&lt;i&gt;Android Sample Clean Architecture App written in Kotlin&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-android-kotlin-clean-architecture-app" class="anchor" aria-hidden="true" href="#android-kotlin-clean-architecture-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android Kotlin Clean Architecture App&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/sanogueralorenzo/Android-Kotlin-Clean-Architecture/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6f2250076203029fa032ef8e27517089a6a91ecb/68747470733a2f2f636972636c6563692e636f6d2f67682f73616e6f67756572616c6f72656e7a6f2f416e64726f69642d4b6f746c696e2d436c65616e2d4172636869746563747572652f747265652f6d61737465722e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/sanogueralorenzo/Android-Kotlin-Clean-Architecture/tree/master.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://kotlinlang.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3fbe6aeb7e04b6200d152a0ddc16b519232662f1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6b6f746c696e2d312e332e36312d626c75652e737667" alt="Kotlin Version" data-canonical-src="https://img.shields.io/badge/kotlin-1.3.61-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8051e9938a1ab39cf002818dfceb6b6092f34d68/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/License-Apache%202.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Personal project to try out things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Simplified Clean Architecture approach.&lt;/li&gt;
&lt;li&gt;Simplified Dependency Injection with Koin&lt;/li&gt;
&lt;li&gt;Simplified Dependency-less &amp;amp; independent Navigation.&lt;/li&gt;
&lt;li&gt;Dynamic Feature Modularized.&lt;/li&gt;
&lt;li&gt;Easy to RUDT (read, update, debug &amp;amp; test).&lt;/li&gt;
&lt;li&gt;Playground to try different architectures.&lt;/li&gt;
&lt;li&gt;Playground to try different libraries/frameworks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://circleci.com/gh/sanogueralorenzo/Android-Kotlin-Clean-Architecture" rel="nofollow"&gt;CircleCI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/InsertKoinIO/koin"&gt;koin (Kotlin Dependency Injection framework)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arturbosch/detekt"&gt;detekt (Kotlin Static Code Analysis Tool)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shyiko/ktlint"&gt;ktlint (Kotlin Style Guide Static Code Analysis Tool)&lt;/a&gt; &lt;a href="https://android.github.io/kotlin-guides/style.html" rel="nofollow"&gt;Kotlin Style Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ben-manes/gradle-versions-plugin"&gt;gradle versions plugin (Dependencies Updates)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://github.com/sanogueralorenzo/Android-Kotlin-Clean-Architecture/tree/master/posts"&gt;Sample Posts Feature Module (Post List and Post Detail screen with comments)&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-discussions" class="anchor" aria-hidden="true" href="#discussions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Discussions&lt;/h2&gt;
&lt;p&gt;Refer to the issues section: &lt;a href="https://github.com/sanogueralorenzo/Android-Kotlin-Clean-Architecture/issues"&gt;https://github.com/sanogueralorenzo/Android-Kotlin-Clean-Architecture/issues&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mentions" class="anchor" aria-hidden="true" href="#mentions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mentions&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://androidweekly.net/issues/issue-303" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4f7622db8c9387dd1b96704b35299d2ab9b7d5e5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616e64726f69647765656b6c792e6e65742d3330332d6f72616e67652e737667" alt="androidweekly" data-canonical-src="https://img.shields.io/badge/androidweekly.net-303-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://androidweekly.net/issues/issue-333" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a9ae9e78f7b13870e918640a3e3e322ccee97bf0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616e64726f69647765656b6c792e6e65742d3333332d6f72616e67652e737667" alt="androidweekly" data-canonical-src="https://img.shields.io/badge/androidweekly.net-333-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://mailchi.mp/kotlinweekly/kotlin-weekly-119" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/adf539c224c6f13336f48cd4ae2e31c7dcc503e8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6b6f746c696e7765656b6c792e6e65742d3131392d626c75652e737667" alt="kotlinweekly" data-canonical-src="https://img.shields.io/badge/kotlinweekly.net-119-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://androidweekly.net/issues/issue-335" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/81238541dcfa8be55af32177c694d9ee80423d7d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616e64726f69647765656b6c792e6e65742d3333352d6f72616e67652e737667" alt="androidweekly" data-canonical-src="https://img.shields.io/badge/androidweekly.net-335-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-social-media" class="anchor" aria-hidden="true" href="#social-media"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Social Media&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://twitter.com/MarioSanoguera" rel="nofollow"&gt;Twitter&lt;/a&gt; | &lt;a href="https://medium.com/@sanogueralorenzo" rel="nofollow"&gt;Medium&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/mario-sanoguera-de-lorenzo-b7b392103/" rel="nofollow"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-articles" class="anchor" aria-hidden="true" href="#articles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Articles&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://proandroiddev.com/clean-architecture-data-flow-dependency-rule-615ffdd79e29" rel="nofollow"&gt;Clean Architecture Guide (with tested examples): Data Flow != Dependency Rule&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://proandroiddev.com/the-death-of-presenters-and-the-rise-of-viewmodels-aac-f14d54b419a" rel="nofollow"&gt;The death of Presenters and the rise of ViewModels (AAC)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://proandroiddev.com/intro-to-app-architecture-922b392b21b2" rel="nofollow"&gt;Intro to App Architecture&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://proandroiddev.com/intro-to-app-modularization-42411e4c421e" rel="nofollow"&gt;Intro to App Modularization&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://proandroiddev.com/official-kotlin-style-guide-with-ktlint-4a649c172956" rel="nofollow"&gt;Official Kotlin Style Guide with Ktlint&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://proandroiddev.com/koin-in-feature-modules-project-6329f069f943" rel="nofollow"&gt;Koin in Feature Modules Project&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://proandroiddev.com/detecting-kotlin-code-smells-with-detekt-e79c52a35faf" rel="nofollow"&gt;Detecting Kotlin Code Smells with Detekt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://proandroiddev.com/moshi-with-retrofit-in-kotlin-%EF%B8%8F-a69c2621708b" rel="nofollow"&gt;Moshi with Retrofit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://proandroiddev.com/gradle-dependency-management-with-kotlin-94eed4df9a28" rel="nofollow"&gt;Gradle Dependency Management with Kotlin (buildSrc)&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Copyright 2018 Mario Sanoguera de Lorenzo

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>sanogueralorenzo</author><guid isPermaLink="false">https://github.com/sanogueralorenzo/Android-Kotlin-Clean-Architecture</guid><pubDate>Sun, 05 Jan 2020 00:25:00 GMT</pubDate></item></channel></rss>