<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Kotlin, Today</title><link>https://github.com/trending/kotlin?since=daily</link><description>The top repositories on GitHub for kotlin, measured daily</description><pubDate>Thu, 30 Jan 2020 01:14:07 GMT</pubDate><lastBuildDate>Thu, 30 Jan 2020 01:14:07 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>JetBrains/kotlin #1 in Kotlin, Today</title><link>https://github.com/JetBrains/kotlin</link><description>&lt;p&gt;&lt;i&gt;The Kotlin Programming Language&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="ReadMe.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2457c980f81ed19481871fcda0c94991c01b3e49/68747470733a2f2f6a622e67672f6261646765732f6f6666696369616c2e737667" alt="official project" data-canonical-src="https://jb.gg/badges/official.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://teamcity.jetbrains.com/viewType.html?buildTypeId=Kotlin_dev_Compiler&amp;amp;branch_Kotlin_dev=%3Cdefault%3E&amp;amp;tab=buildTypeStatusDiv" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/52a3cf6ce926d0e417c28c0a9a1e01632a87ec89/68747470733a2f2f696d672e736869656c64732e696f2f7465616d636974792f687474702f7465616d636974792e6a6574627261696e732e636f6d2f732f4b6f746c696e5f6465765f436f6d70696c65722e737667" alt="TeamCity (simple build status)" data-canonical-src="https://img.shields.io/teamcity/http/teamcity.jetbrains.com/s/Kotlin_dev_Compiler.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.jetbrains.kotlin%22" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6b7d19be49c665fd5d9640d0376e2a434039bf6a/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f6f72672e6a6574627261696e732e6b6f746c696e2f6b6f746c696e2d6d6176656e2d706c7567696e2e737667" alt="Maven Central" data-canonical-src="https://img.shields.io/maven-central/v/org.jetbrains.kotlin/kotlin-maven-plugin.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e7da7b6b632d5ef4bce9a550a5d5cfe400ca1fe/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652532304c6963656e7365253230322e302d626c75652e7376673f7374796c653d666c6174" alt="GitHub license" data-canonical-src="https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-kotlin-programming-language" class="anchor" aria-hidden="true" href="#kotlin-programming-language"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kotlin Programming Language&lt;/h1&gt;
&lt;p&gt;Welcome to &lt;a href="https://kotlinlang.org/" rel="nofollow"&gt;Kotlin&lt;/a&gt;! Some handy links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.org/" rel="nofollow"&gt;Kotlin Site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.org/docs/tutorials/getting-started.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.kotlinlang.org/" rel="nofollow"&gt;Try Kotlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.org/api/latest/jvm/stdlib/index.html" rel="nofollow"&gt;Kotlin Standard Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtrack.jetbrains.com/issues/KT" rel="nofollow"&gt;Issue Tracker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discuss.kotlinlang.org/" rel="nofollow"&gt;Forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.jetbrains.com/kotlin/" rel="nofollow"&gt;Kotlin Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/kotlin" rel="nofollow"&gt;Follow Kotlin on Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://slack.kotlinlang.org/" rel="nofollow"&gt;Public Slack channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teamcity.jetbrains.com/project.html?tab=projectOverview&amp;amp;projectId=Kotlin" rel="nofollow"&gt;TeamCity CI build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-editing-kotlin" class="anchor" aria-hidden="true" href="#editing-kotlin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Editing Kotlin&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.org/docs/tutorials/getting-started.html" rel="nofollow"&gt;Kotlin IntelliJ IDEA Plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.org/docs/tutorials/getting-started-eclipse.html" rel="nofollow"&gt;Kotlin Eclipse Plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vkostyukov/kotlin-sublime-package"&gt;Kotlin Sublime Text Package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-build-environment-requirements" class="anchor" aria-hidden="true" href="#build-environment-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build environment requirements&lt;/h2&gt;
&lt;p&gt;In order to build Kotlin distribution you need to have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;JDK 1.6, 1.7, 1.8 and 9&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Setup environment variables as following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  JAVA_HOME="path to JDK 1.8"
  JDK_16="path to JDK 1.6"
  JDK_17="path to JDK 1.7"
  JDK_18="path to JDK 1.8"
  JDK_9="path to JDK 9"
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For local development, if you're not working on bytecode generation or the standard library, it's OK to have only JDK 1.8 and JDK 9 installed, and to point JDK_16 and JDK_17 environment variables to your JDK 1.8 installation.&lt;/p&gt;
&lt;p&gt;You also can use &lt;a href="https://docs.gradle.org/current/userguide/build_environment.html#sec:gradle_properties_and_system_properties" rel="nofollow"&gt;Gradle properties&lt;/a&gt; to setup JDK_* variables.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: The JDK 6 for MacOS is not available on Oracle's site. You can &lt;a href="https://support.apple.com/kb/DL1572" rel="nofollow"&gt;download it here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;On Windows you might need to add long paths setting to the repo:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git config core.longpaths true 
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;The project is built with Gradle. Run Gradle to build the project and to run the tests
using the following command on Unix/macOS:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew &amp;lt;tasks-and-options&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or the following command on Windows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gradlew &amp;lt;tasks-and-options&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On the first project configuration gradle will download and setup the dependencies on&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;intellij-core&lt;/code&gt; is a part of command line compiler and contains only necessary APIs.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;idea-full&lt;/code&gt; is a full blown IntelliJ IDEA Community Edition to be used in the plugin module.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These dependencies are quite large, so depending on the quality of your internet connection
you might face timeouts getting them. In this case you can increase timeout by specifying the following
command line parameters on the first run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew -Dhttp.socketTimeout=60000 -Dhttp.connectionTimeout=60000
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-important-gradle-tasks" class="anchor" aria-hidden="true" href="#important-gradle-tasks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important gradle tasks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;clean&lt;/code&gt; - clean build results&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dist&lt;/code&gt; - assembles the compiler distribution into &lt;code&gt;dist/kotlinc/&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ideaPlugin&lt;/code&gt; - assembles the Kotlin IDEA plugin distribution into &lt;code&gt;dist/artifacts/Kotlin&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;&lt;code&gt;install&lt;/code&gt; - build and install all public artifacts into local maven repository&lt;/li&gt;
&lt;li&gt;&lt;code&gt;runIde&lt;/code&gt; - build IDEA plugin and run IDEA with it&lt;/li&gt;
&lt;li&gt;&lt;code&gt;coreLibsTest&lt;/code&gt; - build and run stdlib, reflect and kotlin-test tests&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gradlePluginTest&lt;/code&gt; - build and run gradle plugin tests&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compilerTest&lt;/code&gt; - build and run all compiler tests&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ideaPluginTest&lt;/code&gt; - build and run all IDEA plugin tests&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;OPTIONAL:&lt;/strong&gt; Some artifacts, mainly Maven plugin ones, are built separately with Maven.
Refer to &lt;a href="libraries/ReadMe.md"&gt;libraries/ReadMe.md&lt;/a&gt; for details.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-for-different-versions-of-intellij-idea-and-android-studio" class="anchor" aria-hidden="true" href="#building-for-different-versions-of-intellij-idea-and-android-studio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building for different versions of IntelliJ IDEA and Android Studio&lt;/h3&gt;
&lt;p&gt;Kotlin plugin is intended to work with several recent versions of IntelliJ IDEA and Android Studio. Each platform is allowed to have a different set of features and might provide a slightly different API. Instead of using several parallel Git branches, project stores everything in a single branch, but files may have counterparts with version extensions (*.as32, *.172, *.181). The primary file is expected to be replaced with its counterpart when targeting non-default platform.&lt;/p&gt;
&lt;p&gt;More detailed description of this scheme can be found at &lt;a href="https://github.com/JetBrains/bunches/blob/master/ReadMe.md"&gt;https://github.com/JetBrains/bunches/blob/master/ReadMe.md&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Usually, there's no need to care about multiple platforms as all features are enabled everywhere by default. Additional counterparts should be created if there's an expected difference in behavior or an incompatible API usage is required &lt;strong&gt;and&lt;/strong&gt; there's no reasonable workaround to save source compatibility. Kotlin plugin contains a pre-commit check that shows a warning if a file has been updated without its counterparts.&lt;/p&gt;
&lt;p&gt;Development for some particular platform is possible after 'switching' that can be done with &lt;a href="https://github.com/JetBrains/bunches/releases"&gt;Bunch Tool&lt;/a&gt; from the command line.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; kotlin-project-dir

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; switching to IntelliJ Idea 2019.1&lt;/span&gt;
bunch switch 191&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content--working-with-the-project-in-intellij-idea" class="anchor" aria-hidden="true" href="#-working-with-the-project-in-intellij-idea"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-working-in-idea"&gt;&lt;/a&gt; Working with the project in IntelliJ IDEA&lt;/h2&gt;
&lt;p&gt;Working with the Kotlin project requires at least IntelliJ IDEA 2019.1. You can download IntelliJ IDEA 2019.1 &lt;a href="https://www.jetbrains.com/idea/download" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After cloning the project, to import the project in Intellij choose the project directory in the Open project dialog. Then, after project opened, Select
&lt;code&gt;File&lt;/code&gt; -&amp;gt; &lt;code&gt;New...&lt;/code&gt; -&amp;gt; &lt;code&gt;Module from Existing Sources&lt;/code&gt; in the menu, and select &lt;code&gt;build.gradle.kts&lt;/code&gt; file in the project's root folder.&lt;/p&gt;
&lt;p&gt;In the import dialog, select &lt;code&gt;use default gradle wrapper&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To be able to run tests from IntelliJ easily, check &lt;code&gt;Delegate IDE build/run actions to Gradle&lt;/code&gt; and choose &lt;code&gt;Gradle Test Runner&lt;/code&gt; in the Gradle runner settings after importing the project.&lt;/p&gt;
&lt;p&gt;At this time, you can use the latest released 1.3.x version of the Kotlin plugin for working with the code. To make sure you have the latest version installed, use Tools | Kotlin | Configure Kotlin Plugin Updates and press "Check for updates now".&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-compiling-and-running" class="anchor" aria-hidden="true" href="#compiling-and-running"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling and running&lt;/h3&gt;
&lt;p&gt;From this root project there are Run/Debug Configurations for running IDEA or the Compiler Tests for example; so if you want to try out the latest and greatest IDEA plugin&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VCS -&amp;gt; Git -&amp;gt; Pull&lt;/li&gt;
&lt;li&gt;Run the "IDEA" run configuration in the project&lt;/li&gt;
&lt;li&gt;a child IntelliJ IDEA with the Kotlin plugin will then startup&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-including-into-composite-build" class="anchor" aria-hidden="true" href="#including-into-composite-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Including into composite build&lt;/h3&gt;
&lt;p&gt;To include kotlin compiler into &lt;a href="https://docs.gradle.org/current/userguide/composite_builds.html" rel="nofollow"&gt;composite build&lt;/a&gt; you need to define &lt;code&gt;dependencySubstitution&lt;/code&gt; for &lt;code&gt;kotlin-compiler&lt;/code&gt; module in &lt;code&gt;settings.gradle&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;includeBuild('/path/to/kotlin') {
    dependencySubstitution {
        substitute module('org.jetbrains.kotlin:kotlin-compiler') with project(':include:kotlin-compiler')
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;Kotlin is distributed under the terms of the Apache License (Version 2.0). See &lt;a href="license/README.md"&gt;license folder&lt;/a&gt; for details.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;Please be sure to review Kotlin's &lt;a href="docs/contributing.md"&gt;contributing guidelines&lt;/a&gt; to learn how to help the project.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>JetBrains</author><guid isPermaLink="false">https://github.com/JetBrains/kotlin</guid><pubDate>Thu, 30 Jan 2020 00:01:00 GMT</pubDate></item><item><title>google-developer-training/android-kotlin-fundamentals-apps #2 in Kotlin, Today</title><link>https://github.com/google-developer-training/android-kotlin-fundamentals-apps</link><description>&lt;p&gt;&lt;i&gt;android-kotlin-fundamentals-apps&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-android-fundamentals-in-kotlin-solution-apps" class="anchor" aria-hidden="true" href="#android-fundamentals-in-kotlin-solution-apps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android Fundamentals in Kotlin Solution Apps&lt;/h1&gt;
&lt;p&gt;This repository contains the solution code for the apps for the
Android Fundamentals in Kotlin course, published by the Google Developer Training Team.
See &lt;a href="https://developer.android.com/courses" rel="nofollow"&gt;Android Training&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A “solution app” is an app that contains the code for a completed codelab.&lt;/p&gt;
&lt;p&gt;Code for the starter apps in this course are in a different repository.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Each of the samples in this repository is associated with a codelab exercise
from the Android Fundamentals in Kotlin course.&lt;/p&gt;
&lt;p&gt;The Android Fundamentals in Kotlin course can be used for self-study, or as the
basis of an instructor-led training. It is targeted towards beginning Android
developers with a background in software development or computer science with
at least two years of experience with a modern, object-oriented programming
language, such as the Java programming language,
and familiarity with basic software architecture principles.&lt;/p&gt;
&lt;p&gt;Since this course is in Kotlin, it is assumed you know Kotlin at the level
taught in the Udacity course,
&lt;a href="https://www.udacity.com/course/kotlin-bootcamp-for-programmers--ud9011" rel="nofollow"&gt;Kotlin Bootcamp for Programmers&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-pre-requisites" class="anchor" aria-hidden="true" href="#pre-requisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pre-requisites&lt;/h2&gt;
&lt;p&gt;The samples, along with the course, assume basic competence in software
design and development, as well as some background in computer science.&lt;/p&gt;
&lt;p&gt;Specifically, to get started you need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Familiarity with the general software development process for object-oriented
applications using an IDE (Integrated Development Environment).&lt;/li&gt;
&lt;li&gt;At least 1-3 years of experience with object-oriented programming and
the Java programming language, or a comparable modern language.&lt;/li&gt;
&lt;li&gt;Familiarity with the Kotlin programming language.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-android-studio-version" class="anchor" aria-hidden="true" href="#android-studio-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android Studio Version&lt;/h2&gt;
&lt;p&gt;During development of this course, all samples were built using Android Studio 3.3,
and the codelabs assume you are using Android Studio 3.3 with corresponding libraries
and available features. See the
&lt;a href="https://developer.android.com/studio" rel="nofollow"&gt;Android Studio download page&lt;/a&gt; for details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/studio/install.html" rel="nofollow"&gt;Install Android Studio&lt;/a&gt;,
if you don't already have it. (If you are just starting the course, you will be guided
through this process.)&lt;/li&gt;
&lt;li&gt;Download the starter sample for the codelab.&lt;/li&gt;
&lt;li&gt;Open the sample into Android Studio.&lt;/li&gt;
&lt;li&gt;Build and run the sample. You may need to update gradle and library versions.
Follow the guidance provided by Android Studio.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright 2018 Google, Inc.&lt;/p&gt;
&lt;p&gt;All image and audio files (including *.png, *.jpg, *.svg, *.mp3, *.wav
and *.ogg) are licensed under the CC BY 4.0 license. All other files are
licensed under the Apache 2 license.&lt;/p&gt;
&lt;p&gt;Licensed to the Apache Software Foundation (ASF) under one or more contributor
license agreements.  See the LICENSE file distributed with this work for
additional information regarding copyright ownership.  The ASF licenses this
file to you under the Apache License, Version 2.0 (the "License"); you may not
use this file except in compliance with the License.  You may obtain a copy of
the License at&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
License for the specific language governing permissions and limitations under
the License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>google-developer-training</author><guid isPermaLink="false">https://github.com/google-developer-training/android-kotlin-fundamentals-apps</guid><pubDate>Thu, 30 Jan 2020 00:02:00 GMT</pubDate></item><item><title>Kotlin/kotlinx.coroutines #3 in Kotlin, Today</title><link>https://github.com/Kotlin/kotlinx.coroutines</link><description>&lt;p&gt;&lt;i&gt;Library support for Kotlin coroutines &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-kotlinxcoroutines" class="anchor" aria-hidden="true" href="#kotlinxcoroutines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;kotlinx.coroutines&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2457c980f81ed19481871fcda0c94991c01b3e49/68747470733a2f2f6a622e67672f6261646765732f6f6666696369616c2e737667" alt="official JetBrains project" data-canonical-src="https://jb.gg/badges/official.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e7da7b6b632d5ef4bce9a550a5d5cfe400ca1fe/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652532304c6963656e7365253230322e302d626c75652e7376673f7374796c653d666c6174" alt="GitHub license" data-canonical-src="https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bintray.com/kotlin/kotlinx/kotlinx.coroutines/1.3.3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/100bb71a7d486cd56523fa6a1413a319afa53e51/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6b6f746c696e2f6b6f746c696e782f6b6f746c696e782e636f726f7574696e65732f696d616765732f646f776e6c6f61642e7376673f76657273696f6e3d312e332e33" alt="Download" data-canonical-src="https://api.bintray.com/packages/kotlin/kotlinx/kotlinx.coroutines/images/download.svg?version=1.3.3" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Library support for Kotlin coroutines with &lt;a href="#multiplatform"&gt;multiplatform&lt;/a&gt; support.
This is a companion version for Kotlin &lt;code&gt;1.3.61&lt;/code&gt; release.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;suspend&lt;/span&gt; &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; coroutineScope {
    launch { 
       delay(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)
       &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Kotlin Coroutines World!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) 
    }
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Play with coroutines online &lt;a href="https://pl.kotl.in/hG_tKbid_" rel="nofollow"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-modules" class="anchor" aria-hidden="true" href="#modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modules&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="kotlinx-coroutines-core/README.md"&gt;core&lt;/a&gt; — common coroutines across all platforms:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/launch.html" rel="nofollow"&gt;launch&lt;/a&gt; and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/async.html" rel="nofollow"&gt;async&lt;/a&gt; coroutine builders returning &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/index.html" rel="nofollow"&gt;Job&lt;/a&gt; and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/index.html" rel="nofollow"&gt;Deferred&lt;/a&gt; light-weight futures with cancellation support;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/index.html" rel="nofollow"&gt;Dispatchers&lt;/a&gt; object with &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-main.html" rel="nofollow"&gt;Main&lt;/a&gt; dispatcher for Android/Swing/JavaFx, and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-default.html" rel="nofollow"&gt;Default&lt;/a&gt; dispatcher for background coroutines;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/delay.html" rel="nofollow"&gt;delay&lt;/a&gt; and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/yield.html" rel="nofollow"&gt;yield&lt;/a&gt; top-level suspending functions;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-flow/index.html" rel="nofollow"&gt;Flow&lt;/a&gt; — cold asynchronous stream with &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/flow.html" rel="nofollow"&gt;flow&lt;/a&gt; builder and comprehensive operator set (&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/filter.html" rel="nofollow"&gt;filter&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/map.html" rel="nofollow"&gt;map&lt;/a&gt;, etc);&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-channel/index.html" rel="nofollow"&gt;Channel&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.sync/-mutex/index.html" rel="nofollow"&gt;Mutex&lt;/a&gt;, and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.sync/-semaphore/index.html" rel="nofollow"&gt;Semaphore&lt;/a&gt; communication and synchronization primitives;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html" rel="nofollow"&gt;coroutineScope&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/supervisor-scope.html" rel="nofollow"&gt;supervisorScope&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/with-context.html" rel="nofollow"&gt;withContext&lt;/a&gt;, and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/with-timeout.html" rel="nofollow"&gt;withTimeout&lt;/a&gt; scope builders;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-main-scope.html" rel="nofollow"&gt;MainScope()&lt;/a&gt; for Android and UI applications;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-supervisor-job.html" rel="nofollow"&gt;SupervisorJob()&lt;/a&gt; and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-exception-handler/index.html" rel="nofollow"&gt;CoroutineExceptionHandler&lt;/a&gt; for supervision of coroutines hierarchies;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.selects/select.html" rel="nofollow"&gt;select&lt;/a&gt; expression support and more.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="kotlinx-coroutines-core/jvm/"&gt;core/jvm&lt;/a&gt; — additional core features available on Kotlin/JVM:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-i-o.html" rel="nofollow"&gt;Dispatchers.IO&lt;/a&gt; dispatcher for blocking coroutines;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/java.util.concurrent.-executor/as-coroutine-dispatcher.html" rel="nofollow"&gt;Executor.asCoroutineDispatcher&lt;/a&gt; extension, custom thread pools, and more.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="kotlinx-coroutines-core/js/"&gt;core/js&lt;/a&gt; — additional core features available on Kotlin/JS:
&lt;ul&gt;
&lt;li&gt;Integration with &lt;code&gt;Promise&lt;/code&gt; via &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/kotlin.js.-promise/await.html" rel="nofollow"&gt;Promise.await&lt;/a&gt; and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/promise.html" rel="nofollow"&gt;promise&lt;/a&gt; builder;&lt;/li&gt;
&lt;li&gt;Integration with &lt;code&gt;Window&lt;/code&gt; via &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/org.w3c.dom.-window/as-coroutine-dispatcher.html" rel="nofollow"&gt;Window.asCoroutineDispatcher&lt;/a&gt;, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="kotlinx-coroutines-test/README.md"&gt;test&lt;/a&gt; — test utilities for coroutines:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-test/kotlinx.coroutines.test/kotlinx.coroutines.-dispatchers/set-main.html" rel="nofollow"&gt;Dispatchers.setMain&lt;/a&gt; to override &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-main.html" rel="nofollow"&gt;Dispatchers.Main&lt;/a&gt; in tests;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-test/kotlinx.coroutines.test/-test-coroutine-scope/index.html" rel="nofollow"&gt;TestCoroutineScope&lt;/a&gt; to test suspending functions and coroutines.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="kotlinx-coroutines-debug/README.md"&gt;debug&lt;/a&gt; — debug utilities for coroutines:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-debug/kotlinx.coroutines.debug/-debug-probes/index.html" rel="nofollow"&gt;DebugProbes&lt;/a&gt; API to probe, keep track of, print and dump active coroutines;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-debug/kotlinx.coroutines.debug.junit4/-coroutines-timeout/index.html" rel="nofollow"&gt;CoroutinesTimeout&lt;/a&gt; test rule to automatically dump coroutines on test timeout.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="reactive/README.md"&gt;reactive&lt;/a&gt; — modules that provide builders and iteration support for various reactive streams libraries:
&lt;ul&gt;
&lt;li&gt;Reactive Streams (&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-reactive/kotlinx.coroutines.reactive/org.reactivestreams.-publisher/collect.html" rel="nofollow"&gt;Publisher.collect&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-reactive/kotlinx.coroutines.reactive/org.reactivestreams.-publisher/await-single.html" rel="nofollow"&gt;Publisher.awaitSingle&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-reactive/kotlinx.coroutines.reactive/publish.html" rel="nofollow"&gt;publish&lt;/a&gt;, etc),
RxJava 2.x (&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-rx2/kotlinx.coroutines.rx2/rx-flowable.html" rel="nofollow"&gt;rxFlowable&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-rx2/kotlinx.coroutines.rx2/rx-single.html" rel="nofollow"&gt;rxSingle&lt;/a&gt;, etc), and
Project Reactor (&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-reactor/kotlinx.coroutines.reactor/flux.html" rel="nofollow"&gt;flux&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-reactor/kotlinx.coroutines.reactor/mono.html" rel="nofollow"&gt;mono&lt;/a&gt;, etc).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="ui/README.md"&gt;ui&lt;/a&gt; — modules that provide coroutine dispatchers for various single-threaded UI libraries:
&lt;ul&gt;
&lt;li&gt;Android, JavaFX, and Swing.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="integration/README.md"&gt;integration&lt;/a&gt; — modules that provide integration with various asynchronous callback- and future-based libraries:
&lt;ul&gt;
&lt;li&gt;JDK8 &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-jdk8/kotlinx.coroutines.future/java.util.concurrent.-completion-stage/await.html" rel="nofollow"&gt;CompletionStage.await&lt;/a&gt;, Guava &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-guava/kotlinx.coroutines.guava/com.google.common.util.concurrent.-listenable-future/await.html" rel="nofollow"&gt;ListenableFuture.await&lt;/a&gt;, and Google Play Services [Task.await];&lt;/li&gt;
&lt;li&gt;SLF4J MDC integration via &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-slf4j/kotlinx.coroutines.slf4j/-m-d-c-context/index.html" rel="nofollow"&gt;MDCContext&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Presentations and videos:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_hfBv0a09Jc" rel="nofollow"&gt;Introduction to Coroutines&lt;/a&gt; (Roman Elizarov at KotlinConf 2017, &lt;a href="https://www.slideshare.net/elizarov/introduction-to-coroutines-kotlinconf-2017" rel="nofollow"&gt;slides&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=YrrUCSi72E8" rel="nofollow"&gt;Deep dive into Coroutines&lt;/a&gt; (Roman Elizarov at KotlinConf 2017, &lt;a href="https://www.slideshare.net/elizarov/deep-dive-into-coroutines-on-jvm-kotlinconf-2017" rel="nofollow"&gt;slides&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=a3agLJQ6vt8" rel="nofollow"&gt;Kotlin Coroutines in Practice&lt;/a&gt; (Roman Elizarov at KotlinConf 2018, &lt;a href="https://www.slideshare.net/elizarov/kotlin-coroutines-in-practice-kotlinconf-2018" rel="nofollow"&gt;slides&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Guides and manuals:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.org/docs/reference/coroutines/coroutines-guide.html" rel="nofollow"&gt;Guide to kotlinx.coroutines by example&lt;/a&gt; (&lt;strong&gt;read it first&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="ui/coroutines-guide-ui.md"&gt;Guide to UI programming with coroutines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/debugging.md"&gt;Debugging capabilities in kotlinx.coroutines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/compatibility.md"&gt;Compatibility policy and experimental annotations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="CHANGES.md"&gt;Change log for kotlinx.coroutines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kotlin/KEEP/blob/master/proposals/coroutines.md"&gt;Coroutines design document (KEEP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines" rel="nofollow"&gt;Full kotlinx.coroutines API reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-using-in-your-projects" class="anchor" aria-hidden="true" href="#using-in-your-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using in your projects&lt;/h2&gt;
&lt;p&gt;The libraries are published to &lt;a href="https://bintray.com/kotlin/kotlinx/kotlinx.coroutines" rel="nofollow"&gt;kotlinx&lt;/a&gt; bintray repository,
linked to &lt;a href="https://bintray.com/bintray/jcenter?filterByPkgName=kotlinx.coroutines" rel="nofollow"&gt;JCenter&lt;/a&gt; and
pushed to &lt;a href="https://search.maven.org/#search%7Cga%7C1%7Cg%3Aorg.jetbrains.kotlinx%20a%3Akotlinx-coroutines*" rel="nofollow"&gt;Maven Central&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-maven" class="anchor" aria-hidden="true" href="#maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven&lt;/h3&gt;
&lt;p&gt;Add dependencies (you can also add other modules that you need):&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.jetbrains.kotlinx&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;kotlinx-coroutines-core&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;1.3.3&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And make sure that you use the latest Kotlin version:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;properties&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;kotlin&lt;/span&gt;.version&amp;gt;1.3.61&amp;lt;/&lt;span class="pl-ent"&gt;kotlin&lt;/span&gt;.version&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;properties&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-gradle" class="anchor" aria-hidden="true" href="#gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle&lt;/h3&gt;
&lt;p&gt;Add dependencies (you can also add other modules that you need):&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;dependencies {
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And make sure that you use the latest Kotlin version:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;buildscript {
    ext&lt;span class="pl-k"&gt;.&lt;/span&gt;kotlin_version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1.3.61&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make sure that you have either &lt;code&gt;jcenter()&lt;/code&gt; or &lt;code&gt;mavenCentral()&lt;/code&gt; in the list of repositories:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;repository {
    jcenter()
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-gradle-kotlin-dsl" class="anchor" aria-hidden="true" href="#gradle-kotlin-dsl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle Kotlin DSL&lt;/h3&gt;
&lt;p&gt;Add dependencies (you can also add other modules that you need):&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;dependencies {
    implementation(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And make sure that you use the latest Kotlin version:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;plugins {
    kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jvm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.3.61&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make sure that you have either &lt;code&gt;jcenter()&lt;/code&gt; or &lt;code&gt;mavenCentral()&lt;/code&gt; in the list of repositories.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-multiplatform" class="anchor" aria-hidden="true" href="#multiplatform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiplatform&lt;/h3&gt;
&lt;p&gt;Core modules of &lt;code&gt;kotlinx.coroutines&lt;/code&gt; are also available for
&lt;a href="#js"&gt;Kotlin/JS&lt;/a&gt; and &lt;a href="#native"&gt;Kotlin/Native&lt;/a&gt;.
In common code that should get compiled for different platforms, add dependency to&lt;br&gt;
&lt;a href="https://search.maven.org/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-core-common/1.3.3/jar" rel="nofollow"&gt;&lt;code&gt;kotlinx-coroutines-core-common&lt;/code&gt;&lt;/a&gt;
(follow the link to get the dependency declaration snippet).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-android" class="anchor" aria-hidden="true" href="#android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android&lt;/h3&gt;
&lt;p&gt;Add &lt;a href="ui/kotlinx-coroutines-android"&gt;&lt;code&gt;kotlinx-coroutines-android&lt;/code&gt;&lt;/a&gt;
module as dependency when using &lt;code&gt;kotlinx.coroutines&lt;/code&gt; on Android:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This gives you access to Android &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-main.html" rel="nofollow"&gt;Dispatchers.Main&lt;/a&gt;
coroutine dispatcher and also makes sure that in case of crashed coroutine with unhandled exception this
exception is logged before crashing Android application, similarly to the way uncaught exceptions in
threads are handled by Android runtime.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-r8-and-proguard" class="anchor" aria-hidden="true" href="#r8-and-proguard"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;R8 and ProGuard&lt;/h4&gt;
&lt;p&gt;For R8 no actions required, it will take obfuscation rules from the jar.&lt;/p&gt;
&lt;p&gt;For Proguard  you need to add options from &lt;a href="kotlinx-coroutines-core/jvm/resources/META-INF/proguard/coroutines.pro"&gt;coroutines.pro&lt;/a&gt; to your rules manually.&lt;/p&gt;
&lt;p&gt;R8 is a replacement for ProGuard in Android ecosystem, it is enabled by default since Android gradle plugin 3.4.0 (3.3.0-beta also had it enabled).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-js" class="anchor" aria-hidden="true" href="#js"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JS&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://kotlinlang.org/docs/reference/js-overview.html" rel="nofollow"&gt;Kotlin/JS&lt;/a&gt; version of &lt;code&gt;kotlinx.coroutines&lt;/code&gt; is published as
&lt;a href="https://search.maven.org/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-core-js/1.3.3/jar" rel="nofollow"&gt;&lt;code&gt;kotlinx-coroutines-core-js&lt;/code&gt;&lt;/a&gt;
(follow the link to get the dependency declaration snippet).&lt;/p&gt;
&lt;p&gt;You can also use &lt;a href="https://www.npmjs.com/package/kotlinx-coroutines-core" rel="nofollow"&gt;&lt;code&gt;kotlinx-coroutines-core&lt;/code&gt;&lt;/a&gt; package via NPM.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-native" class="anchor" aria-hidden="true" href="#native"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Native&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://kotlinlang.org/docs/reference/native-overview.html" rel="nofollow"&gt;Kotlin/Native&lt;/a&gt; version of &lt;code&gt;kotlinx.coroutines&lt;/code&gt; is published as
&lt;a href="https://search.maven.org/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-core-native/1.3.3/jar" rel="nofollow"&gt;&lt;code&gt;kotlinx-coroutines-core-native&lt;/code&gt;&lt;/a&gt;
(follow the link to get the dependency declaration snippet).&lt;/p&gt;
&lt;p&gt;Only single-threaded code (JS-style) on Kotlin/Native is currently supported.
Kotlin/Native supports only Gradle version 4.10 and you need to enable Gradle metadata in your
&lt;code&gt;settings.gradle&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;enableFeaturePreview(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GRADLE_METADATA&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since Kotlin/Native does not generally provide binary compatibility between versions,
you should use the same version of Kotlin/Native compiler as was used to build &lt;code&gt;kotlinx.coroutines&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;This library is built with Gradle. To build it, use &lt;code&gt;./gradlew build&lt;/code&gt;.
You can import this project into IDEA, but you have to delegate build actions
to Gradle (in Preferences -&amp;gt; Build, Execution, Deployment -&amp;gt; Build Tools -&amp;gt; Gradle -&amp;gt; Runner)&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;JDK &amp;gt;= 1.8 referred to by the &lt;code&gt;JAVA_HOME&lt;/code&gt; environment variable. JDK must include JavaFX.&lt;/li&gt;
&lt;li&gt;JDK 1.6 referred to by the &lt;code&gt;JDK_16&lt;/code&gt; environment variable. It is okay to have &lt;code&gt;JDK_16&lt;/code&gt; pointing to &lt;code&gt;JAVA_HOME&lt;/code&gt; for external contributions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributions-and-releases" class="anchor" aria-hidden="true" href="#contributions-and-releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions and releases&lt;/h2&gt;
&lt;p&gt;All development (both new features and bug fixes) is performed in &lt;code&gt;develop&lt;/code&gt; branch.
This way &lt;code&gt;master&lt;/code&gt; sources always contain sources of the most recently released version.
Please send PRs with bug fixes to &lt;code&gt;develop&lt;/code&gt; branch.
Fixes to documentation in markdown files are an exception to this rule. They are updated directly in &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;develop&lt;/code&gt; branch is pushed to &lt;code&gt;master&lt;/code&gt; during release.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Full release procedure checklist is &lt;a href="RELEASE.md"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Steps for contributing new integration modules are explained &lt;a href="integration/README.md#Contributing"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


























&lt;/article&gt;&lt;/div&gt;</description><author>Kotlin</author><guid isPermaLink="false">https://github.com/Kotlin/kotlinx.coroutines</guid><pubDate>Thu, 30 Jan 2020 00:03:00 GMT</pubDate></item><item><title>orgzly/orgzly-android #4 in Kotlin, Today</title><link>https://github.com/orgzly/orgzly-android</link><description>&lt;p&gt;&lt;i&gt;Outliner for taking notes and managing to-do lists&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="org" data-path="README.org"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;a title="Crowdin" href="https://crowdin.com/project/orgzly" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8b96b4986ce9706022b50d60a6d71c262f1944a6/68747470733a2f2f64333232637174353834626f346f2e636c6f756466726f6e742e6e65742f6f72677a6c792f6c6f63616c697a65642e737667" data-canonical-src="https://d322cqt584bo4o.cloudfront.net/orgzly/localized.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;h1&gt;&lt;a id="user-content-orgzly" class="anchor" aria-hidden="true" href="#orgzly"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Orgzly&lt;/h1&gt;
&lt;p&gt;Orgzly is an outliner for taking notes and managing to-do lists.&lt;/p&gt;
&lt;p&gt;You can keep notebooks stored in plain-text and have them synchronized
  with a directory on your mobile device, SD card or Dropbox.&lt;/p&gt;
&lt;p&gt;Notebooks are saved in &lt;i&gt;Org mode&lt;/i&gt;’s file format. “Org mode is for
  keeping notes, maintaining TODO lists, planning projects, and
  authoring documents with a fast and effective plain-text system.” See
  &lt;a href="http://orgmode.org" rel="nofollow"&gt;http://orgmode.org&lt;/a&gt; for more information.&lt;/p&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.orgzly" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/59c5c810fc8363f8488c3a36fc78f89990d13e99/68747470733a2f2f706c61792e676f6f676c652e636f6d2f696e746c2f656e5f75732f6261646765732f696d616765732f67656e657269632f656e5f62616467655f7765625f67656e657269632e706e67" alt="Get it on Google Play" height="70" data-canonical-src="https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://f-droid.org/app/com.orgzly" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/f9574a79e3fe61202392c44e55f0bdab261a9561/68747470733a2f2f662d64726f69642e6f72672f62616467652f6765742d69742d6f6e2e706e67" alt="Get it on F-Droid" height="70" data-canonical-src="https://f-droid.org/badge/get-it-on.png" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Find out more here: &lt;a href="https://github.com/orgzly/documentation"&gt;https://github.com/orgzly/documentation&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building--testing" class="anchor" aria-hidden="true" href="#building--testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building &amp;amp; testing&lt;/h2&gt;
&lt;p&gt;If you don’t use Android Studio and wish to &lt;a href="https://developer.android.com/studio/build/building-cmdline.html" rel="nofollow"&gt;build&lt;/a&gt; and &lt;a href="https://developer.android.com/studio/test/command-line.html" rel="nofollow"&gt;test&lt;/a&gt; the app
  from command line, the standard set of Gradle tasks is available.  For
  example:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;./gradlew build&lt;/code&gt; builds the project and generates APK files&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;./gradlew connectedAndroidTest&lt;/code&gt; runs instrumented unit tests&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Make sure you &lt;a href="https://developer.android.com/training/testing/espresso/setup" rel="nofollow"&gt;turn off animations&lt;/a&gt; for the device you’re testing on.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;The project is licensed under the &lt;a href="https://github.com/orgzly/orgzly-android/blob/master/LICENSE"&gt;GNU General Public License version 3 (or newer)&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>orgzly</author><guid isPermaLink="false">https://github.com/orgzly/orgzly-android</guid><pubDate>Thu, 30 Jan 2020 00:04:00 GMT</pubDate></item><item><title>Kotlin/dokka #5 in Kotlin, Today</title><link>https://github.com/Kotlin/dokka</link><description>&lt;p&gt;&lt;i&gt;Documentation Engine for Kotlin&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-dokka----" class="anchor" aria-hidden="true" href="#dokka----"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;dokka  &lt;a href="https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2457c980f81ed19481871fcda0c94991c01b3e49/68747470733a2f2f6a622e67672f6261646765732f6f6666696369616c2e737667" alt="official JetBrains project" data-canonical-src="https://jb.gg/badges/official.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://teamcity.jetbrains.com/viewType.html?buildTypeId=Kotlin_Dokka_DokkaAntMavenGradle&amp;amp;branch_KotlinTools_Dokka=%3Cdefault%3E&amp;amp;tab=buildTypeStatusDiv" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0ca8ddde6c18ff5a4f4653b879eef572de651605/68747470733a2f2f7465616d636974792e6a6574627261696e732e636f6d2f6170702f726573742f6275696c64732f6275696c64547970653a2869643a4b6f746c696e5f446f6b6b615f446f6b6b61416e744d6176656e477261646c65292f73746174757349636f6e" alt="TeamCity (build status)" data-canonical-src="https://teamcity.jetbrains.com/app/rest/builds/buildType:(id:Kotlin_Dokka_DokkaAntMavenGradle)/statusIcon" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://bintray.com/kotlin/dokka/dokka/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c30aecf3cfe47703a0797b8a2582544b1986a5c1/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6b6f746c696e2f646f6b6b612f646f6b6b612f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/kotlin/dokka/dokka/images/download.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Dokka is a documentation engine for Kotlin, performing the same function as javadoc for Java.
Just like Kotlin itself, Dokka fully supports mixed-language Java/Kotlin projects. It understands
standard Javadoc comments in Java files and &lt;a href="https://kotlinlang.org/docs/reference/kotlin-doc.html" rel="nofollow"&gt;KDoc comments&lt;/a&gt; in Kotlin files,
and can generate documentation in multiple formats including standard Javadoc, HTML and Markdown.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-dokka" class="anchor" aria-hidden="true" href="#using-dokka"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using dokka&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-using-the-gradle-plugin" class="anchor" aria-hidden="true" href="#using-the-gradle-plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the Gradle plugin&lt;/h3&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.dokka:dokka-gradle-plugin:&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;dokka_version&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}
repositories {
    jcenter() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or maven { url 'https://dl.bintray.com/kotlin/dokka' }&lt;/span&gt;
}

apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.dokka&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or using the plugins block:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;plugins {
    id &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.dokka&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;0.10.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}
repositories {
    jcenter() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or maven { url 'https://dl.bintray.com/kotlin/dokka' }&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The plugin adds a task named &lt;code&gt;dokka&lt;/code&gt; to the project.&lt;/p&gt;
&lt;p&gt;If you encounter any problems when migrating from older versions of Dokka, please see the &lt;a href="https://github.com/Kotlin/dokka/wiki/faq"&gt;FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Minimal dokka configuration:&lt;/p&gt;
&lt;p&gt;Groovy&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;dokka {
    outputFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;html&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; 
    outputDirectory &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$b&lt;span class="pl-smi"&gt;uildDir&lt;/span&gt;&lt;/span&gt;/dokka&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Kotlin&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;tasks {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; dokka by getting(&lt;span class="pl-smi"&gt;DokkaTask&lt;/span&gt;::&lt;span class="pl-c1"&gt;class&lt;/span&gt;) {
        outputFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        outputDirectory &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$buildDir/dokka&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#output_formats"&gt;Output formats&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The available configuration options for single platform are shown below:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;dokka {
    outputFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;html&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    outputDirectory &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$b&lt;span class="pl-smi"&gt;uildDir&lt;/span&gt;&lt;/span&gt;/javadoc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; In case of a Gradle multiproject build, you can include subprojects here to get merged documentation&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Note however, that you have to have the Kotlin plugin available in the root project and in the subprojects&lt;/span&gt;
    subProjects &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;subproject1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;subproject2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Used for disabling auto extraction of sources and platforms in both multi-platform and single-platform modes&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; When set to true, subProject and kotlinTasks are also omitted&lt;/span&gt;
    disableAutoconfiguration &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; 

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Use default or set to custom path to cache directory&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; to enable package-list caching&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; When this is set to default, caches are stored in $USER_HOME/.cache/dokka&lt;/span&gt;
    cacheRoot &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;default&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; 
    
    configuration {
        moduleName &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;data&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Use to include or exclude non public members.&lt;/span&gt;
        includeNonPublic &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do not output deprecated members. Applies globally, can be overridden by packageOptions&lt;/span&gt;
        skipDeprecated &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; 
       
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Emit warnings about not documented members. Applies globally, also can be overridden by packageOptions&lt;/span&gt;
        reportUndocumented &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; 
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do not create index pages for empty packages&lt;/span&gt;
        skipEmptyPackages &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; 
     
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This is a list of platform names that will be shown in the final result. See the "Platforms" section of this readme&lt;/span&gt;
        targets &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;JVM&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]  

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Platform used for code analysis. See the "Platforms" section of this readme&lt;/span&gt;
        platform &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;JVM&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;  
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Property used for manual addition of files to the classpath&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This property does not override the classpath collected automatically but appends to it&lt;/span&gt;
        classpath &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;File&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$b&lt;span class="pl-smi"&gt;uildDir&lt;/span&gt;&lt;/span&gt;/other.jar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
    
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; By default, sourceRoots are taken from Kotlin Plugin, subProjects and kotlinTasks, following roots will be appended to them&lt;/span&gt;
        sourceRoots &lt;span class="pl-k"&gt;=&lt;/span&gt; [files(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;src/main/kotlin&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)]
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; List of files with module and package documentation&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; https://kotlinlang.org/docs/reference/kotlin-doc.html#module-and-package-documentation&lt;/span&gt;
        includes &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;packages.md&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;extra.md&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
    
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; List of files or directories containing sample code (referenced with @sample tags)&lt;/span&gt;
        samples &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;samples/basic.kt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;samples/advanced.kt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; By default, sourceRoots are taken from Kotlin Plugin, subProjects and kotlinTasks, following roots will be appended to them&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Full form sourceRoot declaration&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Repeat for multiple sourceRoots&lt;/span&gt;
        sourceRoot {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Path to a source root&lt;/span&gt;
            path &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; 
        }
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; These tasks will be used to determine source directories and classpath&lt;/span&gt;
        kotlinTasks {
            defaultKotlinTasks() &lt;span class="pl-k"&gt;+&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:some:otherCompileKotlin&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, project(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;another&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;compileKotlin]
        }

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Specifies the location of the project source code on the Web.&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If provided, Dokka generates "source" links for each declaration.&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Repeat for multiple mappings&lt;/span&gt;
        sourceLink {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Unix based directory relative path to the root of the project (where you execute gradle respectively). &lt;/span&gt;
            path &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/main/kotlin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or simply "./"&lt;/span&gt;
             
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; URL showing where the source code can be accessed through the web browser&lt;/span&gt;
            url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/cy6erGn0m/vertx3-lang-kotlin/blob/master/src/main/kotlin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;remove src/main/kotlin if you use "./" above&lt;/span&gt;
            
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Suffix which is used to append the line number to the URL. Use #L for GitHub&lt;/span&gt;
            lineSuffix &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#L&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Used for linking to JDK documentation&lt;/span&gt;
        jdkVersion &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt; 

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Disable linking to online kotlin-stdlib documentation&lt;/span&gt;
        noStdlibLink &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Disable linking to online JDK documentation&lt;/span&gt;
        noJdkLink &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; 
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Allows linking to documentation of the project's dependencies (generated with Javadoc or Dokka)&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Repeat for multiple links&lt;/span&gt;
        externalDocumentationLink {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Root URL of the generated documentation to link with. The trailing slash is required!&lt;/span&gt;
            url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;URL&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://example.com/docs/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If package-list file is located in non-standard location&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; packageListUrl = new URL("file:///home/user/localdocs/package-list") &lt;/span&gt;
        }
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Allows to customize documentation generation options on a per-package basis&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Repeat for multiple packageOptions&lt;/span&gt;
        perPackageOption {
            prefix &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kotlin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; will match kotlin and all sub-packages of it&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; All options are optional, default values are below:&lt;/span&gt;
            skipDeprecated &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
            reportUndocumented &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Emit warnings about not documented members &lt;/span&gt;
            includeNonPublic &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        }
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Suppress a package&lt;/span&gt;
        perPackageOption {
            prefix &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kotlin.internal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; will match kotlin.internal and all sub-packages of it&lt;/span&gt;
            suppress &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-multiplatform" class="anchor" aria-hidden="true" href="#multiplatform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiplatform&lt;/h4&gt;
&lt;p&gt;Since version 0.10.0 dokka supports multiplatform projects. For a general understanding how a multiplatform documentation is generated, please consult the &lt;a href="https://github.com/Kotlin/dokka/wiki/faq"&gt;FAQ&lt;/a&gt;.
In the multiplatform mode, instead of using the &lt;code&gt;configuration&lt;/code&gt; block, you should use a &lt;code&gt;multiplatform&lt;/code&gt; block with inner blocks for each platform.
The &lt;code&gt;configuration&lt;/code&gt; block's parameters belong to those inner blocks, which can be named arbitrarly, however if you want to use source roots and classpath provided by Kotlin Multiplatform plugin,
they must have the same names as in the Kotlin Multiplatform plugin. See an example below:&lt;/p&gt;
&lt;p&gt;Groovy&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;kotlin { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Kotlin Multiplatform plugin configuration&lt;/span&gt;
    jvm() 
    js(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;customName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Define a js platform named "customName" If you want to generate docs for it, you need to have this name in dokka configuration below &lt;/span&gt;
}

dokka {
    outputDirectory &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$b&lt;span class="pl-smi"&gt;uildDir&lt;/span&gt;&lt;/span&gt;/dokka&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    outputFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

    multiplatform {
        customName { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The same name as in Kotlin Multiplatform plugin, so the sources are fetched automatically&lt;/span&gt;
            includes &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;packages.md&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;extra.md&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
            samples &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;samples/basic.kt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;samples/advanced.kt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
        } 
        
        differentName { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Different name, so source roots, classpath and platform must be passed explicitly.&lt;/span&gt;
            targets &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;JVM&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
            platform &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jvm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            sourceRoot {
                path &lt;span class="pl-k"&gt;=&lt;/span&gt; kotlin&lt;span class="pl-k"&gt;.&lt;/span&gt;sourceSets&lt;span class="pl-k"&gt;.&lt;/span&gt;jvmMain&lt;span class="pl-k"&gt;.&lt;/span&gt;kotlin&lt;span class="pl-k"&gt;.&lt;/span&gt;srcDirs[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
            }
            sourceRoot {
                path &lt;span class="pl-k"&gt;=&lt;/span&gt; kotlin&lt;span class="pl-k"&gt;.&lt;/span&gt;sourceSets&lt;span class="pl-k"&gt;.&lt;/span&gt;commonMain&lt;span class="pl-k"&gt;.&lt;/span&gt;kotlin&lt;span class="pl-k"&gt;.&lt;/span&gt;srcDirs[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
            }
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Kotlin&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;kotlin {  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Kotlin Multiplatform plugin configuration&lt;/span&gt;
    jvm()
    js(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;customName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; dokka by getting(&lt;span class="pl-smi"&gt;DokkaTask&lt;/span&gt;::&lt;span class="pl-c1"&gt;class&lt;/span&gt;) {
        outputDirectory &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$buildDir/dokka&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        outputFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

        multiplatform { 
            &lt;span class="pl-k"&gt;val&lt;/span&gt; customName by creating { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The same name as in Kotlin Multiplatform plugin, so the sources are fetched automatically&lt;/span&gt;
                includes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;listOf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;packages.md&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;extra.md&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                samples &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;listOf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;samples/basic.kt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;samples/advanced.kt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            }

            register(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;differentName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Different name, so source roots must be passed explicitly&lt;/span&gt;
                targets &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;listOf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;JVM&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                platform &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jvm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                sourceRoot {
                    path &lt;span class="pl-k"&gt;=&lt;/span&gt; kotlin.sourceSets.getByName(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jvmMain&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).kotlin.srcDirs.first().toString()
                }
                sourceRoot {
                    path &lt;span class="pl-k"&gt;=&lt;/span&gt; kotlin.sourceSets.getByName(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;commonMain&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).kotlin.srcDirs.first().toString()
                }
            }
        }
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For convenience, there is also a reserved block called &lt;code&gt;global&lt;/code&gt;, which is a top-level configuration of &lt;code&gt;perPackageOptions&lt;/code&gt;, &lt;code&gt;externalDocumentationLinks&lt;/code&gt;, and &lt;code&gt;sourceLinks&lt;/code&gt; shared by every platform. Eg.&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;dokka {
    multiplatform {
        global { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; perPackageOptions, sourceLinks and externalDocumentationLinks from here will be copied to every other platform (jvm and js in eg.)&lt;/span&gt;
            perPackageOption {
                prefix &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.somePackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                suppress &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
            }
            perPackageOption { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You can repeat this block for multiple perPackageOptions&lt;/span&gt;
                prefix &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kotlin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; 
                skipDeprecated &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
                reportUndocumented &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
                includeNonPublic &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
            }
            sourceLink {
                path &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/main/kotlin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; 
                url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/cy6erGn0m/vertx3-lang-kotlin/blob/master/src/main/kotlin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; 
                lineSuffix &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#L&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            }
            externalDocumentationLink {
                url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;URL&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://example.com/docs/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            }
       }
       js {}
       jvm {}
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The parameters from the &lt;code&gt;global&lt;/code&gt; block are appended to all the other platform configurations (in the example - &lt;code&gt;js&lt;/code&gt; and &lt;code&gt;jvm&lt;/code&gt;) and cannot be overriden.&lt;/p&gt;
&lt;p&gt;Note that &lt;code&gt;javadoc&lt;/code&gt; output format cannot be used with multiplatform.&lt;/p&gt;
&lt;p&gt;To generate the documentation, use the &lt;code&gt;dokka&lt;/code&gt; Gradle task:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./gradlew dokka&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;More dokka tasks can be added to a project like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;task dokkaMarkdown(&lt;span class="pl-c1"&gt;type&lt;/span&gt;: &lt;span class="pl-k"&gt;org.jetbrains.dokka.gradle.DokkaTask&lt;/span&gt;) {
    outputFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;markdown&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    outputDirectory &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$b&lt;span class="pl-smi"&gt;uildDir&lt;/span&gt;&lt;/span&gt;/markdown&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please see the &lt;a href="https://github.com/JetBrains/kotlin-examples/tree/master/gradle/dokka-gradle-example"&gt;Dokka Gradle example project&lt;/a&gt; for an example.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-dokka-runtime" class="anchor" aria-hidden="true" href="#dokka-runtime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dokka Runtime&lt;/h4&gt;
&lt;p&gt;If you are using Gradle plugin and you want to use a custom version of dokka, you can do it by setting &lt;code&gt;dokkaRuntime&lt;/code&gt; configuration:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;buildscript {
    &lt;span class="pl-k"&gt;..&lt;/span&gt;.
}

apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.dokka&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

repositories {
    jcenter()
}

dependencies {
    dokkaRuntime &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.dokka:dokka-fatjar:0.10.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}

dokka {
    outputFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;html&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    outputDirectory &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$b&lt;span class="pl-smi"&gt;uildDir&lt;/span&gt;&lt;/span&gt;/dokkaHtml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To use your Fat Jar, just set the path to it:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;buildscript {
    &lt;span class="pl-k"&gt;..&lt;/span&gt;.
}

apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.dokka&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

repositories {
    jcenter()
}

dependencies {
    dokkaRuntime files(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/fatjar/dokka-fatjar-0.10.0.jar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

dokka {
    outputFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;html&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    outputDirectory &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$b&lt;span class="pl-smi"&gt;uildDir&lt;/span&gt;&lt;/span&gt;/dokkaHtml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h4&gt;
&lt;p&gt;If you encounter any problems, please see the &lt;a href="https://github.com/Kotlin/dokka/wiki/faq"&gt;FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-android" class="anchor" aria-hidden="true" href="#android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android&lt;/h4&gt;
&lt;p&gt;Since version 0.10.0 the separate Android plugin is merged with the default one.
Just make sure you apply the plugin after
&lt;code&gt;com.android.library&lt;/code&gt; and &lt;code&gt;kotlin-android&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.dokka:dokka-gradle-plugin:&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;dokka_version&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}
repositories {
    jcenter()
}
apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.android.library&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;kotlin-android&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.dokka&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is also a &lt;code&gt;noAndroidSdkLink&lt;/code&gt; configuration parameter that works similar to &lt;code&gt;noJdkLink&lt;/code&gt; and &lt;code&gt;noStdlibLink&lt;/code&gt;
By default the variant documented by dokka is the first release variant encountered. If you want to change that,
you can disable the autoconfiguration and configure dokka manually.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-the-maven-plugin" class="anchor" aria-hidden="true" href="#using-the-maven-plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the Maven plugin&lt;/h3&gt;
&lt;p&gt;The Maven plugin does not support multiplatform projects.&lt;/p&gt;
&lt;p&gt;The Maven plugin is available in JCenter. You need to add the JCenter repository to the list of plugin repositories if it's not there:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;pluginRepositories&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;pluginRepository&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;jcenter&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;name&lt;/span&gt;&amp;gt;JCenter&amp;lt;/&lt;span class="pl-ent"&gt;name&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;https://jcenter.bintray.com/&amp;lt;/&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;pluginRepository&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;pluginRepositories&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Minimal Maven configuration is&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.jetbrains.dokka&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;dokka-maven-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${dokka.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;pre-site&amp;lt;/&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;dokka&amp;lt;/&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default files will be generated in &lt;code&gt;target/dokka&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The following goals are provided by the plugin:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dokka:dokka&lt;/code&gt; - generate HTML documentation in Dokka format (showing declarations in Kotlin syntax);&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dokka:javadoc&lt;/code&gt; - generate HTML documentation in JavaDoc format (showing declarations in Java syntax);&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dokka:javadocJar&lt;/code&gt; - generate a .jar file with JavaDoc format documentation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The available configuration options are shown below:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.jetbrains.dokka&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;dokka-maven-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${dokka.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;pre-site&amp;lt;/&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;dokka&amp;lt;/&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
    
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Set to true to skip dokka task, default: false &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;skip&lt;/span&gt;&amp;gt;false&amp;lt;/&lt;span class="pl-ent"&gt;skip&lt;/span&gt;&amp;gt;
    
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Default: ${project.artifactId} &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;moduleName&lt;/span&gt;&amp;gt;data&amp;lt;/&lt;span class="pl-ent"&gt;moduleName&lt;/span&gt;&amp;gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; See list of possible formats below &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;outputFormat&lt;/span&gt;&amp;gt;html&amp;lt;/&lt;span class="pl-ent"&gt;outputFormat&lt;/span&gt;&amp;gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Default: ${project.basedir}/target/dokka &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;outputDir&lt;/span&gt;&amp;gt;some/out/dir&amp;lt;/&lt;span class="pl-ent"&gt;outputDir&lt;/span&gt;&amp;gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Use default or set to custom path to cache directory to enable package-list caching. &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; When set to default, caches stored in $USER_HOME/.cache/dokka &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;cacheRoot&lt;/span&gt;&amp;gt;default&amp;lt;/&lt;span class="pl-ent"&gt;cacheRoot&lt;/span&gt;&amp;gt;

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; List of '.md' files with package and module docs &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; https://kotlinlang.org/docs/reference/kotlin-doc.html#module-and-package-documentation &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;includes&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;include&lt;/span&gt;&amp;gt;packages.md&amp;lt;/&lt;span class="pl-ent"&gt;include&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;include&lt;/span&gt;&amp;gt;extra.md&amp;lt;/&lt;span class="pl-ent"&gt;include&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;includes&lt;/span&gt;&amp;gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; List of sample roots &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;samples&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;dir&lt;/span&gt;&amp;gt;src/test/samples&amp;lt;/&lt;span class="pl-ent"&gt;dir&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;samples&lt;/span&gt;&amp;gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Used for linking to JDK, default: 6 &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;jdkVersion&lt;/span&gt;&amp;gt;6&amp;lt;/&lt;span class="pl-ent"&gt;jdkVersion&lt;/span&gt;&amp;gt;

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Do not output deprecated members, applies globally, can be overridden by packageOptions &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;skipDeprecated&lt;/span&gt;&amp;gt;false&amp;lt;/&lt;span class="pl-ent"&gt;skipDeprecated&lt;/span&gt;&amp;gt; 
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Emit warnings about not documented members, applies globally, also can be overridden by packageOptions &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;reportUndocumented&lt;/span&gt;&amp;gt;true&amp;lt;/&lt;span class="pl-ent"&gt;reportUndocumented&lt;/span&gt;&amp;gt;             
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Do not create index pages for empty packages &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;skipEmptyPackages&lt;/span&gt;&amp;gt;true&amp;lt;/&lt;span class="pl-ent"&gt;skipEmptyPackages&lt;/span&gt;&amp;gt; 
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Short form list of sourceRoots, by default, set to ${project.compileSourceRoots} &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;sourceDirectories&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;dir&lt;/span&gt;&amp;gt;src/main/kotlin&amp;lt;/&lt;span class="pl-ent"&gt;dir&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;sourceDirectories&lt;/span&gt;&amp;gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Full form list of sourceRoots &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;sourceRoots&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;root&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;path&lt;/span&gt;&amp;gt;src/main/kotlin&amp;lt;/&lt;span class="pl-ent"&gt;path&lt;/span&gt;&amp;gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; See platforms section of documentation &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &amp;lt;&lt;span class="pl-ent"&gt;platforms&lt;/span&gt;&amp;gt;JVM&amp;lt;/&lt;span class="pl-ent"&gt;platforms&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;root&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;sourceRoots&lt;/span&gt;&amp;gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Specifies the location of the project source code on the Web. If provided, Dokka generates "source" links&lt;/span&gt;
&lt;span class="pl-c"&gt;             for each declaration. &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;sourceLinks&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;link&lt;/span&gt;&amp;gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Source directory &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &amp;lt;&lt;span class="pl-ent"&gt;path&lt;/span&gt;&amp;gt;${project.basedir}/src/main/kotlin&amp;lt;/&lt;span class="pl-ent"&gt;path&lt;/span&gt;&amp;gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; URL showing where the source code can be accessed through the web browser &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &amp;lt;&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;https://github.com/cy6erGn0m/vertx3-lang-kotlin/blob/master/src/main/kotlin&amp;lt;/&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; //remove src/main/kotlin if you use "./" above &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt;Suffix which is used to append the line number to the URL. Use #L for GitHub &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &amp;lt;&lt;span class="pl-ent"&gt;lineSuffix&lt;/span&gt;&amp;gt;#L&amp;lt;/&lt;span class="pl-ent"&gt;lineSuffix&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;link&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;sourceLinks&lt;/span&gt;&amp;gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Disable linking to online kotlin-stdlib documentation  &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;noStdlibLink&lt;/span&gt;&amp;gt;false&amp;lt;/&lt;span class="pl-ent"&gt;noStdlibLink&lt;/span&gt;&amp;gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Disable linking to online JDK documentation &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;noJdkLink&lt;/span&gt;&amp;gt;false&amp;lt;/&lt;span class="pl-ent"&gt;noJdkLink&lt;/span&gt;&amp;gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Allows linking to documentation of the project's dependencies (generated with Javadoc or Dokka) &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;externalDocumentationLinks&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;link&lt;/span&gt;&amp;gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Root URL of the generated documentation to link with. The trailing slash is required! &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &amp;lt;&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;https://example.com/docs/&amp;lt;/&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; If package-list file located in non-standard location &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; &amp;lt;packageListUrl&amp;gt;file:///home/user/localdocs/package-list&amp;lt;/packageListUrl&amp;gt; &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;link&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;externalDocumentationLinks&lt;/span&gt;&amp;gt;

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Allows to customize documentation generation options on a per-package basis &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;perPackageOptions&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;packageOptions&lt;/span&gt;&amp;gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Will match kotlin and all sub-packages of it &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &amp;lt;&lt;span class="pl-ent"&gt;prefix&lt;/span&gt;&amp;gt;kotlin&amp;lt;/&lt;span class="pl-ent"&gt;prefix&lt;/span&gt;&amp;gt;
                
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; All options are optional, default values are below: &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &amp;lt;&lt;span class="pl-ent"&gt;skipDeprecated&lt;/span&gt;&amp;gt;false&amp;lt;/&lt;span class="pl-ent"&gt;skipDeprecated&lt;/span&gt;&amp;gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Emit warnings about not documented members  &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &amp;lt;&lt;span class="pl-ent"&gt;reportUndocumented&lt;/span&gt;&amp;gt;true&amp;lt;/&lt;span class="pl-ent"&gt;reportUndocumented&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;includeNonPublic&lt;/span&gt;&amp;gt;false&amp;lt;/&lt;span class="pl-ent"&gt;includeNonPublic&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;packageOptions&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;perPackageOptions&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please see the &lt;a href="https://github.com/JetBrains/kotlin-examples/tree/master/maven/dokka-maven-example"&gt;Dokka Maven example project&lt;/a&gt; for an example.&lt;/p&gt;
&lt;p&gt;&lt;a href="#output_formats"&gt;Output formats&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-the-ant-task" class="anchor" aria-hidden="true" href="#using-the-ant-task"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the Ant task&lt;/h3&gt;
&lt;p&gt;The Ant task definition is also contained in the dokka-fatjar.jar referenced above. Here's an example usage:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;project&lt;/span&gt; &lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Dokka&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;default&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;document&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;typedef&lt;/span&gt; &lt;span class="pl-e"&gt;resource&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dokka-antlib.xml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;classpath&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dokka-fatjar.jar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;/&amp;gt;

  &amp;lt;&lt;span class="pl-ent"&gt;target&lt;/span&gt; &lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;document&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;dokka&lt;/span&gt; &lt;span class="pl-e"&gt;format&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;outputDir&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;doc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;/&amp;gt;
  &amp;lt;/&lt;span class="pl-ent"&gt;target&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;project&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The Ant task supports the following attributes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;outputDir&lt;/code&gt; - the output directory where the documentation is generated&lt;/li&gt;
&lt;li&gt;&lt;code&gt;format&lt;/code&gt; - the output format (see the list of supported formats below)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cacheRoot&lt;/code&gt; - Use &lt;code&gt;default&lt;/code&gt; or set to custom path to cache directory to enable package-list caching. When set to &lt;code&gt;default&lt;/code&gt;, caches stored in $USER_HOME/.cache/dokka&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Inside the &lt;code&gt;dokka&lt;/code&gt; tag you can create another tags named &lt;code&gt;&amp;lt;passconfig/&amp;gt;&lt;/code&gt; that support the following attributes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;classpath&lt;/code&gt; - list of directories or .jar files to include in the classpath (used for resolving references)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;samples&lt;/code&gt; - list of directories containing sample code (documentation for those directories is not generated but declarations from them can be referenced using the &lt;code&gt;@sample&lt;/code&gt; tag)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;moduleName&lt;/code&gt; - the name of the module being documented (used as the root directory of the generated documentation)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;include&lt;/code&gt; - names of files containing the documentation for the module and individual packages&lt;/li&gt;
&lt;li&gt;&lt;code&gt;skipDeprecated&lt;/code&gt; - if set, deprecated elements are not included in the generated documentation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jdkVersion&lt;/code&gt; - version for linking to JDK&lt;/li&gt;
&lt;li&gt;&lt;code&gt;analysisPlatform="jvm"&lt;/code&gt; - platform used for analysing sourceRoots, see the &lt;a href="#platforms"&gt;platforms&lt;/a&gt; section&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;sourceRoot path="src" /&amp;gt;&lt;/code&gt; - source root&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;packageOptions prefix="kotlin" includeNonPublic="false" reportUndocumented="true" skipDeprecated="false"/&amp;gt;&lt;/code&gt; -
Per package options for package &lt;code&gt;kotlin&lt;/code&gt; and sub-packages of it&lt;/li&gt;
&lt;li&gt;&lt;code&gt;noStdlibLink&lt;/code&gt; - disable linking to online kotlin-stdlib documentation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;noJdkLink&lt;/code&gt; - disable linking to online JDK documentation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;externalDocumentationLink url="https://example.com/docs/" packageListUrl="file:///home/user/localdocs/package-list"/&amp;gt;&lt;/code&gt; -
linking to external documentation, packageListUrl should be used if package-list located not in standard location&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;target value="JVM"/&amp;gt;&lt;/code&gt; - see the &lt;a href="#platforms"&gt;platforms&lt;/a&gt; section&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-using-the-command-line" class="anchor" aria-hidden="true" href="#using-the-command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the Command Line&lt;/h3&gt;
&lt;p&gt;To run Dokka from the command line, download the &lt;a href="https://github.com/Kotlin/dokka/releases/download/0.10.0/dokka-fatjar-0.10.0.jar"&gt;Dokka jar&lt;/a&gt;.
To generate documentation, run the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;java -jar dokka-fatjar.jar &amp;lt;arguments&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dokka supports the following command line arguments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-output&lt;/code&gt; - the output directory where the documentation is generated&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-format&lt;/code&gt; - the &lt;a href="#output-formats"&gt;output format&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-cacheRoot&lt;/code&gt; - use &lt;code&gt;default&lt;/code&gt; or set to custom path to cache directory to enable package-list caching. When set to &lt;code&gt;default&lt;/code&gt;, caches stored in $USER_HOME/.cache/dokka&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-pass&lt;/code&gt; - (repeatable) - configuration for single analyser pass. Following this argument, you can pass other arguments:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-src&lt;/code&gt; - (repeatable) - source file or directory (allows many paths separated by the system path separator)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-classpath&lt;/code&gt; - (repeatable) - directory or .jar file to include in the classpath (used for resolving references)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-sample&lt;/code&gt; - (repeatable) - directory containing a sample code (documentation for those directories is not generated but declarations from them can be referenced using the &lt;code&gt;@sample&lt;/code&gt; tag)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-module&lt;/code&gt; - the name of the module being documented (used as the root directory of the generated documentation)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-include&lt;/code&gt; - (repeatable) - names of files containing the documentation for the module and individual packages&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-skipDeprecated&lt;/code&gt; - if set, deprecated elements are not included in the generated documentation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-reportUndocumented&lt;/code&gt; - warn about undocumented members&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-skipEmptyPackages&lt;/code&gt; - do not create index pages for empty packages&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-packageOptions&lt;/code&gt; - list of package options in format &lt;code&gt;prefix,-deprecated,-privateApi,+warnUndocumented;prefix, ...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-links&lt;/code&gt; - external documentation links in format &lt;code&gt;url^packageListUrl^^url2...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-srcLink&lt;/code&gt; - (repeatable) - mapping between a source directory and a Web site for browsing the code in format &lt;code&gt;&amp;lt;path&amp;gt;=&amp;lt;url&amp;gt;[#lineSuffix]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-noStdlibLink&lt;/code&gt; - disable linking to online kotlin-stdlib documentation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-noJdkLink&lt;/code&gt; - disable linking to online JDK documentation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-jdkVersion&lt;/code&gt; - version of JDK to use for linking to JDK JavaDoc&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-analysisPlatform&lt;/code&gt; - platform used for analysis, see the &lt;a href="#platforms"&gt;Platforms&lt;/a&gt; section&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-target&lt;/code&gt; - (repeatable) - generation target&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-output-formats" class="anchor" aria-hidden="true" href="#output-formats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Output formats&lt;a name="user-content-output_formats"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;html&lt;/code&gt; - minimalistic html format used by default, Java classes are translated to Kotlin&lt;/li&gt;
&lt;li&gt;&lt;code&gt;javadoc&lt;/code&gt; - looks like normal Javadoc, Kotlin classes are translated to Java&lt;/li&gt;
&lt;li&gt;&lt;code&gt;html-as-java&lt;/code&gt; - looks like &lt;code&gt;html&lt;/code&gt;, but Kotlin classes are translated to Java&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown&lt;/code&gt; - markdown structured as &lt;code&gt;html&lt;/code&gt;, Java classes are translated to Kotlin
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gfm&lt;/code&gt; - GitHub flavored markdown&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jekyll&lt;/code&gt; - Jekyll compatible markdown&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kotlin-website*&lt;/code&gt; - internal format used for documentation on &lt;a href="https://kotlinlang.org" rel="nofollow"&gt;kotlinlang.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-platforms" class="anchor" aria-hidden="true" href="#platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Platforms&lt;a name="user-content-platforms"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Dokka can annotate elements with special &lt;code&gt;platform&lt;/code&gt; block with platform requirements
Example result and usage can be found on &lt;a href="https://kotlinlang.org/api/latest/jvm/stdlib/" rel="nofollow"&gt;kotlinlang.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Each multiplatform closure has two properties: &lt;code&gt;platform&lt;/code&gt; and &lt;code&gt;targets&lt;/code&gt;. If you use autoconfiguration, those are filled automatically.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;targets&lt;/code&gt; property is a list of platform names that will be shown in the final result. Note that the value of this property
doesn't affect analysis of source code, it just changes the result. You can think of this as a &lt;code&gt;name&lt;/code&gt; property&lt;/p&gt;
&lt;p&gt;&lt;code&gt;platform&lt;/code&gt; property is used for the analysis of source roots. Available values are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;jvm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;native&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;common&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building-dokka" class="anchor" aria-hidden="true" href="#building-dokka"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building dokka&lt;/h2&gt;
&lt;p&gt;Dokka is built with Gradle. To build it, use &lt;code&gt;./gradlew build&lt;/code&gt;.
Alternatively, open the project directory in IntelliJ IDEA and use the IDE to build and run dokka.&lt;/p&gt;
&lt;p&gt;Here's how to import and configure Dokka in IntelliJ IDEA:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select "Open" from the IDEA welcome screen, or File &amp;gt; Open if a project is
already open&lt;/li&gt;
&lt;li&gt;Select the directory with your clone of Dokka
&lt;ul&gt;
&lt;li&gt;Note: IDEA may have an error after the project is initally opened; it is OK
to ignore this as the next step will address this error&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;After IDEA opens the project, select File &amp;gt; New &amp;gt; Module from existing sources
and select the &lt;code&gt;build.gradle&lt;/code&gt; file from the root directory of your Dokka clone&lt;/li&gt;
&lt;li&gt;Use the default options and select "OK"&lt;/li&gt;
&lt;li&gt;After Dokka is loaded into IDEA, open the Gradle tool window (View &amp;gt; Tool
Windows &amp;gt; Gradle) and click on the top left "Refresh all Gradle projects"
button&lt;/li&gt;
&lt;li&gt;Verify the following project settings.  In File &amp;gt; Settings &amp;gt; Build, Execution,
Deployment &amp;gt; Build Tools &amp;gt; Gradle &amp;gt; Runner:
&lt;ul&gt;
&lt;li&gt;Ensure "Delegate IDE build/run actions to gradle" is checked&lt;/li&gt;
&lt;li&gt;"Gradle Test Runner" should be selected in the "Run tests using" drop-down
menu&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Note: After closing and re-opening the project, IDEA may give an error
message: "Error Loading Project: Cannot load 3 modules".  Open up the details
of the error, and click "Remove Selected", as these module &lt;code&gt;.iml&lt;/code&gt; files are
safe to remove.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Kotlin</author><guid isPermaLink="false">https://github.com/Kotlin/dokka</guid><pubDate>Thu, 30 Jan 2020 00:05:00 GMT</pubDate></item><item><title>android10/Android-CleanArchitecture-Kotlin #6 in Kotlin, Today</title><link>https://github.com/android10/Android-CleanArchitecture-Kotlin</link><description>&lt;p&gt;&lt;i&gt;This is a movies sample app in Kotlin, which is part of a serie of blog posts I have written about architecting android application using different approaches.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/37318022/40349145-3e0c8d8a-5dd8-11e8-8654-5784f9ab7554.png"&gt;&lt;img src="https://user-images.githubusercontent.com/37318022/40349145-3e0c8d8a-5dd8-11e8-8654-5784f9ab7554.png" alt="banner" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-android---clean-architecture---kotlin-" class="anchor" aria-hidden="true" href="#android---clean-architecture---kotlin-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android - Clean Architecture - Kotlin &lt;a href="https://travis-ci.org/android10/Android-CleanArchitecture-Kotlin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e6c55dcddd2dcfefec85f0153df58b97ab017449/68747470733a2f2f7472617669732d63692e6f72672f616e64726f696431302f416e64726f69642d436c65616e4172636869746563747572652d4b6f746c696e2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/android10/Android-CleanArchitecture-Kotlin.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The purpose of this repo is to follow up Clean Architecture principles by bringing them to Android. It is worth saying that the idea is to take advantage of the Kotlin Programming Language features plus also pull in lessons learned and ideas from other interesting aproaches like Functional Programming.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-blog-post-with-implementation-details-explanation" class="anchor" aria-hidden="true" href="#blog-post-with-implementation-details-explanation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blog post with implementation details explanation:&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://fernandocejas.com/2018/05/07/architecting-android-reloaded/" rel="nofollow"&gt;Architecting Android… Reloaded&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-android---clean-architecture---java" class="anchor" aria-hidden="true" href="#android---clean-architecture---java"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android - Clean Architecture - Java:&lt;/h2&gt;
&lt;p&gt;There is another Android Clean Architecture repository written in Java: &lt;a href="https://github.com/android10/Android-CleanArchitecture"&gt;https://github.com/android10/Android-CleanArchitecture&lt;/a&gt; with really nice discussions: &lt;a href="https://github.com/android10/Android-CleanArchitecture/issues"&gt;https://github.com/android10/Android-CleanArchitecture/issues&lt;/a&gt;.
Article, lessons learned and some more material coming up. Check the following known bugs and TODO list.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-other-material-worth-reading" class="anchor" aria-hidden="true" href="#other-material-worth-reading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other material worth reading:&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://fernandocejas.com/2014/09/03/architecting-android-the-clean-way/" rel="nofollow"&gt;Architecting Android…The clean way?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fernandocejas.com/2015/07/18/architecting-android-the-evolution/" rel="nofollow"&gt;Architecting Android…The evolution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fernandocejas.com/2015/04/11/tasting-dagger-2-on-android/" rel="nofollow"&gt;Tasting Dagger 2 on Android&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fernandocejas.com/2016/12/24/clean-architecture-dynamic-parameters-in-use-cases/" rel="nofollow"&gt;Clean Architecture…Dynamic Parameters in Use Cases&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-----------------------------------------------------------------------------------------------" class="anchor" aria-hidden="true" href="#----------------------------------------------------------------------------------------------"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;----------------------------------------------------------------------------------------------&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-sample-app" class="anchor" aria-hidden="true" href="#sample-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample app&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1360604/31345866-679a221a-ad17-11e7-8097-7800edb677fa.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/1360604/31345866-679a221a-ad17-11e7-8097-7800edb677fa.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content------------------------------------------------------------------------------------------------1" class="anchor" aria-hidden="true" href="#-----------------------------------------------------------------------------------------------1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;----------------------------------------------------------------------------------------------&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-clean-architecture" class="anchor" aria-hidden="true" href="#clean-architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clean Architecture&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/android10/Sample-Data/blob/master/Android-CleanArchitecture-Kotlin/architecture/clean_architecture_reloaded_main.png"&gt;&lt;img src="https://github.com/android10/Sample-Data/raw/master/Android-CleanArchitecture-Kotlin/architecture/clean_architecture_reloaded_main.png" alt="https://fernandocejas.com/2018/05/07/architecting-android-reloaded/" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content------------------------------------------------------------------------------------------------2" class="anchor" aria-hidden="true" href="#-----------------------------------------------------------------------------------------------2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;----------------------------------------------------------------------------------------------&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-android-3-layers-architecture" class="anchor" aria-hidden="true" href="#android-3-layers-architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android 3 Layers Architecture&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/android10/Sample-Data/blob/master/Android-CleanArchitecture-Kotlin/architecture/clean_architecture_reloaded_layers.png"&gt;&lt;img src="https://github.com/android10/Sample-Data/raw/master/Android-CleanArchitecture-Kotlin/architecture/clean_architecture_reloaded_layers.png" alt="https://fernandocejas.com/2018/05/07/architecting-android-reloaded/" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content------------------------------------------------------------------------------------------------3" class="anchor" aria-hidden="true" href="#-----------------------------------------------------------------------------------------------3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;----------------------------------------------------------------------------------------------&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-ui-layer-mvvm" class="anchor" aria-hidden="true" href="#ui-layer-mvvm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UI Layer: MVVM&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/android10/Sample-Data/blob/master/Android-CleanArchitecture-Kotlin/architecture/clean_architecture_reloaded_mvvm_app.png"&gt;&lt;img src="https://github.com/android10/Sample-Data/raw/master/Android-CleanArchitecture-Kotlin/architecture/clean_architecture_reloaded_mvvm_app.png" alt="https://fernandocejas.com/2018/05/07/architecting-android-reloaded/" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content------------------------------------------------------------------------------------------------4" class="anchor" aria-hidden="true" href="#-----------------------------------------------------------------------------------------------4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;----------------------------------------------------------------------------------------------&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-data-layer-repository" class="anchor" aria-hidden="true" href="#data-layer-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Layer: Repository&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/android10/Sample-Data/blob/master/Android-CleanArchitecture-Kotlin/architecture/clean_archictecture_reloaded_repository.png"&gt;&lt;img src="https://github.com/android10/Sample-Data/raw/master/Android-CleanArchitecture-Kotlin/architecture/clean_archictecture_reloaded_repository.png" alt="https://fernandocejas.com/2018/05/07/architecting-android-reloaded/" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content------------------------------------------------------------------------------------------------5" class="anchor" aria-hidden="true" href="#-----------------------------------------------------------------------------------------------5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;----------------------------------------------------------------------------------------------&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-local-development" class="anchor" aria-hidden="true" href="#local-development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Local Development&lt;/h2&gt;
&lt;p&gt;Here are some useful Gradle/adb commands for executing this example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;./gradlew deployDebug&lt;/code&gt; - Builds and install the debug apk on the current connected device.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./gradlew runUnitTests&lt;/code&gt; - Execute all unit tests (both unit and integration).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-discussions" class="anchor" aria-hidden="true" href="#discussions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Discussions&lt;/h2&gt;
&lt;p&gt;Refer to the issues section: &lt;a href="https://github.com/android10/Android-CleanArchitecture-Kotlin/issues"&gt;https://github.com/android10/Android-CleanArchitecture-Kotlin/issues&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-style" class="anchor" aria-hidden="true" href="#code-style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code style&lt;/h2&gt;
&lt;p&gt;Here you can download and install the java codestyle.
&lt;a href="https://github.com/android10/java-code-styles"&gt;https://github.com/android10/java-code-styles&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Copyright 2018 Fernando Cejas

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/android10/Sample-Data/blob/master/android10/android10_logo_big.png"&gt;&lt;img src="https://github.com/android10/Sample-Data/raw/master/android10/android10_logo_big.png" alt="http://www.fernandocejas.com" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/android10" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/031fc5a134cdca5ae3460822aba371e63f794233/68747470733a2f2f7777772e6275796d6561636f666665652e636f6d2f6173736574732f696d672f637573746f6d5f696d616765732f6f72616e67655f696d672e706e67" alt="Buy Me A Coffee" data-canonical-src="https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>android10</author><guid isPermaLink="false">https://github.com/android10/Android-CleanArchitecture-Kotlin</guid><pubDate>Thu, 30 Jan 2020 00:06:00 GMT</pubDate></item><item><title>ktorio/ktor #7 in Kotlin, Today</title><link>https://github.com/ktorio/ktor</link><description>&lt;p&gt;&lt;i&gt;Framework for quickly creating connected applications in Kotlin with minimal effort&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ff8d543d1bc5951292d40f105ca2a96d6eeee1fa/687474703a2f2f6b746f722e696f2f6173736574732f696d616765732f6b746f725f6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/ff8d543d1bc5951292d40f105ca2a96d6eeee1fa/687474703a2f2f6b746f722e696f2f6173736574732f696d616765732f6b746f725f6c6f676f2e706e67" alt="Ktor" width="600" data-canonical-src="http://ktor.io/assets/images/ktor_logo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c558aa8079c9095e7e944ab3db6d8e69ea01af97/687474703a2f2f6a622e67672f6261646765732f6f6666696369616c2e737667" alt="Official JetBrains project" data-canonical-src="http://jb.gg/badges/official.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bintray.com/kotlin/ktor/ktor/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/76c5686c960e934f6ab17a4d8d0ff52afbeba163/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6b6f746c696e2f6b746f722f6b746f722f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/kotlin/ktor/ktor/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;
&lt;a href="https://teamcity.jetbrains.com/viewType.html?buildTypeId=KotlinTools_Ktor_BuildGradle&amp;amp;branch_KotlinTools_Ktor=%3Cdefault%3E&amp;amp;tab=buildTypeStatusDiv" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3396da43c1cfe89882cbec1818376f2d7e6ef4d0/68747470733a2f2f696d672e736869656c64732e696f2f7465616d636974792f687474702f7465616d636974792e6a6574627261696e732e636f6d2f732f4b6f746c696e546f6f6c735f4b746f725f4275696c64477261646c652e737667" alt="TeamCity Build" data-canonical-src="https://img.shields.io/teamcity/http/teamcity.jetbrains.com/s/KotlinTools_Ktor_BuildGradle.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e7da7b6b632d5ef4bce9a550a5d5cfe400ca1fe/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652532304c6963656e7365253230322e302d626c75652e7376673f7374796c653d666c6174" alt="GitHub License" data-canonical-src="https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;io.ktor.server.netty.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;io.ktor.routing.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;io.ktor.application.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;io.ktor.http.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;io.ktor.response.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;io.ktor.server.engine.*&lt;/span&gt;

&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-smi"&gt;args&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&amp;gt;) {
    embeddedServer(&lt;span class="pl-en"&gt;Netty&lt;/span&gt;, &lt;span class="pl-c1"&gt;8080&lt;/span&gt;) {
        routing {
            get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
                call.respondText(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello, world!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;ContentType&lt;/span&gt;.&lt;span class="pl-en"&gt;Text&lt;/span&gt;.&lt;span class="pl-en"&gt;Html&lt;/span&gt;)
            }
        }
    }.start(wait &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Runs embedded web server on &lt;code&gt;localhost:8080&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Installs routing and responds with &lt;code&gt;Hello, world!&lt;/code&gt; when receiving GET http request for root path&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-principles" class="anchor" aria-hidden="true" href="#principles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Principles&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-unopinionated" class="anchor" aria-hidden="true" href="#unopinionated"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unopinionated&lt;/h4&gt;
&lt;p&gt;Ktor Framework doesn't impose a lot of constraints on what technology a project is going to use – logging,
templating, messaging, persistent, serializing, dependency injection, etc.
Sometimes it may be required to implement a simple interface, but usually it is a matter of writing a
transforming or intercepting function. Features are installed into application using unified &lt;em&gt;interception&lt;/em&gt; mechanism
which allows building arbitrary pipelines.&lt;/p&gt;
&lt;p&gt;Ktor Application can be hosted in any servlet container with Servlet 3.0+ API support such as Tomcat, or
standalone using Netty or Jetty. Support for other hosts can be added through the unified hosting API.&lt;/p&gt;
&lt;p&gt;Ktor APIs are mostly functions calls with lambdas. Thanks to Kotlin DSL capabilities, code looks declarative.
Application composition is entirely developer's choice – with functions or classes, using dependency injection
framework or doing it all manually in main function.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-asynchronous" class="anchor" aria-hidden="true" href="#asynchronous"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asynchronous&lt;/h4&gt;
&lt;p&gt;Ktor pipeline machinery and API is utilising Kotlin coroutines to provide easy-to-use asynchronous
programming model without making it too cumbersome. All host implementations are using asynchronous I/O facilities
to avoid thread blocking.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-testable" class="anchor" aria-hidden="true" href="#testable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testable&lt;/h4&gt;
&lt;p&gt;Ktor application can be hosted in a special test environment, which emulates to some
extent web server without actually doing any networking. It provides easy way to test an application without mocking
too much stuff, and still achieve good performance while validating application calls. Integration tests with real
embedded web server are of course possible, too.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Please visit &lt;a href="http://ktor.io" rel="nofollow"&gt;ktor.io&lt;/a&gt; for Quick Start and detailed explanations of features, usage and machinery.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Getting started with &lt;a href="http://ktor.io/quickstart/gradle.html" rel="nofollow"&gt;Gradle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Getting started with &lt;a href="http://ktor.io/quickstart/maven.html" rel="nofollow"&gt;Maven&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Getting started with &lt;a href="http://ktor.io/quickstart/intellij-idea.html" rel="nofollow"&gt;IDEA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-inspirations" class="anchor" aria-hidden="true" href="#inspirations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inspirations&lt;/h2&gt;
&lt;p&gt;Kotlin web frameworks such as Wasabi and Kara, which are currently deprecated.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reporting-security-vulnerabilities" class="anchor" aria-hidden="true" href="#reporting-security-vulnerabilities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting Security Vulnerabilities&lt;/h2&gt;
&lt;p&gt;If you find a security vulnerability in Ktor, we kindly request that instead of using our public issue tracker, you instead reach out to the JetBrains security team via our &lt;a href="https://www.jetbrains.com/legal/terms/responsible-disclosure.html" rel="nofollow"&gt;responsible disclosure process&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please see &lt;a href="CONTRIBUTING.md"&gt;the contribution guide&lt;/a&gt; before contirbuting and &lt;a href="CODE_OF_CONDUCT.md"&gt;Code of conduct&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ktorio</author><guid isPermaLink="false">https://github.com/ktorio/ktor</guid><pubDate>Thu, 30 Jan 2020 00:07:00 GMT</pubDate></item><item><title>InsertKoinIO/koin #8 in Kotlin, Today</title><link>https://github.com/InsertKoinIO/koin</link><description>&lt;p&gt;&lt;i&gt;Koin - a pragmatic lightweight dependency injection framework for Kotlin&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/koin_2.0.jpg"&gt;&lt;img src="./img/koin_2.0.jpg" alt="logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-koin" class="anchor" aria-hidden="true" href="#what-is-koin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is KOIN?&lt;/h2&gt;
&lt;p&gt;A pragmatic lightweight dependency injection framework for Kotlin developers.&lt;/p&gt;
&lt;p&gt;Written in pure Kotlin, using functional resolution only: no proxy, no code generation, no reflection.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Koin is a DSL, a light container and a pragmatic API&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-official-website--httpsinsert-koinio" class="anchor" aria-hidden="true" href="#official-website--httpsinsert-koinio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official Website &lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;👉&lt;/g-emoji&gt; &lt;a href="https://insert-koin.io" rel="nofollow"&gt;https://insert-koin.io&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-latest-news-" class="anchor" aria-hidden="true" href="#latest-news-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Latest News &lt;g-emoji class="g-emoji" alias="globe_with_meridians" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f310.png"&gt;🌐&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Follow us on Twitter for latest news: &lt;a href="https://twitter.com/insertkoin_io" rel="nofollow"&gt;@insertkoin_io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Koin developers on Medium: &lt;a href="https://medium.com/koin-developers" rel="nofollow"&gt;koin developers hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-getting-help-" class="anchor" aria-hidden="true" href="#getting-help-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help &lt;g-emoji class="g-emoji" alias="fire_engine" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f692.png"&gt;🚒&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;p&gt;Documentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://start.insert-koin.io/" rel="nofollow"&gt;Getting Stared&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://doc.insert-koin.io/" rel="nofollow"&gt;Documentation References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Any question about Koin usage?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Come talk on slack &lt;a href="https://kotlinlang.slack.com/?redir=%2Fmessages%2Fkoin" rel="nofollow"&gt;#koin&lt;/a&gt; channel&lt;/li&gt;
&lt;li&gt;Post your question on &lt;a href="https://stackoverflow.com/questions/tagged/koin" rel="nofollow"&gt;Stackoverflow - #koin tag&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-articles-videos--other-resources-" class="anchor" aria-hidden="true" href="#articles-videos--other-resources-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Articles, Videos &amp;amp; other resources &lt;g-emoji class="g-emoji" alias="tada" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png"&gt;🎉&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;p&gt;Online resources about Koin - &lt;a href="https://github.com/InsertKoinIO/koin/blob/master/README.md#talking-about-koin"&gt;Talking about Koin&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-reporting-issues-" class="anchor" aria-hidden="true" href="#reporting-issues-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting issues &lt;g-emoji class="g-emoji" alias="ambulance" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f691.png"&gt;🚑&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;p&gt;Found a bug or a problem on a specific feature? Open an issue on &lt;a href="https://github.com/InsertKoinIO/koin/issues"&gt;Github issues&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-contributing-" class="anchor" aria-hidden="true" href="#contributing-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing &lt;g-emoji class="g-emoji" alias="hammer_and_wrench" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6e0.png"&gt;🛠&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;p&gt;Want to help or share a proposal about Koin? problem on a specific feature?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open an issue to explain the issue you want to solve &lt;a href="https://github.com/InsertKoinIO/koin/issues"&gt;Open an issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Come talk on slack &lt;a href="https://kotlinlang.slack.com/?redir=%2Fmessages%2Fkoin-dev" rel="nofollow"&gt;#koin-dev&lt;/a&gt; channel&lt;/li&gt;
&lt;li&gt;After discussion to validate your ideas, you can open a PR or even a draft PR if the contribution is a big one &lt;a href="https://github.com/InsertKoinIO/koin/pulls"&gt;Current PRs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additional readings about basic setup: &lt;a href="https://github.com/InsertKoinIO/koin/blob/master/CONTRIBUTING.adoc"&gt;https://github.com/InsertKoinIO/koin/blob/master/CONTRIBUTING.adoc&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-current-version" class="anchor" aria-hidden="true" href="#current-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Current Version&lt;/h2&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; latest stable&lt;/span&gt;
koin_version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2.0.1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; latest unstable&lt;/span&gt;
koin_version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2.1.0-alpha-10&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-gradle" class="anchor" aria-hidden="true" href="#gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-jcenter" class="anchor" aria-hidden="true" href="#jcenter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jcenter&lt;/h3&gt;
&lt;p&gt;Check that you have the &lt;code&gt;jcenter&lt;/code&gt; repository.&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Add Jcenter to your repositories if needed&lt;/span&gt;
&lt;span class="pl-en"&gt;repositories&lt;/span&gt; {
	jcenter()    
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h3&gt;
&lt;p&gt;Pick one of your Koin dependency:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-core-features" class="anchor" aria-hidden="true" href="#core-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core features&lt;/h4&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin for Kotlin&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-core:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin extended &amp;amp; experimental features&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-core-ext:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin for Unit tests&lt;/span&gt;
testImplementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-test:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin for Java developers&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-java:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-android" class="anchor" aria-hidden="true" href="#android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android&lt;/h4&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin for Android&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-android:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin Android Scope features&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-android-scope:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin Android ViewModel features&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-android-viewmodel:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin Android Experimental features&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-android-ext:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-androidx" class="anchor" aria-hidden="true" href="#androidx"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AndroidX&lt;/h4&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin AndroidX Scope features&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-androidx-scope:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin AndroidX ViewModel features&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-androidx-viewmodel:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin AndroidX Fragment features&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-androidx-fragment:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin AndroidX Experimental features&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-androidx-ext:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-ktor" class="anchor" aria-hidden="true" href="#ktor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ktor&lt;/h4&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin for Ktor Kotlin&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-ktor:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-declare-a-koin-module" class="anchor" aria-hidden="true" href="#declare-a-koin-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Declare a Koin module&lt;/h2&gt;
&lt;p&gt;Write with the Koin DSL what you need to assemble:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Given some classes &lt;/span&gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Controller&lt;/span&gt;(&lt;span class="pl-k"&gt;val&lt;/span&gt; service &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;BusinessService&lt;/span&gt;) 
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;BusinessService&lt;/span&gt;() 

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; just declare it &lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; myModule &lt;span class="pl-k"&gt;=&lt;/span&gt; module { 
  single { &lt;span class="pl-en"&gt;Controller&lt;/span&gt;(get()) } 
  single { &lt;span class="pl-en"&gt;BusinessService&lt;/span&gt;() } 
} &lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-starting-koin" class="anchor" aria-hidden="true" href="#starting-koin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Starting Koin&lt;/h2&gt;
&lt;p&gt;Use the startKoin() function to start Koin in your application.&lt;/p&gt;
&lt;p&gt;In a Kotlin app:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;vararg&lt;/span&gt; args &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;) { 
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; start Koin!&lt;/span&gt;
  startKoin {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; your modules&lt;/span&gt;
    modules(myModule)
  }
} &lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In an Android app:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyApplication&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;Application&lt;/span&gt;() {
  &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;onCreate&lt;/span&gt;(){
    &lt;span class="pl-c1"&gt;super&lt;/span&gt;.onCreate()
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; start Koin!&lt;/span&gt;
    startKoin {
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Android context&lt;/span&gt;
      androidContext(&lt;span class="pl-c1"&gt;this&lt;/span&gt;&lt;span class="pl-k"&gt;@MyApplication)&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; modules&lt;/span&gt;
      modules(myModule)
    }
  } 
} &lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-talking-about-koin" class="anchor" aria-hidden="true" href="#talking-about-koin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Talking about Koin&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-articles" class="anchor" aria-hidden="true" href="#articles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Articles&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/pulse/dagger-dead-long-live-koin-yordan-olave-cordero" rel="nofollow"&gt;Dagger is dead. Long live Koin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kerooker/testing-koin-applications-with-kotlintest-1iip" rel="nofollow"&gt;Testing a Koin application with KotlinTest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/ready-for-koin-2-0-2722ab59cac3" rel="nofollow"&gt;Ready for Koin 2.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://proandroiddev.com/migrating-from-dagger2-to-koin-3b2b3f5285e9" rel="nofollow"&gt;Migration from Dagger2 to Koin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@giuliani.arnaud/the-thermosiphon-app-from-dagger-to-koin-step-by-step-a09af7f5b5b1" rel="nofollow"&gt;From Dagger to Koin, a step by step migration guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://proandroiddev.com/koin-in-feature-modules-project-6329f069f943" rel="nofollow"&gt;Koin in Feature Modules Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://overflow.buffer.com/2018/09/13/a-brief-look-at-koin-on-android/" rel="nofollow"&gt;A brief look at Koin on Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@charbgr/bye-bye-dagger-1494118dcd41" rel="nofollow"&gt;Bye bye Dagger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://proandroiddev.com/testing-with-koin-ade8a46eb4d" rel="nofollow"&gt;Testing with Koin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://android.jlelse.eu/painless-android-testing-with-room-koin-bb949eefcbee" rel="nofollow"&gt;Painless Android testing with Room &amp;amp; Koin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@giuliani.arnaud/unlock-your-android-viewmodel-power-with-koin-23eda8f493be" rel="nofollow"&gt;Unlock your Android ViewModel power with Koin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/mindorks/using-dependency-injection-with-koin-bee0b461714a" rel="nofollow"&gt;Using dependency injection with Koin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=""&gt;Koin + Spark = &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/pushing-sparkjava-to-the-next-level-with-koin-ed1f0b80953e" rel="nofollow"&gt;Push SparkJava to the next level&lt;/a&gt; (&lt;a href="http://mailchi.mp/kotlinweekly/kotlin-weekly-73" rel="nofollow"&gt;Kotlin Weekly issue 73&lt;/a&gt;, &lt;a href="https://dzone.com/articles/push-sparkjava-to-the-next-level-with-koin" rel="nofollow"&gt;DZone.com&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/when-koin-met-ktor-c3b2395662bf" rel="nofollow"&gt;When Koin met Ktor ...&lt;/a&gt; (&lt;a href="https://us12.campaign-archive.com/?u=f39692e245b94f7fb693b6d82&amp;amp;id=3135ae0cf5" rel="nofollow"&gt;Kotlin Weekly issue 72&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nan-labs.com/blog/android-dependency-injection-moved-dagger-2-koin/" rel="nofollow"&gt;Android Dependency Injection – Why we moved from Dagger 2 to Koin?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@giuliani.arnaud/moving-from-dagger-to-koin-simplify-your-android-development-e8c61d80cddb" rel="nofollow"&gt;Moving from Dagger to Koin - Simplify your Android development&lt;/a&gt; - (&lt;a href="http://mailchi.mp/kotlinweekly/kotlin-weekly-66?e=e8a57c719f" rel="nofollow"&gt;Kotlin Weekly issue 66&lt;/a&gt; &amp;amp; &lt;a href="http://androidweekly.net/issues/issue-282" rel="nofollow"&gt;Android Weekly issue 282&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mailchi.mp/kotlinweekly/kotlin-weekly-64?e=e8a57c719f" rel="nofollow"&gt;Kotlin Weekly #64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=""&gt;Insert Koin for dependency injection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://proandroiddev.com/better-dependency-injection-for-android-567b93353ad" rel="nofollow"&gt;Better dependency injection for Android&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-videos--podcasts" class="anchor" aria-hidden="true" href="#videos--podcasts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Videos &amp;amp; Podcasts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mt9yoWScgb8&amp;amp;list=PLnYRVL0Cw1FSUJ-WdhV2Ija9kA9q0qP3e&amp;amp;index=6" rel="nofollow"&gt;Dependency Injection from zero to hero with Koin, Kotliners 2019 &amp;amp; Budapest, Hungary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=chCsNkjotfc" rel="nofollow"&gt;Dependency Injection from zero to hero with Koin, AndroidMakers 2019 &amp;amp; Paris, France&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=KzQbJFVjr9w&amp;amp;t=1s" rel="nofollow"&gt;Simplify your Android development with Koin - Mobilization @ Lodz, Poland&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://talkingkotlin.com/dependency-injection-with-koin/" rel="nofollow"&gt;Talking Kotlin - Dependency injection with Koin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://androidleakspodcast.com/2018/08/05/episode-42-linjection-de-poireaux-avec-koin/" rel="nofollow"&gt;L'injection de poireaux avec Koin - AndroidLeaks ep42 (French)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/HrTz5jToQkk" rel="nofollow"&gt;Insert Koin. Mobile Fest 2018, Kiev, Urkaine (Russian)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-koin-developers-hub" class="anchor" aria-hidden="true" href="#koin-developers-hub"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Koin Developers Hub&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/ready-for-koin-2-0-2722ab59cac3" rel="nofollow"&gt;Ready for Koin 2.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/news-from-the-trenches-whats-next-for-koin-994791d572d5" rel="nofollow"&gt;News from the trenches, What's next for Koin?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/koin-1-0-0-unleashed-dcc15b293a3a" rel="nofollow"&gt;Koin 1.0.0 Unleashed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/opening-the-koin-1-0-0-beta-version-99cb8be1c308" rel="nofollow"&gt;Opening Koin 1.0.0 Beta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/on-the-road-to-koin-1-0-0-a624af55d07" rel="nofollow"&gt;On the road to Koin 1.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/koin-0-9-2-maintenance-fixes-new-branding-roadmap-for-1-0-0-some-other-nice-announces-94f14648e4ad" rel="nofollow"&gt;Koin 0.9.2 — Maintenance fixes, new branding, roadmap for 1.0.0 &amp;amp; some other nice announces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/koin-0-9-1-bug-fixes-improvements-bug-fixes-d257cd2766fa" rel="nofollow"&gt;Koin 0.9.1 - Bug fixes &amp;amp; Improvments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/koin-0-9-0-getting-close-to-stable-release-74df9bb9e181" rel="nofollow"&gt;Koin 0.9.0 - Getting close to stable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@giuliani.arnaud/unlock-your-android-viewmodel-power-with-koin-23eda8f493be" rel="nofollow"&gt;Unlock your Android ViewModel power with Koin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/koin-0-8-2-improvements-bugfixes-and-crash-fix-6b6809fc1dd2" rel="nofollow"&gt;koin 0.8.2 Improvements bugfixes and crash fix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/koin-released-in-0-8-0-welcome-to-koin-spark-koin-android-architecture-f6270a7d4808" rel="nofollow"&gt;Koin release 0.8.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;This project exists thanks to all the people who contribute. [&lt;a href="CONTRIBUTING.adoc"&gt;Contribute&lt;/a&gt;].
&lt;a href="https://github.com/InsertKoinIO/koin/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/ef6b7b212273f5ab106d721176a0e82c0a6c78b0/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f636f6e7472696275746f72732e7376673f77696474683d38393026627574746f6e3d66616c7365" data-canonical-src="https://opencollective.com/koin/contributors.svg?width=890&amp;amp;button=false" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-opencollective" class="anchor" aria-hidden="true" href="#opencollective"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenCollective&lt;/h2&gt;
&lt;p&gt;&lt;a href="#backers"&gt;&lt;img src="https://camo.githubusercontent.com/8db604944b68a6f55fb4e6d1a5095f8497d9c118/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f6261636b6572732f62616467652e737667" alt="Backers on Open Collective" data-canonical-src="https://opencollective.com/koin/backers/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="#sponsors"&gt;&lt;img src="https://camo.githubusercontent.com/86fc2b1251f3773ff54b3464080d009ac37eb413/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f72732f62616467652e737667" alt="Sponsors on Open Collective" data-canonical-src="https://opencollective.com/koin/sponsors/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-backers" class="anchor" aria-hidden="true" href="#backers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backers&lt;/h3&gt;
&lt;p&gt;Thank you to all our backers! &lt;g-emoji class="g-emoji" alias="pray" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png"&gt;🙏&lt;/g-emoji&gt; [&lt;a href="https://opencollective.com/koin#backer" rel="nofollow"&gt;Become a backer&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/koin#backers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9114cc284288b180d983bd082acb1edc0b31dc47/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f6261636b6572732e7376673f77696474683d383930" data-canonical-src="https://opencollective.com/koin/backers.svg?width=890" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h3&gt;
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href="https://opencollective.com/koin#sponsor" rel="nofollow"&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/koin/sponsor/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c24e93330c8a04b552069856f223f159a6afe4cc/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f722f302f6176617461722e737667" data-canonical-src="https://opencollective.com/koin/sponsor/0/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/koin/sponsor/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cda393798de182565c32bba4cc5b7b97f8921fd1/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f722f312f6176617461722e737667" data-canonical-src="https://opencollective.com/koin/sponsor/1/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/koin/sponsor/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/23d2708ba2d97b3e2c237b03721f1d95df596f9e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f722f322f6176617461722e737667" data-canonical-src="https://opencollective.com/koin/sponsor/2/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/koin/sponsor/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/457acb3a788212d50f85c30dba9705ff21774279/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f722f332f6176617461722e737667" data-canonical-src="https://opencollective.com/koin/sponsor/3/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/koin/sponsor/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dfac2b20d4be0e636ca781c1c3e4ced9e58fd7ee/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f722f342f6176617461722e737667" data-canonical-src="https://opencollective.com/koin/sponsor/4/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/koin/sponsor/5/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/41fe024a7228000415ed4c6a3a6c1749a19c13cc/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f722f352f6176617461722e737667" data-canonical-src="https://opencollective.com/koin/sponsor/5/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/koin/sponsor/6/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4a89046fe2fb3648fe1707d7dcf4f79ef2c84a72/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f722f362f6176617461722e737667" data-canonical-src="https://opencollective.com/koin/sponsor/6/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/koin/sponsor/7/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/08ab59bcf015e31855373347e6688689ff71d4f9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f722f372f6176617461722e737667" data-canonical-src="https://opencollective.com/koin/sponsor/7/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/koin/sponsor/8/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a4f543617a20f5a067d66188a2607d34b5e77eab/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f722f382f6176617461722e737667" data-canonical-src="https://opencollective.com/koin/sponsor/8/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/koin/sponsor/9/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e96e7632fe93f4299c0bcffd431258d3e24e1b8b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f722f392f6176617461722e737667" data-canonical-src="https://opencollective.com/koin/sponsor/9/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>InsertKoinIO</author><guid isPermaLink="false">https://github.com/InsertKoinIO/koin</guid><pubDate>Thu, 30 Jan 2020 00:08:00 GMT</pubDate></item><item><title>ktorio/ktor-samples #9 in Kotlin, Today</title><link>https://github.com/ktorio/ktor-samples</link><description>&lt;p&gt;&lt;i&gt;Sample projects for Ktor&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-samples-for-ktor" class="anchor" aria-hidden="true" href="#samples-for-ktor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Samples for Ktor&lt;/h1&gt;
&lt;p&gt;A collection of ready-to-use samples for &lt;a href="https://ktor.io" rel="nofollow"&gt;Ktor&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;"Hello World" application with various deployment scenarios:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="deployment/netty"&gt;netty&lt;/a&gt; — Netty engine application.&lt;/li&gt;
&lt;li&gt;&lt;a href="deployment/netty-embedded"&gt;netty-embedded&lt;/a&gt; — Netty engine embedded application.&lt;/li&gt;
&lt;li&gt;&lt;a href="deployment/jetty"&gt;jetty&lt;/a&gt; — Jetty engine application.&lt;/li&gt;
&lt;li&gt;&lt;a href="deployment/jetty-embedded"&gt;jetty-embedded&lt;/a&gt; — Jetty engine embedded application.&lt;/li&gt;
&lt;li&gt;&lt;a href="deployment/jetty-war"&gt;jetty-war&lt;/a&gt; — Jetty application server WAR deployment.&lt;/li&gt;
&lt;li&gt;&lt;a href="deployment/tomcat-war"&gt;tomcat-war&lt;/a&gt; — Tomcat application server WAR deployment.&lt;/li&gt;
&lt;li&gt;&lt;a href="deployment/google-appengine-standard"&gt;google-appengine-standard&lt;/a&gt; — Google App Engine Standard (war deployment).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Other build systems and other samples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="other/maven-netty"&gt;maven-netty&lt;/a&gt; — Maven build for Netty engine embedded application.&lt;/li&gt;
&lt;li&gt;&lt;a href="other/maven-google-appengine-standard"&gt;maven-google-appengine-standard&lt;/a&gt; — Maven build for Google App Engine Standard (war deployment).&lt;/li&gt;
&lt;li&gt;&lt;a href="other/proguard"&gt;proguard&lt;/a&gt; — Embedded application minimized with ProGuard.&lt;/li&gt;
&lt;li&gt;&lt;a href="other/multiple-connectors"&gt;multiple-connectors&lt;/a&gt; — Embedded application listening to several endpoints.&lt;/li&gt;
&lt;li&gt;&lt;a href="other/sandbox"&gt;sandbox&lt;/a&gt; — Application including all Ktor artifacts, suitable for Scratches files and quick experiments.&lt;/li&gt;
&lt;li&gt;&lt;a href="other/simulate-slow-server"&gt;simulate-slow-server&lt;/a&gt; — Application showing how to simulate delay in the whole application creating a simple interceptor.&lt;/li&gt;
&lt;li&gt;&lt;a href="other/rx"&gt;rx&lt;/a&gt; — Application showing how to use RxJava2.&lt;/li&gt;
&lt;li&gt;&lt;a href="other/css-dsl"&gt;css-dsl&lt;/a&gt; — Application showing how to combine HTML DSL with CSS DSL.&lt;/li&gt;
&lt;li&gt;&lt;a href="mpp/fullstack-mpp"&gt;fullstack-mpp&lt;/a&gt; — Application showing how to combine Ktor serving Kotlin.JS static scripts.&lt;/li&gt;
&lt;li&gt;&lt;a href="other/filelisting"&gt;filelisting&lt;/a&gt; — Application showing how to create a file listing for static files.&lt;/li&gt;
&lt;li&gt;&lt;a href="other/structured-logging"&gt;structured-logging&lt;/a&gt; — Application showing how to use &lt;a href="https://github.com/logstash/logstash-logback-encoder"&gt;logstash-logback-encoder&lt;/a&gt; for structured logging with scoped variables without requiring MDC ThreadStatic.&lt;/li&gt;
&lt;li&gt;&lt;a href="other/client-multipart"&gt;client-multipart&lt;/a&gt; — Application showing how to do multipart requests with the HttpClient.&lt;/li&gt;
&lt;li&gt;&lt;a href="other/client-tools"&gt;client-tools&lt;/a&gt; — Application showing several useful extension methods not included in Ktor itself.&lt;/li&gt;
&lt;li&gt;&lt;a href="other/sse"&gt;sse&lt;/a&gt; — Shows how to use SSE (Server-Sent Events) using Ktor.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Small single-feature samples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="feature/async"&gt;async&lt;/a&gt; — long-running asynchronous computation that happens in a separate thread-pool context.&lt;/li&gt;
&lt;li&gt;&lt;a href="feature/auth"&gt;auth&lt;/a&gt; — using authorization.&lt;/li&gt;
&lt;li&gt;&lt;a href="feature/post"&gt;post&lt;/a&gt; — form post and multipart file upload.&lt;/li&gt;
&lt;li&gt;&lt;a href="feature/sessions"&gt;sessions&lt;/a&gt; — store information that will be kept between requests.&lt;/li&gt;
&lt;li&gt;&lt;a href="feature/custom-feature"&gt;custom-feature&lt;/a&gt; — implementation of a custom feature.&lt;/li&gt;
&lt;li&gt;&lt;a href="feature/html-widget"&gt;html-widget&lt;/a&gt; — custom html widget.&lt;/li&gt;
&lt;li&gt;Content Negotiation
&lt;ul&gt;
&lt;li&gt;&lt;a href="feature/gson"&gt;gson&lt;/a&gt; — using &lt;a href="https://github.com/google/gson"&gt;Gson&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="feature/jackson"&gt;jackson&lt;/a&gt; — using &lt;a href="https://github.com/FasterXML/jackson"&gt;Jackson&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="feature/json-client"&gt;json-client&lt;/a&gt; — HTTP client with JSON support feature.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dependency Injection
&lt;ul&gt;
&lt;li&gt;&lt;a href="feature/guice"&gt;guice&lt;/a&gt; — using &lt;a href="https://github.com/google/guice"&gt;Guice&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="other/di-kodein"&gt;kodein&lt;/a&gt; — using &lt;a href="https://kodein.org/Kodein-DI/" rel="nofollow"&gt;Kodein&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="feature/locations"&gt;locations&lt;/a&gt; — &lt;em&gt;experimental&lt;/em&gt; locations feature.&lt;/li&gt;
&lt;li&gt;&lt;a href="feature/metrics"&gt;metrics&lt;/a&gt; — metrics feature.&lt;/li&gt;
&lt;li&gt;&lt;a href="feature/http2-push"&gt;http2-push&lt;/a&gt; — HTTP/2 with server-side push.&lt;/li&gt;
&lt;li&gt;&lt;a href="feature/ssl"&gt;ssl&lt;/a&gt; — SSL support.&lt;/li&gt;
&lt;li&gt;&lt;a href="feature/static-content"&gt;static content&lt;/a&gt; — serving static content.&lt;/li&gt;
&lt;li&gt;&lt;a href="feature/testable"&gt;testable&lt;/a&gt; — application writing tests for Ktor applications.&lt;/li&gt;
&lt;li&gt;websocket (tba)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Relatively big sample applications:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="app/chat"&gt;chat&lt;/a&gt; — simple chat application using websockets and sessions.&lt;/li&gt;
&lt;li&gt;&lt;a href="app/httpbin"&gt;httpbin&lt;/a&gt; — application implementing (large parts of) HttpBin(1) HTTP Request &amp;amp; Response Service.&lt;/li&gt;
&lt;li&gt;&lt;a href="app/kweet"&gt;kweet&lt;/a&gt; — messaging application using freemarker templates and experimental locations feature.&lt;/li&gt;
&lt;li&gt;&lt;a href="app/youkube"&gt;youkube&lt;/a&gt; — video upload/view application using &lt;code&gt;kotlinx.html&lt;/code&gt; for rendering and experimental locations feature.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-running-samples" class="anchor" aria-hidden="true" href="#running-samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running samples&lt;/h2&gt;
&lt;p&gt;Each sample can be run with&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew :&amp;lt;sample-name&amp;gt;:run
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then navigate to &lt;a href="http://localhost:8080/" rel="nofollow"&gt;http://localhost:8080/&lt;/a&gt; to see the sample home page.&lt;/p&gt;
&lt;p&gt;Some samples require additional setup as explained in their readme files.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cut-and-pasting-samples" class="anchor" aria-hidden="true" href="#cut-and-pasting-samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cut-and-pasting samples&lt;/h2&gt;
&lt;p&gt;Each sample is a standalone Gradle project that can be cut-and-pasted to get started with your own project.
Cut-and-paste the directory of the corresponding sample together with
its build scripts and add &lt;a href="gradle.properties"&gt;gradle.properties&lt;/a&gt; from the root
that declares Kotlin, Ktor, and other versions. You may remove reference to the versions that
this particular sample does not use.&lt;/p&gt;
&lt;p&gt;Samples with other build systems (Maven) are fully standalone and can be cut-and-pasted to get started.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compact-directory-layout" class="anchor" aria-hidden="true" href="#compact-directory-layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compact directory layout&lt;/h2&gt;
&lt;p&gt;Samples use compact directory layout whenever possible for ease of navigation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt; directory contains sources directly (no &lt;code&gt;src/main/kotlin&lt;/code&gt; and package directories).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;resources&lt;/code&gt; directory contains resources.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;webapp&lt;/code&gt; directory contains &lt;code&gt;WEB-INF&lt;/code&gt; directory for samples that are deployed as WARs.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ktorio</author><guid isPermaLink="false">https://github.com/ktorio/ktor-samples</guid><pubDate>Thu, 30 Jan 2020 00:09:00 GMT</pubDate></item><item><title>skydoves/Rainbow #10 in Kotlin, Today</title><link>https://github.com/skydoves/Rainbow</link><description>&lt;p&gt;&lt;i&gt;🌈 A fluent way to apply gradations and tinting for Android.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-rainbow" class="anchor" aria-hidden="true" href="#rainbow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rainbow&lt;/h1&gt;
&lt;p align="center"&gt;
  &lt;a href="https://opensource.org/licenses/Apache-2.0" rel="nofollow"&gt;&lt;img alt="License" src="https://camo.githubusercontent.com/8051e9938a1ab39cf002818dfceb6b6092f34d68/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667" data-canonical-src="https://img.shields.io/badge/License-Apache%202.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://android-arsenal.com/api?level=16" rel="nofollow"&gt;&lt;img alt="API" src="https://camo.githubusercontent.com/55b9a19ff279154b8859dc8306539aa655413ee9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4150492d31362532422d627269676874677265656e2e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/API-16%2B-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://travis-ci.org/skydoves/Rainbow" rel="nofollow"&gt;&lt;img alt="BuildStatus" src="https://camo.githubusercontent.com/22d01038f81f52afca14ab4f4ad2ceb6174cf56c/68747470733a2f2f7472617669732d63692e6f72672f736b79646f7665732f5261696e626f772e7376673f6272616e63683d6d6173746572" data-canonical-src="https://travis-ci.org/skydoves/Rainbow.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
   &lt;a href="https://androidweekly.net/issues/issue-398" rel="nofollow"&gt;&lt;img alt="Android Weekly" src="https://camo.githubusercontent.com/10c417b5c8485663e91d03ff4d20a6de243eabed/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416e64726f69642532305765656b6c792d2532333339382d6f72616e6765" data-canonical-src="https://img.shields.io/badge/Android%20Weekly-%23398-orange" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://us12.campaign-archive.com/?u=f39692e245b94f7fb693b6d82&amp;amp;id=febdf46615" rel="nofollow"&gt;&lt;img alt="KotlinWeekly" src="https://camo.githubusercontent.com/7d1a427d6ff44f44f180a09091bfbc84e5d7fc7d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4b6f746c696e5765656b6c792d2532333136352d344537314536" data-canonical-src="https://img.shields.io/badge/KotlinWeekly-%23165-4E71E6" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://skydoves.github.io/libraries/rainbow/javadoc/rainbow/com.skydoves.rainbow/index.html" rel="nofollow"&gt;&lt;img alt="Javadoc" src="https://camo.githubusercontent.com/573b8221eef4a6250abe323fb4f3d8e66c7eb314/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a617661646f632d5261696e626f772d79656c6c6f77" data-canonical-src="https://img.shields.io/badge/Javadoc-Rainbow-yellow" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
&lt;g-emoji class="g-emoji" alias="rainbow" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f308.png"&gt;🌈&lt;/g-emoji&gt; An easy way to apply gradations and tinting for Android.
&lt;/p&gt;
&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/24237865/63633474-2a597800-c684-11e9-8aa3-db99575c73e0.png"&gt;&lt;img src="https://user-images.githubusercontent.com/24237865/63633474-2a597800-c684-11e9-8aa3-db99575c73e0.png" width="694" height="235" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-download" class="anchor" aria-hidden="true" href="#download"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://bintray.com/devmagician/maven/rainbow/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f81d1a04cb752950944f60a391dac874262ee809/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6465766d6167696369616e2f6d6176656e2f7261696e626f772f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/devmagician/maven/rainbow/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;
&lt;a href="https://jitpack.io/#skydoves/Rainbow" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fb1eb8d22d31c1cf50fedc9ab3a2d0a437a523e7/68747470733a2f2f6a69747061636b2e696f2f762f736b79646f7665732f5261696e626f772e737667" alt="Jitpack" data-canonical-src="https://jitpack.io/v/skydoves/Rainbow.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-gradle" class="anchor" aria-hidden="true" href="#gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle&lt;/h3&gt;
&lt;p&gt;Add a dependency code to your &lt;strong&gt;module&lt;/strong&gt;'s &lt;code&gt;build.gradle&lt;/code&gt; file.&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;dependencies&lt;/span&gt; {
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.github.skydoves:rainbow:1.0.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;We can apply gradations and tinting to any views easily using &lt;code&gt;Rainbow&lt;/code&gt; class.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-palette" class="anchor" aria-hidden="true" href="#palette"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Palette&lt;/h3&gt;
&lt;p&gt;Palette lambda expression collects colors for creating gradation.&lt;br&gt;
We can collect colors using &lt;code&gt;contextColor&lt;/code&gt; and &lt;code&gt;color&lt;/code&gt; functions.&lt;br&gt;
&lt;code&gt;contextColor&lt;/code&gt; gets a &lt;strong&gt;resource&lt;/strong&gt; color from your &lt;code&gt;colors.xml&lt;/code&gt; file, and &lt;code&gt;color&lt;/code&gt; gets a &lt;strong&gt;ColorInt&lt;/strong&gt; color.&lt;br&gt;
They should be used with &lt;code&gt;+&lt;/code&gt; operator in the palette lambda expression.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;Rainbow&lt;/span&gt;(myCardView).palette { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; constructs a palette for collecting colors.&lt;/span&gt;
  &lt;span class="pl-k"&gt;+&lt;/span&gt;contextColor(&lt;span class="pl-en"&gt;R&lt;/span&gt;.color.red_200) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; getting a color from the resource&lt;/span&gt;
  &lt;span class="pl-k"&gt;+&lt;/span&gt;contextColor(&lt;span class="pl-en"&gt;R&lt;/span&gt;.color.yellow_200)
  &lt;span class="pl-k"&gt;+&lt;/span&gt;contextColor(&lt;span class="pl-en"&gt;R&lt;/span&gt;.color.green_200)
  &lt;span class="pl-k"&gt;+&lt;/span&gt;contextColor(&lt;span class="pl-en"&gt;R&lt;/span&gt;.color.blue_200)
  &lt;span class="pl-k"&gt;+&lt;/span&gt;color(&lt;span class="pl-en"&gt;Color&lt;/span&gt;.&lt;span class="pl-en"&gt;WHITE&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; getting a color&lt;/span&gt;
}.withAlpha(&lt;span class="pl-c1"&gt;225&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; sets alpha (0~255)&lt;/span&gt;
 .foreground() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; applies gradations to myCardView&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is a kotlin-extesion way to apply gradations using &lt;code&gt;View.rainbow()&lt;/code&gt; method to views.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;myLinearLayout.rainbow().palette {
  &lt;span class="pl-k"&gt;+&lt;/span&gt;contextColor(&lt;span class="pl-en"&gt;R&lt;/span&gt;.color.skyBlue)
  &lt;span class="pl-k"&gt;+&lt;/span&gt;contextColor(&lt;span class="pl-en"&gt;R&lt;/span&gt;.color.colorPrimary)
}.background(orientation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;RainbowOrientation&lt;/span&gt;.&lt;span class="pl-en"&gt;TOP_BOTTOM&lt;/span&gt;, radius &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/24237865/63633706-6c37ed80-c687-11e9-9316-b29530c7f1a8.jpg"&gt;&lt;img src="https://user-images.githubusercontent.com/24237865/63633706-6c37ed80-c687-11e9-9316-b29530c7f1a8.jpg" align="right" width="32%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-background-foreground" class="anchor" aria-hidden="true" href="#background-foreground"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Background, Foreground&lt;/h3&gt;
&lt;p&gt;We can apply gradations composed with palette colors to the view's background or foreground.&lt;br&gt;
The &lt;code&gt;forground()&lt;/code&gt; method can be applied to your &lt;code&gt;CardView&lt;/code&gt; or something others.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;Rainbow&lt;/span&gt;(myCardView).palette {
  &lt;span class="pl-k"&gt;+&lt;/span&gt;contextColor(&lt;span class="pl-en"&gt;R&lt;/span&gt;.color.red_200)
  &lt;span class="pl-k"&gt;+&lt;/span&gt;contextColor(&lt;span class="pl-en"&gt;R&lt;/span&gt;.color.yellow_200)
}.background() &lt;span class="pl-k"&gt;or&lt;/span&gt; .foreground()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And we can control the gradient orientation and corner radius. &lt;br&gt;
We can use 8 kinds of orientation which &lt;code&gt;RainbowOrientation&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;background(orientation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;RainbowOrientation&lt;/span&gt;.&lt;span class="pl-en"&gt;RIGHT_LEFT&lt;/span&gt;, radius &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt;)
background(orientation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;RainbowOrientation&lt;/span&gt;.&lt;span class="pl-en"&gt;TOP_BOTTOM&lt;/span&gt;, radius &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;8&lt;/span&gt;)
foreground(&lt;span class="pl-en"&gt;RainbowOrientation&lt;/span&gt;.&lt;span class="pl-en"&gt;DIAGONAL_TOP_LEFT&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;)
foreground(&lt;span class="pl-en"&gt;RainbowOrientation&lt;/span&gt;.&lt;span class="pl-en"&gt;DIAGONAL_BOTTOM_RIGHT&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-tinting" class="anchor" aria-hidden="true" href="#tinting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tinting&lt;/h3&gt;
&lt;p&gt;We can change some kinds of view's tint colors which can be applied tint.&lt;br&gt;
Here are views can be applied tint: TextView(drawable), ImageView, &lt;a href="https://developer.android.com/reference/android/widget/CompoundButton" rel="nofollow"&gt;CompoundButton&lt;/a&gt;, &lt;a href="https://developer.android.com/reference/androidx/core/view/TintableBackgroundView" rel="nofollow"&gt;TintableBackgroundView&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;Rainbow&lt;/span&gt;(myCheckBox).palette {
  &lt;span class="pl-k"&gt;+&lt;/span&gt;contextColor(&lt;span class="pl-en"&gt;R&lt;/span&gt;.color.red_200)
}.tint()&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-drawable" class="anchor" aria-hidden="true" href="#drawable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Drawable&lt;/h3&gt;
&lt;p&gt;We can get a &lt;code&gt;GradientDrawable&lt;/code&gt; using &lt;code&gt;getDrawable&lt;/code&gt; method. &lt;br&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; drawable &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Rainbow&lt;/span&gt;(myCheckBox).palette {
  &lt;span class="pl-k"&gt;+&lt;/span&gt;contextColor(&lt;span class="pl-en"&gt;R&lt;/span&gt;.color.red_200)
  &lt;span class="pl-k"&gt;+&lt;/span&gt;contextColor(&lt;span class="pl-en"&gt;R&lt;/span&gt;.color.yellow_200)
}.getDrawable()&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-rainbowview" class="anchor" aria-hidden="true" href="#rainbowview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RainbowView&lt;/h3&gt;
&lt;p&gt;RainbowView is a gradient view for implementing gradations. &lt;br&gt;&lt;br&gt;
Add following XML namespace inside your XML layout file.&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;xmlns&lt;/span&gt;:app&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://schemas.android.com/apk/res-auto&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/24237865/63634479-f8e7a900-c691-11e9-99b7-c40651a593f0.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/24237865/63634479-f8e7a900-c691-11e9-99b7-c40651a593f0.gif" align="right" width="33%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-rainbowview-in-xml-layout" class="anchor" aria-hidden="true" href="#rainbowview-in-xml-layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RainbowView in xml layout&lt;/h4&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;com.skydoves.rainbow.RainbowView&lt;/span&gt;
  &lt;span class="pl-c1"&gt;android&lt;/span&gt;:id&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@+id/rainbow&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;android&lt;/span&gt;:layout_width&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;match_parent&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;android&lt;/span&gt;:layout_height&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;match_parent&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;app&lt;/span&gt;:rainbowView_colors&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@array/colors&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; colors for gradient.&lt;/span&gt;
  &lt;span class="pl-c1"&gt;app&lt;/span&gt;:rainbowView_orientation&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left_right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; gradient orientation.&lt;/span&gt;
  &lt;span class="pl-c1"&gt;app&lt;/span&gt;:rainbowView_radius&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;12dp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; corner radius.&lt;/span&gt;
&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;rainbowView_colors&lt;/code&gt; attributes gets color list from the color-array from your &lt;code&gt;colors.xml&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;resources&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;color name&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;colorPrimary&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;#&lt;span class="pl-c1"&gt;C51162&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;color&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;..&lt;/span&gt;.
  &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;array name&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;colors&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;item&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;@color/red_100&amp;lt;/item&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;item&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;@color/orange_100&amp;lt;/item&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;item&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;@color/yellow_100&amp;lt;/item&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;item&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;@color/green_100&amp;lt;/item&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;..&lt;/span&gt;.
  &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;array&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;resources&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-binaryrainbowview" class="anchor" aria-hidden="true" href="#binaryrainbowview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BinaryRainbowView&lt;/h3&gt;
&lt;p&gt;BinaryRainbowView is a gradient view for implementing a simple view with gradations.&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;com.skydoves.rainbow.BinaryRainbowView&lt;/span&gt;
  &lt;span class="pl-c1"&gt;android&lt;/span&gt;:layout_width&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;match_parent&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;android&lt;/span&gt;:layout_height&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;80dp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;app&lt;/span&gt;:binaryRainbowView_startColor&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@color/md_green_100&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; starting color of the gradient.&lt;/span&gt;
  &lt;span class="pl-c1"&gt;app&lt;/span&gt;:binaryRainbowView_centerColor&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@color/white&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; center color of the gradient.&lt;/span&gt;
  &lt;span class="pl-c1"&gt;app&lt;/span&gt;:binaryRainbowView_endColor&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@color/skyBlue&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; end color of the gradient.&lt;/span&gt;
  &lt;span class="pl-c1"&gt;app&lt;/span&gt;:binaryRainbowView_orientation&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bottom_top&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; gradient orientation.&lt;/span&gt;
  &lt;span class="pl-c1"&gt;app&lt;/span&gt;:binaryRainbowView_radius&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;12dp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; corner radius&lt;/span&gt;
&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-shuffle" class="anchor" aria-hidden="true" href="#shuffle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shuffle&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;RainbowView&lt;/code&gt; and &lt;code&gt;BinaryRainbowView&lt;/code&gt; provides shuffling the palette colors using &lt;code&gt;shuffleColors()&lt;/code&gt; method. The gradation colors placement will be changed randomly.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;rainbow.shuffleColors()&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-usage-in-java" class="anchor" aria-hidden="true" href="#usage-in-java"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage in Java&lt;/h3&gt;
&lt;p&gt;Here are some usages for Java developers.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Rainbow&lt;/span&gt;(myView)
    .addContextColor(&lt;span class="pl-smi"&gt;R&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;color&lt;span class="pl-k"&gt;.&lt;/span&gt;red_100)
    .addContextColor(&lt;span class="pl-smi"&gt;R&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;color&lt;span class="pl-k"&gt;.&lt;/span&gt;orange_100)
    .addContextColor(&lt;span class="pl-smi"&gt;R&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;color&lt;span class="pl-k"&gt;.&lt;/span&gt;yellow_100)
    .addContextColor(&lt;span class="pl-smi"&gt;R&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;color&lt;span class="pl-k"&gt;.&lt;/span&gt;green_100)
    .withAlpha(&lt;span class="pl-c1"&gt;255&lt;/span&gt;)
    .background(&lt;span class="pl-smi"&gt;RainbowOrientation&lt;/span&gt;&lt;span class="pl-c1"&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;RIGHT_LEFT&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-find-this-library-useful-heart" class="anchor" aria-hidden="true" href="#find-this-library-useful-heart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Find this library useful? &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/h2&gt;
&lt;p&gt;Support it by joining &lt;strong&gt;&lt;a href="https://github.com/skydoves/Rainbow/stargazers"&gt;stargazers&lt;/a&gt;&lt;/strong&gt; for this repository. &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;Copyright 2019 skydoves (Jaewoong Eum)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>skydoves</author><guid isPermaLink="false">https://github.com/skydoves/Rainbow</guid><pubDate>Thu, 30 Jan 2020 00:10:00 GMT</pubDate></item><item><title>tipsy/javalin #11 in Kotlin, Today</title><link>https://github.com/tipsy/javalin</link><description>&lt;p&gt;&lt;i&gt;A simple and modern Java and Kotlin web framework&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://gitter.im/javalin-io/general" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5da57a63e7f5530d87c9221a2b334761fc6cd9ee/68747470733a2f2f6261646765732e6769747465722e696d2f6a6176616c696e2d696f2f67656e6572616c2e737667" alt="Chat at https://gitter.im/javalin-io/general" data-canonical-src="https://badges.gitter.im/javalin-io/general.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/tipsy/javalin/actions"&gt;&lt;img src="https://github.com/tipsy/javalin/workflows/Test%20all%20JDKs%20on%20all%20OSes/badge.svg" alt="Travis" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opensource.org/licenses/Apache-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8051e9938a1ab39cf002818dfceb6b6092f34d68/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/License-Apache%202.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22io.javalin%22%20AND%20a%3A%22javalin%22" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4ce358445605ca09bfd4f76d80ce651b1da67e74/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f696f2e6a6176616c696e2f6a6176616c696e2e737667" alt="Maven" data-canonical-src="https://img.shields.io/maven-central/v/io.javalin/javalin.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-javalin---a-simple-web-framework-for-java-and-kotlin" class="anchor" aria-hidden="true" href="#javalin---a-simple-web-framework-for-java-and-kotlin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Javalin - A simple web framework for Java and Kotlin&lt;/h1&gt;
&lt;p&gt;Javalin is a very lightweight web framework for Kotlin and Java which supports WebSockets, HTTP2 and async requests. Javalin’s main goals are simplicity, a great developer experience, and first class interoperability between Kotlin and Java.&lt;/p&gt;
&lt;p&gt;Javalin is more of a library than a framework. Some key points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You don't need to extend anything&lt;/li&gt;
&lt;li&gt;There are no @Annotations&lt;/li&gt;
&lt;li&gt;There is no reflection&lt;/li&gt;
&lt;li&gt;There is no other magic; just code.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;General information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The project webpage is &lt;a href="https://javalin.io" rel="nofollow"&gt;javalin.io&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Documentation: &lt;a href="https://javalin.io/documentation" rel="nofollow"&gt;javalin.io/documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chat: &lt;a href="https://gitter.im/javalin-io/general" rel="nofollow"&gt;https://gitter.im/javalin-io/general&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Contributions are very welcome: &lt;a href="https://github.com/tipsy/javalin/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;License summary: &lt;a href="https://tldrlegal.com/license/apache-license-2.0-(apache-2.0)" rel="nofollow"&gt;https://tldrlegal.com/license/apache-license-2.0-(apache-2.0)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Interesting issues: &lt;a href="https://github.com/tipsy/javalin/issues?q=is%3Aissue+label%3AINFO"&gt;/tipsy/javalin/issues?q=label:INFO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-add-dependency" class="anchor" aria-hidden="true" href="#add-dependency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add dependency&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-maven" class="anchor" aria-hidden="true" href="#maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven&lt;/h4&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;io.javalin&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;javalin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;3.7.0&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-gradle" class="anchor" aria-hidden="true" href="#gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle&lt;/h4&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;compile &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.javalin:javalin:3.7.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-start-programming-java" class="anchor" aria-hidden="true" href="#start-programming-java"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Start programming (Java)&lt;/h3&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;io.javalin.Javalin&lt;/span&gt;;

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;HelloWorld&lt;/span&gt; {
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;String&lt;/span&gt;[] &lt;span class="pl-v"&gt;args&lt;/span&gt;) {
        &lt;span class="pl-smi"&gt;Javalin&lt;/span&gt; app &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Javalin&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;create()&lt;span class="pl-k"&gt;.&lt;/span&gt;start(&lt;span class="pl-c1"&gt;7000&lt;/span&gt;);
        app&lt;span class="pl-k"&gt;.&lt;/span&gt;get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ctx &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; ctx&lt;span class="pl-k"&gt;.&lt;/span&gt;result(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello World&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-start-programming-kotlin" class="anchor" aria-hidden="true" href="#start-programming-kotlin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Start programming (Kotlin)&lt;/h3&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;io.javalin.Javalin&lt;/span&gt;

&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; app &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Javalin&lt;/span&gt;.create().start(&lt;span class="pl-c1"&gt;7000&lt;/span&gt;)
    app.get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { ctx &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; ctx.result(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello World&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;p&gt;This section contains a few examples, mostly just extracted from the &lt;a href="https://javalin.io/documentation" rel="nofollow"&gt;docs&lt;/a&gt;.
All examples are in Kotlin, but you can find them in Java in the documentation (it's just syntax changes).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-api-structure-and-server-config" class="anchor" aria-hidden="true" href="#api-structure-and-server-config"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Api structure and server config&lt;/h3&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; app &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Javalin&lt;/span&gt;.create { config &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    config.defaultContentType &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;application/json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    config.autogenerateEtags &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
    config.addStaticFiles(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/public&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    config.asyncRequestTimeout &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10_000L&lt;/span&gt;
    config.dynamicGzip &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
    config.enforceSsl &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
}.routes {
    path(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;users&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
        get(&lt;span class="pl-smi"&gt;UserController&lt;/span&gt;::getAll)
        post(&lt;span class="pl-smi"&gt;UserController&lt;/span&gt;::create)
        path(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:user-id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
            get(&lt;span class="pl-smi"&gt;UserController&lt;/span&gt;::getOne)
            patch(&lt;span class="pl-smi"&gt;UserController&lt;/span&gt;::update)
            delete(&lt;span class="pl-smi"&gt;UserController&lt;/span&gt;::delete)
        }
        ws(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;events&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;userController&lt;/span&gt;::webSocketEvents)
    }
}.start(port)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-websockets" class="anchor" aria-hidden="true" href="#websockets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WebSockets&lt;/h3&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;app.ws(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/websocket/:path&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { ws &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    ws.onConnect { ctx &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Connected&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) }
    ws.onMessage { ctx &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;val&lt;/span&gt; user &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.message&amp;lt;&lt;span class="pl-en"&gt;User&lt;/span&gt;&amp;gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; convert from json string to object&lt;/span&gt;
        ctx.send(user); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; convert to json string and send back&lt;/span&gt;
    }
    ws.onClose { ctx &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Closed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) }
    ws.onError { ctx &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Errored&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-filters-and-mappers" class="anchor" aria-hidden="true" href="#filters-and-mappers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Filters and Mappers&lt;/h3&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;app.before(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/some-path/*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { ctx &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;  ... } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; runs before requests to /some-path/*&lt;/span&gt;
app.before { ctx &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; ... } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; runs before all requests&lt;/span&gt;
app.after { ctx &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; ... } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; runs after all requests&lt;/span&gt;
app.exception(&lt;span class="pl-en"&gt;Exception&lt;/span&gt;.&lt;span class="pl-c1"&gt;class&lt;/span&gt;) { e, ctx &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; ... } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; runs if uncaught Exception&lt;/span&gt;
app.error(&lt;span class="pl-c1"&gt;404&lt;/span&gt;) { ctx &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; ... } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; runs if status is 404 (after all other handlers)&lt;/span&gt;

app.wsBefore(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/some-path/*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { ws &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;  ... } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; runs before ws events on /some-path/*&lt;/span&gt;
app.wsBefore { ws &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; ... } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; runs before all ws events&lt;/span&gt;
app.wsAfter { ws &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; ... } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; runs after all ws events&lt;/span&gt;
app.wsException(&lt;span class="pl-en"&gt;Exception&lt;/span&gt;.&lt;span class="pl-c1"&gt;class&lt;/span&gt;) { e, ctx &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; ... } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; runs if uncaught Exception in ws handler&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-json-mapping" class="anchor" aria-hidden="true" href="#json-mapping"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON-mapping&lt;/h3&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; todos &lt;span class="pl-k"&gt;=&lt;/span&gt; arrayOf(...)
app.get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/todos&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { ctx &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; map array of Todos to json-string&lt;/span&gt;
    ctx.json(todos)
}
app.put(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/todos&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { ctx &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; map request-body (json) to array of Todos&lt;/span&gt;
    todos &lt;span class="pl-k"&gt;=&lt;/span&gt; ctx.body&amp;lt;&lt;span class="pl-c1"&gt;Array&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Todo&lt;/span&gt;&amp;gt;&amp;gt;()
    ctx.status(&lt;span class="pl-c1"&gt;204&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-file-uploads" class="anchor" aria-hidden="true" href="#file-uploads"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;File uploads&lt;/h3&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;app.post(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/upload&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { ctx &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    ctx.uploadedFiles(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;files&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).forEach { (contentType, content, name, extension) &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="pl-en"&gt;FileUtil&lt;/span&gt;.streamToFile(content, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;upload/$name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-openapi-swagger" class="anchor" aria-hidden="true" href="#openapi-swagger"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenAPI (Swagger)&lt;/h3&gt;
&lt;p&gt;Javalin has an OpenAPI (Swagger) plugin. Documentation can be enabled both through a DSL and through annotations,
and Javalin can render docs using both SwaggerUI and ReDoc. Read more at &lt;a href="https://javalin.io/plugins/openapi" rel="nofollow"&gt;https://javalin.io/plugins/openapi&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-special-thanks" class="anchor" aria-hidden="true" href="#special-thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special thanks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Blake Mizerany, for creating &lt;a href="http://www.sinatrarb.com/" rel="nofollow"&gt;Sinatra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Per Wendel, for creating &lt;a href="http://sparkjava.com/" rel="nofollow"&gt;Spark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chrrasmussen"&gt;Christian Rasmussen&lt;/a&gt;, for being a great guy&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pkkummermo"&gt;Per Kristian Kummermo&lt;/a&gt;, also for being a great guy&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tipsy</author><guid isPermaLink="false">https://github.com/tipsy/javalin</guid><pubDate>Thu, 30 Jan 2020 00:11:00 GMT</pubDate></item><item><title>nhaarman/mockito-kotlin #12 in Kotlin, Today</title><link>https://github.com/nhaarman/mockito-kotlin</link><description>&lt;p&gt;&lt;i&gt;Using Mockito with Kotlin&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-mockito-kotlin" class="anchor" aria-hidden="true" href="#mockito-kotlin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mockito-Kotlin&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://maven-badges.herokuapp.com/maven-central/com.nhaarman.mockitokotlin2/mockito-kotlin" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/2cabef32cf24397397d8e1f658fda2a369136e8a/68747470733a2f2f6d6176656e2d6261646765732e6865726f6b756170702e636f6d2f6d6176656e2d63656e7472616c2f636f6d2e6e686161726d616e2e6d6f636b69746f6b6f746c696e322f6d6f636b69746f2d6b6f746c696e2f62616467652e737667" alt="Download" data-canonical-src="https://maven-badges.herokuapp.com/maven-central/com.nhaarman.mockitokotlin2/mockito-kotlin/badge.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A small library that provides helper functions to work with &lt;a href="https://github.com/mockito/mockito"&gt;Mockito&lt;/a&gt; in Kotlin.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;Mockito-Kotlin is available on Maven Central and JCenter.
For Gradle users, add the following to your &lt;code&gt;build.gradle&lt;/code&gt;, replacing &lt;code&gt;x.x.x&lt;/code&gt; with the latest version:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;testImplementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.nhaarman.mockitokotlin2:mockito-kotlin:x.x.x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;p&gt;A test using Mockito-Kotlin typically looks like the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@Test&lt;/span&gt;
&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;doAction_doesSomething&lt;/span&gt;(){ 
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Given &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;val&lt;/span&gt; mock &lt;span class="pl-k"&gt;=&lt;/span&gt; mock&amp;lt;&lt;span class="pl-en"&gt;MyClass&lt;/span&gt;&amp;gt; {
    on { getText() } doReturn &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  }
  &lt;span class="pl-k"&gt;val&lt;/span&gt; classUnderTest &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;ClassUnderTest&lt;/span&gt;(mock)
  
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; When &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  classUnderTest.doAction()
  
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Then &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  verify(mock).doSomething(any())
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more info and samples, see the &lt;a href="https://github.com/nhaarman/mockito-kotlin/wiki"&gt;Wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;Mockito-Kotlin is built with Gradle.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;./gradlew build&lt;/code&gt; builds the project&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./gradlew publishToMavenLocal&lt;/code&gt; installs the maven artifacts in your local repository&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./gradlew assemble &amp;amp;&amp;amp; ./gradlew test&lt;/code&gt; runs the test suite (See Testing below)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-versioning" class="anchor" aria-hidden="true" href="#versioning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Versioning&lt;/h3&gt;
&lt;p&gt;Mockito-Kotlin roughly follows SEMVER; version names are parsed from
git tags using &lt;code&gt;git describe&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h3&gt;
&lt;p&gt;Mockito-Kotlin's test suite is located in a separate &lt;code&gt;tests&lt;/code&gt; module,
to allow running the tests using several Kotlin versions whilst still
keeping the base module at a recent version.&lt;/p&gt;
&lt;p&gt;Testing thus must be done in two stages: one to build the base artifact
to test against, and the actual execution of the tests against the
built artifact:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;./gradlew assemble&lt;/code&gt; builds the base artifact&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./gradlew test&lt;/code&gt; runs the tests against the built artifact.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Usually it is enough to test only using the default Kotlin versions;
CI will test against multiple versions.
If you want to test using a different Kotlin version locally, set
an environment variable &lt;code&gt;KOTLIN_VERSION&lt;/code&gt; and run the tests.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>nhaarman</author><guid isPermaLink="false">https://github.com/nhaarman/mockito-kotlin</guid><pubDate>Thu, 30 Jan 2020 00:12:00 GMT</pubDate></item><item><title>Kotlin/kotlinx.serialization #13 in Kotlin, Today</title><link>https://github.com/Kotlin/kotlinx.serialization</link><description>&lt;p&gt;&lt;i&gt;Kotlin multiplatform / multi-format serialization &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-kotlin-cross-platform--multi-format-reflectionless-serialization" class="anchor" aria-hidden="true" href="#kotlin-cross-platform--multi-format-reflectionless-serialization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kotlin cross-platform / multi-format reflectionless serialization&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ffbc2cf12975da475694a83019dce310c45ddd32/68747470733a2f2f6a622e67672f6261646765732f696e63756261746f722e737667" alt="JetBrains incubator project" data-canonical-src="https://jb.gg/badges/incubator.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e7da7b6b632d5ef4bce9a550a5d5cfe400ca1fe/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652532304c6963656e7365253230322e302d626c75652e7376673f7374796c653d666c6174" alt="GitHub license" data-canonical-src="https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://teamcity.jetbrains.com/viewType.html?buildTypeId=KotlinTools_KotlinxSerialization_Ko&amp;amp;guest=1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/24b79a2682cf6998fba9870f2507e2df8c701bb5/68747470733a2f2f696d672e736869656c64732e696f2f7465616d636974792f687474702f7465616d636974792e6a6574627261696e732e636f6d2f732f4b6f746c696e546f6f6c735f4b6f746c696e7853657269616c697a6174696f6e5f4b6f2e737667" alt="TeamCity build" data-canonical-src="https://img.shields.io/teamcity/http/teamcity.jetbrains.com/s/KotlinTools_KotlinxSerialization_Ko.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bintray.com/kotlin/kotlinx/kotlinx.serialization.runtime/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4d87843548743546c9106826021a1f42c95ad60d/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6b6f746c696e2f6b6f746c696e782f6b6f746c696e782e73657269616c697a6174696f6e2e72756e74696d652f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/kotlin/kotlinx/kotlinx.serialization.runtime/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Kotlin serialization consists of a compiler plugin, which automatically produces visitor code for classes, and runtime library, which uses generated code to serialize objects without reflection.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Supports Kotlin classes marked as &lt;code&gt;@Serializable&lt;/code&gt; and standard collections.&lt;/li&gt;
&lt;li&gt;Supports JSON, CBOR, and Protobuf formats out-of-the-box.&lt;/li&gt;
&lt;li&gt;The same code works on Kotlin/JVM, Kotlin/JS and Kotlin/Native&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-runtime-overview" class="anchor" aria-hidden="true" href="#runtime-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Runtime overview&lt;/h2&gt;
&lt;p&gt;This project contains the runtime library. Runtime library provides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Interfaces which are called by compiler-generated code (&lt;code&gt;Encoder&lt;/code&gt;, &lt;code&gt;Decoder&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Basic skeleton implementations of these interfaces in which you should override some methods if you want to
implement custom data format.&lt;/li&gt;
&lt;li&gt;Some internal classes like built-ins and collections serializers.&lt;/li&gt;
&lt;li&gt;Ready-to-use serialization formats.&lt;/li&gt;
&lt;li&gt;Other useful classes that benefit from serialization framework (e.g. object-to-Map transformer)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can open example projects for &lt;a href="examples/example-js"&gt;JS&lt;/a&gt;, &lt;a href="examples/example-jvm"&gt;JVM&lt;/a&gt; or &lt;a href="examples/example-native"&gt;Native&lt;/a&gt; to get started playing with it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#quick-example"&gt;Quick example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#current-project-status"&gt;Current status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setup"&gt;Library installing&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#gradle"&gt;Gradle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gradle-with-plugins-block"&gt;Gradle (with &lt;code&gt;plugins&lt;/code&gt; block)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#androidjvm"&gt;Android/JVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#multiplatform-common-js-native"&gt;Multiplatform (common, JS, Native)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mavenjvm"&gt;Maven/JVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#incompatible-changes"&gt;Incompatible changes from older versions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#troubleshooting-intellij-idea"&gt;Troubleshooting IntelliJ IDEA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/runtime_usage.md"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/examples.md"&gt;More examples of supported Kotlin classes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/custom_serializers.md"&gt;Writing custom serializers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/polymorphism.md"&gt;Multiplatform polymorphic serialization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="formats/README.md"&gt;Add-on formats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/building.md"&gt;Building library and compiler plugin from source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/old12.md"&gt;Instructions for old versions under Kotlin 1.2 and migration guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-quick-example" class="anchor" aria-hidden="true" href="#quick-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick example&lt;/h2&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;kotlinx.serialization.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;kotlinx.serialization.json.*&lt;/span&gt;

&lt;span class="pl-k"&gt;@Serializable&lt;/span&gt;
&lt;span class="pl-k"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Data&lt;/span&gt;(&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;42&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Json also has .Default configuration which provides more reasonable settings,&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; but is subject to change in future versions&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; json &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Json&lt;/span&gt;(&lt;span class="pl-en"&gt;JsonConfiguration&lt;/span&gt;.&lt;span class="pl-en"&gt;Stable&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serializing objects&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; jsonData &lt;span class="pl-k"&gt;=&lt;/span&gt; json.stringify(&lt;span class="pl-en"&gt;Data&lt;/span&gt;.serializer(), &lt;span class="pl-en"&gt;Data&lt;/span&gt;(&lt;span class="pl-c1"&gt;42&lt;/span&gt;))
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serializing lists&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; jsonList &lt;span class="pl-k"&gt;=&lt;/span&gt; json.stringify(&lt;span class="pl-en"&gt;Data&lt;/span&gt;.serializer().list, &lt;span class="pl-c1"&gt;listOf&lt;/span&gt;(&lt;span class="pl-en"&gt;Data&lt;/span&gt;(&lt;span class="pl-c1"&gt;42&lt;/span&gt;)))
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(jsonData) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {"a": 42, "b": "42"}&lt;/span&gt;
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(jsonList) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [{"a": 42, "b": "42"}]&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; parsing data back&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; obj &lt;span class="pl-k"&gt;=&lt;/span&gt; json.parse(&lt;span class="pl-en"&gt;Data&lt;/span&gt;.serializer(), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;{"a":42}&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; b is optional since it has default value&lt;/span&gt;
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(obj) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Data(a=42, b="42")&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To learn more about JSON usage and other formats, see &lt;a href="docs/runtime_usage.md"&gt;usage&lt;/a&gt;.
More examples of various kinds of Kotlin classes that can be serialized can be found &lt;a href="docs/examples.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-current-project-status" class="anchor" aria-hidden="true" href="#current-project-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Current project status&lt;/h2&gt;
&lt;p&gt;Starting from Kotlin 1.3-RC2, serialization plugin is shipped with the rest of Kotlin compiler distribution, and the IDEA plugin is bundled into the Kotlin plugin.&lt;/p&gt;
&lt;p&gt;Runtime library is under reconstruction to match the corresponding &lt;a href="https://github.com/Kotlin/KEEP/blob/serialization/proposals/extensions/serialization.md"&gt;KEEP&lt;/a&gt;, so some features described there can be not implemented yet. While library is stable and has successfully been used in various scenarios, there is no API compatibility guarantees between versions, that's why it is called experimental.
This document describes setup for Kotlin 1.3 and higher. To watch instructions regarding 1.2, follow &lt;a href="docs/old12.md"&gt;this document&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h2&gt;
&lt;p&gt;Using Kotlin Serialization requires Kotlin compiler &lt;code&gt;1.3.30&lt;/code&gt; or higher.
Make sure that you have corresponding Kotlin plugin installed in the IDE.
Since serialization is now bundled into Kotlin plugin, no additional plugins for IDE are required (but make sure you have deleted old additional plugin for 1.2, if you had one).
Example projects on JVM are available for &lt;a href="examples/example-jvm/build.gradle"&gt;Gradle&lt;/a&gt; and &lt;a href="examples/example-jvm/pom.xml"&gt;Maven&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-gradle" class="anchor" aria-hidden="true" href="#gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle&lt;/h3&gt;
&lt;p&gt;You have to add the serialization plugin as the other &lt;a href="https://kotlinlang.org/docs/reference/compiler-plugins.html" rel="nofollow"&gt;compiler plugins&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;buildscript&lt;/span&gt; {
    ext&lt;span class="pl-k"&gt;.&lt;/span&gt;kotlin_version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1.3.60&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    repositories { jcenter() }

    dependencies {
        classpath &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlin:kotlin-gradle-plugin:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;otlin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        classpath &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlin:kotlin-serialization:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;otlin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don't forget to apply the plugin:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;kotlin&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or 'kotlin-multiplatform' for multiplatform projects&lt;/span&gt;
apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;kotlinx-serialization&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, you have to add dependency on the serialization runtime library. Note that while plugin have version the same as compiler one, runtime library has different coordinates, repository and versioning.&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;repositories&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; artifacts are published to JCenter&lt;/span&gt;
    jcenter()
}

&lt;span class="pl-en"&gt;dependencies&lt;/span&gt; {
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlin:kotlin-stdlib:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;otlin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.14.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; JVM dependency&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-gradle-with-plugins-block" class="anchor" aria-hidden="true" href="#gradle-with-plugins-block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle (with &lt;code&gt;plugins&lt;/code&gt; block)&lt;/h3&gt;
&lt;p&gt;You can setup serialization plugin with the kotlin plugin using &lt;a href="https://docs.gradle.org/current/userguide/plugins.html#sec:plugins_block" rel="nofollow"&gt;Gradle plugins DSL&lt;/a&gt; &lt;strong&gt;instead&lt;/strong&gt; of traditional &lt;code&gt;apply plugin&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;plugins&lt;/span&gt; {
    id &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.kotlin.multiplatform&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1.3.60&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or any other kotlin plugin&lt;/span&gt;
    id &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.kotlin.plugin.serialization&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1.3.60&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: plugin marker for serialization has been published in Kotlin 1.3.50. If you need to use the earlier Kotlin version, see &lt;a href="https://youtrack.jetbrains.com/issue/KT-27612" rel="nofollow"&gt;KT-27612&lt;/a&gt; for workaround with &lt;a href="https://docs.gradle.org/current/userguide/plugins.html#sec:plugin_resolution_rules" rel="nofollow"&gt;plugin resolution rules&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Runtime library should be added to dependencies the same way as before.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-androidjvm" class="anchor" aria-hidden="true" href="#androidjvm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android/JVM&lt;/h3&gt;
&lt;p&gt;Library should work on Android "as is". If you're using proguard, you need
to add this to your &lt;code&gt;proguard-rules.pro&lt;/code&gt;:&lt;/p&gt;
&lt;pre lang="proguard"&gt;&lt;code&gt;-keepattributes *Annotation*, InnerClasses
-dontnote kotlinx.serialization.SerializationKt
-keep,includedescriptorclasses class com.yourcompany.yourpackage.**$$serializer { *; } # &amp;lt;-- change package name to your app's
-keepclassmembers class com.yourcompany.yourpackage.** { # &amp;lt;-- change package name to your app's
    *** Companion;
}
-keepclasseswithmembers class com.yourcompany.yourpackage.** { # &amp;lt;-- change package name to your app's
    kotlinx.serialization.KSerializer serializer(...);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You may also want to keep all custom serializers you've defined.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-multiplatform-common-js-native" class="anchor" aria-hidden="true" href="#multiplatform-common-js-native"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiplatform (common, JS, Native)&lt;/h3&gt;
&lt;p&gt;Platform artifacts have the same names as JVM one, but with additional suffix (e.g. &lt;code&gt;org.jetbrains.kotlinx:kotlinx-serialization-runtime-native&lt;/code&gt;). For Native artifact, Gradle metadata is required (put the line &lt;code&gt;enableFeaturePreview('GRADLE_METADATA')&lt;/code&gt; in your &lt;code&gt;gradle.properties&lt;/code&gt;) and minimal supported version of Gradle is 5.3.&lt;/p&gt;
&lt;p&gt;Typically, you need the following dependencies in your multiplatform project (don't forget to rename &lt;a href="https://kotlinlang.org/docs/reference/building-mpp-with-gradle.html#configuring-source-sets" rel="nofollow"&gt;source sets&lt;/a&gt; according to your setup):&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;sourceSets&lt;/span&gt; {
    commonMain {
        dependencies {
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stdlib-common&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
            implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:&lt;span class="pl-smi"&gt;$s&lt;span class="pl-smi"&gt;erialization_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
    }
    commonTest {
        dependencies {
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test-common&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test-annotations-common&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
        }
    }
    jvmMain {
        dependencies {
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stdlib-jdk8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
            implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-serialization-runtime:&lt;span class="pl-smi"&gt;$s&lt;span class="pl-smi"&gt;erialization_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
    }
    jvmTest {
        dependencies {
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test-junit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
        }
    }
    jsMain {
        dependencies {
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stdlib-js&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
            implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:&lt;span class="pl-smi"&gt;$s&lt;span class="pl-smi"&gt;erialization_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
    }
    jsTest {
        dependencies {
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test-js&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
        }
    }
    nativeMain {
        dependencies {
            implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:&lt;span class="pl-smi"&gt;$s&lt;span class="pl-smi"&gt;erialization_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
    }
    nativeTest {}
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;JavaScript example is located at &lt;a href="examples/example-js"&gt;&lt;code&gt;example-js&lt;/code&gt;&lt;/a&gt; folder.
Multiplatform example is located at &lt;a href="examples/example-multiplatform"&gt;&lt;code&gt;example-multiplatform&lt;/code&gt;&lt;/a&gt; folder.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mavenjvm" class="anchor" aria-hidden="true" href="#mavenjvm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven/JVM&lt;/h3&gt;
&lt;p&gt;Ensure the proper version of Kotlin and serialization version:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;properties&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;kotlin&lt;/span&gt;.version&amp;gt;1.3.60&amp;lt;/&lt;span class="pl-ent"&gt;kotlin&lt;/span&gt;.version&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;serialization&lt;/span&gt;.version&amp;gt;0.14.0&amp;lt;/&lt;span class="pl-ent"&gt;serialization&lt;/span&gt;.version&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;properties&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Include kotlinx bintray repository for library:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;repositories&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;repository&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;bintray-kotlin-kotlinx&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;name&lt;/span&gt;&amp;gt;bintray&amp;lt;/&lt;span class="pl-ent"&gt;name&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;https://kotlin.bintray.com/kotlinx&amp;lt;/&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;repository&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;repositories&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You also can use JCenter.&lt;/p&gt;
&lt;p&gt;Add serialization plugin to Kotlin compiler plugin:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;build&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;plugins&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.jetbrains.kotlin&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;kotlin-maven-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${kotlin.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;compile&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;compile&amp;lt;/&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
                        &amp;lt;&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;compile&amp;lt;/&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;
                    &amp;lt;/&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
                &amp;lt;/&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;compilerPlugins&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;kotlinx-serialization&amp;lt;/&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
                &amp;lt;/&lt;span class="pl-ent"&gt;compilerPlugins&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;dependencies&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.jetbrains.kotlin&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;kotlin-maven-serialization&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${kotlin.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
                &amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;dependencies&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;plugins&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;build&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add dependency on serialization runtime library:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.jetbrains.kotlinx&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;kotlinx-serialization-runtime&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${serialization.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-incompatible-changes" class="anchor" aria-hidden="true" href="#incompatible-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Incompatible changes&lt;/h3&gt;
&lt;p&gt;Library versions &lt;code&gt;0.14.0&lt;/code&gt; and higher require Kotlin 1.3.60 and higher and incompatible with previous versions.&lt;/p&gt;
&lt;p&gt;All versions of library before &lt;code&gt;0.13.0&lt;/code&gt; are using Gradle metadata v0.4 and therefore it is recommended to use Gradle 4.8-5.1 to build.&lt;/p&gt;
&lt;p&gt;Library versions &lt;code&gt;0.11.0&lt;/code&gt; and higher require Kotlin 1.3.30 and higher and incompatible with previous versions.&lt;/p&gt;
&lt;p&gt;All versions of library before &lt;code&gt;0.10.0&lt;/code&gt; are using Gradle metadata v0.3 and therefore require Gradle 4.7 for build.&lt;/p&gt;
&lt;p&gt;Maven plugin coordinates before Kotlin 1.3.20 were &lt;code&gt;kotlinx-maven-serialization-plugin&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For deprecated &lt;code&gt;kotlin-platform-native&lt;/code&gt; plugin, you need to use &lt;code&gt;kotlinx-serialization-native&lt;/code&gt; plugin (see &lt;a href="https://github.com/JetBrains/kotlin-native/issues/2210#issuecomment-429753168"&gt;#2210&lt;/a&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting-intellij-idea" class="anchor" aria-hidden="true" href="#troubleshooting-intellij-idea"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting IntelliJ IDEA&lt;/h2&gt;
&lt;p&gt;Serialization support should work out of the box, if you have 1.3.x Kotlin plugin installed and have imported the project from Maven or Gradle with serialization enabled in their buildscripts. If you have Kotlin 1.3.10 or lower, you have to delegate build to Gradle (&lt;code&gt;Settings - Build, Execution, Deployment - Build Tools - Gradle - Runner -&lt;/code&gt; tick &lt;code&gt;Delegate IDE build/run actions to gradle&lt;/code&gt;). Starting from 1.3.11, no delegation is required.
In case of problems, force project re-import from Gradle.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Kotlin</author><guid isPermaLink="false">https://github.com/Kotlin/kotlinx.serialization</guid><pubDate>Thu, 30 Jan 2020 00:13:00 GMT</pubDate></item><item><title>airbnb/MvRx #14 in Kotlin, Today</title><link>https://github.com/airbnb/MvRx</link><description>&lt;p&gt;&lt;i&gt;MvRx: Android on Autopilot&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-mvrx-android-on-autopilot" class="anchor" aria-hidden="true" href="#mvrx-android-on-autopilot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MvRx: Android on Autopilot&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-for-full-documentation-check-out-the-wiki" class="anchor" aria-hidden="true" href="#for-full-documentation-check-out-the-wiki"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For full documentation, check out the &lt;a href="https://github.com/airbnb/MvRx/wiki"&gt;wiki&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;MvRx (pronounced mavericks) is the Android framework from Airbnb that we use for nearly all product development at Airbnb.&lt;/p&gt;
&lt;p&gt;When we began creating MvRx, our goal was not to create yet another architecture pattern for Airbnb, it was to make building products easier, faster, and more fun. All of our decisions have built on that. We believe that for MvRx to be successful, it must be effective for building everything from the simplest of screens to the most complex in our app.&lt;/p&gt;
&lt;p&gt;This is what it looks like:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;HelloWorldState&lt;/span&gt;(&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;title&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello World&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;MvRxState&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;*&lt;/span&gt;
&lt;span class="pl-c"&gt; * Refer to the wiki for how to set up your base ViewModel.&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;HelloWorldViewModel&lt;/span&gt;(&lt;span class="pl-smi"&gt;initialState&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;HelloWorldState&lt;/span&gt;) &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;MyBaseMvRxViewModel&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;HelloWorldState&lt;/span&gt;&amp;gt;(initialState, debugMode &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;BuildConfig&lt;/span&gt;.&lt;span class="pl-en"&gt;DEBUG&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;getMoreExcited&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; setState { copy(title &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$title!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) }
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;HelloWorldFragment&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;BaseFragment&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; viewModel&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;HelloWorldViewModel&lt;/span&gt; by fragmentViewModel()

    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;fun&lt;/span&gt; EpoxyController.&lt;span class="pl-en"&gt;buildModels&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; withState(viewModel) { state &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
        header {
            title(state.title)
        }
        basicRow { 
            onClick { viewModel.getMoreExcited() }
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Gradle is the only supported build configuration, so just add the dependency to your project &lt;code&gt;build.gradle&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;dependencies {
  implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.airbnb.android:mvrx:x.y.z&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The latest version of mvrx is &lt;a href="https://maven-badges.herokuapp.com/maven-central/com.airbnb.android/mvrx" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4613d8f72eb39dcb4b6bad00d083390027e1d266/68747470733a2f2f6d6176656e2d6261646765732e6865726f6b756170702e636f6d2f6d6176656e2d63656e7472616c2f636f6d2e616972626e622e616e64726f69642f6d7672782f62616467652e737667" alt="Maven Central" data-canonical-src="https://maven-badges.herokuapp.com/maven-central/com.airbnb.android/mvrx/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-for-full-documentation-check-out-the-wiki-1" class="anchor" aria-hidden="true" href="#for-full-documentation-check-out-the-wiki-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For full documentation, check out the &lt;a href="https://github.com/airbnb/MvRx/wiki"&gt;wiki&lt;/a&gt;&lt;/h2&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>airbnb</author><guid isPermaLink="false">https://github.com/airbnb/MvRx</guid><pubDate>Thu, 30 Jan 2020 00:14:00 GMT</pubDate></item><item><title>spekframework/spek #15 in Kotlin, Today</title><link>https://github.com/spekframework/spek</link><description>&lt;p&gt;&lt;i&gt;A specification framework for Kotlin&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://dev.azure.com/spekframework/spek/_build/latest?definitionId=1&amp;amp;branchName=2.x" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/c5344a4abb54c3b6557e5b72ac4c280ac1256fae/68747470733a2f2f6465762e617a7572652e636f6d2f7370656b6672616d65776f726b2f7370656b2f5f617069732f6275696c642f7374617475732f7370656b6672616d65776f726b2e7370656b3f6272616e63684e616d653d322e78" alt="Build Status" data-canonical-src="https://dev.azure.com/spekframework/spek/_apis/build/status/spekframework.spek?branchName=2.x" style="max-width:100%;"&gt; &lt;/a&gt;
&lt;a href="https://bintray.com/spekframework/spek/spek2/_latestVersion" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/667e11c02c3236f8e9334dfc766bb9f33939f7ae/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f64796e616d69632f6a736f6e2e7376673f6c6162656c3d737461626c652675726c3d68747470732533412532462532466170692e62696e747261792e636f6d2532467061636b616765732532467370656b6672616d65776f726b2532467370656b2532467370656b3225324676657273696f6e732532465f6c61746573742671756572793d6e616d6526636f6c6f72423d626c7565" alt="Download" data-canonical-src="https://img.shields.io/badge/dynamic/json.svg?label=stable&amp;amp;url=https%3A%2F%2Fapi.bintray.com%2Fpackages%2Fspekframework%2Fspek%2Fspek2%2Fversions%2F_latest&amp;amp;query=name&amp;amp;colorB=blue" style="max-width:100%;"&gt; &lt;/a&gt;
&lt;a href="https://bintray.com/spekframework/spek-dev/spek2/_latestVersion" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/be153c3aa5c1b26041716da77e203f4f8a156929/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f64796e616d69632f6a736f6e2e7376673f6c6162656c3d6465762675726c3d68747470732533412532462532466170692e62696e747261792e636f6d2532467061636b616765732532467370656b6672616d65776f726b2532467370656b2d6465762532467370656b3225324676657273696f6e732532465f6c61746573742671756572793d6e616d6526636f6c6f72423d626c7565" alt="Download" data-canonical-src="https://img.shields.io/badge/dynamic/json.svg?label=dev&amp;amp;url=https%3A%2F%2Fapi.bintray.com%2Fpackages%2Fspekframework%2Fspek-dev%2Fspek2%2Fversions%2F_latest&amp;amp;query=name&amp;amp;colorB=blue" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="spek-logo.png"&gt;&lt;img src="spek-logo.png" alt="Spek Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-a-test-framework-for-kotlin" class="anchor" aria-hidden="true" href="#a-test-framework-for-kotlin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A Test Framework for Kotlin&lt;/h2&gt;
&lt;p&gt;Visit the &lt;a href="http://spekframework.org/" rel="nofollow"&gt;web site&lt;/a&gt; for more documentation and information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-current-state-of-the-project" class="anchor" aria-hidden="true" href="#current-state-of-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Current State of the Project&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Spek &lt;code&gt;2.x&lt;/code&gt; is main development branch, see &lt;a href="https://github.com/spekframework/spek/milestone/3"&gt;2.0.0 Milestone&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Spek &lt;code&gt;1.x&lt;/code&gt; is in support mode, only bug fixes and documentation updates will be merged into 1.x branch.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Copyright (c) 2018, Spek Core Team and Contributors&lt;/p&gt;
&lt;p&gt;Licensed under &lt;a href="https://github.com/JetBrains/spek/blob/2.x/LICENSE.TXT"&gt;Modified BSD&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>spekframework</author><guid isPermaLink="false">https://github.com/spekframework/spek</guid><pubDate>Thu, 30 Jan 2020 00:15:00 GMT</pubDate></item><item><title>JetBrains/Exposed #16 in Kotlin, Today</title><link>https://github.com/JetBrains/Exposed</link><description>&lt;p&gt;&lt;i&gt;Kotlin SQL Framework&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c7357c8edb1815997fc5d3f70135ae6bc179306f/68747470733a2f2f6a622e67672f6261646765732f7465616d2e737667" alt="JetBrains team project" data-canonical-src="https://jb.gg/badges/team.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://kotlinlang.slack.com/archives/C0CG7E0A1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8d44a46fb56e91d37d445517b096ee5b6ef3edb9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736c61636b2d406b6f746c696e6c616e672f6578706f7365642d79656c6c6f772e7376673f6c6f676f3d736c61636b3f7374796c653d666c6174" alt="Kotlinlang Slack Channel" data-canonical-src="https://img.shields.io/badge/slack-@kotlinlang/exposed-yellow.svg?logo=slack?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://teamcity.jetbrains.com/viewType.html?buildTypeId=KotlinTools_Exposed_Build&amp;amp;guest=1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b9bf478598a11f724675f63adf944d3ffbcc2cb0/68747470733a2f2f7465616d636974792e6a6574627261696e732e636f6d2f6170702f726573742f6275696c64732f6275696c64547970653a2869643a4b6f746c696e546f6f6c735f4578706f7365645f4275696c64292f73746174757349636f6e" alt="TC Build status" data-canonical-src="https://teamcity.jetbrains.com/app/rest/builds/buildType:(id:KotlinTools_Exposed_Build)/statusIcon" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bintray.com/kotlin/exposed/exposed-core/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/25e4664ddbf4d2daaf281f2fa70c843ea8dac46c/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6b6f746c696e2f6578706f7365642f6578706f7365642d636f72652f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/kotlin/exposed/exposed-core/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;
&lt;a href="https://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e7da7b6b632d5ef4bce9a550a5d5cfe400ca1fe/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652532304c6963656e7365253230322e302d626c75652e7376673f7374796c653d666c6174" alt="GitHub License" data-canonical-src="https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-exposed---kotlin-sql-library" class="anchor" aria-hidden="true" href="#exposed---kotlin-sql-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exposed - Kotlin SQL Library&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Exposed&lt;/em&gt; is a lightweight SQL library written for &lt;a href="https://github.com/JetBrains/kotlin"&gt;Kotlin&lt;/a&gt; language.
It does have two layers of database access: typesafe SQL wrapping DSL and lightweight data access objects.&lt;/p&gt;
&lt;p&gt;Exposed is currently available for maven/gradle builds at &lt;a href="https://bintray.com/kotlin/exposed/exposed/view#" rel="nofollow"&gt;https://bintray.com/kotlin/exposed/exposed/view#&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can inspect project &lt;a href="ROADMAP.md"&gt;roadmap&lt;/a&gt; to see what's coming next or look into &lt;a href="ChangeLog.md"&gt;Change log&lt;/a&gt; for list of bug fixes and improvements.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dialects" class="anchor" aria-hidden="true" href="#dialects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dialects&lt;/h2&gt;
&lt;p&gt;Currently supported database dialects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PostgreSQL&lt;/li&gt;
&lt;li&gt;MySQL&lt;/li&gt;
&lt;li&gt;MariaDB&lt;/li&gt;
&lt;li&gt;&lt;a href="ORACLE.md"&gt;Oracle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SQLite&lt;/li&gt;
&lt;li&gt;H2&lt;/li&gt;
&lt;li&gt;&lt;a href="SQLServer.md"&gt;SQL Server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-sql-dsl-sample" class="anchor" aria-hidden="true" href="#sql-dsl-sample"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL DSL sample:&lt;/h2&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.jetbrains.exposed.sql.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.jetbrains.exposed.sql.transactions.transaction&lt;/span&gt;

&lt;span class="pl-k"&gt;object&lt;/span&gt; Users &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;Table&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; varchar(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Column&amp;lt;String&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; varchar(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, length &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Column&amp;lt;String&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; cityId &lt;span class="pl-k"&gt;=&lt;/span&gt; (integer(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;city_id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) references &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.id).nullable() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Column&amp;lt;Int?&amp;gt;&lt;/span&gt;

    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; primaryKey &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;PrimaryKey&lt;/span&gt;(id, name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PK_User_ID&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; name is optional here&lt;/span&gt;
}

&lt;span class="pl-k"&gt;object&lt;/span&gt; Cities &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;Table&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; integer(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).autoIncrement() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Column&amp;lt;Int&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; varchar(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;50&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Column&amp;lt;String&amp;gt;&lt;/span&gt;

    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; primaryKey &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;PrimaryKey&lt;/span&gt;(id, name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PK_Cities_ID&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
    &lt;span class="pl-en"&gt;Database&lt;/span&gt;.connect(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jdbc:h2:mem:test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, driver &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.h2.Driver&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, user &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;root&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, password &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

    transaction {
        addLogger(&lt;span class="pl-en"&gt;StdOutSqlLogger&lt;/span&gt;)

        &lt;span class="pl-en"&gt;SchemaUtils&lt;/span&gt;.create (&lt;span class="pl-en"&gt;Cities&lt;/span&gt;, &lt;span class="pl-en"&gt;Users&lt;/span&gt;)

        &lt;span class="pl-k"&gt;val&lt;/span&gt; saintPetersburgId &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.insert {
            it[name] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;St. Petersburg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        } get &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.id

        &lt;span class="pl-k"&gt;val&lt;/span&gt; munichId &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.insert {
            it[name] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Munich&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        } get &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.id

        &lt;span class="pl-k"&gt;val&lt;/span&gt; pragueId &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.insert {
            it.update(name, stringLiteral(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;   Prague   &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).trim().substring(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;))
        }[&lt;span class="pl-en"&gt;Cities&lt;/span&gt;.id]

        &lt;span class="pl-k"&gt;val&lt;/span&gt; pragueName &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.select { &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.id eq pragueId }.single()[&lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name]
        assertEquals(pragueName, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Pr&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

        &lt;span class="pl-en"&gt;Users&lt;/span&gt;.insert {
            it[id] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;andrey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            it[name] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Andrey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            it[&lt;span class="pl-en"&gt;Users&lt;/span&gt;.cityId] &lt;span class="pl-k"&gt;=&lt;/span&gt; saintPetersburgId
        }

        &lt;span class="pl-en"&gt;Users&lt;/span&gt;.insert {
            it[id] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sergey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            it[name] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Sergey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            it[&lt;span class="pl-en"&gt;Users&lt;/span&gt;.cityId] &lt;span class="pl-k"&gt;=&lt;/span&gt; munichId
        }

        &lt;span class="pl-en"&gt;Users&lt;/span&gt;.insert {
            it[id] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;eugene&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            it[name] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Eugene&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            it[&lt;span class="pl-en"&gt;Users&lt;/span&gt;.cityId] &lt;span class="pl-k"&gt;=&lt;/span&gt; munichId
        }

        &lt;span class="pl-en"&gt;Users&lt;/span&gt;.insert {
            it[id] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;alex&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            it[name] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Alex&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            it[&lt;span class="pl-en"&gt;Users&lt;/span&gt;.cityId] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;
        }

        &lt;span class="pl-en"&gt;Users&lt;/span&gt;.insert {
            it[id] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;smth&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            it[name] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Something&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            it[&lt;span class="pl-en"&gt;Users&lt;/span&gt;.cityId] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;
        }

        &lt;span class="pl-en"&gt;Users&lt;/span&gt;.update({ &lt;span class="pl-en"&gt;Users&lt;/span&gt;.id eq &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;alex&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}) {
            it[name] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Alexey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }

        &lt;span class="pl-en"&gt;Users&lt;/span&gt;.deleteWhere{ &lt;span class="pl-en"&gt;Users&lt;/span&gt;.name like &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%thing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}

        &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;All cities:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

        &lt;span class="pl-k"&gt;for&lt;/span&gt; (city &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.selectAll()) {
            &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-e"&gt;${city[&lt;span class="pl-en"&gt;Cities&lt;/span&gt;.id]}&lt;/span&gt;: &lt;span class="pl-e"&gt;${city[&lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name]}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }

        &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Manual join:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        (&lt;span class="pl-en"&gt;Users&lt;/span&gt; innerJoin &lt;span class="pl-en"&gt;Cities&lt;/span&gt;).slice(&lt;span class="pl-en"&gt;Users&lt;/span&gt;.name, &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name).
            select {(&lt;span class="pl-en"&gt;Users&lt;/span&gt;.id.eq(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;andrey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;or&lt;/span&gt; &lt;span class="pl-en"&gt;Users&lt;/span&gt;.name.eq(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Sergey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) &lt;span class="pl-k"&gt;and&lt;/span&gt;
                    &lt;span class="pl-en"&gt;Users&lt;/span&gt;.id.eq(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sergey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;and&lt;/span&gt; &lt;span class="pl-en"&gt;Users&lt;/span&gt;.cityId.eq(&lt;span class="pl-en"&gt;Cities&lt;/span&gt;.id)}.forEach {
            &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-e"&gt;${it[&lt;span class="pl-en"&gt;Users&lt;/span&gt;.name]}&lt;/span&gt; lives in &lt;span class="pl-e"&gt;${it[&lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name]}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }

        &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Join with foreign key:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)


        (&lt;span class="pl-en"&gt;Users&lt;/span&gt; innerJoin &lt;span class="pl-en"&gt;Cities&lt;/span&gt;).slice(&lt;span class="pl-en"&gt;Users&lt;/span&gt;.name, &lt;span class="pl-en"&gt;Users&lt;/span&gt;.cityId, &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name).
                select { &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name.eq(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;St. Petersburg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;or&lt;/span&gt; &lt;span class="pl-en"&gt;Users&lt;/span&gt;.cityId.isNull()}.forEach {
            &lt;span class="pl-k"&gt;if&lt;/span&gt; (it[&lt;span class="pl-en"&gt;Users&lt;/span&gt;.cityId] &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;) {
                &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-e"&gt;${it[&lt;span class="pl-en"&gt;Users&lt;/span&gt;.name]}&lt;/span&gt; lives in &lt;span class="pl-e"&gt;${it[&lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name]}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            }
            &lt;span class="pl-k"&gt;else&lt;/span&gt; {
                &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-e"&gt;${it[&lt;span class="pl-en"&gt;Users&lt;/span&gt;.name]}&lt;/span&gt; lives nowhere&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            }
        }

        &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Functions and group by:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

        ((&lt;span class="pl-en"&gt;Cities&lt;/span&gt; innerJoin &lt;span class="pl-en"&gt;Users&lt;/span&gt;).slice(&lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name, &lt;span class="pl-en"&gt;Users&lt;/span&gt;.id.count()).selectAll().groupBy(&lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name)).forEach {
            &lt;span class="pl-k"&gt;val&lt;/span&gt; cityName &lt;span class="pl-k"&gt;=&lt;/span&gt; it[&lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name]
            &lt;span class="pl-k"&gt;val&lt;/span&gt; userCount &lt;span class="pl-k"&gt;=&lt;/span&gt; it[&lt;span class="pl-en"&gt;Users&lt;/span&gt;.id.count()]

            &lt;span class="pl-k"&gt;if&lt;/span&gt; (userCount &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
                &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$userCount user(s) live(s) in $cityName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
                &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Nobody lives in $cityName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            }
        }

        &lt;span class="pl-en"&gt;SchemaUtils&lt;/span&gt;.drop (&lt;span class="pl-en"&gt;Users&lt;/span&gt;, &lt;span class="pl-en"&gt;Cities&lt;/span&gt;)
    }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Outputs:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    SQL: CREATE TABLE IF NOT EXISTS Cities (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(50) NOT NULL, CONSTRAINT PK_Cities_ID PRIMARY KEY (id))
    SQL: CREATE TABLE IF NOT EXISTS Users (id VARCHAR(10) NOT NULL, name VARCHAR(50) NOT NULL, city_id INT NULL, CONSTRAINT PK_User_ID PRIMARY KEY (id))
    SQL: ALTER TABLE Users ADD FOREIGN KEY (city_id) REFERENCES Cities(id)
    SQL: INSERT INTO Cities (name) VALUES ('St. Petersburg')
    SQL: INSERT INTO Cities (name) VALUES ('Munich')
    SQL: INSERT INTO Cities (name) VALUES ('Prague')
    SQL: INSERT INTO Users (id, name, city_id) VALUES ('andrey', 'Andrey', 1)
    SQL: INSERT INTO Users (id, name, city_id) VALUES ('sergey', 'Sergey', 2)
    SQL: INSERT INTO Users (id, name, city_id) VALUES ('eugene', 'Eugene', 2)
    SQL: INSERT INTO Users (id, name, city_id) VALUES ('alex', 'Alex', NULL)
    SQL: INSERT INTO Users (id, name, city_id) VALUES ('smth', 'Something', NULL)
    SQL: UPDATE Users SET name='Alexey' WHERE Users.id = 'alex'
    SQL: DELETE FROM Users WHERE Users.name LIKE '%thing'
    All cities:
    SQL: SELECT Cities.id, Cities.name FROM Cities
    1: St. Petersburg
    2: Munich
    3: Prague
    Manual join:
    SQL: SELECT Users.name, Cities.name FROM Users INNER JOIN Cities ON Cities.id = Users.city_id WHERE ((Users.id = 'andrey') or (Users.name = 'Sergey')) and Users.id = 'sergey' and Users.city_id = Cities.id
    Sergey lives in Munich
    Join with foreign key:
    SQL: SELECT Users.name, Users.city_id, Cities.name FROM Users INNER JOIN Cities ON Cities.id = Users.city_id WHERE (Cities.name = 'St. Petersburg') or (Users.city_id IS NULL)
    Andrey lives in St. Petersburg
    Functions and group by:
    SQL: SELECT Cities.name, COUNT(Users.id) FROM Cities INNER JOIN Users ON Cities.id = Users.city_id GROUP BY Cities.name
    1 user(s) live(s) in St. Petersburg
    2 user(s) live(s) in Munich
    SQL: DROP TABLE Users
    SQL: DROP TABLE Cities
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-dao-sample" class="anchor" aria-hidden="true" href="#dao-sample"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DAO sample&lt;/h2&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.jetbrains.exposed.dao.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.jetbrains.exposed.dao.id.EntityID&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.jetbrains.exposed.sql.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.jetbrains.exposed.sql.transactions.transaction&lt;/span&gt;

&lt;span class="pl-k"&gt;object&lt;/span&gt; Users &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;IntIdTable&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; varchar(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;50&lt;/span&gt;).index()
    &lt;span class="pl-k"&gt;val&lt;/span&gt; city &lt;span class="pl-k"&gt;=&lt;/span&gt; reference(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;city&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;Cities&lt;/span&gt;)
    &lt;span class="pl-k"&gt;val&lt;/span&gt; age &lt;span class="pl-k"&gt;=&lt;/span&gt; integer(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;object&lt;/span&gt; Cities&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;IntIdTable&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; varchar(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;50&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;User&lt;/span&gt;(&lt;span class="pl-smi"&gt;id&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;EntityID&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;&amp;gt;) &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;IntEntity&lt;/span&gt;(id) {
    &lt;span class="pl-k"&gt;companion&lt;/span&gt; &lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;IntEntityClass&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;User&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;Users&lt;/span&gt;)

    &lt;span class="pl-k"&gt;var&lt;/span&gt; name by &lt;span class="pl-en"&gt;Users&lt;/span&gt;.name
    &lt;span class="pl-k"&gt;var&lt;/span&gt; city by &lt;span class="pl-en"&gt;City&lt;/span&gt; referencedOn &lt;span class="pl-en"&gt;Users&lt;/span&gt;.city
    &lt;span class="pl-k"&gt;var&lt;/span&gt; age by &lt;span class="pl-en"&gt;Users&lt;/span&gt;.age
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;City&lt;/span&gt;(&lt;span class="pl-smi"&gt;id&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;EntityID&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;&amp;gt;) &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;IntEntity&lt;/span&gt;(id) {
    &lt;span class="pl-k"&gt;companion&lt;/span&gt; &lt;span class="pl-k"&gt;object&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;IntEntityClass&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;City&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;Cities&lt;/span&gt;)

    &lt;span class="pl-k"&gt;var&lt;/span&gt; name by &lt;span class="pl-en"&gt;Cities&lt;/span&gt;.name
    &lt;span class="pl-k"&gt;val&lt;/span&gt; users by &lt;span class="pl-en"&gt;User&lt;/span&gt; referrersOn &lt;span class="pl-en"&gt;Users&lt;/span&gt;.city
}

&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
    &lt;span class="pl-en"&gt;Database&lt;/span&gt;.connect(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jdbc:h2:mem:test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, driver &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.h2.Driver&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, user &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;root&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, password &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

    transaction {
        addLogger(&lt;span class="pl-en"&gt;StdOutSqlLogger&lt;/span&gt;)

        &lt;span class="pl-en"&gt;SchemaUtils&lt;/span&gt;.create (&lt;span class="pl-en"&gt;Cities&lt;/span&gt;, &lt;span class="pl-en"&gt;Users&lt;/span&gt;)

        &lt;span class="pl-k"&gt;val&lt;/span&gt; stPete &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;City&lt;/span&gt;.new {
            name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;St. Petersburg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }

        &lt;span class="pl-k"&gt;val&lt;/span&gt; munich &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;City&lt;/span&gt;.new {
            name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Munich&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }

        &lt;span class="pl-en"&gt;User&lt;/span&gt;.new {
            name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            city &lt;span class="pl-k"&gt;=&lt;/span&gt; stPete
            age &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;
        }

        &lt;span class="pl-en"&gt;User&lt;/span&gt;.new {
            name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            city &lt;span class="pl-k"&gt;=&lt;/span&gt; stPete
            age &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;27&lt;/span&gt;
        }

        &lt;span class="pl-en"&gt;User&lt;/span&gt;.new {
            name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            city &lt;span class="pl-k"&gt;=&lt;/span&gt; munich
            age &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;42&lt;/span&gt;
        }

        &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Cities: &lt;span class="pl-e"&gt;${&lt;span class="pl-en"&gt;City&lt;/span&gt;.all().joinToString {it.name}}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Users in &lt;span class="pl-e"&gt;${stPete.name}&lt;/span&gt;: &lt;span class="pl-e"&gt;${stPete.users.joinToString {it.name}}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Adults: &lt;span class="pl-e"&gt;${&lt;span class="pl-en"&gt;User&lt;/span&gt;.find { &lt;span class="pl-en"&gt;Users&lt;/span&gt;.age greaterEq &lt;span class="pl-c1"&gt;18&lt;/span&gt; }.joinToString {it.name}}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Outputs:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    SQL: CREATE TABLE IF NOT EXISTS Cities (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(50) NOT NULL, CONSTRAINT pk_Cities PRIMARY KEY (id))
    SQL: CREATE TABLE IF NOT EXISTS Users (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(50) NOT NULL, city INT NOT NULL, age INT NOT NULL, CONSTRAINT pk_Users PRIMARY KEY (id))
    SQL: CREATE INDEX Users_name ON Users (name)
    SQL: ALTER TABLE Users ADD FOREIGN KEY (city) REFERENCES Cities(id)
    SQL: INSERT INTO Cities (name) VALUES ('St. Petersburg'),('Munich')
    SQL: SELECT Cities.id, Cities.name FROM Cities
    Cities: St. Petersburg, Munich
    SQL: INSERT INTO Users (name, city, age) VALUES ('a', 1, 5),('b', 1, 27),('c', 2, 42)
    SQL: SELECT Users.id, Users.name, Users.city, Users.age FROM Users WHERE Users.city = 1
    Users in St. Petersburg: a, b
    SQL: SELECT Users.id, Users.name, Users.city, Users.age FROM Users WHERE Users.age &amp;gt;= 18
    Adults: b, c
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Find more examples and documentation on the &lt;a href="https://github.com/JetBrains/Exposed/wiki"&gt;wiki&lt;/a&gt;.
If you have any questions feel free to ask at our &lt;a href="https://kotlinlang.slack.com/archives/C0CG7E0A1" rel="nofollow"&gt;#exposed&lt;/a&gt; channel on &lt;a href="https://kotlinlang.slack.com" rel="nofollow"&gt;kotlinlang.slack.com&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>JetBrains</author><guid isPermaLink="false">https://github.com/JetBrains/Exposed</guid><pubDate>Thu, 30 Jan 2020 00:16:00 GMT</pubDate></item><item><title>blokadaorg/blokada #17 in Kotlin, Today</title><link>https://github.com/blokadaorg/blokada</link><description>&lt;p&gt;&lt;i&gt;Free ad blocker for Android with the best open source community.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-blokada-v4" class="anchor" aria-hidden="true" href="#blokada-v4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blokada v4&lt;/h1&gt;
&lt;p&gt;Blokada is a free, open source, compact, fast ad blocker for Android that works for all apps and does not require root because it uses the VPN API&lt;/p&gt;
&lt;p&gt;Want to try out this app? Click here to &lt;strong&gt;&lt;a href="http://go.blokada.org/download_section" rel="nofollow"&gt;download Blokada&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;a href="https://f-droid.org/packages/org.blokada.alarm/" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/376ad76c59e6f46c3069c2765c722d5aa65b2d31/68747470733a2f2f6664726f69642e6769746c61622e696f2f617274776f726b2f62616467652f6765742d69742d6f6e2e706e67" alt="Get it on F-Droid" height="90" data-canonical-src="https://fdroid.gitlab.io/artwork/badge/get-it-on.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-instructions-and-help" class="anchor" aria-hidden="true" href="#instructions-and-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Instructions and help&lt;/h2&gt;
&lt;p&gt;Blokada community welcomes everyone, but before you ask a question, please get yourself familiar with the help content.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://go.blokada.org/faq" rel="nofollow"&gt;Frequently Asked Questions&lt;/a&gt; | &lt;a href="http://go.blokada.org/blog" rel="nofollow"&gt;News and Articles&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;p&gt;We invite you to join any of our networks and stay up to date with the newest developments.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://go.blokada.org/chat" rel="nofollow"&gt;Telegram&lt;/a&gt; | &lt;a href="https://keybase.io/blocka" rel="nofollow"&gt;Keybase&lt;/a&gt; | &lt;a href="https://www.discord.gg/xwVBpgQ" rel="nofollow"&gt;Discord&lt;/a&gt; | &lt;a href="http://go.blokada.org/forum" rel="nofollow"&gt;Forums&lt;/a&gt; | &lt;a href="http://go.blokada.org/social_twitter" rel="nofollow"&gt;Twitter&lt;/a&gt; | &lt;a href="http://go.blokada.org/social_facebook" rel="nofollow"&gt;Facebook&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-issues-and-feature-requests" class="anchor" aria-hidden="true" href="#issues-and-feature-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues and feature requests&lt;/h2&gt;
&lt;p&gt;If you found a bug, or have an idea for new functionality, feel free to report it on the issue tracker - just use search beforehand. Also, check the device and app databases to see if your problem is device or app specific.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://go.blokada.org/issue" rel="nofollow"&gt;Issue tracker&lt;/a&gt; | &lt;a href="http://go.blokada.org/issue_device" rel="nofollow"&gt;Devices Database&lt;/a&gt; | &lt;a href="http://go.blokada.org/issue_app" rel="nofollow"&gt;Apps Database&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-warning-about-fake-websites" class="anchor" aria-hidden="true" href="#warning-about-fake-websites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Warning about fake websites&lt;/h2&gt;
&lt;p&gt;From time to time, some of the malware sites copy our product and try to act as an official site.&lt;/p&gt;
&lt;p&gt;Only the &lt;a href="https://blokada.org" rel="nofollow"&gt;https://blokada.org&lt;/a&gt; is our official and trustworthy website, every other copy or mirror isn't in relation with us, with the Blokada team or our official application.&lt;/p&gt;
&lt;p&gt;The trustworthy sources to download:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://labs.xda-developers.com/store/app/org.blokada.alarm" rel="nofollow"&gt;https://blokada.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://f-droid.org/packages/org.blokada.alarm/" rel="nofollow"&gt;https://f-droid.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://labs.xda-developers.com/store/app/org.blokada.alarm" rel="nofollow"&gt;https://labs.xda-developers.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you find a website that looks like ours, but the URL differs from that, please report it on &lt;a href="https://safebrowsing.google.com/safebrowsing/report_phish/?hl=en" rel="nofollow"&gt;Google SafeBrowsing&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Make the internet a better, safer place together.&lt;/strong&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>blokadaorg</author><guid isPermaLink="false">https://github.com/blokadaorg/blokada</guid><pubDate>Thu, 30 Jan 2020 00:17:00 GMT</pubDate></item><item><title>android/architecture-samples #18 in Kotlin, Today</title><link>https://github.com/android/architecture-samples</link><description>&lt;p&gt;&lt;i&gt;A collection of samples to discuss and showcase different architectural tools and patterns for Android apps.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-android-architecture-blueprints-v2" class="anchor" aria-hidden="true" href="#android-architecture-blueprints-v2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android Architecture Blueprints v2&lt;/h1&gt;
&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/googlesamples/android-architecture/wiki/images/aab-logov2.png"&gt;&lt;img src="https://github.com/googlesamples/android-architecture/wiki/images/aab-logov2.png" alt="Illustration by Virginia Poltrack" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Android Architecture Blueprints is a project to showcase different architectural approaches to developing Android apps. In its different branches you'll find the same app (a TODO app) implemented with small differences.&lt;/p&gt;
&lt;p&gt;In this branch you'll find:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kotlin &lt;strong&gt;&lt;a href="https://kotlinlang.org/docs/reference/coroutines-overview.html" rel="nofollow"&gt;Coroutines&lt;/a&gt;&lt;/strong&gt; for background operations.&lt;/li&gt;
&lt;li&gt;A single-activity architecture, using the &lt;strong&gt;&lt;a href="https://developer.android.com/guide/navigation/navigation-getting-started" rel="nofollow"&gt;Navigation component&lt;/a&gt;&lt;/strong&gt; to manage fragment operations.&lt;/li&gt;
&lt;li&gt;A presentation layer that contains a fragment (View) and a &lt;strong&gt;ViewModel&lt;/strong&gt; per screen (or feature).&lt;/li&gt;
&lt;li&gt;Reactive UIs using &lt;strong&gt;LiveData&lt;/strong&gt; observables and &lt;strong&gt;Data Binding&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;data layer&lt;/strong&gt; with a repository and two data sources (local using Room and remote) that are queried with one-shot operations (no listeners or data streams).&lt;/li&gt;
&lt;li&gt;Two &lt;strong&gt;product flavors&lt;/strong&gt;, &lt;code&gt;mock&lt;/code&gt; and &lt;code&gt;prod&lt;/code&gt;, &lt;a href="https://android-developers.googleblog.com/2015/12/leveraging-product-flavors-in-android.html" rel="nofollow"&gt;to ease development and testing&lt;/a&gt; (except in the Dagger branch).&lt;/li&gt;
&lt;li&gt;A collection of unit, integration and e2e &lt;strong&gt;tests&lt;/strong&gt;, including "shared" tests that can be run on emulator/device or Robolectric.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-variations" class="anchor" aria-hidden="true" href="#variations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Variations&lt;/h2&gt;
&lt;p&gt;This project hosts each sample app in separate repository branches. For more information, see the &lt;code&gt;README.md&lt;/code&gt; file in each branch.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-stable-samples---kotlin" class="anchor" aria-hidden="true" href="#stable-samples---kotlin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stable samples - Kotlin&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Sample&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/googlesamples/android-architecture/tree/master"&gt;master&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;The base for the rest of the branches. &lt;br&gt;Uses Kotlin, Architecture Components, coroutines, Data Binding, etc. and uses Room as source of truth, with a reactive UI.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/googlesamples/android-architecture/tree/dagger-android"&gt;dagger-android&lt;/a&gt;&lt;br&gt;[&lt;a href="https://github.com/googlesamples/android-architecture/compare/dagger-android#files_bucket"&gt;compare&lt;/a&gt;]&lt;/td&gt;
&lt;td&gt;A simple Dagger setup that uses &lt;code&gt;dagger-android&lt;/code&gt; and removes the two flavors.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/googlesamples/android-architecture/tree/usecases"&gt;usecases&lt;/a&gt;&lt;br&gt;[&lt;a href="https://github.com/googlesamples/android-architecture/compare/usecases#files_bucket"&gt;compare&lt;/a&gt;]&lt;/td&gt;
&lt;td&gt;Adds a new domain layer that uses UseCases for business logic.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-old-samples---kotlin-and-java" class="anchor" aria-hidden="true" href="#old-samples---kotlin-and-java"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Old samples - Kotlin and Java&lt;/h3&gt;
&lt;p&gt;Blueprints v1 had a collection of samples that are not maintained anymore, but can still be useful. See &lt;a href="https://github.com/googlesamples/android-architecture/branches"&gt;all project branches&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-why-a-to-do-app" class="anchor" aria-hidden="true" href="#why-a-to-do-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why a to-do app?&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/googlesamples/android-architecture/wiki/images/todoapp.gif"&gt;&lt;img align="right" src="https://github.com/googlesamples/android-architecture/wiki/images/todoapp.gif" alt="A demo illustraating the UI of the app" width="288" height="512" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The app in this project aims to be simple enough that you can understand it quickly, but complex enough to showcase difficult design decisions and testing scenarios. For more information, see the &lt;a href="https://github.com/googlesamples/android-architecture/wiki/To-do-app-specification"&gt;app's specification&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-it-not" class="anchor" aria-hidden="true" href="#what-is-it-not"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is it not?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A UI/Material Design sample. The interface of the app is deliberately kept simple to focus on architecture. Check out &lt;a href="https://github.com/android/plaid"&gt;Plaid&lt;/a&gt; instead.&lt;/li&gt;
&lt;li&gt;A complete Jetpack sample covering all libraries. Check out &lt;a href="https://github.com/googlesamples/android-sunflower"&gt;Android Sunflower&lt;/a&gt; or the advanced &lt;a href="https://github.com/googlesamples/android-architecture-components/tree/master/GithubBrowserSample"&gt;Github Browser Sample&lt;/a&gt; instead.&lt;/li&gt;
&lt;li&gt;A real production app with network access, user authentication, etc. Check out the &lt;a href="https://github.com/google/iosched"&gt;Google I/O app&lt;/a&gt;, &lt;a href="https://github.com/google/santa-tracker-android"&gt;Santa Tracker&lt;/a&gt; or &lt;a href="https://github.com/chrisbanes/tivi"&gt;Tivi&lt;/a&gt; for that.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-who-is-it-for" class="anchor" aria-hidden="true" href="#who-is-it-for"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Who is it for?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Intermediate developers and beginners looking for a way to structure their app in a testable and maintainable way.&lt;/li&gt;
&lt;li&gt;Advanced developers looking for quick reference.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-opening-a-sample-in-android-studio" class="anchor" aria-hidden="true" href="#opening-a-sample-in-android-studio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Opening a sample in Android Studio&lt;/h2&gt;
&lt;p&gt;To open one of the samples in Android Studio, begin by checking out one of the sample branches, and then open the root directory in Android Studio. The following series of steps illustrate how to open the &lt;a href="tree/usecases/"&gt;usecases&lt;/a&gt; sample.&lt;/p&gt;
&lt;p&gt;Clone the repository:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone git@github.com:googlesamples/android-architecture.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This step checks out the master branch. If you want to change to a different sample:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git checkout usecases
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; To review a different sample, replace &lt;code&gt;usecases&lt;/code&gt; with the name of sample you want to check out.&lt;/p&gt;
&lt;p&gt;Finally open the &lt;code&gt;android-architecture/&lt;/code&gt; directory in Android Studio.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Copyright 2019 Google, Inc.

Licensed to the Apache Software Foundation (ASF) under one or more contributor
license agreements. See the NOTICE file distributed with this work for
additional information regarding copyright ownership. The ASF licenses this
file to you under the Apache License, Version 2.0 (the "License"); you may not
use this file except in compliance with the License. You may obtain a copy of
the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations under
the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>android</author><guid isPermaLink="false">https://github.com/android/architecture-samples</guid><pubDate>Thu, 30 Jan 2020 00:18:00 GMT</pubDate></item><item><title>square/okio #19 in Kotlin, Today</title><link>https://github.com/square/okio</link><description>&lt;p&gt;&lt;i&gt;A modern I/O library for Android, Kotlin, and Java.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-okio" class="anchor" aria-hidden="true" href="#okio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Okio&lt;/h1&gt;
&lt;p&gt;See the &lt;a href="https://square.github.io/okio/" rel="nofollow"&gt;project website&lt;/a&gt; for documentation and APIs.&lt;/p&gt;
&lt;p&gt;Okio is a library that complements &lt;code&gt;java.io&lt;/code&gt; and &lt;code&gt;java.nio&lt;/code&gt; to make it much
easier to access, store, and process your data. It started as a component of
&lt;a href="https://github.com/square/okhttp"&gt;OkHttp&lt;/a&gt;, the capable HTTP client included in Android. It's well-exercised
and ready to solve new problems.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bytestrings-and-buffers" class="anchor" aria-hidden="true" href="#bytestrings-and-buffers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ByteStrings and Buffers&lt;/h2&gt;
&lt;p&gt;Okio is built around two types that pack a lot of capability into a
straightforward API:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://square.github.io/okio/2.x/okio/okio/-byte-string/index.html" rel="nofollow"&gt;&lt;strong&gt;ByteString&lt;/strong&gt;&lt;/a&gt; is an immutable sequence of bytes. For character data, &lt;code&gt;String&lt;/code&gt;
is fundamental. &lt;code&gt;ByteString&lt;/code&gt; is String's long-lost brother, making it easy to
treat binary data as a value. This class is ergonomic: it knows how to encode
and decode itself as hex, base64, and UTF-8.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://square.github.io/okio/2.x/okio/okio/-buffer/index.html" rel="nofollow"&gt;&lt;strong&gt;Buffer&lt;/strong&gt;&lt;/a&gt; is a mutable sequence of bytes. Like &lt;code&gt;ArrayList&lt;/code&gt;, you don't need
to size your buffer in advance. You read and write buffers as a queue: write
data to the end and read it from the front. There's no obligation to manage
positions, limits, or capacities.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Internally, &lt;code&gt;ByteString&lt;/code&gt; and &lt;code&gt;Buffer&lt;/code&gt; do some clever things to save CPU and
memory. If you encode a UTF-8 string as a &lt;code&gt;ByteString&lt;/code&gt;, it caches a reference to
that string so that if you decode it later, there's no work to do.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Buffer&lt;/code&gt; is implemented as a linked list of segments. When you move data from
one buffer to another, it &lt;em&gt;reassigns ownership&lt;/em&gt; of the segments rather than
copying the data across. This approach is particularly helpful for multithreaded
programs: a thread that talks to the network can exchange data with a worker
thread without any copying or ceremony.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sources-and-sinks" class="anchor" aria-hidden="true" href="#sources-and-sinks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sources and Sinks&lt;/h2&gt;
&lt;p&gt;An elegant part of the &lt;code&gt;java.io&lt;/code&gt; design is how streams can be layered for
transformations like encryption and compression. Okio includes its own stream
types called &lt;a href="https://square.github.io/okio/2.x/okio/okio/-source/index.html" rel="nofollow"&gt;&lt;code&gt;Source&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://square.github.io/okio/2.x/okio/okio/-sink/index.html" rel="nofollow"&gt;&lt;code&gt;Sink&lt;/code&gt;&lt;/a&gt; that work like &lt;code&gt;InputStream&lt;/code&gt; and
&lt;code&gt;OutputStream&lt;/code&gt;, but with some key differences:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Timeouts.&lt;/strong&gt; The streams provide access to the timeouts of the underlying
I/O mechanism. Unlike the &lt;code&gt;java.io&lt;/code&gt; socket streams, both &lt;code&gt;read()&lt;/code&gt; and
&lt;code&gt;write()&lt;/code&gt; calls honor timeouts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Easy to implement.&lt;/strong&gt; &lt;code&gt;Source&lt;/code&gt; declares three methods: &lt;code&gt;read()&lt;/code&gt;, &lt;code&gt;close()&lt;/code&gt;,
and &lt;code&gt;timeout()&lt;/code&gt;. There are no hazards like &lt;code&gt;available()&lt;/code&gt; or single-byte reads
that cause correctness and performance surprises.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Easy to use.&lt;/strong&gt; Although &lt;em&gt;implementations&lt;/em&gt; of &lt;code&gt;Source&lt;/code&gt; and &lt;code&gt;Sink&lt;/code&gt; have only
three methods to write, &lt;em&gt;callers&lt;/em&gt; are given a rich API with the
&lt;a href="https://square.github.io/okio/2.x/okio/okio/-buffered-source/index.html" rel="nofollow"&gt;&lt;code&gt;BufferedSource&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://square.github.io/okio/2.x/okio/okio/-buffered-sink/index.html" rel="nofollow"&gt;&lt;code&gt;BufferedSink&lt;/code&gt;&lt;/a&gt; interfaces. These interfaces give you
everything you need in one place.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;No artificial distinction between byte streams and char streams.&lt;/strong&gt; It's all
data. Read and write it as bytes, UTF-8 strings, big-endian 32-bit integers,
little-endian shorts; whatever you want. No more &lt;code&gt;InputStreamReader&lt;/code&gt;!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Easy to test.&lt;/strong&gt; The &lt;code&gt;Buffer&lt;/code&gt; class implements both &lt;code&gt;BufferedSource&lt;/code&gt; and
&lt;code&gt;BufferedSink&lt;/code&gt; so your test code is simple and clear.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sources and sinks interoperate with &lt;code&gt;InputStream&lt;/code&gt; and &lt;code&gt;OutputStream&lt;/code&gt;. You can
view any &lt;code&gt;Source&lt;/code&gt; as an &lt;code&gt;InputStream&lt;/code&gt;, and you can view any &lt;code&gt;InputStream&lt;/code&gt; as a
&lt;code&gt;Source&lt;/code&gt;. Similarly for &lt;code&gt;Sink&lt;/code&gt; and &lt;code&gt;OutputStream&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-presentations" class="anchor" aria-hidden="true" href="#presentations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Presentations&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=WvyScM_S88c" rel="nofollow"&gt;A Few “Ok” Libraries&lt;/a&gt; (&lt;a href="https://speakerdeck.com/jakewharton/a-few-ok-libraries-droidcon-mtl-2015" rel="nofollow"&gt;slides&lt;/a&gt;): An introduction to Okio
and three libraries written with it.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=T_p22jMZSrk" rel="nofollow"&gt;Decoding the Secrets of Binary Data&lt;/a&gt; (&lt;a href="https://speakerdeck.com/swankjesse/decoding-the-secrets-of-binary-data-droidcon-nyc-2016" rel="nofollow"&gt;slides&lt;/a&gt;): How data encoding
works and how Okio does it.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Q8B4eDirgk0" rel="nofollow"&gt;Ok Multiplatform!&lt;/a&gt; (&lt;a href="https://speakerdeck.com/swankjesse/ok-multiplatform" rel="nofollow"&gt;slides&lt;/a&gt;): How we changed
Okio’s implementation language from Java to Kotlin.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-recipes" class="anchor" aria-hidden="true" href="#recipes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Recipes&lt;/h2&gt;
&lt;p&gt;We've written some recipes that demonstrate how to solve common problems with
Okio. Read through them to learn about how everything works together.
Cut-and-paste these examples freely; that's what they're for.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-read-a-text-file-line-by-line" class="anchor" aria-hidden="true" href="#read-a-text-file-line-by-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/square/okio/blob/master/samples/src/jvmMain/java/okio/samples/ReadFileLineByLine.java"&gt;Read a text file line-by-line&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Use &lt;code&gt;Okio.source(File)&lt;/code&gt; to open a source stream to read a file. The returned
&lt;code&gt;Source&lt;/code&gt; interface is very small and has limited uses. Instead we wrap the
source with a buffer. This has two benefits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;It makes the API more powerful.&lt;/strong&gt; Instead of the basic methods offered by
&lt;code&gt;Source&lt;/code&gt;, &lt;code&gt;BufferedSource&lt;/code&gt; has dozens of methods to address most common
problems concisely.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;It makes your program run faster.&lt;/strong&gt; Buffering allows Okio to get more done
with fewer I/O operations.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each &lt;code&gt;Source&lt;/code&gt; that is opened needs to be closed. The code that opens the stream
is responsible for making sure it is closed. Here we use Java's &lt;code&gt;try&lt;/code&gt; blocks to
close our sources automatically.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; readLines(&lt;span class="pl-smi"&gt;File&lt;/span&gt; file) throws &lt;span class="pl-smi"&gt;IOException&lt;/span&gt; {
  &lt;span class="pl-k"&gt;try&lt;/span&gt; (&lt;span class="pl-smi"&gt;Source&lt;/span&gt; fileSource &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Okio&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;source(file);
       &lt;span class="pl-smi"&gt;BufferedSource&lt;/span&gt; bufferedSource &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Okio&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;buffer(fileSource)) {

    &lt;span class="pl-k"&gt;while&lt;/span&gt; (&lt;span class="pl-c1"&gt;true&lt;/span&gt;) {
      &lt;span class="pl-smi"&gt;String&lt;/span&gt; line &lt;span class="pl-k"&gt;=&lt;/span&gt; bufferedSource&lt;span class="pl-k"&gt;.&lt;/span&gt;readUtf8Line();
      &lt;span class="pl-k"&gt;if&lt;/span&gt; (line &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;) &lt;span class="pl-k"&gt;break&lt;/span&gt;;

      &lt;span class="pl-k"&gt;if&lt;/span&gt; (line&lt;span class="pl-k"&gt;.&lt;/span&gt;contains(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;square&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) {
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(line);
      }
    }

  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;readUtf8Line()&lt;/code&gt; API reads all of the data until the next line delimiter –
either &lt;code&gt;\n&lt;/code&gt;, &lt;code&gt;\r\n&lt;/code&gt;, or the end of the file. It returns that data as a string,
omitting the delimiter at the end. When it encounters empty lines the method
will return an empty string. If there isn’t any more data to read it will
return null.&lt;/p&gt;
&lt;p&gt;The above program can be written more compactly by inlining the &lt;code&gt;fileSource&lt;/code&gt;
variable and by using a fancy &lt;code&gt;for&lt;/code&gt; loop instead of a &lt;code&gt;while&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; readLines(&lt;span class="pl-smi"&gt;File&lt;/span&gt; file) throws &lt;span class="pl-smi"&gt;IOException&lt;/span&gt; {
  &lt;span class="pl-k"&gt;try&lt;/span&gt; (&lt;span class="pl-smi"&gt;BufferedSource&lt;/span&gt; source &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Okio&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;buffer(&lt;span class="pl-smi"&gt;Okio&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;source(file))) {
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;String&lt;/span&gt; line; (line &lt;span class="pl-k"&gt;=&lt;/span&gt; source&lt;span class="pl-k"&gt;.&lt;/span&gt;readUtf8Line()) &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;; ) {
      &lt;span class="pl-k"&gt;if&lt;/span&gt; (line&lt;span class="pl-k"&gt;.&lt;/span&gt;contains(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;square&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) {
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(line);
      }
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;readUtf8Line()&lt;/code&gt; method is suitable for parsing most files. For certain
use-cases you may also consider &lt;code&gt;readUtf8LineStrict()&lt;/code&gt;. It is similar but it
requires that each line is terminated by &lt;code&gt;\n&lt;/code&gt; or &lt;code&gt;\r\n&lt;/code&gt;. If it encounters the
end of the file before that it will throw an &lt;code&gt;EOFException&lt;/code&gt;. The strict variant
also permits a byte limit to defend against malformed input.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; readLines(&lt;span class="pl-smi"&gt;File&lt;/span&gt; file) throws &lt;span class="pl-smi"&gt;IOException&lt;/span&gt; {
  &lt;span class="pl-k"&gt;try&lt;/span&gt; (&lt;span class="pl-smi"&gt;BufferedSource&lt;/span&gt; source &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Okio&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;buffer(&lt;span class="pl-smi"&gt;Okio&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;source(file))) {
    &lt;span class="pl-k"&gt;while&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;source&lt;span class="pl-k"&gt;.&lt;/span&gt;exhausted()) {
      &lt;span class="pl-smi"&gt;String&lt;/span&gt; line &lt;span class="pl-k"&gt;=&lt;/span&gt; source&lt;span class="pl-k"&gt;.&lt;/span&gt;readUtf8LineStrict(&lt;span class="pl-c1"&gt;1024L&lt;/span&gt;);
      &lt;span class="pl-k"&gt;if&lt;/span&gt; (line&lt;span class="pl-k"&gt;.&lt;/span&gt;contains(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;square&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) {
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(line);
      }
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-write-a-text-file" class="anchor" aria-hidden="true" href="#write-a-text-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/square/okio/blob/master/samples/src/jvmMain/java/okio/samples/WriteFile.java"&gt;Write a text file&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Above we used a &lt;code&gt;Source&lt;/code&gt; and a &lt;code&gt;BufferedSource&lt;/code&gt; to read a file. To write, we use
a &lt;code&gt;Sink&lt;/code&gt; and a &lt;code&gt;BufferedSink&lt;/code&gt;. The advantages of buffering are the same: a more
capable API and better performance.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; writeEnv(&lt;span class="pl-smi"&gt;File&lt;/span&gt; file) throws &lt;span class="pl-smi"&gt;IOException&lt;/span&gt; {
  &lt;span class="pl-k"&gt;try&lt;/span&gt; (&lt;span class="pl-smi"&gt;Sink&lt;/span&gt; fileSink &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Okio&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;sink(file);
       &lt;span class="pl-smi"&gt;BufferedSink&lt;/span&gt; bufferedSink &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Okio&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;buffer(fileSink)) {

    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;Map&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-k"&gt;Entry&amp;lt;&lt;span class="pl-smi"&gt;String&lt;/span&gt;, &lt;span class="pl-smi"&gt;String&lt;/span&gt;&amp;gt;&lt;/span&gt; entry &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;getenv()&lt;span class="pl-k"&gt;.&lt;/span&gt;entrySet()) {
      bufferedSink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeUtf8(entry&lt;span class="pl-k"&gt;.&lt;/span&gt;getKey());
      bufferedSink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeUtf8(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;=&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
      bufferedSink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeUtf8(entry&lt;span class="pl-k"&gt;.&lt;/span&gt;getValue());
      bufferedSink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeUtf8(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    }

  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There isn’t an API to write a line of input; instead we manually insert our own
newline character. Most programs should hardcode &lt;code&gt;"\n"&lt;/code&gt; as the newline
character. In rare situations you may use &lt;code&gt;System.lineSeparator()&lt;/code&gt; instead of
&lt;code&gt;"\n"&lt;/code&gt;: it returns &lt;code&gt;"\r\n"&lt;/code&gt; on Windows and &lt;code&gt;"\n"&lt;/code&gt; everywhere else.&lt;/p&gt;
&lt;p&gt;We can write the above program more compactly by inlining the &lt;code&gt;fileSink&lt;/code&gt;
variable and by taking advantage of method chaining:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; writeEnv(&lt;span class="pl-smi"&gt;File&lt;/span&gt; file) throws &lt;span class="pl-smi"&gt;IOException&lt;/span&gt; {
  &lt;span class="pl-k"&gt;try&lt;/span&gt; (&lt;span class="pl-smi"&gt;BufferedSink&lt;/span&gt; sink &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Okio&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;buffer(&lt;span class="pl-smi"&gt;Okio&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;sink(file))) {
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;Map&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-k"&gt;Entry&amp;lt;&lt;span class="pl-smi"&gt;String&lt;/span&gt;, &lt;span class="pl-smi"&gt;String&lt;/span&gt;&amp;gt;&lt;/span&gt; entry &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;getenv()&lt;span class="pl-k"&gt;.&lt;/span&gt;entrySet()) {
      sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeUtf8(entry&lt;span class="pl-k"&gt;.&lt;/span&gt;getKey())
          .writeUtf8(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;=&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
          .writeUtf8(entry&lt;span class="pl-k"&gt;.&lt;/span&gt;getValue())
          .writeUtf8(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the above code we make four calls to &lt;code&gt;writeUtf8()&lt;/code&gt;. Making four calls is
more efficient than the code below because the VM doesn’t have to create and
garbage collect a temporary string.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeUtf8(entry&lt;span class="pl-k"&gt;.&lt;/span&gt;getKey() &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;=&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; entry&lt;span class="pl-k"&gt;.&lt;/span&gt;getValue() &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Slower!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-utf-8" class="anchor" aria-hidden="true" href="#utf-8"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/square/okio/blob/master/samples/src/jvmMain/java/okio/samples/ExploreCharsets.java"&gt;UTF-8&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In the above APIs you can see that Okio really likes UTF-8. Early computer
systems suffered many incompatible character encodings: ISO-8859-1, ShiftJIS,
ASCII, EBCDIC, etc. Writing software to support multiple character sets was
awful and we didn’t even have emoji! Today we're lucky that the world has
standardized on UTF-8 everywhere, with some rare uses of other charsets in
legacy systems.&lt;/p&gt;
&lt;p&gt;If you need another character set, &lt;code&gt;readString()&lt;/code&gt; and &lt;code&gt;writeString()&lt;/code&gt; are there
for you. These methods require that you specify a character set. Otherwise you
may accidentally create data that is only readable by the local computer. Most
programs should use the UTF-8 methods only.&lt;/p&gt;
&lt;p&gt;When encoding strings you need to be mindful of the different ways that strings
are represented and encoded. When a glyph has an accent or another adornment
it may be represented as a single complex code point (&lt;code&gt;é&lt;/code&gt;) or as a simple code
point (&lt;code&gt;e&lt;/code&gt;) followed by its modifiers (&lt;code&gt;´&lt;/code&gt;). When the entire glyph is a single
code point that’s called &lt;a href="https://docs.oracle.com/javase/7/docs/api/java/text/Normalizer.Form.html#NFC" rel="nofollow"&gt;NFC&lt;/a&gt;; when it’s multiple it’s &lt;a href="https://docs.oracle.com/javase/7/docs/api/java/text/Normalizer.Form.html#NFD" rel="nofollow"&gt;NFD&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Though we use UTF-8 whenever we read or write strings in I/O, when they are in
memory Java Strings use an obsolete character encoding called UTF-16. It is a
bad encoding because it uses a 16-bit &lt;code&gt;char&lt;/code&gt; for most characters, but some don’t
fit. In particular, most emoji use two Java chars. This is problematic because
&lt;code&gt;String.length()&lt;/code&gt; returns a surprising result: the number of UTF-16 chars and
not the natural number of glyphs.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="right"&gt;&lt;/th&gt;
&lt;th align="left"&gt;Café &lt;g-emoji class="g-emoji" alias="doughnut" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f369.png"&gt;🍩&lt;/g-emoji&gt;&lt;/th&gt;
&lt;th align="left"&gt;Café &lt;g-emoji class="g-emoji" alias="doughnut" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f369.png"&gt;🍩&lt;/g-emoji&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="right"&gt;Form&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.oracle.com/javase/7/docs/api/java/text/Normalizer.Form.html#NFC" rel="nofollow"&gt;NFC&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.oracle.com/javase/7/docs/api/java/text/Normalizer.Form.html#NFD" rel="nofollow"&gt;NFD&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;Code Points&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;c  a  f  é    ␣   🍩     &lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;c  a  f  e  ´    ␣   🍩     &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;UTF-8 bytes&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;43 61 66 c3a9 20 f09f8da9&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;43 61 66 65 cc81 20 f09f8da9&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;String.codePointCount&lt;/td&gt;
&lt;td align="left"&gt;6&lt;/td&gt;
&lt;td align="left"&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;String.length&lt;/td&gt;
&lt;td align="left"&gt;7&lt;/td&gt;
&lt;td align="left"&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;Utf8.size&lt;/td&gt;
&lt;td align="left"&gt;10&lt;/td&gt;
&lt;td align="left"&gt;11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;For the most part Okio lets you ignore these problems and focus on your data.
But when you need them, there are convenient APIs for dealing with low-level
UTF-8 strings.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;Utf8.size()&lt;/code&gt; to count the number of bytes required to encode a string as
UTF-8 without actually encoding it. This is handy in length-prefixed encodings
like protocol buffers.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;BufferedSource.readUtf8CodePoint()&lt;/code&gt; to read a single variable-length code
point, and &lt;code&gt;BufferedSink.writeUtf8CodePoint()&lt;/code&gt; to write one.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-golden-values" class="anchor" aria-hidden="true" href="#golden-values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/square/okio/blob/master/samples/src/jvmMain/java/okio/samples/GoldenValue.java"&gt;Golden Values&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Okio likes testing. The library itself is heavily tested, and it has features
that are often helpful when testing application code. One pattern we’ve found to
be quite useful is “golden value” testing. The goal of such tests is to confirm
that data encoded with earlier versions of a program can safely be decoded by
the current program.&lt;/p&gt;
&lt;p&gt;We’ll illustrate this by encoding a value using Java Serialization. Though we
must disclaim that Java Serialization is an awful encoding system and most
programs should prefer other formats like JSON or protobuf! In any case, here’s
a method that takes an object, serializes it, and returns the result as a
&lt;code&gt;ByteString&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-smi"&gt;ByteString&lt;/span&gt; serialize(&lt;span class="pl-smi"&gt;Object&lt;/span&gt; o) throws &lt;span class="pl-smi"&gt;IOException&lt;/span&gt; {
  &lt;span class="pl-smi"&gt;Buffer&lt;/span&gt; buffer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Buffer&lt;/span&gt;();
  &lt;span class="pl-k"&gt;try&lt;/span&gt; (&lt;span class="pl-smi"&gt;ObjectOutputStream&lt;/span&gt; objectOut &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;ObjectOutputStream&lt;/span&gt;(buffer&lt;span class="pl-k"&gt;.&lt;/span&gt;outputStream())) {
    objectOut&lt;span class="pl-k"&gt;.&lt;/span&gt;writeObject(o);
  }
  &lt;span class="pl-k"&gt;return&lt;/span&gt; buffer&lt;span class="pl-k"&gt;.&lt;/span&gt;readByteString();
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There’s a lot going on here.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We create a buffer as a holding space for our serialized data. It’s a convenient
replacement for &lt;code&gt;ByteArrayOutputStream&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We ask the buffer for its output stream. Writes to a buffer or its output stream
always append data to the end of the buffer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We create an &lt;code&gt;ObjectOutputStream&lt;/code&gt; (the encoding API for Java serialization) and
write our object. The try block takes care of closing the stream for us. Note
that closing a buffer has no effect.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finally we read a byte string from the buffer. The &lt;code&gt;readByteString()&lt;/code&gt; method
allows us to specify how many bytes to read; here we don’t specify a count in
order to read the entire thing. Reads from a buffer always consume data from
the front of the buffer.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;With our &lt;code&gt;serialize()&lt;/code&gt; method handy we are ready to compute and print a golden
value.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;Point&lt;/span&gt; point &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Point&lt;/span&gt;(&lt;span class="pl-c1"&gt;8.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;15.0&lt;/span&gt;);
&lt;span class="pl-smi"&gt;ByteString&lt;/span&gt; pointBytes &lt;span class="pl-k"&gt;=&lt;/span&gt; serialize(point);
&lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;out&lt;span class="pl-k"&gt;.&lt;/span&gt;println(pointBytes&lt;span class="pl-k"&gt;.&lt;/span&gt;base64());&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We print the &lt;code&gt;ByteString&lt;/code&gt; as &lt;a href="https://tools.ietf.org/html/rfc4648#section-4" rel="nofollow"&gt;base64&lt;/a&gt; because it’s a compact format
that’s suitable for embedding in a test case. The program prints this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rO0ABXNyAB5va2lvLnNhbXBsZXMuR29sZGVuVmFsdWUkUG9pbnTdUW8rMji1IwIAAkQAAXhEAAF5eHBAIAAAAAAAAEAuAAAAAAAA
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That’s our golden value! We can embed it in our test case using base64 again
to convert it back into a &lt;code&gt;ByteString&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ByteString&lt;/span&gt; goldenBytes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;ByteString&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;decodeBase64(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rO0ABXNyAB5va2lvLnNhbXBsZ&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;XMuR29sZGVuVmFsdWUkUG9pbnTdUW8rMji1IwIAAkQAAXhEAAF5eHBAIAAAAAAAAEAuA&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;AAAAAAA&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The next step is to deserialize the &lt;code&gt;ByteString&lt;/code&gt; back into our value class. This
method reverses the &lt;code&gt;serialize()&lt;/code&gt; method above: we append a byte string to a
buffer then consume it using an &lt;code&gt;ObjectInputStream&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-smi"&gt;Object&lt;/span&gt; deserialize(&lt;span class="pl-smi"&gt;ByteString&lt;/span&gt; byteString) throws &lt;span class="pl-smi"&gt;IOException&lt;/span&gt;, &lt;span class="pl-smi"&gt;ClassNotFoundException&lt;/span&gt; {
  &lt;span class="pl-smi"&gt;Buffer&lt;/span&gt; buffer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Buffer&lt;/span&gt;();
  buffer&lt;span class="pl-k"&gt;.&lt;/span&gt;write(byteString);
  &lt;span class="pl-k"&gt;try&lt;/span&gt; (&lt;span class="pl-smi"&gt;ObjectInputStream&lt;/span&gt; objectIn &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;ObjectInputStream&lt;/span&gt;(buffer&lt;span class="pl-k"&gt;.&lt;/span&gt;inputStream())) {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; objectIn&lt;span class="pl-k"&gt;.&lt;/span&gt;readObject();
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we can test the decoder against the golden value:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ByteString&lt;/span&gt; goldenBytes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;ByteString&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;decodeBase64(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rO0ABXNyAB5va2lvLnNhbXBsZ&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;XMuR29sZGVuVmFsdWUkUG9pbnTdUW8rMji1IwIAAkQAAXhEAAF5eHBAIAAAAAAAAEAuA&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;AAAAAAA&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-smi"&gt;Point&lt;/span&gt; decoded &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-smi"&gt;Point&lt;/span&gt;) deserialize(goldenBytes);
assertEquals(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Point&lt;/span&gt;(&lt;span class="pl-c1"&gt;8.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;15.0&lt;/span&gt;), decoded);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With this test we can change the serialization of the &lt;code&gt;Point&lt;/code&gt; class without
breaking compatibility.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-write-a-binary-file" class="anchor" aria-hidden="true" href="#write-a-binary-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/square/okio/blob/master/samples/src/jvmMain/java/okio/samples/BitmapEncoder.java"&gt;Write a binary file&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Encoding a binary file is not unlike encoding a text file. Okio uses the same
&lt;code&gt;BufferedSink&lt;/code&gt; and &lt;code&gt;BufferedSource&lt;/code&gt; bytes for both. This is handy for binary
formats that include both byte and character data.&lt;/p&gt;
&lt;p&gt;Writing binary data is more hazardous than text because if you make a mistake it
is often quite difficult to diagnose. Avoid such mistakes by being careful
around these traps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The width of each field.&lt;/strong&gt; This is the number of bytes used. Okio doesn't
include a mechanism to emit partial bytes. If you need that, you’ll need to
do your own bit shifting and masking before writing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The endianness of each field.&lt;/strong&gt; All fields that have more than one byte
have &lt;em&gt;endianness&lt;/em&gt;: whether the bytes are ordered most-significant to least
(big endian) or least-significant to most (little endian). Okio uses the &lt;code&gt;Le&lt;/code&gt;
suffix for little-endian methods; methods without a suffix are big-endian.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Signed vs. Unsigned.&lt;/strong&gt; Java doesn’t have unsigned primitive types (except
for &lt;code&gt;char&lt;/code&gt;!) so coping with this is often something that happens at the
application layer. To make this a little easier Okio accepts &lt;code&gt;int&lt;/code&gt; types for
&lt;code&gt;writeByte()&lt;/code&gt; and &lt;code&gt;writeShort()&lt;/code&gt;. You can pass an “unsigned” byte like 255
and Okio will do the right thing.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Method&lt;/th&gt;
&lt;th align="right"&gt;Width&lt;/th&gt;
&lt;th align="left"&gt;Endianness&lt;/th&gt;
&lt;th align="right"&gt;Value&lt;/th&gt;
&lt;th align="left"&gt;Encoded Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;writeByte&lt;/td&gt;
&lt;td align="right"&gt;1&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="right"&gt;3&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;03&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;writeShort&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="left"&gt;big&lt;/td&gt;
&lt;td align="right"&gt;3&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;00 03&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;writeInt&lt;/td&gt;
&lt;td align="right"&gt;4&lt;/td&gt;
&lt;td align="left"&gt;big&lt;/td&gt;
&lt;td align="right"&gt;3&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;00 00 00 03&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;writeLong&lt;/td&gt;
&lt;td align="right"&gt;8&lt;/td&gt;
&lt;td align="left"&gt;big&lt;/td&gt;
&lt;td align="right"&gt;3&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;00 00 00 00 00 00 00 03&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;writeShortLe&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="left"&gt;little&lt;/td&gt;
&lt;td align="right"&gt;3&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;03 00&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;writeIntLe&lt;/td&gt;
&lt;td align="right"&gt;4&lt;/td&gt;
&lt;td align="left"&gt;little&lt;/td&gt;
&lt;td align="right"&gt;3&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;03 00 00 00&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;writeLongLe&lt;/td&gt;
&lt;td align="right"&gt;8&lt;/td&gt;
&lt;td align="left"&gt;little&lt;/td&gt;
&lt;td align="right"&gt;3&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;03 00 00 00 00 00 00 00&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;writeByte&lt;/td&gt;
&lt;td align="right"&gt;1&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="right"&gt;Byte.MAX_VALUE&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;7f&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;writeShort&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="left"&gt;big&lt;/td&gt;
&lt;td align="right"&gt;Short.MAX_VALUE&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;7f ff&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;writeInt&lt;/td&gt;
&lt;td align="right"&gt;4&lt;/td&gt;
&lt;td align="left"&gt;big&lt;/td&gt;
&lt;td align="right"&gt;Int.MAX_VALUE&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;7f ff ff ff&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;writeLong&lt;/td&gt;
&lt;td align="right"&gt;8&lt;/td&gt;
&lt;td align="left"&gt;big&lt;/td&gt;
&lt;td align="right"&gt;Long.MAX_VALUE&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;7f ff ff ff ff ff ff ff&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;writeShortLe&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="left"&gt;little&lt;/td&gt;
&lt;td align="right"&gt;Short.MAX_VALUE&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;ff 7f&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;writeIntLe&lt;/td&gt;
&lt;td align="right"&gt;4&lt;/td&gt;
&lt;td align="left"&gt;little&lt;/td&gt;
&lt;td align="right"&gt;Int.MAX_VALUE&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;ff ff ff 7f&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;writeLongLe&lt;/td&gt;
&lt;td align="right"&gt;8&lt;/td&gt;
&lt;td align="left"&gt;little&lt;/td&gt;
&lt;td align="right"&gt;Long.MAX_VALUE&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;ff ff ff ff ff ff ff 7f&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This code encodes a bitmap following the &lt;a href="https://en.wikipedia.org/wiki/BMP_file_format" rel="nofollow"&gt;BMP file format&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;void&lt;/span&gt; encode(&lt;span class="pl-smi"&gt;Bitmap&lt;/span&gt; bitmap, &lt;span class="pl-smi"&gt;BufferedSink&lt;/span&gt; sink) throws &lt;span class="pl-smi"&gt;IOException&lt;/span&gt; {
  &lt;span class="pl-k"&gt;int&lt;/span&gt; height &lt;span class="pl-k"&gt;=&lt;/span&gt; bitmap&lt;span class="pl-k"&gt;.&lt;/span&gt;height();
  &lt;span class="pl-k"&gt;int&lt;/span&gt; width &lt;span class="pl-k"&gt;=&lt;/span&gt; bitmap&lt;span class="pl-k"&gt;.&lt;/span&gt;width();

  &lt;span class="pl-k"&gt;int&lt;/span&gt; bytesPerPixel &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;;
  &lt;span class="pl-k"&gt;int&lt;/span&gt; rowByteCountWithoutPadding &lt;span class="pl-k"&gt;=&lt;/span&gt; (bytesPerPixel &lt;span class="pl-k"&gt;*&lt;/span&gt; width);
  &lt;span class="pl-k"&gt;int&lt;/span&gt; rowByteCount &lt;span class="pl-k"&gt;=&lt;/span&gt; ((rowByteCountWithoutPadding &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;) &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;) &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;;
  &lt;span class="pl-k"&gt;int&lt;/span&gt; pixelDataSize &lt;span class="pl-k"&gt;=&lt;/span&gt; rowByteCount &lt;span class="pl-k"&gt;*&lt;/span&gt; height;
  &lt;span class="pl-k"&gt;int&lt;/span&gt; bmpHeaderSize &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;14&lt;/span&gt;;
  &lt;span class="pl-k"&gt;int&lt;/span&gt; dibHeaderSize &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;40&lt;/span&gt;;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BMP Header&lt;/span&gt;
  sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeUtf8(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BM&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ID.&lt;/span&gt;
  sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeIntLe(bmpHeaderSize &lt;span class="pl-k"&gt;+&lt;/span&gt; dibHeaderSize &lt;span class="pl-k"&gt;+&lt;/span&gt; pixelDataSize); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; File size.&lt;/span&gt;
  sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeShortLe(&lt;span class="pl-c1"&gt;0&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Unused.&lt;/span&gt;
  sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeShortLe(&lt;span class="pl-c1"&gt;0&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Unused.&lt;/span&gt;
  sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeIntLe(bmpHeaderSize &lt;span class="pl-k"&gt;+&lt;/span&gt; dibHeaderSize); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Offset of pixel data.&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DIB Header&lt;/span&gt;
  sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeIntLe(dibHeaderSize);
  sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeIntLe(width);
  sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeIntLe(height);
  sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeShortLe(&lt;span class="pl-c1"&gt;1&lt;/span&gt;);  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Color plane count.&lt;/span&gt;
  sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeShortLe(bytesPerPixel &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-smi"&gt;Byte&lt;/span&gt;&lt;span class="pl-c1"&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;SIZE&lt;/span&gt;);
  sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeIntLe(&lt;span class="pl-c1"&gt;0&lt;/span&gt;);    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No compression.&lt;/span&gt;
  sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeIntLe(&lt;span class="pl-c1"&gt;16&lt;/span&gt;);   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Size of bitmap data including padding.&lt;/span&gt;
  sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeIntLe(&lt;span class="pl-c1"&gt;2835&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Horizontal print resolution in pixels/meter. (72 dpi).&lt;/span&gt;
  sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeIntLe(&lt;span class="pl-c1"&gt;2835&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Vertical print resolution in pixels/meter. (72 dpi).&lt;/span&gt;
  sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeIntLe(&lt;span class="pl-c1"&gt;0&lt;/span&gt;);    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Palette color count.&lt;/span&gt;
  sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeIntLe(&lt;span class="pl-c1"&gt;0&lt;/span&gt;);    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0 important colors.&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Pixel data.&lt;/span&gt;
  &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; y &lt;span class="pl-k"&gt;=&lt;/span&gt; height &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;; y &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; y&lt;span class="pl-k"&gt;--&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; x &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; x &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; width; x&lt;span class="pl-k"&gt;++&lt;/span&gt;) {
      sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeByte(bitmap&lt;span class="pl-k"&gt;.&lt;/span&gt;blue(x, y));
      sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeByte(bitmap&lt;span class="pl-k"&gt;.&lt;/span&gt;green(x, y));
      sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeByte(bitmap&lt;span class="pl-k"&gt;.&lt;/span&gt;red(x, y));
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Padding for 4-byte alignment.&lt;/span&gt;
    &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; p &lt;span class="pl-k"&gt;=&lt;/span&gt; rowByteCountWithoutPadding; p &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; rowByteCount; p&lt;span class="pl-k"&gt;++&lt;/span&gt;) {
      sink&lt;span class="pl-k"&gt;.&lt;/span&gt;writeByte(&lt;span class="pl-c1"&gt;0&lt;/span&gt;);
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The trickiest part of this program is the format’s required padding. The BMP
format expects each row to begin on a 4-byte boundary so it is necessary to add
zeros to maintain the alignment.&lt;/p&gt;
&lt;p&gt;Encoding other binary formats is usually quite similar. Some tips:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Write tests with golden values! Confirming that your program emits the
expected result can make debugging easier.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;Utf8.size()&lt;/code&gt; to compute the number of bytes of an encoded string. This
is essential for length-prefixed formats.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;Float.floatToIntBits()&lt;/code&gt; and &lt;code&gt;Double.doubleToLongBits()&lt;/code&gt; to encode
floating point values.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-communicate-on-a-socket" class="anchor" aria-hidden="true" href="#communicate-on-a-socket"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/square/okio/blob/master/samples/src/jvmMain/java/okio/samples/SocksProxyServer.java"&gt;Communicate on a Socket&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Sending and receiving data over the network is a bit like writing and reading
files. We use &lt;code&gt;BufferedSink&lt;/code&gt; to encode output and &lt;code&gt;BufferedSource&lt;/code&gt; to decode
input. Like files, network protocols can be text, binary, or a mix of both. But
there are also some substantial differences between the network and the
filesystem.&lt;/p&gt;
&lt;p&gt;With a file you’re either reading or writing but with the network you can do
both! Some protocols handle this by taking turns: write a request, read a
response, repeat. You can implement this kind of protocol with a single thread.
In other protocols you may read and write simultaneously. Typically you’ll want
one dedicated thread for reading. For writing you can use either a dedicated
thread or use &lt;code&gt;synchronized&lt;/code&gt; so that multiple threads can share a sink. Okio’s
streams are not safe for concurrent use.&lt;/p&gt;
&lt;p&gt;Sinks buffer outbound data to minimize I/O operations. This is efficient but it
means you must manually call &lt;code&gt;flush()&lt;/code&gt; to transmit data. Typically
message-oriented protocols flush after each message. Note that Okio will
automatically flush when the buffered data exceeds some threshold. This is
intended to save memory and you shouldn’t rely on it for interactive protocols.&lt;/p&gt;
&lt;p&gt;Okio builds on &lt;code&gt;java.io.Socket&lt;/code&gt; for connectivity. Create your socket as a server
or as a client, then use &lt;code&gt;Okio.source(Socket)&lt;/code&gt; to read and &lt;code&gt;Okio.sink(Socket)&lt;/code&gt;
to write. These APIs also work with &lt;code&gt;SSLSocket&lt;/code&gt;. You should use SSL unless you
have a very good reason not to!&lt;/p&gt;
&lt;p&gt;Cancel a socket from any thread by calling &lt;code&gt;Socket.close()&lt;/code&gt;; this will cause its
sources and sinks to immediately fail with an &lt;code&gt;IOException&lt;/code&gt;. You can also
configure timeouts for all socket operations. You don’t need a reference to the
socket to adjust timeouts: &lt;code&gt;Source&lt;/code&gt; and &lt;code&gt;Sink&lt;/code&gt; expose timeouts directly. This
API works even if the streams are decorated.&lt;/p&gt;
&lt;p&gt;As a complete example of networking with Okio we wrote a &lt;a href="https://github.com/square/okio/blob/master/samples/src/jvmMain/java/okio/samples/SocksProxyServer.java"&gt;basic SOCKS
proxy&lt;/a&gt; server. Some highlights:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;Socket&lt;/span&gt; fromSocket &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;...&lt;/span&gt;
&lt;span class="pl-smi"&gt;BufferedSource&lt;/span&gt; fromSource &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Okio&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;buffer(&lt;span class="pl-smi"&gt;Okio&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;source(fromSocket));
&lt;span class="pl-smi"&gt;BufferedSink&lt;/span&gt; fromSink &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Okio&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;buffer(&lt;span class="pl-smi"&gt;Okio&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;sink(fromSocket));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Creating sources and sinks for sockets is the same as creating them for files.
Once you create a &lt;code&gt;Source&lt;/code&gt; or &lt;code&gt;Sink&lt;/code&gt; for a socket you must not use its
&lt;code&gt;InputStream&lt;/code&gt; or &lt;code&gt;OutputStream&lt;/code&gt;, respectively.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;Buffer&lt;/span&gt; buffer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Buffer&lt;/span&gt;();
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;long&lt;/span&gt; byteCount; (byteCount &lt;span class="pl-k"&gt;=&lt;/span&gt; source&lt;span class="pl-k"&gt;.&lt;/span&gt;read(buffer, &lt;span class="pl-c1"&gt;8192L&lt;/span&gt;)) &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;; ) {
  sink&lt;span class="pl-k"&gt;.&lt;/span&gt;write(buffer, byteCount);
  sink&lt;span class="pl-k"&gt;.&lt;/span&gt;flush();
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above loop copies data from the source to the sink, flushing after each
read. If we didn’t need the flushing we could replace this loop with a single
call to &lt;code&gt;BufferedSink.writeAll(Source)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;8192&lt;/code&gt; argument to &lt;code&gt;read()&lt;/code&gt; is the maximum number of bytes to read before
returning. We could have passed any value here, but we like 8 KiB because that’s
the largest value Okio can do in a single system call. Most of the time
application code doesn’t need to deal with such limits!&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; addressType &lt;span class="pl-k"&gt;=&lt;/span&gt; fromSource&lt;span class="pl-k"&gt;.&lt;/span&gt;readByte() &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt; &lt;span class="pl-c1"&gt;0xff&lt;/span&gt;;
&lt;span class="pl-k"&gt;int&lt;/span&gt; port &lt;span class="pl-k"&gt;=&lt;/span&gt; fromSource&lt;span class="pl-k"&gt;.&lt;/span&gt;readShort() &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt; &lt;span class="pl-c1"&gt;0xffff&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Okio uses signed types like &lt;code&gt;byte&lt;/code&gt; and &lt;code&gt;short&lt;/code&gt;, but often protocols want
unsigned values. The bitwise &lt;code&gt;&amp;amp;&lt;/code&gt; operator is Java’s preferred idiom to convert
a signed value into an unsigned value. Here’s a cheat sheet for bytes, shorts,
and ints:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Type&lt;/th&gt;
&lt;th align="center"&gt;Signed Range&lt;/th&gt;
&lt;th align="left"&gt;Unsigned Range&lt;/th&gt;
&lt;th align="left"&gt;Signed to Unsigned&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;byte&lt;/td&gt;
&lt;td align="center"&gt;-128..127&lt;/td&gt;
&lt;td align="left"&gt;0..255&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;int u = s &amp;amp; 0xff;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;short&lt;/td&gt;
&lt;td align="center"&gt;-32,768..32,767&lt;/td&gt;
&lt;td align="left"&gt;0..65,535&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;int u = s &amp;amp; 0xffff;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;int&lt;/td&gt;
&lt;td align="center"&gt;-2,147,483,648..2,147,483,647&lt;/td&gt;
&lt;td align="left"&gt;0..4,294,967,295&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;long u = s &amp;amp; 0xffffffffL;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Java has no primitive type that can represent unsigned longs.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hashing" class="anchor" aria-hidden="true" href="#hashing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/square/okio/blob/master/samples/src/jvmMain/java/okio/samples/Hashing.java"&gt;Hashing&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We’re bombarded by hashing in our lives as Java programmers. Early on we're introduced to the
&lt;code&gt;hashCode()&lt;/code&gt; method, something we know we need to override otherwise unforeseen bad things happen.
Later we’re shown &lt;code&gt;LinkedHashMap&lt;/code&gt; and its friends. These build on that &lt;code&gt;hashCode()&lt;/code&gt; method to
organize data for fast retrieval.&lt;/p&gt;
&lt;p&gt;Elsewhere we have cryptographic hash functions. These get used all over the place. HTTPS
certificates, Git commits, BitTorrent integrity checking, and Blockchain blocks all use
cryptographic hashes. Good use of hashes can improve the performance, privacy, security, and
simplicity of an application.&lt;/p&gt;
&lt;p&gt;Each cryptographic hash function accepts a variable-length stream of input bytes and produces a
fixed-length byte string value called the “hash”. Hash functions have these important qualities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Deterministic: each input always produces the same output.&lt;/li&gt;
&lt;li&gt;Uniform: each output byte string is equally likely. It is very difficult to find or create pairs
of different inputs that yield the same output. This is called a “collision”.&lt;/li&gt;
&lt;li&gt;Non-reversible: knowing an output doesn't help you to find the input. Note that if you know some
possible inputs you can hash them to see if their hashes match.&lt;/li&gt;
&lt;li&gt;Well-known: the hash is implemented everywhere and rigorously understood.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Good hash functions are very cheap to compute (dozens of microseconds) and expensive to reverse
(quintillions of millenia). Steady advances in computing and mathematics have caused once-great hash
functions to become inexpensive to reverse. When choosing a hash function, beware that not all are
created equal! Okio supports these well-known cryptographic hash functions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MD5&lt;/strong&gt;: a 128-bit (16 byte) cryptographic hash. It is both insecure and obsolete because it is
inexpensive to reverse! This hash is offered because it is popular and convenient for use in
legacy systems that are not security-sensitive.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SHA-1&lt;/strong&gt;: a 160-bit (20 byte) cryptographic hash. It was recently demonstrated that it is
feasible to create SHA-1 collisions. Consider upgrading from SHA-1 to SHA-256.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SHA-256&lt;/strong&gt;: a 256-bit (32 byte) cryptographic hash. SHA-256 is widely understood and expensive
to reverse. This is the hash most systems should use.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SHA-512&lt;/strong&gt;: a 512-bit (64 byte) cryptographic hash. It is expensive to reverse.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each hash creates a &lt;code&gt;ByteString&lt;/code&gt; of the specified length. Use &lt;code&gt;hex()&lt;/code&gt; to get the conventional
human-readable form. Or leave it as a &lt;code&gt;ByteString&lt;/code&gt; because that’s a convenient model type!&lt;/p&gt;
&lt;p&gt;Okio can produce cryptographic hashes from byte strings:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ByteString byteString = readByteString(new File("README.md"));
System.out.println("   md5: " + byteString.md5().hex());
System.out.println("  sha1: " + byteString.sha1().hex());
System.out.println("sha256: " + byteString.sha256().hex());
System.out.println("sha512: " + byteString.sha512().hex());
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From buffers:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Buffer buffer = readBuffer(new File("README.md"));
System.out.println("   md5: " + buffer.md5().hex());
System.out.println("  sha1: " + buffer.sha1().hex());
System.out.println("sha256: " + buffer.sha256().hex());
System.out.println("sha512: " + buffer.sha512().hex());
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;While streaming from a source:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;try (HashingSink hashingSink = HashingSink.sha256(Okio.blackhole());
     BufferedSource source = Okio.buffer(Okio.source(file))) {
  source.readAll(hashingSink);
  System.out.println("sha256: " + hashingSink.hash().hex());
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;While streaming to a sink:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;try (HashingSink hashingSink = HashingSink.sha256(Okio.blackhole());
     BufferedSink sink = Okio.buffer(hashingSink);
     Source source = Okio.source(file)) {
  sink.writeAll(source);
  sink.close(); // Emit anything buffered.
  System.out.println("sha256: " + hashingSink.hash().hex());
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Okio also supports HMAC (Hash Message Authentication Code) which combines a secret and a hash.
Applications use HMAC for data integrity and authentication.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ByteString secret = ByteString.decodeHex("7065616e7574627574746572");
System.out.println("hmacSha256: " + byteString.hmacSha256(secret).hex());
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As with hashing, you can generate an HMAC from a &lt;code&gt;ByteString&lt;/code&gt;, &lt;code&gt;Buffer&lt;/code&gt;, &lt;code&gt;HashingSource&lt;/code&gt;, and
&lt;code&gt;HashingSink&lt;/code&gt;. Note that Okio doesn’t implement HMAC for MD5. Okio uses Java’s
&lt;code&gt;java.security.MessageDigest&lt;/code&gt; for cryptographic hashes and &lt;code&gt;javax.crypto.Mac&lt;/code&gt; for HMAC.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-releases" class="anchor" aria-hidden="true" href="#releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Releases&lt;/h2&gt;
&lt;p&gt;Our &lt;a href="http://square.github.io/okio/changelog/" rel="nofollow"&gt;change log&lt;/a&gt; has release history.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;implementation(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.squareup.okio:okio:2.4.3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
   &lt;summary&gt;Snapshot builds are also available&lt;/summary&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;repositories {
    maven {
        url &lt;span class="pl-k"&gt;=&lt;/span&gt; uri(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://oss.sonatype.org/content/repositories/snapshots/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}
      
dependencies {
   implementation(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.squareup.okio:okio:2.5.0-SNAPSHOT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-r8--proguard" class="anchor" aria-hidden="true" href="#r8--proguard"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;R8 / ProGuard&lt;/h2&gt;
&lt;p&gt;If you are using R8 or ProGuard add the options from &lt;a href="https://github.com/square/okio/blob/master/okio/src/jvmMain/resources/META-INF/proguard/okio.pro"&gt;this file&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Copyright 2013 Square, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>square</author><guid isPermaLink="false">https://github.com/square/okio</guid><pubDate>Thu, 30 Jan 2020 00:19:00 GMT</pubDate></item><item><title>shadowsocks/shadowsocks-android #20 in Kotlin, Today</title><link>https://github.com/shadowsocks/shadowsocks-android</link><description>&lt;p&gt;&lt;i&gt;A shadowsocks client for Android&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-shadowsocks-for-android" class="anchor" aria-hidden="true" href="#shadowsocks-for-android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://shadowsocks.org" rel="nofollow"&gt;Shadowsocks&lt;/a&gt; for Android&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/shadowsocks/shadowsocks-android" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/63ad36a0233c662d5386da1615eb40fc19a5ccf9/68747470733a2f2f636972636c6563692e636f6d2f67682f736861646f77736f636b732f736861646f77736f636b732d616e64726f69642e7376673f7374796c653d736869656c64" alt="CircleCI" data-canonical-src="https://circleci.com/gh/shadowsocks/shadowsocks-android.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://android-arsenal.com/api?level=21" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7dbf5ff82d288dd3dda80bb9684b713f85f4f010/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4150492d32312532422d627269676874677265656e2e7376673f7374796c653d666c6174" alt="API" data-canonical-src="https://img.shields.io/badge/API-21%2B-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/shadowsocks/shadowsocks-android/releases"&gt;&lt;img src="https://camo.githubusercontent.com/13efcb95b0b8a410ac0790d01016f05a59d41363/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f736861646f77736f636b732f736861646f77736f636b732d616e64726f69642f746f74616c2e737667" alt="Releases" data-canonical-src="https://img.shields.io/github/downloads/shadowsocks/shadowsocks-android/total.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/shadowsocks/shadowsocks-android/search?l=kotlin"&gt;&lt;img src="https://camo.githubusercontent.com/be9aabfb80f06f43fe5eed4699601fe61ed456f9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c616e6775616765732f746f702f736861646f77736f636b732f736861646f77736f636b732d616e64726f69642e737667" alt="Language: Kotlin" data-canonical-src="https://img.shields.io/github/languages/top/shadowsocks/shadowsocks-android.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codacy.com/app/shadowsocks/shadowsocks-android?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=shadowsocks/shadowsocks-android&amp;amp;utm_campaign=Badge_Grade" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e9f039b379cedeee8fc67d0f03a3ed5af2a1f245/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3161323164343864343636363434636462636235376131383839616265613562" alt="Codacy Badge" data-canonical-src="https://api.codacy.com/project/badge/Grade/1a21d48d466644cdbcb57a1889abea5b" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.gnu.org/licenses/gpl-3.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f2b4fa6779c8a4825e0e7347076746a2047ed100/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c2d2d332e302d6f72616e67652e737667" alt="License: GPL-3.0" data-canonical-src="https://img.shields.io/badge/license-GPL--3.0-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.github.shadowsocks" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bdaf711a93d64d0bb5e5abfc346a8b84ea47f164/68747470733a2f2f706c61792e676f6f676c652e636f6d2f696e746c2f656e5f75732f6261646765732f696d616765732f67656e657269632f656e2d706c61792d62616467652e706e67" height="48" data-canonical-src="https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png" style="max-width:100%;"&gt;&lt;/a&gt;
for Android &amp;amp; Chrome OS (&lt;a href="https://play.google.com/apps/testing/com.github.shadowsocks" rel="nofollow"&gt;beta&lt;/a&gt;)&lt;br&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.github.shadowsocks.tv" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bdaf711a93d64d0bb5e5abfc346a8b84ea47f164/68747470733a2f2f706c61792e676f6f676c652e636f6d2f696e746c2f656e5f75732f6261646765732f696d616765732f67656e657269632f656e2d706c61792d62616467652e706e67" height="48" data-canonical-src="https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png" style="max-width:100%;"&gt;&lt;/a&gt;
for Android TV (&lt;a href="https://play.google.com/apps/testing/com.github.shadowsocks.tv" rel="nofollow"&gt;beta&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PREREQUISITES&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;JDK 1.8&lt;/li&gt;
&lt;li&gt;Android SDK
&lt;ul&gt;
&lt;li&gt;Android NDK&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-build" class="anchor" aria-hidden="true" href="#build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BUILD&lt;/h3&gt;
&lt;p&gt;You can check whether the latest commit builds under UNIX environment by checking Travis status.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clone the repo using &lt;code&gt;git clone --recurse-submodules &amp;lt;repo&amp;gt;&lt;/code&gt; or update submodules using &lt;code&gt;git submodule update --init --recursive&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Build it using Android Studio or gradle script&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-build-with-docker" class="anchor" aria-hidden="true" href="#build-with-docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BUILD WITH DOCKER&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mkdir build
sudo chown 3434:3434 build
docker run --rm -v &lt;span class="pl-smi"&gt;${PWD}&lt;/span&gt;/build:/build circleci/android:api-28-ndk bash -c &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cd /build; git clone https://github.com/shadowsocks/shadowsocks-android; cd shadowsocks-android; git submodule update --init --recursive; ./gradlew assembleDebug&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CONTRIBUTING&lt;/h3&gt;
&lt;p&gt;If you are interested in contributing or getting involved with this project, please read the CONTRIBUTING page for more information.  The page can be found &lt;a href="https://github.com/shadowsocks/shadowsocks-android/blob/master/CONTRIBUTING.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-translate" class="anchor" aria-hidden="true" href="#translate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://discourse.shadowsocks.org/t/poeditor-translation-main-thread/30" rel="nofollow"&gt;TRANSLATE&lt;/a&gt;&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-open-source-licenses" class="anchor" aria-hidden="true" href="#open-source-licenses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OPEN SOURCE LICENSES&lt;/h2&gt;
&lt;ul&gt;
    &lt;li&gt;redsocks: &lt;a href="https://github.com/shadowsocks/redsocks/blob/shadowsocks-android/README"&gt;APL 2.0&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;mbed TLS: &lt;a href="https://github.com/ARMmbed/mbedtls/blob/development/LICENSE"&gt;APL 2.0&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;libevent: &lt;a href="https://github.com/shadowsocks/libevent/blob/master/LICENSE"&gt;BSD&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;tun2socks: &lt;a href="https://github.com/shadowsocks/badvpn/blob/shadowsocks-android/COPYING"&gt;BSD&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;pcre: &lt;a href="https://android.googlesource.com/platform/external/pcre/+/master/dist2/LICENCE" rel="nofollow"&gt;BSD&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;libancillary: &lt;a href="https://github.com/shadowsocks/libancillary/blob/shadowsocks-android/COPYING"&gt;BSD&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;shadowsocks-libev: &lt;a href="https://github.com/shadowsocks/shadowsocks-libev/blob/master/LICENSE"&gt;GPLv3&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;libev: &lt;a href="https://github.com/shadowsocks/libev/blob/master/LICENSE"&gt;GPLv2&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;libsodium: &lt;a href="https://github.com/jedisct1/libsodium/blob/master/LICENSE"&gt;ISC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LICENSE&lt;/h3&gt;
&lt;p&gt;Copyright (C) 2017 by Max Lv &amp;lt;&lt;a href="mailto:max.c.lv@gmail.com"&gt;max.c.lv@gmail.com&lt;/a&gt;&amp;gt;&lt;br&gt;
Copyright (C) 2017 by Mygod Studio &amp;lt;&lt;a href="mailto:contact-shadowsocks-android@mygod.be"&gt;contact-shadowsocks-android@mygod.be&lt;/a&gt;&amp;gt;&lt;/p&gt;
&lt;p&gt;This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.&lt;/p&gt;
&lt;p&gt;This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.&lt;/p&gt;
&lt;p&gt;You should have received a copy of the GNU General Public License
along with this program. If not, see &lt;a href="http://www.gnu.org/licenses/" rel="nofollow"&gt;http://www.gnu.org/licenses/&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>shadowsocks</author><guid isPermaLink="false">https://github.com/shadowsocks/shadowsocks-android</guid><pubDate>Thu, 30 Jan 2020 00:20:00 GMT</pubDate></item><item><title>android/compose-samples #21 in Kotlin, Today</title><link>https://github.com/android/compose-samples</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-compose-samples-repository" class="anchor" aria-hidden="true" href="#compose-samples-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compose Samples Repository&lt;/h1&gt;
&lt;p&gt;This repository contains a set of individual Android Studio projects to help you learn about
Compose in Android.&lt;/p&gt;
&lt;p&gt;For more information, please &lt;a href="https://developer.android.com/jetpack/compose" rel="nofollow"&gt;read our documentation&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-samples" class="anchor" aria-hidden="true" href="#samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Samples&lt;/h2&gt;
&lt;p&gt;&lt;a href="JetNews/"&gt;Jetnews&lt;/a&gt;: A sample blog post viewer that demonstrates the use of Compose.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>android</author><guid isPermaLink="false">https://github.com/android/compose-samples</guid><pubDate>Thu, 30 Jan 2020 00:21:00 GMT</pubDate></item><item><title>dropbox/Store #22 in Kotlin, Today</title><link>https://github.com/dropbox/Store</link><description>&lt;p&gt;&lt;i&gt;Kotlin Library for Async Data Loading and Caching&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-store-4" class="anchor" aria-hidden="true" href="#store-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Store 4&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://maven-badges.herokuapp.com/maven-central/com.dropbox.mobile.store/store4/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dfb1ce8eda8f159ea6f178d523b078e659f6fed5/68747470733a2f2f6d6176656e2d6261646765732e6865726f6b756170702e636f6d2f6d6176656e2d63656e7472616c2f636f6d2e64726f70626f782e6d6f62696c652e73746f72652f73746f7265342f62616467652e737667" alt="Maven Central" data-canonical-src="https://maven-badges.herokuapp.com/maven-central/com.dropbox.mobile.store/store4/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Store is a Kotlin library for effortless data loading.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-the-problems" class="anchor" aria-hidden="true" href="#the-problems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Problems:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Modern software needs data representations to be fluid and always available.&lt;/li&gt;
&lt;li&gt;Users expect their UI experience to never be compromised (blocked) by new data loads. Whether an application is social, news or business-to-business, users expect a seamless experience both online and offline.&lt;/li&gt;
&lt;li&gt;International users expect minimal data downloads as many megabytes of downloaded data can quickly result in astronomical phone bills.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A Store is a class that simplifies fetching, sharing, storage, and retrieval of data in your application. A Store is similar to the &lt;a href="https://msdn.microsoft.com/en-us/library/ff649690.aspx" rel="nofollow"&gt;Repository pattern&lt;/a&gt; while exposing an API built with &lt;a href="https://kotlinlang.org/docs/reference/coroutines-overview.html" rel="nofollow"&gt;Coroutines&lt;/a&gt; that adheres to a unidirectional data flow.&lt;/p&gt;
&lt;p&gt;Store provides a level of abstraction between UI elements and data operations.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h3&gt;
&lt;p&gt;A Store is responsible for managing a particular data request. When you create an implementation of a Store, you provide it with a &lt;code&gt;Fetcher&lt;/code&gt;, a function that defines how data will be fetched over network. You can also define how your Store will cache data in-memory and on-disk. Since Store returns your data as a &lt;code&gt;Flow&lt;/code&gt;, threading is a breeze! Once a Store is built, it handles the logic around data flow, allowing your views to use the best data source and ensuring that the newest data is always available for later offline use.&lt;/p&gt;
&lt;p&gt;Store leverages multiple request throttling to prevent excessive calls to the network and disk cache. By utilizing Store, you eliminate the possibility of flooding your network with the same request while adding two layers of caching (memory and disk) as well as ability to add disk as a source of truth where you can modify the disk directly without going through Store (works best with databases that can provide observables sources like &lt;a href="https://developer.android.com/jetpack/androidx/releases/room" rel="nofollow"&gt;Jetpack Room&lt;/a&gt;, &lt;a href="https://github.com/cashapp/sqldelight"&gt;SQLDelight&lt;/a&gt; or &lt;a href="https://realm.io/products/realm-database/" rel="nofollow"&gt;Realm&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-to-include-in-your-project" class="anchor" aria-hidden="true" href="#how-to-include-in-your-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to include in your project&lt;/h3&gt;
&lt;p&gt;Artifacts are hosted on &lt;strong&gt;Maven Central&lt;/strong&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;a id="user-content-latest-version" class="anchor" aria-hidden="true" href="#latest-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Latest version:&lt;/h6&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; store_version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;4.0.0-alpha02&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;&lt;a id="user-content-add-the-dependency-to-your-buildgradle" class="anchor" aria-hidden="true" href="#add-the-dependency-to-your-buildgradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add the dependency to your &lt;code&gt;build.gradle&lt;/code&gt;:&lt;/h6&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.dropbox.mobile.store:store4:${store_version}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;&lt;a id="user-content-set-the-source--target-compatibilities-to-18" class="anchor" aria-hidden="true" href="#set-the-source--target-compatibilities-to-18"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Set the source &amp;amp; target compatibilities to &lt;code&gt;1.8&lt;/code&gt;&lt;/h6&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;android {
    compileOptions {
        sourceCompatibility &lt;span class="pl-c1"&gt;1.8&lt;/span&gt;
        targetCompatibility &lt;span class="pl-c1"&gt;1.8&lt;/span&gt;
    }
    &lt;span class="pl-k"&gt;..&lt;/span&gt;.
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-fully-configured-store" class="anchor" aria-hidden="true" href="#fully-configured-store"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fully Configured Store&lt;/h3&gt;
&lt;p&gt;Let's start by looking at what a fully configured Store looks like. We will then walk through simpler examples showing each piece:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;StoreBuilder&lt;/span&gt;
  .fromNonFlow {
      api.fetchSubreddit(it, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;10&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-k"&gt;data&lt;/span&gt;.children.map(::toPosts)
  }.persister(
      reader &lt;span class="pl-k"&gt;=&lt;/span&gt; db.postDao()::loadPosts,
      writer &lt;span class="pl-k"&gt;=&lt;/span&gt; db.postDao()::insertPosts,
      delete &lt;span class="pl-k"&gt;=&lt;/span&gt; db.postDao()::clearFeed,
      deleteAll &lt;span class="pl-k"&gt;=&lt;/span&gt; db.postDao()::clearAllFeeds
  ).build()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the above setup you have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In-memory caching for rotation&lt;/li&gt;
&lt;li&gt;Disk caching for when users are offline&lt;/li&gt;
&lt;li&gt;Throttling of API calls when parallel requests are made for the same resource&lt;/li&gt;
&lt;li&gt;Rich API to ask for data whether you want cached, new or a stream of future data updates.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And now for the details:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-creating-a-store" class="anchor" aria-hidden="true" href="#creating-a-store"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating a Store&lt;/h3&gt;
&lt;p&gt;You create a Store using a builder. The only requirement is to include a function that returns a &lt;code&gt;Flow&amp;lt;ReturnType&amp;gt;&lt;/code&gt; or a &lt;code&gt;suspend&lt;/code&gt; function that returns a &lt;code&gt;ReturnType&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; store &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;StoreBuilder&lt;/span&gt;
        .from { articleId &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; api.getArticle(articleId) } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; api returns Flow&amp;lt;Article&amp;gt;&lt;/span&gt;
        .build()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Store uses generic keys as identifiers for data. A key can be any value object that properly implements &lt;code&gt;toString()&lt;/code&gt;, &lt;code&gt;equals()&lt;/code&gt; and &lt;code&gt;hashCode()&lt;/code&gt;. When your &lt;code&gt;Fetcher&lt;/code&gt; function is called, it will be passed a particular &lt;code&gt;Key&lt;/code&gt; value. Similarly, the key will be used as a primary identifier within caches (Make sure to have a proper &lt;code&gt;hashCode()&lt;/code&gt;!!).&lt;/p&gt;
&lt;p&gt;Note: We highly recommend using built-in types that implement &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashcode&lt;/code&gt; or Kotlin &lt;code&gt;data&lt;/code&gt; classes for complex keys.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-public-interface---stream" class="anchor" aria-hidden="true" href="#public-interface---stream"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Public Interface - Stream&lt;/h3&gt;
&lt;p&gt;The primary function provided by a &lt;code&gt;Store&lt;/code&gt; instance is the &lt;code&gt;stream&lt;/code&gt; function which has the following signature:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;stream&lt;/span&gt;(&lt;span class="pl-smi"&gt;request&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;StoreRequest&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Key&lt;/span&gt;&amp;gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Flow&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;StoreResponse&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Output&lt;/span&gt;&amp;gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Each &lt;code&gt;stream&lt;/code&gt; call receives a &lt;code&gt;StoreRequest&lt;/code&gt; object, which defines which key to fetch and which data sources to utilize.
The response is a &lt;code&gt;Flow&lt;/code&gt; of &lt;code&gt;StoreResponse&lt;/code&gt;. &lt;code&gt;StoreResponse&lt;/code&gt; is a Kotlin sealed class that can be either
a &lt;code&gt;Loading&lt;/code&gt;, &lt;code&gt;Data&lt;/code&gt; or &lt;code&gt;Error&lt;/code&gt; instance.
Each &lt;code&gt;StoreResponse&lt;/code&gt; includes an &lt;code&gt;origin&lt;/code&gt; field which specifies where the event is coming from.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;Loading&lt;/code&gt; class only has an &lt;code&gt;origin&lt;/code&gt; field. This can provide you information like "network is fetching data", which can be a good signal to activate the loading spinner in your UI.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;Data&lt;/code&gt; class has a &lt;code&gt;value&lt;/code&gt; field which includes an instance of the type returned by &lt;code&gt;Store&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;Error&lt;/code&gt; class includes an &lt;code&gt;error&lt;/code&gt; field that contains the exception thrown by the given &lt;code&gt;origin&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When an error happens, &lt;code&gt;Store&lt;/code&gt; does not throw an exception, instead, it wraps it in a &lt;code&gt;StoreResponse.Error&lt;/code&gt; type which allows &lt;code&gt;Flow&lt;/code&gt; to continue so that it can still receive updates that might be triggered by either changes in your data source or subsequent fetch operations.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;lifecycleScope.launchWhenStarted {
  store.stream(&lt;span class="pl-en"&gt;StoreRequest&lt;/span&gt;.cached(key &lt;span class="pl-k"&gt;=&lt;/span&gt; key, refresh&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;true&lt;/span&gt;)).collect { response &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;when&lt;/span&gt;(response) {
        &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-en"&gt;StoreResponse&lt;/span&gt;.&lt;span class="pl-en"&gt;Loading&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; showLoadingSpinner()
        &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-en"&gt;StoreResponse&lt;/span&gt;.&lt;span class="pl-en"&gt;Data&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; {
            &lt;span class="pl-k"&gt;if&lt;/span&gt; (response.origin &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-en"&gt;ResponseOrigin&lt;/span&gt;.&lt;span class="pl-en"&gt;Fetcher&lt;/span&gt;) hideLoadingSpinner()
            updateUI(response.value)
        }
        &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-en"&gt;StoreResponse&lt;/span&gt;.&lt;span class="pl-en"&gt;Error&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; {
            &lt;span class="pl-k"&gt;if&lt;/span&gt; (response.origin &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-en"&gt;ResponseOrigin&lt;/span&gt;.&lt;span class="pl-en"&gt;Fetcher&lt;/span&gt;) hideLoadingSpinner()
            showError(response.error)
        }
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For convenience, there are &lt;code&gt;Store.get(key)&lt;/code&gt; and &lt;code&gt;Store.fresh(key)&lt;/code&gt; extension functions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;suspend fun Store.get(key: Key): Value&lt;/code&gt;: This method returns a single value for the given key. If available, it will be returned from the in memory cache or the persister. An error will be thrown if no value is available in either the &lt;code&gt;cache&lt;/code&gt; or &lt;code&gt;persister&lt;/code&gt;, and the &lt;code&gt;fetcher&lt;/code&gt; fails to load the data from the network.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;suspend fun Store.fresh(key: Key): Value&lt;/code&gt;: This method returns a single value for the given key that is obtained by querying the fetcher. An error will be thrown if the &lt;code&gt;fetcher&lt;/code&gt; fails to load the data from the network, regardless of whether any value is available in the &lt;code&gt;cache&lt;/code&gt; or &lt;code&gt;persister&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;lifecycleScope.launchWhenStarted {
  &lt;span class="pl-k"&gt;val&lt;/span&gt; article &lt;span class="pl-k"&gt;=&lt;/span&gt; store.get(key)
  updateUI(article)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first time you call to &lt;code&gt;suspend store.get(key)&lt;/code&gt;, the response will be stored in an in-memory cache and in the persister, if provided.
All subsequent calls to &lt;code&gt;store.get(key)&lt;/code&gt; with the same &lt;code&gt;Key&lt;/code&gt; will retrieve the cached version of the data, minimizing unnecessary data calls. This prevents your app from fetching fresh data over the network (or from another external data source) in situations when doing so would unnecessarily waste bandwidth and battery. A great use case is any time your views are recreated after a rotation, they will be able to request the cached data from your Store. Having this data available can help you avoid the need to retain this in the view layer.&lt;/p&gt;
&lt;p&gt;By default, 100 items will be cached in memory for 24 hours. You may &lt;a href="#Configuring-In-memory-Cache"&gt;pass in your own memory policy to override the default policy&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-busting-through-the-cache" class="anchor" aria-hidden="true" href="#busting-through-the-cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Busting through the cache&lt;/h3&gt;
&lt;p&gt;Alternatively, you can call &lt;code&gt;store.fresh(key)&lt;/code&gt; to get a &lt;code&gt;suspended result&lt;/code&gt; that skips the memory (and optional disk cache).&lt;/p&gt;
&lt;p&gt;A good use case is overnight background updates use &lt;code&gt;fresh()&lt;/code&gt; to make sure that calls to &lt;code&gt;store.get()&lt;/code&gt; will not have to hit the network during normal usage. Another good use case for &lt;code&gt;fresh()&lt;/code&gt; is when a user wants to pull to refresh.&lt;/p&gt;
&lt;p&gt;Calls to both &lt;code&gt;fresh()&lt;/code&gt; and &lt;code&gt;get()&lt;/code&gt; emit one value or throw an error.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-stream" class="anchor" aria-hidden="true" href="#stream"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stream&lt;/h3&gt;
&lt;p&gt;For real-time updates, you may also call &lt;code&gt;store.stream()&lt;/code&gt; which returns a &lt;code&gt;Flow&amp;lt;T&amp;gt;&lt;/code&gt; that emits each time a new item is returned from your store. You can think of stream as a way to create reactive streams that update when you db or memory cache updates&lt;/p&gt;
&lt;p&gt;example calls:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;lifecycleScope.launchWhenStarted {
    store.stream(&lt;span class="pl-en"&gt;StoreRequest&lt;/span&gt;.cached(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, refresh &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;will get cached value followed by any fresh values, refresh will also trigger network call if set to `true` even if the data is available in cache or disk.&lt;/span&gt;
        .collect {}
    store.stream(&lt;span class="pl-en"&gt;StoreRequest&lt;/span&gt;.fresh(&lt;span class="pl-c1"&gt;3&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;skip cache, go directly to fetcher&lt;/span&gt;
        .collect {}
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-inflight-debouncer" class="anchor" aria-hidden="true" href="#inflight-debouncer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inflight Debouncer&lt;/h3&gt;
&lt;p&gt;To prevent duplicate requests for the same data, Store offers an inflight debouncer. If the same request is made as a previous identical request that has not completed, the same response will be returned. This is useful for situations when your app needs to make many async calls for the same data at startup or when users are obsessively pulling to refresh. As an example, The New York Times news app asynchronously calls &lt;code&gt;ConfigStore.get()&lt;/code&gt; from 12 different places on startup. The first call blocks while all others wait for the data to arrive. We have seen a dramatic decrease in the app's data usage after implementing this inflight logic.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-disk-as-cache" class="anchor" aria-hidden="true" href="#disk-as-cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disk as Cache&lt;/h3&gt;
&lt;p&gt;Stores can enable disk caching by passing a &lt;code&gt;Persister&lt;/code&gt; into the builder. Whenever a new network request is made, the Store will first write to the disk cache and then read from the disk cache.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-disk-as-single-source-of-truth" class="anchor" aria-hidden="true" href="#disk-as-single-source-of-truth"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disk as Single Source of Truth&lt;/h3&gt;
&lt;p&gt;Providing &lt;code&gt;persister&lt;/code&gt; whose &lt;code&gt;read&lt;/code&gt; function can return a &lt;code&gt;Flow&amp;lt;Value&amp;gt;&lt;/code&gt; allows you to make Store treat your disk as source of truth.
Any changes made on disk, even if it is not made by Store, will update the active &lt;code&gt;Store&lt;/code&gt; streams.&lt;/p&gt;
&lt;p&gt;This feature, combined with persistence libraries that provide observable queries (&lt;a href="https://developer.android.com/jetpack/androidx/releases/room" rel="nofollow"&gt;Jetpack Room&lt;/a&gt;, &lt;a href="https://github.com/cashapp/sqldelight"&gt;SQLDelight&lt;/a&gt; or &lt;a href="https://realm.io/products/realm-database/" rel="nofollow"&gt;Realm&lt;/a&gt;)
allows you to create offline first applications that can be used without an active network connection while still providing a great user experience.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;StoreBuilder&lt;/span&gt;
  .fromNonFlow {
    api.fetchSubreddit(it, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;10&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-k"&gt;data&lt;/span&gt;.children.map(::toPosts)
  }.persister(
    reader &lt;span class="pl-k"&gt;=&lt;/span&gt; db.postDao()::loadPosts,
    writer &lt;span class="pl-k"&gt;=&lt;/span&gt; db.postDao()::insertPosts,
    delete &lt;span class="pl-k"&gt;=&lt;/span&gt; db.postDao()::clearFeed
  ).build()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Stores don’t care how you’re storing or retrieving your data from disk. As a result, you can use Stores with object storage or any database (Realm, SQLite, CouchDB, Firebase etc). Technically, there is nothing stopping you from implementing an in-memory cache for the “persister” implementation and instead have two levels of in-memory caching--one with inflated and one with deflated models, allowing for sharing of the “persister” cache data between stores.&lt;/p&gt;
&lt;p&gt;If using SQLite we recommend working with &lt;a href="https://developer.android.com/topic/libraries/architecture/room" rel="nofollow"&gt;Room&lt;/a&gt; which returns a &lt;code&gt;Flow&lt;/code&gt; from a query&lt;/p&gt;
&lt;p&gt;The above builder is how we recommend working with data on Android. With the above setup you have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Memory caching with TTL &amp;amp; Size policies&lt;/li&gt;
&lt;li&gt;Disk caching with simple integration with Room&lt;/li&gt;
&lt;li&gt;In-flight request management&lt;/li&gt;
&lt;li&gt;Ability to get cached data or bust through your caches (&lt;code&gt;get()&lt;/code&gt; vs. &lt;code&gt;fresh()&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Ability to listen for any new emissions from network (stream)&lt;/li&gt;
&lt;li&gt;Structured Concurrency through APIs build on Coroutines and Kotlin Flow&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-configuring-in-memory-cache" class="anchor" aria-hidden="true" href="#configuring-in-memory-cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring in-memory Cache&lt;/h3&gt;
&lt;p&gt;You can configure in-memory cache with the &lt;code&gt;MemoryPolicy&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;StoreBuilder&lt;/span&gt;
    .fromNonFlow {
        api.fetchSubreddit(it, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;10&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-k"&gt;data&lt;/span&gt;.children.map(::toPosts)
    }.cachePolicy(
        &lt;span class="pl-en"&gt;MemoryPolicy&lt;/span&gt;.builder()
            .setMemorySize(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
            .setExpireAfterAccess(&lt;span class="pl-c1"&gt;10&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or setExpireAfterWrite(10)&lt;/span&gt;
            .setExpireAfterTimeUnit(&lt;span class="pl-en"&gt;TimeUnit&lt;/span&gt;.&lt;span class="pl-en"&gt;MINUTES&lt;/span&gt;)
            .build()
    ).persister(
        reader &lt;span class="pl-k"&gt;=&lt;/span&gt; db.postDao()::loadPosts,
        writer &lt;span class="pl-k"&gt;=&lt;/span&gt; db.postDao()::insertPosts,
        delete &lt;span class="pl-k"&gt;=&lt;/span&gt; db.postDao()::clearFeed,
        deleteAll &lt;span class="pl-k"&gt;=&lt;/span&gt; db.postDao()::clearAllFeeds
    ).build()&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;setMemorySize(maxSize: Long)&lt;/code&gt; sets the maximum number of entries to be kept in the cache before starting to evict the least recently used items.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setExpireAfterAccess(expireAfterAccess: Long)&lt;/code&gt; sets the maximum time an entry can live in the cache since the last access, where "access" means reading the cache, adding a new cache entry, and replacing an existing entry with a new one. This duration is also known as &lt;strong&gt;time-to-idle (TTI)&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setExpireAfterWrite(expireAfterWrite: Long)&lt;/code&gt; sets the maximum time an entry can live in the cache since the last write, where "write" means adding a new cache entry and replacing an existing entry with a new one. This duration is also known as &lt;strong&gt;time-to-live (TTL)&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setExpireAfterTimeUnit(expireAfterTimeUnit: TimeUnit)&lt;/code&gt; sets the time unit used when setting &lt;code&gt;expireAfterAccess&lt;/code&gt; or &lt;code&gt;expireAfterWrite&lt;/code&gt;. Default unit is &lt;code&gt;TimeUnit.SECONDS&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that &lt;code&gt;setExpireAfterAccess&lt;/code&gt; and &lt;code&gt;setExpireAfterWrite&lt;/code&gt; &lt;strong&gt;cannot&lt;/strong&gt; both be set at the same time.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-clearing-store-entries" class="anchor" aria-hidden="true" href="#clearing-store-entries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clearing store entries&lt;/h3&gt;
&lt;p&gt;You can delete a specific entry by key from a store, or clear all entries in a store.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-store-with-no-persister" class="anchor" aria-hidden="true" href="#store-with-no-persister"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Store with no persister&lt;/h4&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; store &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;StoreBuilder&lt;/span&gt;
  .fromNonFlow&amp;lt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&amp;gt; { key&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
      api.fetchData(key)
  }.build()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following will clear the entry associated with the key from the in-memory cache:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;store.clear(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;10&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following will clear all entries from the in-memory cache:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;store.clearAll()&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-store-with-persister" class="anchor" aria-hidden="true" href="#store-with-persister"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Store with persister&lt;/h4&gt;
&lt;p&gt;When store has a persister (source of truth), you'll need to provide the &lt;code&gt;delete&lt;/code&gt; and &lt;code&gt;deleteAll&lt;/code&gt; functions for &lt;code&gt;clear(key)&lt;/code&gt; and &lt;code&gt;clearAll()&lt;/code&gt; to work:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;StoreBuilder&lt;/span&gt;
  .fromNonFlow&amp;lt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&amp;gt; { key&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
      api.fetchData(key)
  }.persister(
      reader &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;dao&lt;/span&gt;::loadData,
      writer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;dao&lt;/span&gt;::writeData,
      delete &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;dao&lt;/span&gt;::clearDataByKey,
      deleteAll &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;dao&lt;/span&gt;::clearAllData
  ).build()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following will clear the entry associated with the key from both the in-memory cache and the persister (source of truth):&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;store.clear(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;10&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following will clear all entries from both the in-memory cache and the persister (source of truth):&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;store.clearAll()&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dropbox</author><guid isPermaLink="false">https://github.com/dropbox/Store</guid><pubDate>Thu, 30 Jan 2020 00:22:00 GMT</pubDate></item><item><title>mitchtabian/Open-API-Android-App #23 in Kotlin, Today</title><link>https://github.com/mitchtabian/Open-API-Android-App</link><description>&lt;p&gt;&lt;i&gt;Kotlin, MVVM Architecture, Dagger2, Retrofit2, Coroutines, Room Persistence, REST API, Token Authentication&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://codingwithmitch.com/courses/powerful-android-apps-with-jetpack-architecture/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d9567cd081773bd40b06ab53e2378438e68f11ef/68747470733a2f2f636f64696e67776974686d697463682e73332e616d617a6f6e6177732e636f6d2f7374617469632f706f77657266756c2d616e64726f69642d617070732d776974682d6a65747061636b2d6172636869746563747572652f696d616765732f706f77657266756c5f616e64726f69645f617070735f312e706e67" data-canonical-src="https://codingwithmitch.s3.amazonaws.com/static/powerful-android-apps-with-jetpack-architecture/images/powerful_android_apps_1.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-powerful-android-apps-with-jetpack-architecture" class="anchor" aria-hidden="true" href="#powerful-android-apps-with-jetpack-architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://codingwithmitch.com/courses/powerful-android-apps-with-jetpack-architecture/" rel="nofollow"&gt;Powerful Android Apps with Jetpack Architecture&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Watch the video course here: &lt;a href="https://codingwithmitch.com/courses/powerful-android-apps-with-jetpack-architecture/" rel="nofollow"&gt;Powerful Android Apps with Jetpack Architecture&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this course you'll learn to build a real application that interacts with the website &lt;a href="https://open-api.xyz" rel="nofollow"&gt;open-api.xyz&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Open-api.xyz is a sandbox website for codingwithmitch members to practice interacting with a Rest API. &lt;/p&gt;&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-prerequisites-recommended-not-required" class="anchor" aria-hidden="true" href="#prerequisites-recommended-not-required"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt; (Recommended not required):&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://codingwithmitch.com/courses/dagger22-android/" rel="nofollow"&gt;Dagger 2&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://codingwithmitch.com/courses/model-view-intent-mvi-architecture/" rel="nofollow"&gt;MVI Architecture&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://codingwithmitch.com/courses/android-local-database-cache-rest-api/" rel="nofollow"&gt;Database Caching (Retrofit + Room)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-what-youll-learn" class="anchor" aria-hidden="true" href="#what-youll-learn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;What you'll learn:&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Kotlin&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Coroutines&lt;/strong&gt;:&lt;br&gt;
&lt;ol&gt;
&lt;li&gt;Advanced coroutine management using jobs&lt;/li&gt;
&lt;li&gt;Cancelling active jobs&lt;/li&gt;
&lt;li&gt;Coroutine scoping&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Navigation Components&lt;/strong&gt;:&lt;br&gt;
&lt;ol&gt;
&lt;li&gt;Bottom Navigation View with fragments &lt;/li&gt;
&lt;li&gt;Leveraging multiple navigation graphs (this is cutting edge content)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Dagger 2&lt;/strong&gt;:&lt;br&gt;
&lt;ol&gt;
&lt;li&gt;custom scopes, fragment injection, activity injection, Viewmodel injection&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;MVI architecture&lt;/strong&gt;:&lt;br&gt;
&lt;ol&gt;
&lt;li&gt;Basically this is MVVM with some additions&lt;/li&gt;
&lt;li&gt;State management&lt;/li&gt;
&lt;li&gt;Building a generic BaseViewModel&lt;/li&gt;
&lt;li&gt;Repository pattern (NetworkBoundResource)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Room Persistence&lt;/strong&gt;:&lt;br&gt;
&lt;ol&gt;
&lt;li&gt;SQLite on Android with Room Persistence library&lt;/li&gt;
&lt;li&gt;Custom queries, inserts, deletes, updates&lt;/li&gt;
&lt;li&gt;Foreign Key relationships&lt;/li&gt;
&lt;li&gt;Multiple database tables&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Cache&lt;/strong&gt;:&lt;br&gt;
&lt;ol&gt;
&lt;li&gt;Database caching (saving data from network into local cache)&lt;/li&gt;
&lt;li&gt;Single source of truth principal&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Retrofit 2&lt;/strong&gt;:&lt;br&gt;
&lt;ol&gt;
&lt;li&gt;Handling any type of response from server (success, error, none, etc...)&lt;/li&gt;
&lt;li&gt;Returning LiveData from Retrofit calls (Retrofit Call Adapter)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;ViewModels&lt;/strong&gt;:&lt;br&gt;
&lt;ol&gt;
&lt;li&gt;Sharing a ViewModel between several fragments&lt;/li&gt;
&lt;li&gt;Building a powerful generic BaseViewModel&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;WebViews&lt;/strong&gt;:&lt;br&gt;
&lt;ol&gt;
&lt;li&gt;Interacting with the server through a webview (Javascript)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;SearchView&lt;/strong&gt;:&lt;br&gt;
&lt;ol&gt;
&lt;li&gt;Programmatically implement a SearchView&lt;/li&gt;
&lt;li&gt;Execute search queries to network and db cache&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Images&lt;/strong&gt;:&lt;br&gt;
&lt;ol&gt;
&lt;li&gt;Selecting images from phone memory&lt;/li&gt;
&lt;li&gt;Cropping images to a specific aspect ratio&lt;/li&gt;
&lt;li&gt;Setting limitations on image size and aspect ratio&lt;/li&gt;
&lt;li&gt;Uploading a cropped image to server&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Network Request Management&lt;/strong&gt;:&lt;br&gt;
&lt;ol&gt;
&lt;li&gt;Cancelling pending network requests (Kotlin coroutines)&lt;/li&gt;
&lt;li&gt;Testing for network delays&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Pagination&lt;/strong&gt;:&lt;br&gt;
&lt;ol&gt;
&lt;li&gt;Paginating objects returned from server and database cache&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Material Design&lt;/strong&gt;:&lt;br&gt;
&lt;ol&gt;
&lt;li&gt;Bottom Navigation View with Fragments&lt;/li&gt;
&lt;li&gt;Customizing Bottom Navigation Icon behavior&lt;/li&gt;
&lt;li&gt;Handling Different Screen Sizes (ConstraintLayout)&lt;/li&gt;
&lt;li&gt;Material Dialogs&lt;/li&gt;
&lt;li&gt;Fragment transition animations&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mitchtabian</author><guid isPermaLink="false">https://github.com/mitchtabian/Open-API-Android-App</guid><pubDate>Thu, 30 Jan 2020 00:23:00 GMT</pubDate></item><item><title>Eli-Fox/LEGO-Catalog #24 in Kotlin, Today</title><link>https://github.com/Eli-Fox/LEGO-Catalog</link><description>&lt;p&gt;&lt;i&gt;A LEGO® Catalog app illustrating current Android Architecture state using Android development best practices.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-lego-catalog" class="anchor" aria-hidden="true" href="#lego-catalog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LEGO® Catalog&lt;/h1&gt;
&lt;p&gt;A LEGO® Catalog app illustrating current Android Architecture state using Android development best
practices.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@eli.fox/android-architecture-starring-kotlin-coroutines-jetpack-mvvm-room-paging-retrofit-and-dagger-7749b2bae5f7?sk=9c5a7af2fbf5d4a04e72322bfb245489" rel="nofollow"&gt;To get started you can find project and Architecture overview in the Medium article&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;NOTE: LEGO® and the LEGO® logo are trademarks of the LEGO® Group, which does not sponsor, authorize
or endorse this app.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The application uses Clean Architecture based on MVVM and Repository patterns. Implemented
Architecture principles follow Google recommended &lt;a href="https://developer.android.com/jetpack/docs/guide" rel="nofollow"&gt;Guide to app architecture&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/guide-to-app-architecture.png"&gt;&lt;img src="screenshots/guide-to-app-architecture.png" alt="Guide to app architecture" title="Guide to app architecture" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The application is written entirely in Kotlin.&lt;/p&gt;
&lt;p&gt;Android Jetpack is used as an Architecture glue including but not limited to ViewModel, LiveData,
Lifecycles, Navigation, Room and Data Binding. See a complete list in "Libraries used" section.&lt;/p&gt;
&lt;p&gt;The application does network HTTP requests via Retrofit, OkHttp and GSON. Loaded data is saved to
SQL based database Room, which serves as single source of truth and support offline mode.
Paging library is used for data pagination online and offline.&lt;/p&gt;
&lt;p&gt;Kotlin Coroutines manage background threads with simplified code and reducing needs for callbacks.
Combination of Coroutines and Kotlin build in functions (transformation, collections) are preferred
over RxJava 2.&lt;/p&gt;
&lt;p&gt;Work manager does synchronisation job being compatible with Doze Mode and using battery efficiently.
Navigation component manages in-app navigation.&lt;/p&gt;
&lt;p&gt;Dagger 2 is used for dependency injection.&lt;/p&gt;
&lt;p&gt;Glide is used for image loading and Timber for logging.&lt;/p&gt;
&lt;p&gt;Stetho is used to empower debugging skills (like Network calls log, Database content overview,
UI Hierarchy view, etc).&lt;/p&gt;
&lt;p&gt;A sample app consist of 3 screens: List of LEGO® themes, list of sets and set details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;This project uses the Gradle build system. To build this project, use the
&lt;code&gt;gradlew build&lt;/code&gt; command or use "Import Project" in Android Studio.&lt;/p&gt;
&lt;p&gt;There are two Gradle tasks for testing the project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;connectedAndroidTest&lt;/code&gt; - for running Espresso on a connected device&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test&lt;/code&gt; - for running unit tests&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/phone_legotheme.png"&gt;&lt;img src="screenshots/phone_legotheme.png" alt="LegoThemeFragment" title="Browse Themes " style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/phone_legosets_grid.png"&gt;&lt;img src="screenshots/phone_legosets_grid.png" alt="LegoSetsFragment Grid" title="Browse sets in grid view" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/phone_legoset.png"&gt;&lt;img src="screenshots/phone_legoset.png" alt="LegoSetFragment" title="Lego set" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-libraries-used" class="anchor" aria-hidden="true" href="#libraries-used"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Libraries Used&lt;/h2&gt;
&lt;p&gt;The application goal is to show case current Android Architecture state using out of box
Android tools made by Google (Android Jetpack) and 3rd party community driven libraries.&lt;/p&gt;
&lt;p&gt;Android Jetpack is a set of components, tools and guidance to make great Android apps. They bring
together the existing Support Library and Architecture Components and arranges them into four
categories:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/jetpack_donut.png"&gt;&lt;img src="screenshots/jetpack_donut.png" alt="Android Jetpack" title="Android Jetpack Components" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/jetpack/components" rel="nofollow"&gt;Foundation&lt;/a&gt; - Components for core system capabilities, Kotlin extensions and support for
multidex and automated testing.
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/support-library/packages#v7-appcompat" rel="nofollow"&gt;AppCompat&lt;/a&gt; - Degrade gracefully on older versions of Android.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/kotlin/ktx" rel="nofollow"&gt;Android KTX&lt;/a&gt; - Write more concise, idiomatic Kotlin code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/training/testing/" rel="nofollow"&gt;Test&lt;/a&gt; - An Android testing framework for unit and runtime UI tests.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/jetpack/arch/" rel="nofollow"&gt;Architecture&lt;/a&gt; - A collection of libraries that help you design robust, testable, and
maintainable apps. Start with classes for managing your UI component lifecycle and handling data
persistence.
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/data-binding/" rel="nofollow"&gt;Data Binding&lt;/a&gt; - Declaratively bind observable data to UI elements.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/lifecycle" rel="nofollow"&gt;Lifecycles&lt;/a&gt; - Create a UI that automatically responds to lifecycle events.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/livedata" rel="nofollow"&gt;LiveData&lt;/a&gt; - Build data objects that notify views when the underlying database changes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/navigation/" rel="nofollow"&gt;Navigation&lt;/a&gt; - Handle everything needed for in-app navigation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/room" rel="nofollow"&gt;Room&lt;/a&gt; - SQLite database with in-app objects and compile-time checks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/viewmodel" rel="nofollow"&gt;ViewModel&lt;/a&gt; - Store UI-related data that isn't destroyed on app rotations. Easily schedule
asynchronous tasks for optimal execution.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/workmanager" rel="nofollow"&gt;WorkManager&lt;/a&gt; - Manage your Android background jobs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/paging" rel="nofollow"&gt;Paging&lt;/a&gt; - Load and display small chunks of data at a time.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/guide/topics/ui" rel="nofollow"&gt;UI&lt;/a&gt; - Details on why and how to use UI Components in your apps - together or separate.
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/training/animation/" rel="nofollow"&gt;Animations &amp;amp; Transitions&lt;/a&gt; - Move widgets and transition between screens.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/guide/components/fragments" rel="nofollow"&gt;Fragment&lt;/a&gt; - A basic unit of composable UI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/guide/topics/ui/declaring-layout" rel="nofollow"&gt;Layout&lt;/a&gt; - Lay out widgets using different algorithms.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://material.io/develop/android/docs/getting-started/" rel="nofollow"&gt;Material&lt;/a&gt; - Material Components.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Third party
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.org/docs/reference/coroutines-overview.html" rel="nofollow"&gt;Kotlin Coroutines&lt;/a&gt; for managing background threads with simplified code
and reducing needs for callbacks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dagger.dev/users-guide" rel="nofollow"&gt;Dagger 2&lt;/a&gt; A fast dependency injector.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://square.github.io/retrofit/" rel="nofollow"&gt;Retrofit 2&lt;/a&gt; A configurable REST client.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://square.github.io/okhttp/" rel="nofollow"&gt;OkHttp 3&lt;/a&gt; A type-safe HTTP client.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/gson"&gt;GSON&lt;/a&gt; A Json - Object converter using reflection.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bumptech.github.io/glide/" rel="nofollow"&gt;Glide&lt;/a&gt; Image loading.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JakeWharton/timber"&gt;Timber&lt;/a&gt; A logger.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://facebook.github.io/stetho/" rel="nofollow"&gt;Stetho&lt;/a&gt; Sophisticated debug bridge.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-android-studio-ide-setup" class="anchor" aria-hidden="true" href="#android-studio-ide-setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android Studio IDE setup&lt;/h2&gt;
&lt;p&gt;For development, the latest version of Android Studio is required. The latest version can be
downloaded from &lt;a href="https://developer.android.com/studio/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;App uses &lt;a href="https://ktlint.github.io/" rel="nofollow"&gt;ktlint&lt;/a&gt; to enforce Kotlin coding styles.
Here's how to configure it for use with Android Studio (instructions adapted
from the ktlint &lt;a href="https://github.com/shyiko/ktlint/blob/master/README.md"&gt;README&lt;/a&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Close Android Studio if it's open&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download ktlint using these &lt;a href="https://github.com/shyiko/ktlint/blob/master/README.md#installation"&gt;installation instructions&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inside the project root directory run:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./ktlint --apply-to-idea-project --android&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start Android Studio&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright 2019 Eli Fox.&lt;/p&gt;
&lt;p&gt;Licensed to the Apache Software Foundation (ASF) under one or more contributor
license agreements.  See the NOTICE file distributed with this work for
additional information regarding copyright ownership.  The ASF licenses this
file to you under the Apache License, Version 2.0 (the "License"); you may not
use this file except in compliance with the License.  You may obtain a copy of
the License at&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
License for the specific language governing permissions and limitations under
the License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Eli-Fox</author><guid isPermaLink="false">https://github.com/Eli-Fox/LEGO-Catalog</guid><pubDate>Thu, 30 Jan 2020 00:24:00 GMT</pubDate></item><item><title>DroidKaigi/conference-app-2020 #25 in Kotlin, Today</title><link>https://github.com/DroidKaigi/conference-app-2020</link><description>&lt;p&gt;&lt;i&gt;The Official Conference App for DroidKaigi 2020 Tokyo&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-droidkaigi-2020-official-android-app-" class="anchor" aria-hidden="true" href="#droidkaigi-2020-official-android-app-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="corecomponent/androidcomponent/src/main/res/drawable-xxhdpi/ic_logo.png"&gt;&lt;img src="corecomponent/androidcomponent/src/main/res/drawable-xxhdpi/ic_logo.png" alt="DroidKaigi Logo" style="max-width:100%;"&gt;&lt;/a&gt;DroidKaigi 2020 official Android app &lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/DroidKaigi/conference-app-2020/workflows/.github/workflows/on_release_branch.yml/badge.svg"&gt;&lt;img src="https://github.com/DroidKaigi/conference-app-2020/workflows/.github/workflows/on_release_branch.yml/badge.svg" alt="GitHub Actions" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;We are currently working on the event. We are looking for contributors!&lt;/p&gt;
&lt;p&gt;DroidKaigi 2020 is a conference tailored for developers on 20th and 21st February 2020.&lt;/p&gt;
&lt;p&gt;You can install the production app via Get it on Google Play.
// TODO: Add link to Google Play&lt;/p&gt;
&lt;p&gt;And also, you can try the binary under development built on master branch through Try it on your device via DeployGate&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dply.me/qo28h3#install" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0c9982633da354cd3f93cca99c9f6b3a5da40c4f/68747470733a2f2f64706c792e6d652f716f323868332f627574746f6e2f6c61726765" alt="Try it on your device via DeployGate" data-canonical-src="https://dply.me/qo28h3/button/large" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;top&lt;/th&gt;
&lt;th&gt;drawer&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="arts/top.png"&gt;&lt;img src="arts/top.png" width="250px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="arts/drawer.png"&gt;&lt;img src="arts/drawer.png" width="250px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;We always welcome any and all contributions! See &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more information&lt;/p&gt;
&lt;p&gt;For Japanese speakers, please see &lt;a href="CONTRIBUTING.ja.md"&gt;CONTRIBUTING.ja.md&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Android Studio 3.6 and higher. You can download it from &lt;a href="https://developer.android.com/studio/preview" rel="nofollow"&gt;this page&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-development-environment" class="anchor" aria-hidden="true" href="#development-environment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development Environment&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-multi-module-project" class="anchor" aria-hidden="true" href="#multi-module-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multi module project&lt;/h2&gt;
&lt;p&gt;We separate the modules for each feature. We use the Dynamic feature modules for additional features.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="arts/multimodule.png"&gt;&lt;img src="arts/multimodule.png" width="400px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-kotlin-multiplatform-project" class="anchor" aria-hidden="true" href="#kotlin-multiplatform-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kotlin Multiplatform Project&lt;/h2&gt;
&lt;p&gt;// TODO: Add MultiPlatform&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-architecture" class="anchor" aria-hidden="true" href="#architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture&lt;/h1&gt;
&lt;p&gt;This app uses an AndroidJetpack(AAC) based architecture using AAC(LiveData, ViewModel, Room), Kotlin, Kotlin Coroutines Flow, DataBinding, Dagger, Firebase.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="arts/arch1.png"&gt;&lt;img src="arts/arch1.png" width="400px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It is designed to be a unidirectional data flow within the ViewModel.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="arts/arch2.png"&gt;&lt;img src="arts/arch2.png" width="400px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-fragment" class="anchor" aria-hidden="true" href="#fragment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fragment&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="arts/fragment.png"&gt;&lt;img src="arts/fragment.png" width="400px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Just observe() the &lt;code&gt;LiveData&amp;lt;UiModel&amp;gt;&lt;/code&gt; of the ViewModel.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@Inject&lt;/span&gt; &lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; sessionDetailViewModelFactory&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;SessionDetailViewModel&lt;/span&gt;.&lt;span class="pl-en"&gt;Factory&lt;/span&gt;
&lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; sessionDetailViewModel by assistedViewModels {
    sessionDetailViewModelFactory.create(navArgs.sessionId)
}

&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;onViewCreated&lt;/span&gt;(&lt;span class="pl-smi"&gt;view&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;View&lt;/span&gt;, &lt;span class="pl-smi"&gt;savedInstanceState&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Bundle?&lt;/span&gt;) {
    &lt;span class="pl-c1"&gt;super&lt;/span&gt;.onViewCreated(view, savedInstanceState)
    ...
    sessionDetailViewModel.uiModel
        .observe(viewLifecycleOwner) { uiModel&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;SessionDetailViewModel&lt;/span&gt;.&lt;span class="pl-en"&gt;UiModel&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
            ...
            progressTimeLatch.loading &lt;span class="pl-k"&gt;=&lt;/span&gt; uiModel.isLoading
            uiModel.session
                ?.&lt;span class="pl-c1"&gt;let&lt;/span&gt; { session &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; setupSessionViews(session) }
        }
    }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-viewmodel" class="anchor" aria-hidden="true" href="#viewmodel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ViewModel&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="arts/viewmodel1.png"&gt;&lt;img src="arts/viewmodel1.png" width="400px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://developer.android.com/topic/libraries/architecture/coroutines#livedata" rel="nofollow"&gt;LiveData Kotlin Coroutines builder&lt;/a&gt; runs when LiveData becomes active.&lt;br&gt;
And observe the data of the Coroutiens Flow of the repository.&lt;/p&gt;
&lt;p&gt;The LiveData becomes LoadState.Loading before the Coroutiens Flow is executed by Flow.toLoadingState(), and becomes LoadState.Loaded when finished.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SessionsViewModel&lt;/span&gt; &lt;span class="pl-k"&gt;@Inject&lt;/span&gt; &lt;span class="pl-en"&gt;constructor&lt;/span&gt;(
    &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;sessionRepository&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;SessionRepository&lt;/span&gt;
) &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;ViewModel&lt;/span&gt;() {

...
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; sessionLoadState&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;LiveData&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;LoadState&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;SessionContents&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; liveData {
        emitSource(
            sessionRepository.sessionContents()
                .toLoadingState()
                .asLiveData()
        )
        sessionRepository.refresh()
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="arts/viewmodel2.png"&gt;&lt;img src="arts/viewmodel2.png" width="400px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Construct UiModel LiveData from some such LiveData.&lt;br&gt;
The &lt;code&gt;combine&lt;/code&gt; method works like RxJava's combineLatest.&lt;br&gt;
You can make the loading state of the screen from multiple LiveData states like &lt;code&gt;sessionLoadState.isLoading || favoriteState.isLoading&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SessionDetailViewModel&lt;/span&gt; &lt;span class="pl-k"&gt;@AssistedInject&lt;/span&gt; &lt;span class="pl-en"&gt;constructor&lt;/span&gt;(
    &lt;span class="pl-k"&gt;@Assisted&lt;/span&gt; &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;sessionId&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;SessionId&lt;/span&gt;,
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;sessionRepository&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;SessionRepository&lt;/span&gt;
) &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;ViewModel&lt;/span&gt;() {
...
    &lt;span class="pl-k"&gt;val&lt;/span&gt; uiModel&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;LiveData&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;UiModel&lt;/span&gt;&amp;gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; combine(
        initialValue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;UiModel&lt;/span&gt;.&lt;span class="pl-en"&gt;EMPTY&lt;/span&gt;,
        liveData1 &lt;span class="pl-k"&gt;=&lt;/span&gt; sessionLoadStateLiveData,
        liveData2 &lt;span class="pl-k"&gt;=&lt;/span&gt; favoriteLoadingStateLiveData
    ) { current&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;UiModel&lt;/span&gt;,
        sessionLoadState&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;LoadState&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Session&lt;/span&gt;&amp;gt;,
        favoriteState&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;LoadingState&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You can create loading state by multiple LiveData&lt;/span&gt;
        &lt;span class="pl-k"&gt;val&lt;/span&gt; isLoading &lt;span class="pl-k"&gt;=&lt;/span&gt; sessionLoadState.isLoading &lt;span class="pl-k"&gt;||&lt;/span&gt; favoriteState.isLoading
        &lt;span class="pl-en"&gt;UiModel&lt;/span&gt;(
            isLoading &lt;span class="pl-k"&gt;=&lt;/span&gt; isLoading,
            error &lt;span class="pl-k"&gt;=&lt;/span&gt; sessionLoadState
                .getErrorIfExists()
                .toAppError()
                &lt;span class="pl-k"&gt;?:&lt;/span&gt; favoriteState
                    .getErrorIfExists()
                    .toAppError()
            ,
            session &lt;span class="pl-k"&gt;=&lt;/span&gt; sessionLoadState.value
        )
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run Coroutines with &lt;code&gt;viewModelScope&lt;/code&gt; when data changes, such as adding a session to Favorites.&lt;br&gt;
Because we do not want to end the process of adding a session to favorites with the back button, we use WorkManager to do the processing.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="arts/viewmodel3.png"&gt;&lt;img src="arts/viewmodel3.png" width="400px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SessionDetailViewModel&lt;/span&gt; &lt;span class="pl-k"&gt;@AssistedInject&lt;/span&gt; &lt;span class="pl-en"&gt;constructor&lt;/span&gt;(
    &lt;span class="pl-k"&gt;@Assisted&lt;/span&gt; &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;sessionId&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;SessionId&lt;/span&gt;,
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;sessionRepository&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;SessionRepository&lt;/span&gt;
) &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;ViewModel&lt;/span&gt;() {
..
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; favoriteLoadingStateLiveData&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;MutableLiveData&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;LoadingState&lt;/span&gt;&amp;gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MutableLiveData&lt;/span&gt;(&lt;span class="pl-en"&gt;LoadingState&lt;/span&gt;.&lt;span class="pl-en"&gt;Loaded&lt;/span&gt;)
...
    &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;favorite&lt;/span&gt;(&lt;span class="pl-smi"&gt;session&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Session&lt;/span&gt;) {
        viewModelScope.launch {
            favoriteLoadingStateLiveData.value &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;LoadingState&lt;/span&gt;.&lt;span class="pl-en"&gt;Loading&lt;/span&gt;
            &lt;span class="pl-k"&gt;try&lt;/span&gt; {
                sessionRepository.toggleFavoriteWithWorker(session.id)
                favoriteLoadingStateLiveData.value &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;LoadingState&lt;/span&gt;.&lt;span class="pl-en"&gt;Loaded&lt;/span&gt;
            } &lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-smi"&gt;e&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Exception&lt;/span&gt;) {
                favoriteLoadingStateLiveData.value &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;LoadingState&lt;/span&gt;.&lt;span class="pl-en"&gt;Error&lt;/span&gt;(e)
            }
        }
    }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-design" class="anchor" aria-hidden="true" href="#design"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;DroidKaigi 2020 Design Kit&lt;br&gt;
&lt;a href="https://www.figma.com/file/RPPQQRys8IubNShKan8c2Z/DroidKaigi-2020-Design-Kit?node-id=0%3A2347" rel="nofollow"&gt;https://www.figma.com/file/RPPQQRys8IubNShKan8c2Z/DroidKaigi-2020-Design-Kit?node-id=0%3A2347&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;App&lt;br&gt;
&lt;a href="https://www.figma.com/file/4r9becvhDy3GfXaXex8E8d/App" rel="nofollow"&gt;https://www.figma.com/file/4r9becvhDy3GfXaXex8E8d/App&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="arts/design.png"&gt;&lt;img src="arts/design.png" width="400px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-thanks" class="anchor" aria-hidden="true" href="#thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thanks&lt;/h2&gt;
&lt;p&gt;Thank you for contributing!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Contributors
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DroidKaigi/conference-app-2020/graphs/contributors"&gt;GitHub : Contributors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Designer
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/chihokotaro" rel="nofollow"&gt;Chihokotaro / Chihoko Watanabe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credit" class="anchor" aria-hidden="true" href="#credit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credit&lt;/h2&gt;
&lt;p&gt;This project uses some modern Android libraries and source codes.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-android" class="anchor" aria-hidden="true" href="#android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/jetpack/" rel="nofollow"&gt;Android Jetpack&lt;/a&gt; (Google)
&lt;ul&gt;
&lt;li&gt;Foundation
&lt;ul&gt;
&lt;li&gt;AppCompat&lt;/li&gt;
&lt;li&gt;Android KTX&lt;/li&gt;
&lt;li&gt;Multidex&lt;/li&gt;
&lt;li&gt;Test&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Architecture
&lt;ul&gt;
&lt;li&gt;Data Binding&lt;/li&gt;
&lt;li&gt;Lifecycles&lt;/li&gt;
&lt;li&gt;LiveData&lt;/li&gt;
&lt;li&gt;Navigation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;UI
&lt;ul&gt;
&lt;li&gt;Emoji&lt;/li&gt;
&lt;li&gt;Fragment&lt;/li&gt;
&lt;li&gt;Transition&lt;/li&gt;
&lt;li&gt;ConstraintLayout&lt;/li&gt;
&lt;li&gt;RecyclerView&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.org/" rel="nofollow"&gt;Kotlin&lt;/a&gt; (JetBrains)
&lt;ul&gt;
&lt;li&gt;Stdlib&lt;/li&gt;
&lt;li&gt;Coroutines&lt;/li&gt;
&lt;li&gt;Coroutines Flow&lt;/li&gt;
&lt;li&gt;Serialization&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://firebase.google.com/" rel="nofollow"&gt;Firebase&lt;/a&gt; (Google)
&lt;ul&gt;
&lt;li&gt;Authentication&lt;/li&gt;
&lt;li&gt;Cloud Firestore&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://google.github.io/dagger/" rel="nofollow"&gt;Dagger 2&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Core (Google)&lt;/li&gt;
&lt;li&gt;AndroidSupport (Google)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/square/AssistedInject"&gt;AssistedInject&lt;/a&gt; (Square)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/material-components/material-components-android"&gt;Material Components for Android&lt;/a&gt; (Google)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ktor.io/" rel="nofollow"&gt;Ktor&lt;/a&gt; (JetBrains)
&lt;ul&gt;
&lt;li&gt;Android Client&lt;/li&gt;
&lt;li&gt;Json&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://square.github.io/okhttp/" rel="nofollow"&gt;OkHttp&lt;/a&gt; (Square)
&lt;ul&gt;
&lt;li&gt;Client&lt;/li&gt;
&lt;li&gt;LoggingInterceptor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/coil-kt/coil"&gt;Coil&lt;/a&gt; (Coil Contributors)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/square/leakcanary"&gt;LeakCanary&lt;/a&gt; (Square)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://facebook.github.io/stetho/" rel="nofollow"&gt;Stetho&lt;/a&gt; (Facebook)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/willowtreeapps/Hyperion-Android"&gt;Hyperion-Android&lt;/a&gt; (WillowTree)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lisawray/groupie"&gt;Groupie&lt;/a&gt; (lisawray)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://korlibs.soywiz.com/klock/" rel="nofollow"&gt;KLOCK&lt;/a&gt; (soywiz)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mockk.io" rel="nofollow"&gt;MockK&lt;/a&gt; (oleksiyp)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evant/injectedvmprovider"&gt;Injected ViewModel Provider&lt;/a&gt; (evant)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/iosched"&gt;Google I/O 2018&lt;/a&gt; (Google)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MoyuruAizawa/TimetableLayout"&gt;TimetableLayout&lt;/a&gt; (MoyuruAizawa)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/android/architecture-components-samples"&gt;Android Architecture Components samples&lt;/a&gt; (Google)
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/android/architecture-components-samples/blob/9826b59956eb93c9e627bdf16a19a1c8bc28ce14/GithubBrowserSample/app/src/main/java/com/android/example/github/util/AutoClearedValue.kt"&gt;AutoClearedValue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/android/animation-samples"&gt;Android Animation Samples Repository&lt;/a&gt; (Google)
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/android/animation-samples/tree/master/Motion"&gt;Motion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ios" class="anchor" aria-hidden="true" href="#ios"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yonaskolb/Mint"&gt;Mint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonaskolb/XcodeGen"&gt;XcodeGen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/material-components/material-components-ios"&gt;material-components-ios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ReactiveX/RxSwift"&gt;RxSwift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gnu.org/software/make/" rel="nofollow"&gt;GNU Make&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CosmicMind/Material"&gt;Material&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kean/Nuke"&gt;Nuke&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftGen/SwiftGen"&gt;SwiftGen&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>DroidKaigi</author><guid isPermaLink="false">https://github.com/DroidKaigi/conference-app-2020</guid><pubDate>Thu, 30 Jan 2020 00:25:00 GMT</pubDate></item></channel></rss>