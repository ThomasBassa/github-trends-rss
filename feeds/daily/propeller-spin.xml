<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Propeller Spin, Today</title><link>https://github.com/trending/propeller-spin?since=daily</link><description>The top repositories on GitHub for propeller-spin, measured daily</description><pubDate>Wed, 13 Nov 2019 01:06:23 GMT</pubDate><lastBuildDate>Wed, 13 Nov 2019 01:06:23 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>materialsproject/pymatgen #1 in Propeller Spin, Today</title><link>https://github.com/materialsproject/pymatgen</link><description>&lt;p&gt;&lt;i&gt;Python Materials Genomics (pymatgen) is a robust materials analysis code that defines core object representations for structures and molecules with support for many electronic structure codes. It is currently the core analysis code powering the Materials Project.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body rst" data-path="README.rst"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;strong&gt;Official docs:&lt;/strong&gt; &lt;a href="http://www.pymatgen.org" rel="nofollow"&gt;http://www.pymatgen.org&lt;/a&gt;&lt;/p&gt;
&lt;a href="https://circleci.com/gh/materialsproject/pymatgen" rel="nofollow"&gt;&lt;img alt="https://circleci.com/gh/materialsproject/pymatgen.svg?style=shield&amp;amp;circle-token=:circle-token" src="https://camo.githubusercontent.com/5ada2bad7331b3bc5cd311e52afb4bd3c9bca3e7/68747470733a2f2f636972636c6563692e636f6d2f67682f6d6174657269616c7370726f6a6563742f70796d617467656e2e7376673f7374796c653d736869656c6426636972636c652d746f6b656e3d3a636972636c652d746f6b656e" data-canonical-src="https://circleci.com/gh/materialsproject/pymatgen.svg?style=shield&amp;amp;circle-token=:circle-token" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/406cb7f548b95560c9f8b7a18c82a0a782d98ae6/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f616b64796b65356a78673667707334353f7376673d74727565"&gt;&lt;img alt="https://ci.appveyor.com/api/projects/status/akdyke5jxg6gps45?svg=true" src="https://camo.githubusercontent.com/406cb7f548b95560c9f8b7a18c82a0a782d98ae6/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f616b64796b65356a78673667707334353f7376673d74727565" data-canonical-src="https://ci.appveyor.com/api/projects/status/akdyke5jxg6gps45?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/35857c9c5fe2fff8ae1c3ab2bbd9b983c12fffa4/68747470733a2f2f616e61636f6e64612e6f72672f636f6e64612d666f7267652f70796d617467656e2f6261646765732f646f776e6c6f6164732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/35857c9c5fe2fff8ae1c3ab2bbd9b983c12fffa4/68747470733a2f2f616e61636f6e64612e6f72672f636f6e64612d666f7267652f70796d617467656e2f6261646765732f646f776e6c6f6164732e737667" data-canonical-src="https://anaconda.org/conda-forge/pymatgen/badges/downloads.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/63b77efc35105fee67e637008f559c5bbc628d2d/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d6174657269616c7370726f6a6563742f70796d617467656e2f62616467652e7376673f6272616e63683d6d6173746572"&gt;&lt;img alt="https://coveralls.io/repos/github/materialsproject/pymatgen/badge.svg?branch=master" src="https://camo.githubusercontent.com/63b77efc35105fee67e637008f559c5bbc628d2d/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d6174657269616c7370726f6a6563742f70796d617467656e2f62616467652e7376673f6272616e63683d6d6173746572" data-canonical-src="https://coveralls.io/repos/github/materialsproject/pymatgen/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pymatgen (Python Materials Genomics) is a robust, open-source Python library
for materials analysis. These are some of the main features:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Highly flexible classes for the representation of Element, Site, Molecule,
Structure objects.&lt;/li&gt;
&lt;li&gt;Extensive input/output support, including support for &lt;a href="http://cms.mpi.univie.ac.at/vasp" rel="nofollow"&gt;VASP&lt;/a&gt;, &lt;a href="http://www.abinit.org" rel="nofollow"&gt;ABINIT&lt;/a&gt;, CIF,
Gaussian, XYZ, and many other file formats.&lt;/li&gt;
&lt;li&gt;Powerful analysis tools, including generation of phase diagrams, Pourbaix
diagrams, diffusion analyses, reactions, etc.&lt;/li&gt;
&lt;li&gt;Electronic structure analyses, such as density of states and band structure.&lt;/li&gt;
&lt;li&gt;Integration with the Materials Project REST API.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Pymatgen is free to use. However, we also welcome your help to improve this
library by making your own contributions.  These contributions can be in the
form of additional tools or modules you develop, or feature requests and bug
reports. The following are resources for pymatgen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Please report any bugs and issues at pymatgen's &lt;a href="https://github.com/materialsproject/pymatgen/issues"&gt;Github Issues
page&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For help with any pymatgen issue, please use the pymatgen &lt;a href="https://discuss.matsci.org/c/pymatgen" rel="nofollow"&gt;Discourse page&lt;/a&gt;. Please note that the pymatgen Google
group has been deprecated in favor of Discourse.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://twitter.com/pymatgen" rel="nofollow"&gt;Twitter&lt;/a&gt;. Follow to get news and tips.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://matgenb.materialsvirtuallab.org" rel="nofollow"&gt;matgenb&lt;/a&gt;. For example notebooks.&lt;/li&gt;
&lt;/ul&gt;
&lt;a name="user-content-why-use-pymatgen"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-why-use-pymatgen" class="anchor" aria-hidden="true" href="#why-use-pymatgen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why use pymatgen?&lt;/h2&gt;
&lt;p&gt;There are many materials analysis codes out there, both commerical and free,
but pymatgen offer several advantages:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;It is (fairly) robust.&lt;/strong&gt; Pymatgen is used by thousands of researchers,
and is the analysis code powering the &lt;a href="https://www.materialsproject.org" rel="nofollow"&gt;Materials Project&lt;/a&gt;. The analysis it
produces survives rigorous scrutiny every single day. Bugs tend to be
found and corrected quickly. Pymatgen also uses
&lt;a href="https://circleci.com" rel="nofollow"&gt;CircleCI&lt;/a&gt; and &lt;a href="https://www.appveyor.com/" rel="nofollow"&gt;Appveyor&lt;/a&gt;
for continuous integration on the Linux and Windows platforms,
respectively, which ensures that every commit passes a comprehensive suite
of unittests. The coverage of the unittests can be seen on
&lt;a href="https://coveralls.io/github/materialsproject/pymatgen" rel="nofollow"&gt;coveralls.io&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;It is well documented.&lt;/strong&gt; A fairly comprehensive documentation has been
written to help you get to grips with it quickly.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;It is open.&lt;/strong&gt; You are free to use and contribute to pymatgen. It also means
that pymatgen is continuously being improved. We will attribute any code you
contribute to any publication you specify. Contributing to pymatgen means
your research becomes more visible, which translates to greater impact.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;It is fast.&lt;/strong&gt; Many of the core numerical methods in pymatgen have been
optimized by vectorizing in numpy/scipy. This means that coordinate
manipulations are extremely fast and are in fact comparable to codes
written in other languages. Pymatgen also comes with a complete system for
handling periodic boundary conditions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;It will be around.&lt;/strong&gt; Pymatgen is not a pet research project. It is used in
the well-established Materials Project. It is also actively being developed
and maintained by the &lt;a href="http://www.materialsvirtuallab.org" rel="nofollow"&gt;Materials Virtual Lab&lt;/a&gt;, the ABINIT group and many
other research groups.&lt;/li&gt;
&lt;/ol&gt;
&lt;a name="user-content-getting-pymatgen"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-getting-pymatgen" class="anchor" aria-hidden="true" href="#getting-pymatgen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting pymatgen&lt;/h2&gt;
&lt;p&gt;Before installing pymatgen, you may need to first install a few critical
dependencies manually. Please refer to the official &lt;a href="http://www.pymatgen.org" rel="nofollow"&gt;pymatgen page&lt;/a&gt; for
installation details and requirements, including instructions for the
bleeding edge developmental version. For people who are absolutely new to
Python packages, it is highly recommended you do the installation using
conda, which will make things a lot easier, especially on Windows:&lt;/p&gt;
&lt;blockquote&gt;
conda install --channel conda-forge pymatgen&lt;/blockquote&gt;
&lt;p&gt;In line with the Scientific Python stack, pymatgen will now support only
Py3.x from v2019.1.1. Specifically, we now only run testing on Py3.6+ so
this is our officially  supported minimum Python version.&lt;/p&gt;
&lt;p&gt;Users who need Python 2.7 support should install v2018.x,
you may also need to enforce an older version of numpy (&lt;a href="#id1"&gt;&lt;span id="user-content-id2"&gt;`&lt;/span&gt;&lt;/a&gt;pip install numpy==1.16.4 &lt;a href="#id3"&gt;&lt;span id="user-content-id4"&gt;`&lt;/span&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The version at the &lt;a href="https://pypi.org/project/pymatgen" rel="nofollow"&gt;Python Package Index (PyPI)&lt;/a&gt;
is always the latest stable release that is relatively bug-free. The easiest
way to install pymatgen on any system is via pip:&lt;/p&gt;
&lt;pre&gt;pip install pymatgen
&lt;/pre&gt;
&lt;p&gt;Wheels for Mac and Windows have been built for convenience.&lt;/p&gt;
&lt;p&gt;Some extra functionality (e.g., generation of POTCARs) do require additional
setup (please see the &lt;a href="http://www.pymatgen.org" rel="nofollow"&gt;pymatgen page&lt;/a&gt;).&lt;/p&gt;
&lt;a name="user-content-change-log"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-change-log" class="anchor" aria-hidden="true" href="#change-log"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change Log&lt;/h2&gt;
&lt;p&gt;The latest change log is available &lt;a href="http://pymatgen.org/change_log" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;a name="user-content-using-pymatgen"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-using-pymatgen" class="anchor" aria-hidden="true" href="#using-pymatgen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using pymatgen&lt;/h2&gt;
&lt;p&gt;Please refer to the official &lt;a href="http://www.pymatgen.org" rel="nofollow"&gt;pymatgen page&lt;/a&gt; for tutorials and examples.&lt;/p&gt;
&lt;a name="user-content-how-to-cite-pymatgen"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-cite-pymatgen" class="anchor" aria-hidden="true" href="#how-to-cite-pymatgen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to cite pymatgen&lt;/h2&gt;
&lt;p&gt;If you use pymatgen in your research, please consider citing the following
work:&lt;/p&gt;
&lt;blockquote&gt;
Shyue Ping Ong, William Davidson Richards, Anubhav Jain, Geoffroy Hautier,
Michael Kocher, Shreyas Cholia, Dan Gunter, Vincent Chevrier, Kristin A.
Persson, Gerbrand Ceder. &lt;em&gt;Python Materials Genomics (pymatgen) : A Robust,
Open-Source Python Library for Materials Analysis.&lt;/em&gt; Computational
Materials Science, 2013, 68, 314-319. &lt;a href="http://dx.doi.org/10.1016/j.commatsci.2012.10.028" rel="nofollow"&gt;doi:10.1016/j.commatsci.2012.10.028&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;In addition, some of pymatgen's functionality is based on scientific advances
/ principles developed by the computational materials scientists in our team.
Please refer to &lt;a href="http://pymatgen.org/" rel="nofollow"&gt;pymatgen's documentation&lt;/a&gt; on how to
cite them.&lt;/p&gt;
&lt;a name="user-content-license"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Pymatgen is released under the MIT License. The terms of the license are as
follows:&lt;/p&gt;
&lt;pre&gt;The MIT License (MIT)
Copyright (c) 2011-2012 MIT &amp;amp; LBNL

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
&lt;/pre&gt;
&lt;a name="user-content-about-the-pymatgen-development-team"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-about-the-pymatgen-development-team" class="anchor" aria-hidden="true" href="#about-the-pymatgen-development-team"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About the Pymatgen Development Team&lt;/h2&gt;
&lt;p&gt;Shyue Ping Ong of the &lt;a href="http://www.materialsvirtuallab.org" rel="nofollow"&gt;Materials Virtual Lab&lt;/a&gt; started Pymatgen in 2011, and is
still the project lead.&lt;/p&gt;
&lt;p&gt;The Pymatgen Development Team is the set of all contributors to the
pymatgen project, including all subprojects.&lt;/p&gt;
&lt;a name="user-content-our-copyright-policy"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-our-copyright-policy" class="anchor" aria-hidden="true" href="#our-copyright-policy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Our Copyright Policy&lt;/h2&gt;
&lt;p&gt;Pymatgen uses a shared copyright model. Each contributor maintains copyright
over their contributions to pymatgen. But, it is important to note that these
contributions are typically only changes to the repositories. Thus, the
pymatgen source code, in its entirety is not the copyright of any
single person or institution. Instead, it is the collective copyright of the
entire pymatgen Development Team. If individual contributors want to maintain a
record of what changes/contributions they have specific copyright on, they
should indicate their copyright in the commit message of the change, when
they commit the change to one of the pymatgen repositories.&lt;/p&gt;
&lt;p&gt;With this in mind, the following banner should be used in any source code file
to indicate the copyright and license terms:&lt;/p&gt;
&lt;pre&gt;# Copyright (c) Pymatgen Development Team.
# Distributed under the terms of the MIT License.
&lt;/pre&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>materialsproject</author><guid isPermaLink="false">https://github.com/materialsproject/pymatgen</guid><pubDate>Wed, 13 Nov 2019 00:01:00 GMT</pubDate></item></channel></rss>