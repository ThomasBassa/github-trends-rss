<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Emacs Lisp, Today</title><link>https://github.com/trending/emacs-lisp?since=daily</link><description>The top repositories on GitHub for emacs-lisp, measured daily</description><pubDate>Tue, 21 Jan 2020 01:04:17 GMT</pubDate><lastBuildDate>Tue, 21 Jan 2020 01:04:17 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>hlissner/doom-emacs #1 in Emacs Lisp, Today</title><link>https://github.com/hlissner/doom-emacs</link><description>&lt;p&gt;&lt;i&gt;An Emacs configuration for the stubborn martian vimmer&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;a href="http://doomemacs.org" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/d38622bbeea8e0a3a1c42e21d2839363d21b4627/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f686c6973736e65722f646f6f6d2d656d6163732e7376673f6c6162656c3d72656c6561736526636f6c6f723d6f72616e6765" alt="Made with Doom Emacs" data-canonical-src="https://img.shields.io/github/tag/hlissner/doom-emacs.svg?label=release&amp;amp;color=orange" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://emacs.org" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/145199dd89d8ed47968846fe8dcdde64b838ffab/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d6164655f666f722d456d6163735f32362e312b2d626c756576696f6c65742e737667" alt="Made for Emacs 26.1+" data-canonical-src="https://img.shields.io/badge/Made_for-Emacs_26.1+-blueviolet.svg" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/hlissner/doom-emacs/actions"&gt;
  &lt;img src="https://github.com/hlissner/doom-emacs/workflows/CI/badge.svg" alt="Build status: develop" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://discord.gg/bcZ6P3y" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/48087b2da5b43d9130b73e6e8ad3e7b42caa3330/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446973636f72642d626c75652e7376673f6c6f676f3d646973636f7264266c6162656c3d6a6f696e" alt="Join our discord server" align="right" data-canonical-src="https://img.shields.io/badge/Discord-blue.svg?logo=discord&amp;amp;label=join" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/hlissner/doom-emacs/screenshots/main.png"&gt;&lt;img src="https://raw.githubusercontent.com/hlissner/doom-emacs/screenshots/main.png" alt="Doom Emacs Screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;b&gt;&lt;a href="/../../tree/screenshots"&gt;Screenshots&lt;/a&gt;&lt;/b&gt;
  |
  &lt;b&gt;&lt;a href="docs/getting_started.org"&gt;Get started&lt;/a&gt;&lt;/b&gt;
  |
  &lt;b&gt;&lt;a href="docs/contributing.org"&gt;Contribute&lt;/a&gt;&lt;/b&gt;
  |
  &lt;b&gt;&lt;a href="docs/index.org"&gt;Documentation&lt;/a&gt;&lt;/b&gt;
  |
  &lt;b&gt;&lt;a href="docs/faq.org"&gt;FAQ&lt;/a&gt;&lt;/b&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Quick start&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Install emacs and ripgrep through your package manager, then...&lt;/span&gt;
git clone https://github.com/hlissner/doom-emacs &lt;span class="pl-k"&gt;~&lt;/span&gt;/.emacs.d
&lt;span class="pl-k"&gt;~&lt;/span&gt;/.emacs.d/bin/doom install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-doom-emacs"&gt;What is Doom Emacs&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#dooms-mantras"&gt;Doom's mantras&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-help"&gt;Getting Help&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#community"&gt;Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-what-is-doom-emacs" class="anchor" aria-hidden="true" href="#what-is-doom-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Doom Emacs&lt;/h1&gt;
&lt;a href="http://ultravioletbat.deviantart.com/art/Yay-Evil-111710573" rel="nofollow"&gt;
  &lt;img src="https://github.com/hlissner/doom-emacs/raw/screenshots/cacochan.png" align="right" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;p&gt;It is a story as old as time. A stubborn, shell-dwelling, and melodramatic
vimmer -- envious of the features of modern text editors -- spirals into despair
before succumbing to the &lt;a href="https://github.com/emacs-evil/evil"&gt;dark side&lt;/a&gt;. This is his config.&lt;/p&gt;
&lt;p&gt;Doom is a configuration for &lt;a href="https://www.gnu.org/software/emacs/" rel="nofollow"&gt;GNU Emacs&lt;/a&gt;
designed to make Emacs faster and easier to customize. It can serve as framework
for your own configuration or a resource for fellow Emacs enthusiasts who want
to learn more about our favorite OS.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dooms-mantras" class="anchor" aria-hidden="true" href="#dooms-mantras"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Doom's mantras&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Gotta go fast.&lt;/strong&gt; Startup and run-time performance are high priorities.
Expensive functionality (built-in or in plugins) is modified and optimized
toward this end, otherwise, they must be opt-in.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Close to metal.&lt;/strong&gt; There's less between you and vanilla Emacs, by design.
There's less to grok. Modules should be syntactically sweet and backend logic
explicit and abstraction-light. The code itself ought to be designed as if
grokking it were part of the user experience; and it is!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Opinionated, but not stubborn.&lt;/strong&gt; Doom is a bundle of reasonable defaults
and curated opinions, but you aren't stuck with it. Use as little or as much
of it as you like. Use it as-is as a complete Emacs distribution; disable
everything and use it as a baseline for your own; or anywhere in between.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Your system, your rules.&lt;/strong&gt; There are more ways to set up your programming
environment than there are dislikes on Youtube Rewind '18, so Doom and its
plugins promise not to &lt;em&gt;automatically&lt;/em&gt; (and definitely not &lt;em&gt;silently&lt;/em&gt;) install
system dependencies. This means fonts, packages and programs. &lt;code&gt;doom doctor&lt;/code&gt;
will tell you what's missing though!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A curated set of sane defaults for all packages, all (major) OSes, and Emacs
itself.&lt;/li&gt;
&lt;li&gt;Support for &lt;em&gt;many&lt;/em&gt; programming languages. Too many to list. Includes syntax
highlighting, linters/checker integration, inline code evaluation, code
completion (where possible), REPLs, documentation lookups, snippets, and more!&lt;/li&gt;
&lt;li&gt;Support for &lt;em&gt;many&lt;/em&gt; tools, like docker, pass, ansible, terraform, and more.&lt;/li&gt;
&lt;li&gt;Minimalistic good looks inspired by modern editors.&lt;/li&gt;
&lt;li&gt;A modular architecture for a more organized Emacs configuration.&lt;/li&gt;
&lt;li&gt;A custom elisp library to help you simplify your config.&lt;/li&gt;
&lt;li&gt;A declarative &lt;a href="core/autoload/packages.el"&gt;package management system&lt;/a&gt; (powered by
&lt;a href="https://github.com/raxod502/straight.el"&gt;straight.el&lt;/a&gt;) with a command line interface. Install packages
from anywhere, not just (M)ELPA.&lt;/li&gt;
&lt;li&gt;Vim-emulation powered by &lt;a href="https://github.com/emacs-evil/evil"&gt;evil-mode&lt;/a&gt;, including ports of
popular vim plugins and functionality.&lt;/li&gt;
&lt;li&gt;A Spacemacs-esque &lt;a href="modules/config/default/+evil-bindings.el"&gt;keybinding scheme&lt;/a&gt;, centered around leader
and localleader prefix keys (&lt;kbd&gt;SPC&lt;/kbd&gt; and &lt;kbd&gt;SPC&lt;/kbd&gt;&lt;kbd&gt;m&lt;/kbd&gt;, by
default).&lt;/li&gt;
&lt;li&gt;A rule-based &lt;a href="modules/ui/popup/README.org"&gt;popup management system&lt;/a&gt; that dictates how
temporary or disposable buffers are displayed (and disposed of).&lt;/li&gt;
&lt;li&gt;Automatic indentation detection and &lt;a href="http://editorconfig.org/" rel="nofollow"&gt;editorconfig&lt;/a&gt;
integration. Let someone else argue about tabs vs &lt;strong&gt;_*&lt;strong&gt;spaces&lt;/strong&gt;*_&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Project-management tools and framework-specific minor modes with their own
snippets libraries.&lt;/li&gt;
&lt;li&gt;Project search (and replace) utilities, powered by &lt;a href="https://github.com/BurntSushi/ripgrep"&gt;ripgrep&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Isolated and persistent workspaces (also substitutes for vim tabs).&lt;/li&gt;
&lt;li&gt;An environment variables file generator and loader, so that Emacs can
perfectly inherit your shell configuration.&lt;/li&gt;
&lt;li&gt;Everything is optional!&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;p&gt;We have &lt;a href="https://discord.gg/bcZ6P3y" rel="nofollow"&gt;a Discord server&lt;/a&gt;! Hop on and say hi!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;p&gt;Encountered strange behavior or an error? Here are some things to try before you
shoot off that bug report:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;bin/doom refresh&lt;/code&gt;. This ensures Doom is properly set up and its autoloads
files are up-to-date.&lt;/li&gt;
&lt;li&gt;If you have byte-compiled your config (with &lt;code&gt;bin/doom compile&lt;/code&gt;), see if
&lt;code&gt;bin/doom clean&lt;/code&gt; makes the issue go away. Never debug issues with a
byte-compiled config, it will make your job harder.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;bin/doom doctor&lt;/code&gt; to detect common issues in your development environment.&lt;/li&gt;
&lt;li&gt;Search Doom's issue tracker for mention of any error messages you've received.&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/faq.org"&gt;Visit our FAQ&lt;/a&gt; to see if your issue is listed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If all else fails, &lt;a href="https://github.com/hlissner/doom-emacs/issues/new"&gt;file that bug report&lt;/a&gt;! Please include the
behavior you've observed, the behavior you expected, and any error messages or
warnings logged to the *Messages* buffer (can be opened with &lt;kbd&gt;SPC h
e&lt;/kbd&gt; or &lt;code&gt;M-x view-echo-area-messages&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;It's a great help if you included a backtrace with errors, i.e. &lt;code&gt;M-x toggle-debug-on-error&lt;/code&gt; then recreating the error(s).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Doom (and my Emacs work in general) is a labor of love and incurable madness,
done on my spare time. If you'd like to support my work, there are many things
you can do to help; I welcome any contribution!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I love pull requests and bug reports. Check out the &lt;a href="docs/contributing.org"&gt;Contributing
Guidelines&lt;/a&gt; to find out how you can help out.&lt;/li&gt;
&lt;li&gt;I welcome Elisp pointers! Don't hesitate to &lt;a href="https://github.com/hlissner/doom-emacs/issues/new"&gt;tell me my Elisp-fu
sucks&lt;/a&gt; (but please tell me why).&lt;/li&gt;
&lt;li&gt;Hop on &lt;a href="https://discord.gg/bcZ6P3y" rel="nofollow"&gt;our Discord server&lt;/a&gt; and say hi! Help others out, hang out
or talk to me about Emacs, or gamedev, or programming, machine learning,
physics, pixel art, anime, gaming -- anything you like. Nourish this lonely
soul!&lt;/li&gt;
&lt;li&gt;If you'd like to support my work financially, consider buying me a drink
through &lt;a href="https://liberapay.com/hlissner/donate" rel="nofollow"&gt;liberapay&lt;/a&gt; or &lt;a href="https://paypal.me/henriklissner/10" rel="nofollow"&gt;paypal&lt;/a&gt;. Donations are a
great help. My work here contends with studies, ventures in indie gamedev, and
my freelance work.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>hlissner</author><guid isPermaLink="false">https://github.com/hlissner/doom-emacs</guid><pubDate>Tue, 21 Jan 2020 00:01:00 GMT</pubDate></item><item><title>syl20bnr/spacemacs #2 in Emacs Lisp, Today</title><link>https://github.com/syl20bnr/spacemacs</link><description>&lt;p&gt;&lt;i&gt;A community-driven Emacs distribution - The best editor is neither Emacs nor Vim,  it's Emacs *and* Vim!&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a name="user-content-top"&gt;&lt;/a&gt;
&lt;a href="http://spacemacs.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8f5ee1d9b7278ed2c63f1f89e9a583ec59b52b6b/68747470733a2f2f63646e2e7261776769742e636f6d2f73796c3230626e722f73706163656d6163732f343432643032353737396461326636326663383663323038323730333639373731346462363531342f6173736574732f73706163656d6163732d62616467652e737667" alt="Made with Spacemacs" data-canonical-src="https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="http://www.twitter.com/spacemacs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7cf10772eb6ccebe92d678c452a971e6e2778653/687474703a2f2f692e696d6775722e636f6d2f7458536f5468462e706e67" alt="Twitter" align="right" data-canonical-src="http://i.imgur.com/tXSoThF.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/doc/img/title2.png"&gt;&lt;img src="/doc/img/title2.png" alt="Spacemacs" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
&lt;b&gt;&lt;a href="http://spacemacs.org/doc/DOCUMENTATION#orgheadline5" rel="nofollow"&gt;philosophy&lt;/a&gt;&lt;/b&gt;
|
&lt;b&gt;&lt;a href="http://spacemacs.org/doc/DOCUMENTATION#orgheadline8" rel="nofollow"&gt;for whom?&lt;/a&gt;&lt;/b&gt;
|
&lt;b&gt;&lt;a href="http://spacemacs.org/doc/DOCUMENTATION#orgheadline7" rel="nofollow"&gt;screenshots&lt;/a&gt;&lt;/b&gt;
|
&lt;b&gt;&lt;a href="http://spacemacs.org/doc/DOCUMENTATION.html" rel="nofollow"&gt;documentation&lt;/a&gt;&lt;/b&gt;
|
&lt;b&gt;&lt;a href="CONTRIBUTING.org"&gt;contribute&lt;/a&gt;&lt;/b&gt;
|
&lt;b&gt;&lt;a href="http://spacemacs.org/doc/DOCUMENTATION#achievements" rel="nofollow"&gt;achievements&lt;/a&gt;&lt;/b&gt;
|
&lt;b&gt;&lt;a href="http://spacemacs.org/doc/FAQ" rel="nofollow"&gt;FAQ&lt;/a&gt;&lt;/b&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p align="center"&gt;
&lt;a href="https://gitter.im/syl20bnr/spacemacs?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80bf7c9122b2d8f4dbadfc434c9074c1754267ae/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e20436861742e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Join Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/syl20bnr/spacemacs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b724760fb5fb9a3cc9dcb3ed5fca8d102d076062/68747470733a2f2f7472617669732d63692e6f72672f73796c3230626e722f73706163656d6163732e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/syl20bnr/spacemacs.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=ESFVNPKP4Y742" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/516248018619132b396881c0b21749c34d6ccfbd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f50617970616c2d446f6e6174652d626c75652e737667" alt="Donate" data-canonical-src="https://img.shields.io/badge/Paypal-Donate-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://shop.spreadshirt.com/spacemacs-shop" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f1b306f89bf6fade603509713a098316a4948ef2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53686f702d542d2d5368697274732d626c75652e737667" alt="Donate" data-canonical-src="https://img.shields.io/badge/Shop-T--Shirts-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.slant.co/topics/12/~what-are-the-best-programming-text-editors" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2e66996b76fc392f4936160dc3f627f663d1a68a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f536c616e742d5265636f6d6d656e642d6666363962342e737667" alt="Recommend it" data-canonical-src="https://img.shields.io/badge/Slant-Recommend-ff69b4.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Quick Install:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-help"&gt;Getting Help&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#emacs"&gt;Emacs&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#linux-distros"&gt;Linux distros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#macos"&gt;macOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#windows"&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#install"&gt;Install&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#default-installation"&gt;Default installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#alternate-installations"&gt;Alternate installations&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#modify-home-environment-variable"&gt;Modify HOME environment variable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#modify-spacemacs-start-directory-variable"&gt;Modify spacemacs-start-directory variable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#spacemacs-logo"&gt;Spacemacs logo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#update"&gt;Update&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#automatic-update-on-master-branch"&gt;Automatic update (on master branch)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#manual-update-on-master-branch"&gt;Manual update (on master branch)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#on-develop-branch"&gt;On develop branch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#revert-to-a-specific-version"&gt;Revert to a specific version&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#quotes"&gt;Quotes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributions"&gt;Contributions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#communities"&gt;Communities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#supporting-spacemacs"&gt;Supporting Spacemacs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Spacemacs is a new way to experience Emacs -- a sophisticated and
polished set-up focused on ergonomics, mnemonics and consistency.&lt;/p&gt;
&lt;p&gt;Just clone it, launch it, then press the space bar to explore the
interactive list of carefully-chosen key bindings. You can also press
the home buffer's &lt;code&gt;[?]&lt;/code&gt; button for some great first key bindings to
try.&lt;/p&gt;
&lt;p&gt;Spacemacs can be used naturally by both Emacs and Vim users -- you can
even mix the two editing styles. Switching easily between input styles
makes Spacemacs a great tool for pair-programming.&lt;/p&gt;
&lt;p&gt;Spacemacs is currently in beta, and contributions are very welcome.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/img/spacemacs-python.png"&gt;&lt;img src="doc/img/spacemacs-python.png" alt="spacemacs_python" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Great documentation:&lt;/strong&gt; access documentation in Emacs with
&lt;kbd&gt;SPC h SPC&lt;/kbd&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beautiful GUI:&lt;/strong&gt; you'll love the distraction free UI and its functional
mode-line.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Excellent ergonomics:&lt;/strong&gt; all the key bindings are accessible by pressing
the &lt;kbd&gt;space bar&lt;/kbd&gt; or &lt;kbd&gt;alt-m&lt;/kbd&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mnemonic key bindings:&lt;/strong&gt; commands have mnemonic prefixes like
&lt;kbd&gt;SPC b&lt;/kbd&gt; for all the buffer commands or &lt;kbd&gt;SPC p&lt;/kbd&gt; for the
project commands.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Batteries included:&lt;/strong&gt; discover hundreds of ready-to-use packages nicely
organised in configuration layers following a set of
&lt;a href="http://spacemacs.org/doc/CONVENTIONS" rel="nofollow"&gt;conventions&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;p&gt;Comprehensive documentation is available for each layer by pressing
&lt;kbd&gt;SPC h SPC&lt;/kbd&gt;.&lt;/p&gt;
&lt;p&gt;You can also check the &lt;a href="http://spacemacs.org/doc/DOCUMENTATION" rel="nofollow"&gt;general documentation&lt;/a&gt;,
&lt;a href="http://spacemacs.org/doc/QUICK_START" rel="nofollow"&gt;quick start guide&lt;/a&gt; and the &lt;a href="http://spacemacs.org/doc/FAQ" rel="nofollow"&gt;FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h1&gt;
&lt;p&gt;If you need help, ask your question in the &lt;a href="https://gitter.im/syl20bnr/spacemacs" rel="nofollow"&gt;Gitter Chat&lt;/a&gt; and a member of the
community will help you out.&lt;/p&gt;
&lt;p&gt;If you prefer IRC, connect to the &lt;a href="https://irc.gitter.im/" rel="nofollow"&gt;Gitter Chat IRC server&lt;/a&gt; and join the
&lt;code&gt;#syl20bnr/spacemacs&lt;/code&gt; channel.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-emacs" class="anchor" aria-hidden="true" href="#emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Emacs&lt;/h2&gt;
&lt;p&gt;Spacemacs requires Emacs 24.4 or above. The development version of Emacs (at the
time of writing, this is 25.2) is not &lt;em&gt;officially&lt;/em&gt; supported, but should
nevertheless be expected to work.&lt;/p&gt;
&lt;p&gt;Some modes require third-party tools that you'll have to install via your
favorite package manager.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-linux-distros" class="anchor" aria-hidden="true" href="#linux-distros"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux distros&lt;/h3&gt;
&lt;p&gt;Install Emacs from the package manager of your Linux distribution.&lt;/p&gt;
&lt;p&gt;You should install the "emacs" package, not the "xemacs" package.
XEmacs is an old fork of Emacs. The X in its name is unrelated to X11.
Both Emacs and XEmacs have graphical support.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Ubuntu LTS 12.04 and 14.04 repositories have only Emacs 24.3
available. You have to &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/efaq/Installing-Emacs.html" rel="nofollow"&gt;build from source&lt;/a&gt; Emacs 24.4 or greater,
as Spacemacs won't work with 24.3. The same may be true for other distributions
as well.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-macos" class="anchor" aria-hidden="true" href="#macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS&lt;/h3&gt;
&lt;p&gt;The recommended way of installing Emacs on macOS is using &lt;a href="http://brew.sh" rel="nofollow"&gt;homebrew&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew tap d12frosted/emacs-plus
$ brew install emacs-plus
$ brew linkapps emacs-plus&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; these homebrew commands will install GNU Emacs, and link it to your
&lt;code&gt;/Applications&lt;/code&gt; directory. You still need to run the &lt;code&gt;git clone&lt;/code&gt; mentioned at
the start of this file. That will populate your &lt;code&gt;~/.emacs.d&lt;/code&gt; directory, which is
what transforms a regular GNU Emacs into Spacemacs.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; the proposed &lt;code&gt;emacs-plus&lt;/code&gt; tap is identical to the &lt;code&gt;emacs&lt;/code&gt; formulae, it
just builds GNU Emacs with support of several features by default along with
providing Spacemacs icon.
See &lt;a href="https://github.com/d12frosted/homebrew-emacs-plus"&gt;emacs-plus&lt;/a&gt; for more
information.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: to have the title bar match your theme background color,
consider using instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew install emacs-plus --HEAD --with-natural-title-bars&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; after you have completed the &lt;a href="#install"&gt;install process&lt;/a&gt; below, it is
also recommended to add the &lt;a href="http://spacemacs.org/layers/+os/osx/README.html" rel="nofollow"&gt;osx layer&lt;/a&gt; to your &lt;a href="http://spacemacs.org/doc/DOCUMENTATION#orgheadline45" rel="nofollow"&gt;dotfile&lt;/a&gt;. Install
instructions are available in the &lt;a href="http://spacemacs.org/layers/+os/osx/README.html" rel="nofollow"&gt;osx layer&lt;/a&gt; documentation.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; if the powerline separators on the spaceline are a different (less
saturated) color than the rest of the line, you can add following snippet to
&lt;code&gt;dotspacemacs/user-config&lt;/code&gt; in your &lt;code&gt;.spacemacs&lt;/code&gt; file.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; ns-use-srgb-colorspace &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Keep in mind that this is not ideal solution as it affects all colours in Emacs.
Another option is to use different powerline separator. For example, &lt;code&gt;alternate&lt;/code&gt;
and &lt;code&gt;bar&lt;/code&gt; diminishes the difference. And using &lt;code&gt;utf-8&lt;/code&gt; separator makes it go
away completely without the need to change colour space. In order to change
powerline separator put following snippet in &lt;code&gt;dotspacemacs/user-config&lt;/code&gt;.&lt;/p&gt;
&lt;pre lang="eslip"&gt;&lt;code&gt;(setq powerline-default-separator 'utf-8)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For more information about powerline separators, please refer to appropriate
section in &lt;a href="http://spacemacs.org/doc/DOCUMENTATION" rel="nofollow"&gt;Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;p&gt;You can download good quality builds from the &lt;a href="http://emacsbinw64.sourceforge.net/" rel="nofollow"&gt;emacs-w64 project&lt;/a&gt;.
It is recommended to install the most recent &lt;a href="https://sourceforge.net/projects/emacsbinw64/files/release/" rel="nofollow"&gt;stable build&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Be sure to declare a environment variable named &lt;code&gt;HOME&lt;/code&gt; pointing to your user
directory &lt;code&gt;C:\Users\&amp;lt;username&amp;gt;&lt;/code&gt;. Then you can clone Spacemacs in this directory.&lt;/p&gt;
&lt;p&gt;Sometimes you'll get the following error when you first start Emacs:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;The directory ~/.emacs.d/server is unsafe
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To fix it change the owner of the directory &lt;code&gt;~/.emacs.d/server&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;from Properties select the Tab “Security”,&lt;/li&gt;
&lt;li&gt;select the button “Advanced”,&lt;/li&gt;
&lt;li&gt;select the Tab “Owner”&lt;/li&gt;
&lt;li&gt;change the owner to your account name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Source: &lt;a href="http://stackoverflow.com/questions/885793/emacs-error-when-calling-server-start" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For efficient searches we recommend to install &lt;code&gt;pt&lt;/code&gt; (&lt;a href="https://github.com/monochromegane/the_platinum_searcher"&gt;the platinum searcher&lt;/a&gt;).
&lt;code&gt;pt&lt;/code&gt; version 1.7.7 or higher is required.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-default-installation" class="anchor" aria-hidden="true" href="#default-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default installation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If you have an existing Emacs configuration, back it up first:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;
mv .emacs.d .emacs.d.bak
mv .emacs .emacs.bak&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don't forget to backup and &lt;em&gt;remove&lt;/em&gt; &lt;code&gt;~/.emacs&lt;/code&gt; file otherwise Spacemacs
&lt;strong&gt;WILL NOT&lt;/strong&gt; load since that file prevents Emacs from loading the proper
initialization file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clone the repository:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/syl20bnr/spacemacs &lt;span class="pl-k"&gt;~&lt;/span&gt;/.emacs.d&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;master&lt;/code&gt; is the stable branch and it is &lt;em&gt;immutable&lt;/em&gt;, &lt;strong&gt;DO NOT&lt;/strong&gt; make any
modification to it or you will break the update mechanism. If you want to
fork Spacemacs safely use the &lt;code&gt;develop&lt;/code&gt; branch where you handle the update
manually.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Optional) Install the &lt;a href="https://github.com/adobe-fonts/source-code-pro"&gt;Source Code Pro&lt;/a&gt; font.&lt;/p&gt;
&lt;p&gt;If you are running in terminal you'll also need to change font settings of
your terminal.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Launch Emacs. Spacemacs will automatically install the packages it requires.
If you get an error regarding package downloads then you may try to disable
the HTTPS protocol by starting Emacs with&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;emacs --insecure&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or you can set the &lt;code&gt;dotspacemacs-elpa-https&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; in your dotfile to
remove the need to start Emacs with &lt;code&gt;--insecure&lt;/code&gt; argument. You may wish to
clear out your &lt;code&gt;.emacs.d/elpa&lt;/code&gt; directory before doing this, so that any
corrupted packages you may have downloaded will be re-installed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart Emacs to complete the installation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If the mode-line turns red then be sure to consult the &lt;a href="http://spacemacs.org/doc/FAQ" rel="nofollow"&gt;FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-alternate-installations" class="anchor" aria-hidden="true" href="#alternate-installations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alternate installations&lt;/h2&gt;
&lt;p&gt;It may be useful to clone Spacemacs outside Emacs dotdirectory &lt;code&gt;~/.emacs.d&lt;/code&gt; so
you can try Spacemacs without replacing completely our own configuration.
There is currently two possibilities to support alternative location for
Spacemacs configuration.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-modify-home-environment-variable" class="anchor" aria-hidden="true" href="#modify-home-environment-variable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modify HOME environment variable&lt;/h3&gt;
&lt;p&gt;This solution is ideal to quickly try Spacemacs without compromising your
existing configuration.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mkdir &lt;span class="pl-k"&gt;~&lt;/span&gt;/spacemacs
git clone https://github.com/syl20bnr/spacemacs.git &lt;span class="pl-k"&gt;~&lt;/span&gt;/spacemacs/.emacs.d
HOME=&lt;span class="pl-k"&gt;~&lt;/span&gt;/spacemacs emacs&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: If you're on Fish shell, you will need to modify the last command to: &lt;code&gt;env HOME=$HOME/spacemacs emacs&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-modify-spacemacs-start-directory-variable" class="anchor" aria-hidden="true" href="#modify-spacemacs-start-directory-variable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modify spacemacs-start-directory variable&lt;/h3&gt;
&lt;p&gt;This solution is better suited to "embed" Spacemacs into your own configuration.
Say you cloned Spacemacs in &lt;code&gt;~/.emacs.d/spacemacs/&lt;/code&gt; then drop these lines in
&lt;code&gt;~/.emacs.d/init.el&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; spacemacs-start-directory &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~/.emacs.d/spacemacs/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;load-file&lt;/span&gt; (&lt;span class="pl-c1"&gt;concat&lt;/span&gt; spacemacs-start-directory &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;init.el&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-spacemacs-logo" class="anchor" aria-hidden="true" href="#spacemacs-logo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spacemacs logo&lt;/h2&gt;
&lt;p&gt;For Ubuntu users, follow this guide to
&lt;a href="http://splendidabacus.com/posts/2015/03/spacemacs-unity-icon/" rel="nofollow"&gt;change the logo in Unity&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For Mac users, you need to &lt;a href="https://github.com/nashamri/spacemacs-logo"&gt;download the .icns version of the logo&lt;/a&gt;,
then &lt;a href="http://www.idownloadblog.com/2014/07/16/how-to-change-app-icon-mac/" rel="nofollow"&gt;change the logo on Dock&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-update" class="anchor" aria-hidden="true" href="#update"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update&lt;/h1&gt;
&lt;p&gt;Spacemacs has a built-in notification of a new version when you are on the
&lt;code&gt;master&lt;/code&gt; branch. If you are on the &lt;code&gt;develop&lt;/code&gt; branch then you'll have to
update Spacemacs manually by updating your repository.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-automatic-update-on-master-branch" class="anchor" aria-hidden="true" href="#automatic-update-on-master-branch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Automatic update (on master branch)&lt;/h2&gt;
&lt;p&gt;When a new version is available a little arrow appears in the mode-line.&lt;/p&gt;
&lt;p&gt;Its color depends on the number of versions available since your last update.
Green means that your current version is recent, orange and red mean that your
current version is older.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/img/powerline-update.png"&gt;&lt;img src="doc/img/powerline-update.png" alt="powerline_update" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Click on the arrow to update Spacemacs to the last version.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-manual-update-on-master-branch" class="anchor" aria-hidden="true" href="#manual-update-on-master-branch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual update (on master branch)&lt;/h2&gt;
&lt;p&gt;(Remove the angle brackets when typing the lines below into your shell.)&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git fetch
git reset --hard &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;tag version which you are updating to&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-on-develop-branch" class="anchor" aria-hidden="true" href="#on-develop-branch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;On develop branch&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Update Emacs packages by clicking (press &lt;code&gt;RET&lt;/code&gt;) on the &lt;code&gt;[Update Packages]&lt;/code&gt; link of
the starting page.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Close Emacs and update the git repository:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git pull --rebase&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart Emacs to complete the upgrade.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-revert-to-a-specific-version" class="anchor" aria-hidden="true" href="#revert-to-a-specific-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Revert to a specific version&lt;/h2&gt;
&lt;p&gt;To revert to a specific version you just have to checkout the corresponding
branch, for instance to revert to the last &lt;code&gt;0.103&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git checkout origin/release-0.103&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;After you update, either manually, or automatically, you are advised to update
your packages by clicking the &lt;code&gt;[Update Packages]&lt;/code&gt; button on the Spacemacs Home
Buffer.&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-quotes" class="anchor" aria-hidden="true" href="#quotes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quotes&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/syl20bnr/spacemacs?at=568e627a0cdaaa62045a7df6" rel="nofollow"&gt;Quote&lt;/a&gt; by &lt;a href="https://github.com/ashnur"&gt;ashnur&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;«I feel that spacemacs is an aircraft carrier and I am playing table tennis on the deck as a freerider.»
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://gitter.im/syl20bnr/spacemacs?at=5768456c6577f032450cfedb" rel="nofollow"&gt;Quote&lt;/a&gt; by &lt;a href="https://github.com/deuill"&gt;deuill&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;«I LOVE SPACEMACS AND MAGIT

 That is all»
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h1&gt;
&lt;p&gt;Spacemacs is a community-driven project, it needs &lt;em&gt;you&lt;/em&gt; to keep it up to
date and propose great and useful configuration for all the things!&lt;/p&gt;
&lt;p&gt;Before contributing be sure to consult the
&lt;a href="CONTRIBUTING.org"&gt;contribution guidelines&lt;/a&gt; and &lt;a href="http://spacemacs.org/doc/CONVENTIONS" rel="nofollow"&gt;conventions&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-communities" class="anchor" aria-hidden="true" href="#communities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Communities&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gitter.im/syl20bnr/spacemacs" rel="nofollow"&gt;Gitter Chat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://emacs.stackexchange.com/questions/tagged/spacemacs" rel="nofollow"&gt;Stack Exchange&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/spacemacs" rel="nofollow"&gt;Reddit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;The license is GPLv3 for all parts specific to Spacemacs, this includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the initialization and core files&lt;/li&gt;
&lt;li&gt;all the layer files&lt;/li&gt;
&lt;li&gt;the documentation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the packages shipped in this repository you can refer to the files header.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/nashamri/spacemacs-logo"&gt;Spacemacs logo&lt;/a&gt; by &lt;a href="https://github.com/nashamri"&gt;Nasser Alshammari&lt;/a&gt; released under a &lt;a href="http://creativecommons.org/licenses/by-sa/4.0/" rel="nofollow"&gt;Creative Commons Attribution-ShareAlike 4.0 International License.&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-supporting-spacemacs" class="anchor" aria-hidden="true" href="#supporting-spacemacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supporting Spacemacs&lt;/h1&gt;
&lt;p&gt;The best way to support Spacemacs is to contribute to it either by reporting
bugs, helping the community on the &lt;a href="https://gitter.im/syl20bnr/spacemacs" rel="nofollow"&gt;Gitter Chat&lt;/a&gt; or sending pull requests.&lt;/p&gt;
&lt;p&gt;You can show your love for the project by getting cool Spacemacs t-shirts, mugs
and more in the &lt;a href="https://shop.spreadshirt.com/spacemacs-shop" rel="nofollow"&gt;Spacemacs Shop&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to show your support financially you can contribute to &lt;a href="https://salt.bountysource.com/teams/spacemacs" rel="nofollow"&gt;Bountysource&lt;/a&gt; or buy a drink for the
maintainer by clicking on the &lt;a href="#top"&gt;Paypal badge&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you used spacemacs in a project and you want to show that fact, you can use
the spacemacs badge: &lt;a href="http://spacemacs.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8f5ee1d9b7278ed2c63f1f89e9a583ec59b52b6b/68747470733a2f2f63646e2e7261776769742e636f6d2f73796c3230626e722f73706163656d6163732f343432643032353737396461326636326663383663323038323730333639373731346462363531342f6173736574732f73706163656d6163732d62616467652e737667" alt="Built with Spacemacs" data-canonical-src="https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For Markdown:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[![Built with Spacemacs](https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg)](http://spacemacs.org)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For HTML:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;a href="http://spacemacs.org"&amp;gt;&amp;lt;img src="https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg" /&amp;gt;&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For Org-mode:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[[http://spacemacs.org][file:https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg]]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thank you!&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>syl20bnr</author><guid isPermaLink="false">https://github.com/syl20bnr/spacemacs</guid><pubDate>Tue, 21 Jan 2020 00:02:00 GMT</pubDate></item><item><title>purcell/emacs.d #3 in Emacs Lisp, Today</title><link>https://github.com/purcell/emacs.d</link><description>&lt;p&gt;&lt;i&gt;An Emacs configuration bundle with batteries included&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/purcell/emacs.d" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b8a87eebb8a6e54125f954452f35408a22640b72/68747470733a2f2f7472617669732d63692e6f72672f70757263656c6c2f656d6163732e642e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/purcell/emacs.d.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.patreon.com/sanityinc" rel="nofollow"&gt;&lt;img alt="Support me" src="https://camo.githubusercontent.com/26516b72afb49b1e2a56e48954bf1d5c14d08e95/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f537570706f72742532304d652d2546302539462539322539372d6666363962342e737667" data-canonical-src="https://img.shields.io/badge/Support%20Me-%F0%9F%92%97-ff69b4.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-a-reasonable-emacs-config" class="anchor" aria-hidden="true" href="#a-reasonable-emacs-config"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A reasonable Emacs config&lt;/h1&gt;
&lt;p&gt;This is my emacs configuration tree, continually used and tweaked
since 2000, and it may be a good starting point for other Emacs
users, especially web developers. These days it's
somewhat geared towards OS X, but it is known to also work on Linux
and Windows.&lt;/p&gt;
&lt;p&gt;Emacs itself comes with support for many programming languages. This
config adds improved defaults and extended support for the following, listed
in the approximate order of how much I use them, from most to least:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Haskell / Purescript / Elm&lt;/li&gt;
&lt;li&gt;Ruby / Ruby on Rails&lt;/li&gt;
&lt;li&gt;CSS / LESS / SASS / SCSS&lt;/li&gt;
&lt;li&gt;Javascript / Typescript / Coffeescript&lt;/li&gt;
&lt;li&gt;HTML / HAML / Markdown / Textile / ERB&lt;/li&gt;
&lt;li&gt;Rust&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;Clojure (with Cider and nRepl)&lt;/li&gt;
&lt;li&gt;Common Lisp (with Slime)&lt;/li&gt;
&lt;li&gt;PHP&lt;/li&gt;
&lt;li&gt;Erlang&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In particular, there's a nice config for &lt;em&gt;autocompletion&lt;/em&gt; with
&lt;a href="https://company-mode.github.io/" rel="nofollow"&gt;company&lt;/a&gt;, and
&lt;a href="http://www.flycheck.org" rel="nofollow"&gt;flycheck&lt;/a&gt; is used to immediately highlight
syntax errors in Ruby, Python, Javascript, Haskell and a number of
other languages.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-emacs-versions" class="anchor" aria-hidden="true" href="#supported-emacs-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Emacs versions&lt;/h2&gt;
&lt;p&gt;The config should run on Emacs 24.4 or greater and is designed to
degrade smoothly - see the Travis build - but note that much newer
versions are required for an increasing number of key packages, so to
get full functionality you should use the latest Emacs version
available to you.&lt;/p&gt;
&lt;p&gt;Some Windows users might need to follow
&lt;a href="http://xn--9dbdkw.se/diary/how_to_enable_GnuTLS_for_Emacs_24_on_Windows/index.en.html" rel="nofollow"&gt;these instructions&lt;/a&gt;
to get TLS (ie. SSL) support included in their Emacs.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-other-requirements" class="anchor" aria-hidden="true" href="#other-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other requirements&lt;/h2&gt;
&lt;p&gt;To make the most of the programming language-specific support in this
config, further programs will likely be required, particularly those
that &lt;a href="https://github.com/flycheck/flycheck"&gt;flycheck&lt;/a&gt; uses to provide
on-the-fly syntax checking.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;To install, clone this repo to &lt;code&gt;~/.emacs.d&lt;/code&gt;, i.e. ensure that the
&lt;code&gt;init.el&lt;/code&gt; contained in this repo ends up at &lt;code&gt;~/.emacs.d/init.el&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/purcell/emacs.d.git ~/.emacs.d
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Upon starting up Emacs for the first time, further third-party
packages will be automatically downloaded and installed. If you
encounter any errors at that stage, try restarting Emacs, and possibly
running &lt;code&gt;M-x package-refresh-contents&lt;/code&gt; before doing so.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-updates" class="anchor" aria-hidden="true" href="#updates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Updates&lt;/h2&gt;
&lt;p&gt;Update the config with &lt;code&gt;git pull&lt;/code&gt;. You'll probably also want/need to update
the third-party packages regularly too:&lt;/p&gt;
&lt;p&gt;&lt;kbd&gt;M-x package-list-packages&lt;/kbd&gt;, then &lt;kbd&gt;U&lt;/kbd&gt; followed by &lt;kbd&gt;x&lt;/kbd&gt;.&lt;/p&gt;
&lt;p&gt;You should usually restart Emacs after pulling changes or updating
packages so that they can take effect. Emacs should usually restore
your working buffers when you restart due to this configuration's use
of the &lt;code&gt;desktop&lt;/code&gt; and &lt;code&gt;session&lt;/code&gt; packages.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-changing-themes-and-adding-your-own-customization" class="anchor" aria-hidden="true" href="#changing-themes-and-adding-your-own-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changing themes and adding your own customization&lt;/h2&gt;
&lt;p&gt;To add your own customization, use &lt;kbd&gt;M-x customize&lt;/kbd&gt;, &lt;kbd&gt;M-x
customize-themes&lt;/kbd&gt; etc. and/or create a file
&lt;code&gt;~/.emacs.d/lisp/init-local.el&lt;/code&gt; which looks like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;... your code here ...

(&lt;span class="pl-c1"&gt;provide&lt;/span&gt; &lt;span class="pl-c1"&gt;'init-local&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need initialisation code which executes earlier in the startup process,
you can also create an &lt;code&gt;~/.emacs.d/lisp/init-preload-local.el&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;If you plan to customize things more extensively, you should probably
just fork the repo and hack away at the config to make it your own!
Remember to regularly merge in changes from this repo, so that your
config remains compatible with the latest package and Emacs versions.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Please note that I cannot provide support for customised versions of
this configuration.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-similar-configs" class="anchor" aria-hidden="true" href="#similar-configs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Similar configs&lt;/h2&gt;
&lt;p&gt;You might also want to check out &lt;code&gt;emacs-starter-kit&lt;/code&gt; and &lt;code&gt;prelude&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-support--issues" class="anchor" aria-hidden="true" href="#support--issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support / issues&lt;/h2&gt;
&lt;p&gt;If you hit any problems, please first ensure that you are using the latest version
of this code, and that you have updated your packages to the most recent available
versions (see "Updates" above). If you still experience problems, go ahead and
&lt;a href="https://github.com/purcell/emacs.d"&gt;file an issue on the github project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;-Steve Purcell&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://www.patreon.com/sanityinc" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="gift_heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f49d.png"&gt;💝&lt;/g-emoji&gt; Support this project and my other Open Source work&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://uk.linkedin.com/in/stevepurcell" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="briefcase" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bc.png"&gt;💼&lt;/g-emoji&gt; LinkedIn profile&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.sanityinc.com/" rel="nofollow"&gt;✍ sanityinc.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/sanityinc" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="bird" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f426.png"&gt;🐦&lt;/g-emoji&gt; @sanityinc&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>purcell</author><guid isPermaLink="false">https://github.com/purcell/emacs.d</guid><pubDate>Tue, 21 Jan 2020 00:03:00 GMT</pubDate></item><item><title>emacs-lsp/lsp-mode #4 in Emacs Lisp, Today</title><link>https://github.com/emacs-lsp/lsp-mode</link><description>&lt;p&gt;&lt;i&gt;Emacs client/library for the Language Server Protocol&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="org" data-path="README.org"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://melpa.org/#/lsp-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9af67d09707b47dd26115a48505d481f9dcdd805/68747470733a2f2f6d656c70612e6f72672f7061636b616765732f6c73702d6d6f64652d62616467652e737667" alt="https://melpa.org/packages/lsp-mode-badge.svg" data-canonical-src="https://melpa.org/packages/lsp-mode-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://stable.melpa.org/#/lsp-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7a2cc5cd5fb1a171dde8e45435a353f849853123/68747470733a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f6c73702d6d6f64652d62616467652e737667" alt="https://stable.melpa.org/packages/lsp-mode-badge.svg" data-canonical-src="https://stable.melpa.org/packages/lsp-mode-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://gitter.im/emacs-lsp/lsp-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/40a1fe7a717b706a101e6e1d917dfdb3f422a8c3/68747470733a2f2f6261646765732e6769747465722e696d2f656d6163732d6c73702f6c73702d6d6f64652e737667" alt="https://badges.gitter.im/emacs-lsp/lsp-mode.svg" data-canonical-src="https://badges.gitter.im/emacs-lsp/lsp-mode.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://travis-ci.org/emacs-lsp/lsp-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5674691682ca175709f1682ede1931f44a188aef/68747470733a2f2f7472617669732d63692e6f72672f656d6163732d6c73702f6c73702d6d6f64652e7376673f6272616e63683d6d6173746572" alt="https://travis-ci.org/emacs-lsp/lsp-mode.svg?branch=master" data-canonical-src="https://travis-ci.org/emacs-lsp/lsp-mode.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://coveralls.io/github/emacs-lsp/lsp-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/536576b840965fd3ec331aeec141a1dc36469075/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f656d6163732d6c73702f6c73702d6d6f64652f62616467652e737667" alt="https://coveralls.io/repos/github/emacs-lsp/lsp-mode/badge.svg" data-canonical-src="https://coveralls.io/repos/github/emacs-lsp/lsp-mode/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="examples/logo.png"&gt;&lt;img src="examples/logo.png" alt="examples/logo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-language-server-protocol-support-for-emacs" class="anchor" aria-hidden="true" href="#language-server-protocol-support-for-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Language Server Protocol Support for Emacs&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="examples/head.png"&gt;&lt;img src="examples/head.png" alt="examples/head.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="#language-server-protocol-support-for-emacs"&gt;Language Server Protocol Support for Emacs&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="#why"&gt;Why?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#install-via-melpa"&gt;Install via melpa&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#configuration"&gt;Configuration&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#install-language-server"&gt;Install language server&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href="#configure-lsp-mode"&gt;Configure lsp-mode&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href="#vanilla-emacs"&gt;Vanilla Emacs&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#spacemacs"&gt;Spacemacs&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#use-package"&gt;use-package&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#docker"&gt;Docker&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href="#how-does-it-work"&gt;How does it work?&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#supported-languages"&gt;Supported languages&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#commands"&gt;Commands&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#settings"&gt;Settings&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#screenshots"&gt;Screenshots&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#extensions"&gt;Extensions&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#tramp"&gt;TRAMP&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href="#how-does-it-work-1"&gt;How does it work?&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#sample-configuration"&gt;Sample configuration&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#dealing-with-stderr"&gt;Dealing with stderr&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#limitations"&gt;Limitations&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#file-watches"&gt;File watches&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#contributions"&gt;Contributions&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#members"&gt;Members&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#adding-support-for-languages"&gt;Adding support for languages&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#registering-server"&gt;Registering server&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href="#sections"&gt;Sections&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#see-also"&gt;See also&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-why" class="anchor" aria-hidden="true" href="#why"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; &lt;b&gt;Community Driven&lt;/b&gt;&lt;/li&gt;
  &lt;li&gt;&lt;g-emoji class="g-emoji" alias="gem" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f48e.png"&gt;💎&lt;/g-emoji&gt; &lt;b&gt;Fully featured&lt;/b&gt; - supports &lt;b&gt;all&lt;/b&gt; features in Language Server Protocol v3.14.&lt;/li&gt;
  &lt;li&gt;&lt;g-emoji class="g-emoji" alias="rocket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png"&gt;🚀&lt;/g-emoji&gt; &lt;b&gt;Easy to configure&lt;/b&gt; - works out of the box and automatically upgrades if additional packages are present&lt;/li&gt;
  &lt;li&gt;&lt;g-emoji class="g-emoji" alias="star2" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f31f.png"&gt;🌟&lt;/g-emoji&gt; &lt;b&gt;Flexible&lt;/b&gt; - could be configured as full-blown IDE with flashy UI or minimal distraction free&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;Client for &lt;a href="https://github.com/Microsoft/language-server-protocol/"&gt;Language Server Protocol&lt;/a&gt; (v3.14). &lt;a href="https://github.com/emacs-lsp/lsp-mode"&gt;lsp-mode&lt;/a&gt; aims to provide IDE-like experience by providing optional integration with the most popular Emacs packages like &lt;code&gt;company&lt;/code&gt;, &lt;code&gt;flycheck&lt;/code&gt; and &lt;code&gt;projectile&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Non-blocking asynchronous calls&lt;/li&gt;
  &lt;li&gt;Real-time Diagnostics/linting (via builtin &lt;code&gt;flymake&lt;/code&gt; when Emacs &amp;gt; 26, requires flymake&amp;gt;=1.0.5 or &lt;a href="https://github.com/flycheck/flycheck"&gt;flycheck&lt;/a&gt;/&lt;a href="https://github.com/emacs-lsp/lsp-ui"&gt;lsp-ui&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Code completion - using &lt;a href="https://github.com/tigersoldier/company-lsp"&gt;company-lsp&lt;/a&gt; or builtin &lt;code&gt;completion-at-point&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Hovers - using &lt;a href="https://github.com/emacs-lsp/lsp-ui"&gt;lsp-ui&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Code actions - using &lt;code&gt;lsp-execute-code-action&lt;/code&gt; or &lt;a href="https://github.com/emacs-lsp/lsp-ui"&gt;lsp-ui&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Code outline - using builtin &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Imenu.html" rel="nofollow"&gt;imenu&lt;/a&gt; or &lt;code&gt;helm-imenu&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Code navigation - using builtin &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Xref.html" rel="nofollow"&gt;xref&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Code lens (references/implementations) - using builtin &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Xref.html" rel="nofollow"&gt;xref&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Highlights&lt;/li&gt;
  &lt;li&gt;Formatting&lt;/li&gt;
  &lt;li&gt;Debugger - &lt;a href="https://github.com/yyoncho/dap-mode/"&gt;dap-mode&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Helm integration - &lt;a href="https://github.com/emacs-lsp/helm-lsp/"&gt;helm-lsp&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Ivy integration - &lt;a href="https://github.com/emacs-lsp/lsp-ivy/"&gt;lsp-ivy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Treemacs integration - &lt;a href="https://github.com/emacs-lsp/lsp-treemacs"&gt;lsp-treemacs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Semantic highlighting (as currently implemented by JDT LS and unreleased builds of clangd, cf. &lt;a href="https://github.com/microsoft/vscode-languageserver-node/pull/367"&gt;Semantic highlighting spec&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-install-via-melpa" class="anchor" aria-hidden="true" href="#install-via-melpa"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install via melpa&lt;/h3&gt;
&lt;p&gt;The recommended way to install &lt;code&gt;lsp-mode&lt;/code&gt; is via &lt;code&gt;package.el&lt;/code&gt; - the built-in package manager in Emacs. &lt;code&gt;lsp-mode&lt;/code&gt; is available on the two major &lt;code&gt;package.el&lt;/code&gt; community maintained repos - &lt;a href="http://stable.melpa.org" rel="nofollow"&gt;MELPA Stable&lt;/a&gt; and &lt;a href="http://melpa.org" rel="nofollow"&gt;MELPA&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;M-x &lt;code&gt;package-install&lt;/code&gt; [RET] &lt;code&gt;lsp-mode&lt;/code&gt; [RET]&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-install-language-server" class="anchor" aria-hidden="true" href="#install-language-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install language server&lt;/h3&gt;
&lt;p&gt;Check the table bellow with the list of supported servers and the corresponding instructions on how to install the server.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-configure-lsp-mode" class="anchor" aria-hidden="true" href="#configure-lsp-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configure lsp-mode&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-vanilla-emacs" class="anchor" aria-hidden="true" href="#vanilla-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vanilla Emacs&lt;/h4&gt;
&lt;p&gt;You could go minimal and use &lt;code&gt;lsp-mode&lt;/code&gt; as it is without external packages with the built-in &lt;code&gt;flymake&lt;/code&gt; and &lt;code&gt;completion-at-point&lt;/code&gt; or you could install the following extensions for better experience:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;install &lt;a href="https://github.com/emacs-lsp/lsp-ui"&gt;lsp-ui&lt;/a&gt; for &lt;a href="https://github.com/flycheck/flycheck"&gt;flycheck&lt;/a&gt; integration and higher level UI modules.&lt;/li&gt;
  &lt;li&gt;install &lt;a href="https://github.com/tigersoldier/company-lsp"&gt;company-lsp&lt;/a&gt; if you want to use &lt;code&gt;company-mode&lt;/code&gt; for completion.&lt;/li&gt;
  &lt;li&gt;install &lt;a href="https://github.com/emacs-lsp/lsp-treemacs"&gt;lsp-treemacs&lt;/a&gt; for project wide error overview.&lt;/li&gt;
  &lt;li&gt;install &lt;a href="https://github.com/emacs-lsp/helm-lsp"&gt;helm-lsp&lt;/a&gt; provides on type completion for &lt;code&gt;xref-apropos&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;install &lt;a href="https://github.com/emacs-lsp/dap-mode"&gt;dap-mode&lt;/a&gt; if your language is supported by the debugger.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'lsp-mode&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'XXX-mode-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'lsp&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where &lt;code&gt;XXX&lt;/code&gt; could be major mode like &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;java&lt;/code&gt;, &lt;code&gt;c++&lt;/code&gt;. Alternatively, if you want to minimize you configuration you may use &lt;code&gt;prog-mode-hook&lt;/code&gt;. In case you do that, &lt;code&gt;lsp&lt;/code&gt; will try to start for each programming mode and echo a message when there is no client registered for the current mode or if the corresponding server is not present. In addition, &lt;code&gt;lsp-mode&lt;/code&gt; will automatically detect and configure &lt;a href="https://github.com/emacs-lsp/lsp-ui"&gt;lsp-ui&lt;/a&gt; and &lt;a href="https://github.com/tigersoldier/company-lsp"&gt;company-lsp&lt;/a&gt;. To turn off that behavior you could set &lt;code&gt;lsp-auto-configure&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To defer LSP server startup (and DidOpen notifications) until the buffer is visible you can use &lt;code&gt;lsp-deferred&lt;/code&gt; instead of &lt;code&gt;lsp&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'XXX-mode-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'lsp-deferred&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-spacemacs" class="anchor" aria-hidden="true" href="#spacemacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spacemacs&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/emacs-lsp/lsp-mode"&gt;lsp-mode&lt;/a&gt; is included in spacemacs develop branch. Add &lt;code&gt;lsp&lt;/code&gt; to &lt;code&gt;dotspacemacs-configuration-layers&lt;/code&gt; and configure the language that you want to use to be backed by &lt;code&gt;lsp&lt;/code&gt; backend.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-use-package" class="anchor" aria-hidden="true" href="#use-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;use-package&lt;/h4&gt;
&lt;p&gt;Replace &lt;code&gt;(require 'lsp-mode)&lt;/code&gt; with the following if you use use-package.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-mode
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; (XXX-mode &lt;span class="pl-k"&gt;.&lt;/span&gt; lsp)
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; lsp)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; optionally&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-ui &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; lsp-ui-mode)
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; company-lsp &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; company-lsp)
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; helm-lsp &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; helm-lsp-workspace-symbol)
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-treemacs &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; lsp-treemacs-errors-list)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; optionally if you want to use debugger&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; dap-mode)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; (use-package dap-LANGUAGE) to load the dap adapter for your language&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To defer LSP server startup (and DidOpen notifications) until the buffer is visible you can use &lt;code&gt;lsp-deferred&lt;/code&gt; instead of &lt;code&gt;lsp&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-mode
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; (XXX-mode &lt;span class="pl-k"&gt;.&lt;/span&gt; lsp-deferred)
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; (lsp lsp-deferred))&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h4&gt;
&lt;p&gt;Refer to &lt;a href="https://github.com/emacs-lsp/lsp-docker/"&gt;lsp-docker&lt;/a&gt; README which provide a guide how you can run &lt;code&gt;lsp-mode&lt;/code&gt; in &lt;code&gt;docker&lt;/code&gt; container.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-does-it-work" class="anchor" aria-hidden="true" href="#how-does-it-work"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How does it work?&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;lsp-mode&lt;/code&gt; has predefined list of server configurations (loaded in &lt;code&gt;lsp-clients.el&lt;/code&gt;) containing a mapping from &lt;code&gt;major-mode&lt;/code&gt; to the server configuration or by using activation function. In addition to the default server configuration located in &lt;code&gt;lsp-clients.el&lt;/code&gt; there are few languages servers which require separate package(check &lt;a href="#supported-languages"&gt;Supported languages&lt;/a&gt;). When you open a file from a particular project &lt;code&gt;lsp-mode&lt;/code&gt; and call &lt;code&gt;lsp&lt;/code&gt; command &lt;code&gt;lsp-mode&lt;/code&gt; will look for server registrations able to handle current file. If there is such client &lt;code&gt;lsp-mode&lt;/code&gt; will look for the project root. If you open a file from the project for the first time you will be prompted to define the current project root. Once the project root is selected it is saved in &lt;code&gt;lsp-session&lt;/code&gt; file and it will be loaded the next time you start Emacs so you no longer will be asked for a project root when you open a file from that project. Later if you want to change the project root you may use &lt;code&gt;lsp-workspace-folder-remove&lt;/code&gt; to remove the project and call &lt;code&gt;lsp-workspace-folder-add&lt;/code&gt; to add the root. If you want to force starting a particular language server in a file you may use &lt;code&gt;C-u&lt;/code&gt; &lt;code&gt;M-x&lt;/code&gt; &lt;code&gt;lsp&lt;/code&gt; which will prompt you to select language server to start.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-languages" class="anchor" aria-hidden="true" href="#supported-languages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported languages&lt;/h2&gt;
&lt;p&gt;Some of the servers are directly supported by &lt;code&gt;lsp-mode&lt;/code&gt; by requiring
  &lt;code&gt;lsp-clients.el&lt;/code&gt; while others require installing additional packages which provide
  server specific functionality.&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Language&lt;/th&gt;&lt;th&gt;Language Server&lt;/th&gt;&lt;th&gt;Built-in&lt;/th&gt;&lt;th&gt;Installation command&lt;/th&gt;&lt;th&gt;Debugger&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Ada&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/AdaCore/ada_language_server"&gt;ada_language_server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/AdaCore/ada_language_server#install"&gt;Installation instructions&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (gdb)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Angular&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/angular/vscode-ng-language-service/"&gt;vscode-ng-language-service&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-mode/wiki/Install-Angular-Language-server"&gt;Installation instructions&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Not relevant&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Bash&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/mads-hartmann/bash-language-server"&gt;bash-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm i -g bash-language-server&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C++&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/MaskRay/ccls"&gt;ccls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/MaskRay/emacs-ccls"&gt;emacs-ccls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/MaskRay/ccls"&gt;ccls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (gdb or lldb)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C++&lt;/td&gt;&lt;td&gt;&lt;a href="https://clang.llvm.org/extra/clangd.html" rel="nofollow"&gt;clangd&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://clang.llvm.org/extra/clangd.html" rel="nofollow"&gt;clangd&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (gdb or lldb)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C++&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/cquery-project/cquery"&gt;cquery&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/cquery-project/emacs-cquery"&gt;emacs-cquery&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/cquery-project/cquery"&gt;cquery&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (gdb or lldb)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C#&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/OmniSharp/omnisharp-roslyn"&gt;OmniSharp-Roslyn&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/OmniSharp/omnisharp-roslyn"&gt;OmniSharp-Roslyn&lt;/a&gt;&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Clojure&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/snoe/clojure-lsp"&gt;clojure-lsp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/snoe/clojure-lsp"&gt;clojure-lsp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Crystal&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/crystal-lang-tools/scry"&gt;scry&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/crystal-lang-tools/scry"&gt;scry&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;CSS/LessCSS/SASS/SCSS&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/vscode-langservers/vscode-css-languageserver-bin"&gt;css&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g vscode-css-languageserver-bin&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Dart&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/dart-lang/sdk/blob/master/pkg/analysis_server/tool/lsp_spec/README.md"&gt;dart_analysis_server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;built into dart-sdk&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Dockerfile&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/rcjsuen/dockerfile-language-server-nodejs"&gt;dockerfile-language-server-nodejs&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g dockerfile-language-server-nodejs&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Dart&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/natebosch/dart_language_server"&gt;dart_language_server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;pub global activate dart_language_server&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Elixir&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/JakeBecker/elixir-ls"&gt;elixir-ls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/JakeBecker/elixir-ls"&gt;elixir-ls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Elm&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/elm-tooling/elm-language-server"&gt;elmLS&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm i -g @elm-tooling/elm-language-server, or clone the repository and follow installation instructions&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Erlang&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/erlang-ls/erlang_ls"&gt;erlang_ls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/erlang-ls/erlang_ls"&gt;erlang_ls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Eslint&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/Microsoft/vscode-eslint"&gt;eslint&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-mode/wiki/LSP-ESlint-integration"&gt;LSP ESLint Guide&lt;/a&gt;&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;F#&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/fsharp/FsAutoComplete"&gt;fsautocomplete&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Automatic by &lt;a href="https://github.com/emacs-lsp/lsp-mode/blob/master/lsp-fsharp.el"&gt;lsp-fsharp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Fortran&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/hansec/fortran-language-server"&gt;fortran-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;pip install fortran-language-server&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Go&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/golang/tools/tree/master/gopls"&gt;gopls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;code&gt;go get golang.org/x/tools/gopls@latest&lt;/code&gt; &lt;a href="https://github.com/golang/tools/blob/master/gopls/doc/user.md#installation"&gt;docs&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Go&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/saibing/bingo"&gt;bingo&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/saibing/bingo/wiki/Install"&gt;bingo&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Groovy&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/prominic/groovy-language-server"&gt;groovy-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/prominic/groovy-language-server"&gt;groovy-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Hack&lt;/td&gt;&lt;td&gt;&lt;a href="https://docs.hhvm.com/hhvm/" rel="nofollow"&gt;hhvm&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://docs.hhvm.com/hhvm/installation/introduction" rel="nofollow"&gt;hhvm&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;HTML&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/vscode-langservers/vscode-html-languageserver"&gt;html&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g vscode-html-languageserver-bin&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Haskell&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/haskell/haskell-ide-engine"&gt;IDE engine&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-haskell"&gt;lsp-haskell&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/haskell/haskell-ide-engine"&gt;IDE engine&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Lua&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/EmmyLua/EmmyLua-LanguageServer"&gt;EmmyLua&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-mode/wiki/Install-EmmyLua-Language-server"&gt;Installation&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Java&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/eclipse/eclipse.jdt.ls"&gt;Eclipse JDT LS&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-java"&gt;lsp-java&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Automatic by &lt;a href="https://github.com/emacs-lsp/lsp-java"&gt;lsp-java&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;JavaScript/TypeScript&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/theia-ide/typescript-language-server"&gt;typescript-language-server&lt;/a&gt;  (recommended)&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm i -g typescript-language-server; npm i -g typescript&lt;/td&gt;&lt;td&gt;Yes (Firefox/Chrome)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;JavaScript/TypeScript&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/sourcegraph/javascript-typescript-langserver"&gt;javascript-typescript-stdio&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm i -g javascript-typescript-langserver&lt;/td&gt;&lt;td&gt;Yes (Firefox/Chrome)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;JavaScript Flow&lt;/td&gt;&lt;td&gt;&lt;a href="https://flow.org" rel="nofollow"&gt;flow&lt;/a&gt; (add-on if working on a Flow file)&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://flow.org" rel="nofollow"&gt;flow&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (Firefox/Chrome)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Json&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/vscode-langservers/vscode-json-languageserver"&gt;vscode-json-languageserver&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Automatic or manual by &lt;code&gt;npm i -g vscode-json-languageserver&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Julia&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/non-Jedi/lsp-julia"&gt;lsp-julia&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/non-Jedi/lsp-julia"&gt;lsp-julia&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/JuliaEditorSupport/LanguageServer.jl"&gt;LanguageServer.jl&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Kotlin&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/fwcd/KotlinLanguageServer"&gt;kotlin-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/fwcd/KotlinLanguageServer"&gt;kotlin-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Nim&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/PMunch/nimlsp"&gt;nimlsp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;code&gt;nimble install nimlsp&lt;/code&gt;&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;OCaml&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/ocaml-lsp/ocaml-language-server"&gt;ocaml-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/ocaml-lsp/ocaml-language-server"&gt;ocaml-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;OCaml&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/ocaml/ocaml-lsp"&gt;ocaml-lsp-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/ocaml/ocaml-lsp"&gt;ocaml-lsp-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;PHP(recommended)&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/bmewburn/vscode-intelephense"&gt;intelephense&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm i intelephense -g&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;PHP&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/felixfbecker/php-language-server"&gt;php-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/felixfbecker/php-language-server"&gt;php-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Powershell&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/PowerShell/PowerShellEditorServices"&gt;PowerShellEditorServices&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Automatic&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Python&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/palantir/python-language-server"&gt;pyls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;pip install ‘python-language-server[all]’&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Python(Microsoft)&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/Microsoft/python-language-server"&gt;Microsoft Python Language Server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-python-ms"&gt;lsp-python-ms&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-python-ms"&gt;lsp-python-ms&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;R&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/REditorSupport/languageserver"&gt;languageserver&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;install.packages(“languageserver”)&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Ruby&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/castwide/solargraph"&gt;solargraph&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;gem install solargraph&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Rust&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/rust-lang/rls"&gt;rls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/rust-lang/rls"&gt;rls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Rust&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/rust-analyzer/rust-analyzer"&gt;rust-analyzer&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/rust-analyzer/rust-analyzer#language-server-quick-start"&gt;rust-analyzer&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Scala&lt;/td&gt;&lt;td&gt;&lt;a href="https://scalameta.org/metals" rel="nofollow"&gt;Metals&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://scalameta.org/metals/docs/editors/emacs.html" rel="nofollow"&gt;Metals&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Swift&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/apple/sourcekit-lsp"&gt;sourcekit-LSP&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-sourcekit"&gt;lsp-sourcekit&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/apple/sourcekit-lsp"&gt;sourcekit-LSP&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (via llvm debug adapter)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Terraform&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/juliosueiras/terraform-lsp"&gt;terraform-lsp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;Git clone outside of &lt;code&gt;$GOPATH&lt;/code&gt;; go install. (Requires go &amp;gt; 1.11)&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;TeX, LaTeX, etc.&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/astoff/digestif"&gt;Digestif&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;luarocks install –server=&lt;a href="http://luarocks.org/dev" rel="nofollow"&gt;http://luarocks.org/dev&lt;/a&gt; digestif&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Verilog/SystemVerilog&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/suoto/hdl_checker"&gt;hdl_checker&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;pip install hdl-checker –upgrade&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;VHDL&lt;/td&gt;&lt;td&gt;&lt;a href="http://www.vhdltool.com" rel="nofollow"&gt;VHDL Tool&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Download from &lt;a href="http://www.vhdltool.com/download" rel="nofollow"&gt;http://www.vhdltool.com/download&lt;/a&gt;&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Vimscript&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/iamcco/vim-language-server"&gt;vim-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g vim-language-server&lt;/td&gt;&lt;td&gt;n/a&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Vue&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/vuejs/vetur/tree/master/server"&gt;vue-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g vue-language-server&lt;/td&gt;&lt;td&gt;Yes (Firefox/Chrome)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;XML&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/angelozerr/lsp4xml"&gt;lsp4xml&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Download from &lt;a href="https://github.com/angelozerr/lsp4xml/releases"&gt;lsp4xml releases&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;YAML&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/redhat-developer/yaml-language-server"&gt;yaml&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g yaml-language-server&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-commands" class="anchor" aria-hidden="true" href="#commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commands&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;lsp-describe-session&lt;/code&gt; - Display session folders and running servers.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-describe-thing-at-point&lt;/code&gt; - Display help for the thing at point.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-execute-code-action&lt;/code&gt; - Execute code action&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-format-buffer&lt;/code&gt; - Format current buffer&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-organize-imports&lt;/code&gt; - Organize library imports&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-goto-implementation&lt;/code&gt; - Go to implementation&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-goto-type-definition&lt;/code&gt; - Go to type definition&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-rename&lt;/code&gt; - Rename symbol at point&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-restart-workspace&lt;/code&gt; - Restart project&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-symbol-highlight&lt;/code&gt; - Highlight all relevant references to the symbol under point.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-workspace-folders-add&lt;/code&gt; - Add workspace folder&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-workspace-folders-remove&lt;/code&gt; - Remove workspace folder&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-workspace-folders-open&lt;/code&gt; - Open a project directory in dired&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;imenu&lt;/code&gt; or &lt;code&gt;helm-imenu&lt;/code&gt; - display document structure.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;completion-at-point&lt;/code&gt; - display completion using built-in emacs &lt;code&gt;completion-at-point&lt;/code&gt; framework.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-find-definition&lt;/code&gt; - to find the definition for the symbol under point.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-find-references&lt;/code&gt; - Find references for the symbol under point.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-disconnect&lt;/code&gt; - Disconnect the buffer from the language server.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-lens-show&lt;/code&gt; - Show lenses in the current file&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-lens-hide&lt;/code&gt; - Hide lenses in the current file&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-lens-mode&lt;/code&gt;  - Turn on/off lenses in the current file.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-avy-lens&lt;/code&gt; - Click lens using &lt;code&gt;avy&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-signature-activate&lt;/code&gt; - activate signature help. Bound to &lt;code&gt;C-S-SPC&lt;/code&gt; by default.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-signature-next&lt;/code&gt; - show next signature. Bound to &lt;code&gt;M-n&lt;/code&gt; when signature help is activated.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-signature-previous&lt;/code&gt; - show previous signature. Bound to &lt;code&gt;M-p&lt;/code&gt; when signature help is activated.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-signature-stop&lt;/code&gt; - cancel signature help. Bound to &lt;code&gt;C-c C-k&lt;/code&gt; when signature help is activated.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-settings" class="anchor" aria-hidden="true" href="#settings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Settings&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;lsp-log-io&lt;/code&gt; - If non-nil, print all messages to and from the language server to &lt;code&gt;*lsp-log*&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-print-performance&lt;/code&gt; - If non-nil, print performance info. to &lt;code&gt;*lsp-log*&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-inhibit-message&lt;/code&gt; - If non-nil, inhibit the message echo via &lt;code&gt;inhibit-message&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-report-if-no-buffer&lt;/code&gt; - If non nil the errors will be reported even when the file is not open.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-keep-workspace-alive&lt;/code&gt; - If non nil keep workspace alive when the last workspace buffer is closed.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-snippet&lt;/code&gt; - Enable/disable snippet completion support.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-auto-guess-root&lt;/code&gt; - Automatically guess the project root using projectile/project. Do &lt;b&gt;not&lt;/b&gt; use this setting unless you are familiar with &lt;code&gt;lsp-mode&lt;/code&gt; internals and you are sure that all of your projects are following &lt;code&gt;projectile=/=project.el&lt;/code&gt; conventions.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-restart&lt;/code&gt; - Defines how server exited event must be handled.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-session-file&lt;/code&gt; - File where session information is stored.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-auto-configure&lt;/code&gt; - Auto configure &lt;code&gt;lsp-mode&lt;/code&gt;. When set to t &lt;code&gt;lsp-mode&lt;/code&gt; will auto-configure &lt;code&gt;lsp-ui&lt;/code&gt; and &lt;code&gt;company-lsp&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-document-sync-method&lt;/code&gt; - How to sync the document with the language server.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-auto-execute-action&lt;/code&gt; - Auto-execute single action.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-eldoc-render-all&lt;/code&gt; - Display all of the info returned by &lt;code&gt;document/onHover&lt;/code&gt;. If this is nil, &lt;code&gt;eldoc&lt;/code&gt; will show only the symbol information.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-completion-at-point&lt;/code&gt; - Enable &lt;code&gt;completion-at-point&lt;/code&gt; integration.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-xref&lt;/code&gt; - Enable xref integration.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-prefer-flymake&lt;/code&gt; - If you prefer flycheck and &lt;code&gt;lsp-ui-flycheck&lt;/code&gt; is available, &lt;code&gt;(setq lsp-prefer-flymake nil)&lt;/code&gt;. If set to &lt;code&gt;:none&lt;/code&gt; neither of two will be enabled.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-indentation&lt;/code&gt; - Indent regions using the file formatting functionality provided by the language server.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-on-type-formatting&lt;/code&gt; - Enable &lt;code&gt;textDocument/onTypeFormatting&lt;/code&gt; integration.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-before-save-edits&lt;/code&gt; - If non-nil, &lt;code&gt;lsp-mode&lt;/code&gt; will apply edits suggested by the language server before saving a document.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-imenu-show-container-name&lt;/code&gt; - Display the symbol’s container name in an imenu entry.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-imenu-container-name-separator&lt;/code&gt; - Separator string to use to separate the container name from the symbol while displaying imenu entries.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-imenu-sort-methods&lt;/code&gt; - How to sort the imenu items. The value is a list of &lt;code&gt;kind&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt; or &lt;code&gt;position&lt;/code&gt;. Priorities are determined by the index of the element.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-response-timeout&lt;/code&gt; - Number of seconds to wait for a response from the language server before timing out.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-file-watchers&lt;/code&gt; - If non-nil lsp-mode will watch the files in the workspace if the server has requested that.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-server-trace&lt;/code&gt; - Request trace mode on the language server.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-semantic-highlighting&lt;/code&gt; - Enable experimental semantic highlighting support&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-imenu&lt;/code&gt; - If non-nil, automatically enable imenu integration when server provides &lt;code&gt;textDocument/documentSymbol&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-signature-auto-activate&lt;/code&gt; - Auto activate signature when trigger char is pressed.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-signature-render-documentation&lt;/code&gt; - Include signature documentation in signature help.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-text-document-color&lt;/code&gt; - Enable &lt;code&gt;textDocument/documentColor&lt;/code&gt; when server supports it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;RUST Completion with company-lsp
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/completion.png"&gt;&lt;img src="examples/completion.png" alt="examples/completion.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Typescript references using lsp-ui
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/references.png"&gt;&lt;img src="examples/references.png" alt="examples/references.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Debugging Python using dap-mode
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/python_debugging.png"&gt;&lt;img src="examples/python_debugging.png" alt="examples/python_debugging.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Call hierarchy via ccls
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/call-hierarchy-ccls.png"&gt;&lt;img src="examples/call-hierarchy-ccls.png" alt="examples/call-hierarchy-ccls.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Metals Doctor
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/metals-doctor.png"&gt;&lt;img src="examples/metals-doctor.png" alt="examples/metals-doctor.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Semantic highlighting as provided by clangd (built from unreleased 10.0 branch). In this screenshot, all other font-locking has been disabled (hence no syntax highlighting of comments or basic keywords such as &lt;code&gt;auto&lt;/code&gt;)
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/clangd_semantic_highlighting.png"&gt;&lt;img src="examples/clangd_semantic_highlighting.png" alt="examples/clangd_semantic_highlighting.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-extensions" class="anchor" aria-hidden="true" href="#extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extensions&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-tramp" class="anchor" aria-hidden="true" href="#tramp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TRAMP&lt;/h3&gt;
&lt;p&gt;LSP mode has support for tramp buffers with the following requirements:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The language server has to be present on the remote server.&lt;/li&gt;
  &lt;li&gt;Having multi folder language server (like &lt;a href="https://github.com/eclipse/eclipse.jdt.ls"&gt;Eclipse JDT LS&lt;/a&gt;) cannot have local and remote workspace folders.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-how-does-it-work-1" class="anchor" aria-hidden="true" href="#how-does-it-work-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How does it work?&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;lsp-mode&lt;/code&gt; detects whether a particular file is located on remote machine and looks for a client which matches current file and it is marked as &lt;code&gt;:remote?&lt;/code&gt; t. Then &lt;code&gt;lsp-mode&lt;/code&gt; starts the client through tramp.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-sample-configuration" class="anchor" aria-hidden="true" href="#sample-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample configuration&lt;/h4&gt;
&lt;p&gt;Here it is example how you can configure python language server to work when using &lt;code&gt;TRAMP&lt;/code&gt;. Note that if you are trying to convert existing language server configuration you should copy all of it’s properties(e. g. &lt;code&gt;:request-handlers&lt;/code&gt;, &lt;code&gt;activation-fn&lt;/code&gt;, etc).&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(lsp-register-client
 (make-lsp-client &lt;span class="pl-c1"&gt;:new-connection&lt;/span&gt; (lsp-tramp-connection &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;binary-or-full-path&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                  &lt;span class="pl-c1"&gt;:major-modes&lt;/span&gt; '(&lt;span class="pl-c1"&gt;python-mode&lt;/span&gt;)
                  &lt;span class="pl-c1"&gt;:remote?&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
                  &lt;span class="pl-c1"&gt;:server-id&lt;/span&gt; &lt;span class="pl-c1"&gt;'pyls-remote&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-dealing-with-stderr" class="anchor" aria-hidden="true" href="#dealing-with-stderr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dealing with stderr&lt;/h4&gt;
&lt;p&gt;With TRAMP, Emacs does not have an easy way to distinguish stdout and stderr, so when the underlying LSP process writes to stderr, it breaks the &lt;code&gt;lsp-mode&lt;/code&gt; parser. As a workaround, &lt;code&gt;lsp-mode&lt;/code&gt; is redirecting stderr to &lt;code&gt;/tmp/&amp;lt;process-name&amp;gt;-&amp;lt;id&amp;gt;~stderr&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-limitations" class="anchor" aria-hidden="true" href="#limitations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Limitations&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-file-watches" class="anchor" aria-hidden="true" href="#file-watches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;File watches&lt;/h3&gt;
&lt;p&gt;When some of the workspaces that are active in the current project requests file notifications via &lt;code&gt;workspace/didChangeWatchedFiles&lt;/code&gt; &lt;code&gt;lsp-mode&lt;/code&gt; will start monitoring each of the folders in the workspace for changes. In case your project contains a lot of files you might want to disable file monitoring via &lt;code&gt;lsp-enable-file-watchers&lt;/code&gt; (you may use dir-locals).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h2&gt;
&lt;p&gt;Contributions are very much welcome.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-members" class="anchor" aria-hidden="true" href="#members"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Members&lt;/h3&gt;
&lt;p&gt;Here it is a list of the current &lt;code&gt;lsp-mode&lt;/code&gt; members and what they are primary working on/responsible for.&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Member&lt;/th&gt;&lt;th&gt;Responsible for:&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/TOTBWF"&gt;TOTBWF&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;F#&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/brotzeit"&gt;brotzeit&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;Rust&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/dsyzling"&gt;dsyzling&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;Scala&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/kurnevsky"&gt;kurnevsky&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;Scala&lt;/code&gt; &amp;amp; &lt;code&gt;Rust&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/seagle0128"&gt;seagle0128&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;Go&lt;/code&gt; &amp;amp; &lt;code&gt;MS Python Language Server&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/sebastiansturm"&gt;sebastiansturm&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;lsp-mode&lt;/code&gt; core &amp;amp; &lt;code&gt;C++&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/vibhavp"&gt;vibhavp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;lsp-mode&lt;/code&gt; core&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/yyoncho"&gt;yyoncho&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;lsp-mode&lt;/code&gt; core and &lt;code&gt;Java&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;set &lt;code&gt;lsp-log-io&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt; to inspect communication between client and the server. Use &lt;code&gt;lsp-workspace-show-log&lt;/code&gt; to switch to the corresponding log buffer.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-describe-session&lt;/code&gt; will show the current projects roots + the started severs and allows inspecting the server capabilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="examples/describe.png"&gt;&lt;img src="examples/describe.png" alt="examples/describe.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-adding-support-for-languages" class="anchor" aria-hidden="true" href="#adding-support-for-languages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding support for languages&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-registering-server" class="anchor" aria-hidden="true" href="#registering-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Registering server&lt;/h3&gt;
&lt;p&gt;Here it is the minimal configuration that is needed for new language server registration. Refer to the documentation of &lt;code&gt;lsp-client.el&lt;/code&gt; for the additional settings supported on registration time. &lt;code&gt;lsp-language-id-configuration&lt;/code&gt; must be updated to contain the corresponding mode -&amp;gt; language id - in this case &lt;code&gt;(python-mode . "python")&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defvar&lt;/span&gt; &lt;span class="pl-en"&gt;lsp-language-id-configuration&lt;/span&gt;
  '(...
   (&lt;span class="pl-c1"&gt;python-mode&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;python&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
   ...))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; if you are adding the support for your language server in separate repo use&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; (add-to-list 'lsp-language-id-configuration '(python-mode . "python"))&lt;/span&gt;

(lsp-register-client
 (make-lsp-client &lt;span class="pl-c1"&gt;:new-connection&lt;/span&gt; (lsp-stdio-connection &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pyls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                  &lt;span class="pl-c1"&gt;:major-modes&lt;/span&gt; '(&lt;span class="pl-c1"&gt;python-mode&lt;/span&gt;)
                  &lt;span class="pl-c1"&gt;:server-id&lt;/span&gt; &lt;span class="pl-c1"&gt;'pyls&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the language server supports environment variables to control additional behavior, you can register that by using the &lt;code&gt;:environment-fn&lt;/code&gt; function, like the Bash language client does:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(lsp-register-client
 (make-lsp-client &lt;span class="pl-c1"&gt;:new-connection&lt;/span&gt; (lsp-stdio-connection '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bash-language-server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;start&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
                  &lt;span class="pl-c1"&gt;:major-modes&lt;/span&gt; '(&lt;span class="pl-c1"&gt;sh-mode&lt;/span&gt;)
                  &lt;span class="pl-c1"&gt;:priority&lt;/span&gt; &lt;span class="pl-c1"&gt;-1&lt;/span&gt;
                  &lt;span class="pl-c1"&gt;:environment-fn&lt;/span&gt; (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; ()
                                    ((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;EXPLAINSHELL_ENDPOINT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; lsp-bash-explainshell-endpoint)
                                     (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;HIGHLIGHT_PARSING_ERRORS&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; lsp-bash-highlight-parsing-errors)))
                  &lt;span class="pl-c1"&gt;:server-id&lt;/span&gt; &lt;span class="pl-c1"&gt;'bash-ls&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;lsp-bash-explainshell-endpoint&lt;/code&gt; and &lt;code&gt;lsp-bash-highlight-parsing-errors&lt;/code&gt; are language client &lt;code&gt;defcustom&lt;/code&gt; that expose supported server environment settings in a type-safe way. If you change any of those variables, restart the language server with &lt;code&gt;lsp-restart-workspace&lt;/code&gt; for the changes to be applied.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sections" class="anchor" aria-hidden="true" href="#sections"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sections&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;lsp-mode&lt;/code&gt; provides tools to bridge emacs &lt;code&gt;defcustom&lt;/code&gt; as a language configuration sections properties(see &lt;a href="https://microsoft.github.io/language-server-protocol/specification#workspace_configuration" rel="nofollow"&gt;specification workspace/configuration&lt;/a&gt;). In addition you may use &lt;code&gt;lsp-generate-settings&lt;/code&gt; from &lt;a href="https://github.com/emacs-lsp/lsp-mode/blob/master/scripts/lsp-generate-settings.el"&gt;Generate Settings script&lt;/a&gt; to generate &lt;code&gt;defcustom&lt;/code&gt; from &lt;code&gt;package.json&lt;/code&gt; VScode plugin manifest. Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defcustom&lt;/span&gt; &lt;span class="pl-en"&gt;lsp-foo-language-server-property&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Demo property.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:group&lt;/span&gt; &lt;span class="pl-c1"&gt;'foo-ls&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:risky&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

(lsp-register-custom-settings '((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo.section.property&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; lsp-foo-language-server-property)))

(lsp-configuration-section  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt;  (("foo" ("settings" ("property" . "bar"))))&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;How do I troubleshoot “Server FOO-LS:pid exited with status signal. Do you want to restart it? (y or n)”?
    &lt;ul&gt;
      &lt;li&gt;This message indicates that the language server has crashed for some
        reason. You may check the server stderr which is &lt;code&gt;*FOO-LS::stderr*&lt;/code&gt;. If
        you get this message on startup you may try to run the exact command that
        &lt;code&gt;lsp-mode&lt;/code&gt; is running in the terminal. You may find it in &lt;code&gt;*lsp-log*&lt;/code&gt;
        buffer.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;How to configure a server with local variables?
    &lt;ul&gt;
      &lt;li&gt;Add &lt;code&gt;lsp&lt;/code&gt; server call to &lt;code&gt;hack-local-variables-hook&lt;/code&gt; which runs right after the local variables are loaded.
        &lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'hack-local-variables-hook&lt;/span&gt;
          (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; () (&lt;span class="pl-k"&gt;when&lt;/span&gt; (&lt;span class="pl-c1"&gt;derived-mode-p&lt;/span&gt; &lt;span class="pl-c1"&gt;'XXX-mode&lt;/span&gt;) (lsp))))
        &lt;/pre&gt;&lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;I have multiple language servers registered for language FOO. Which one will be used when opening a project?
    &lt;ul&gt;
      &lt;li&gt;The one with highest priority wins. &lt;code&gt;lsp-clients.el&lt;/code&gt; predefined servers have
        priority -1, lower than external packages (priority 0 if unspecified). If a
        server is registered with &lt;code&gt;:add-on?&lt;/code&gt; flag set to &lt;code&gt;t&lt;/code&gt; it will be started in
        parallel to the other servers that are registered for the current mode.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;I have multiple language servers for language &lt;code&gt;FOO&lt;/code&gt; and I want to select the server per project, what can I do?
    &lt;ul&gt;
      &lt;li&gt;You may create &lt;code&gt;dir-local&lt;/code&gt; for each of the projects and specify list of
        &lt;code&gt;lsp-enabled-clients&lt;/code&gt;. This will narrow the list of the clients that are
        going to be tested for the project.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The completion does not work fine and inserts arguments and placeholders, what I am doing wrong?
    &lt;ul&gt;
      &lt;li&gt;Snippet support works only with &lt;code&gt;company-lsp&lt;/code&gt; so if you are using
        &lt;code&gt;completion-at-point&lt;/code&gt; the snippets won’t be expanded and you should
        either disable them by setting &lt;code&gt;lsp-enable-snippet&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; or you
        should switch to &lt;code&gt;company-lsp&lt;/code&gt;. Note also that &lt;code&gt;company-tng&lt;/code&gt; frontend
        does not support snippet expansion(see &lt;a href="https://github.com/company-mode/company-mode/issues/891"&gt;company-mode#891&lt;/a&gt;)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;How to automatically follow &lt;code&gt;lsp-ui-log&lt;/code&gt;?
    &lt;ul&gt;
      &lt;li&gt;Go into the log buffer and execute the following snippet(source: &lt;a href="https://stackoverflow.com/questions/12663061/emacs-auto-scrolling-log-buffer" rel="nofollow"&gt;Emacs auto scrolling log buffer&lt;/a&gt;)&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;set&lt;/span&gt; (&lt;span class="pl-c1"&gt;make-local-variable&lt;/span&gt; &lt;span class="pl-c1"&gt;'window-point-insertion-type&lt;/span&gt;) &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
    &lt;/pre&gt;&lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;I am getting “Package ‘spinner-1.7.3’ is unavailable” when trying to install &lt;code&gt;lsp-mode&lt;/code&gt;.
    &lt;ul&gt;
      &lt;li&gt;This is caused by GPG keys used by the ELPA package manager not being up
        to date. You may fix by installing: &lt;a href="https://elpa.gnu.org/packages/gnu-elpa-keyring-update.html" rel="nofollow"&gt;gnu-elpa-keyring-update&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Json completion doesn’t seem working?
    &lt;ul&gt;
      &lt;li&gt;The latest &lt;a href="https://www.npmjs.com/package/vscode-json-languageserver/v/1.2.2" rel="nofollow"&gt;vscode-json-languageserver&lt;/a&gt; is broken. You will need to install the earlier version of it &lt;code&gt;npm i vscode-json-languageserver@1.2.1&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The flycheck does not work in &lt;code&gt;typescript&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt; and &lt;code&gt;javascript&lt;/code&gt; blocks in &lt;code&gt;vue-mode&lt;/code&gt;. How to fix that?
    &lt;ul&gt;
      &lt;li&gt;This is caused by the fact that &lt;code&gt;vue-mode&lt;/code&gt; uses multiple major modes in
        single file and the &lt;code&gt;lsp-ui&lt;/code&gt; checker may not associated with the major mode
        at point. You could fix that by adding the following lines to your config.
        &lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;with-eval-after-load&lt;/span&gt; &lt;span class="pl-c1"&gt;'lsp-ui-flycheck&lt;/span&gt;
  (&lt;span class="pl-k"&gt;mapc&lt;/span&gt; &lt;span class="pl-c1"&gt;'lsp-ui-flycheck-add-mode&lt;/span&gt; '(&lt;span class="pl-c1"&gt;typescript-mode&lt;/span&gt; js-mode css-mode vue-html-mode)))
        &lt;/pre&gt;&lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-see-also" class="anchor" aria-hidden="true" href="#see-also"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;See also&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/emacs-lsp/lsp-docker/"&gt;lsp-docker&lt;/a&gt; - provide docker image with preconfigured language servers with corresponding emacs configuration.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/sebastiencs/company-box/"&gt;company-box&lt;/a&gt; - &lt;code&gt;company&lt;/code&gt; frontend with icons.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/emacs-lsp/dap-mode"&gt;dap-mode&lt;/a&gt; - Debugger integration for &lt;code&gt;lsp-mode&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/joaotavora/eglot"&gt;eglot&lt;/a&gt; - An alternative minimal LSP implementation.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>emacs-lsp</author><guid isPermaLink="false">https://github.com/emacs-lsp/lsp-mode</guid><pubDate>Tue, 21 Jan 2020 00:04:00 GMT</pubDate></item><item><title>jacktasia/dumb-jump #5 in Emacs Lisp, Today</title><link>https://github.com/jacktasia/dumb-jump</link><description>&lt;p&gt;&lt;i&gt;an Emacs "jump to definition" package for 40+ languages&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-dumb-jump" class="anchor" aria-hidden="true" href="#dumb-jump"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;dumb-jump&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/jacktasia/dumb-jump?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2851d9b81e44710509622ccf48a8113e8c613045/68747470733a2f2f6261646765732e6769747465722e696d2f6a61636b74617369612f64756d622d6a756d702e737667" alt="Join the chat at https://gitter.im/jacktasia/dumb-jump" data-canonical-src="https://badges.gitter.im/jacktasia/dumb-jump.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://circleci.com/gh/jacktasia/dumb-jump/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/91773d876a34306cbfaf9d69a138d34665cec702/68747470733a2f2f636972636c6563692e636f6d2f67682f6a61636b74617369612f64756d622d6a756d702f747265652f6d61737465722e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/jacktasia/dumb-jump/tree/master.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/github/jacktasia/dumb-jump?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4cc73416a120c9e720e2f7fc50f552a37efe1c3a/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6a61636b74617369612f64756d622d6a756d702f62616467652e7376673f6272616e63683d6d617374657226736572766963653d67697468756226783d31" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/jacktasia/dumb-jump/badge.svg?branch=master&amp;amp;service=github&amp;amp;x=1" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://melpa.org/#/dumb-jump" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7bae58b13a4cc33db08a87e32848817b5975a180/687474703a2f2f6d656c70612e6f72672f7061636b616765732f64756d622d6a756d702d62616467652e7376673f783d36" alt="MELPA" data-canonical-src="http://melpa.org/packages/dumb-jump-badge.svg?x=6" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://stable.melpa.org/#/dumb-jump" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/589a3232cb512ae41692fc11ac61688ef6afd191/68747470733a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f64756d622d6a756d702d62616467652e7376673f783d31" alt="MELPA Stable" data-canonical-src="https://stable.melpa.org/packages/dumb-jump-badge.svg?x=1" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="media/dumb-jump-example-v2.gif?raw=true"&gt;&lt;img src="media/dumb-jump-example-v2.gif?raw=true" alt="Dumb Jump GIF" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Dumb Jump&lt;/strong&gt; is an Emacs "jump to definition" package with support for 40+ programming languages that favors "just working". This means minimal -- and ideally zero -- configuration with absolutely no stored indexes (TAGS) or persistent background processes. Dumb Jump requires at least GNU Emacs &lt;code&gt;24.3&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-how--it-works" class="anchor" aria-hidden="true" href="#how--it-works"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How  it works&lt;/h4&gt;
&lt;p&gt;Dumb Jump uses &lt;a href="https://github.com/ggreer/the_silver_searcher"&gt;The Silver Searcher&lt;/a&gt; &lt;code&gt;ag&lt;/code&gt;, &lt;a href="https://github.com/BurntSushi/ripgrep"&gt;ripgrep&lt;/a&gt; &lt;code&gt;rg&lt;/code&gt;, or &lt;code&gt;grep&lt;/code&gt; to find potential definitions of a function or variable under point. It uses a set of regular expressions based on the file extension, or &lt;code&gt;major-mode&lt;/code&gt;, of the current buffer. The matches are run through a shared set of heuristic methods to find the best candidate to jump to. If it can't decide it will present the user with a list in a pop-menu, helm, or ivy (see &lt;code&gt;dumb-jump-selector&lt;/code&gt;).&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-success-rate" class="anchor" aria-hidden="true" href="#success-rate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Success Rate&lt;/h4&gt;
&lt;p&gt;For the currently &lt;a href="#supported-languages"&gt;supported languages&lt;/a&gt; it seems to do a good job of finding what you want. If you find a case where it does not work as expected do not hesitate to &lt;a href="https://github.com/jacktasia/dumb-jump/issues"&gt;open an issue&lt;/a&gt;. It can be slow if it needs to use &lt;code&gt;grep&lt;/code&gt; and/or a project is large. Although it can be sped up by &lt;a href="https://github.com/ggreer/the_silver_searcher#installing"&gt;installing &lt;code&gt;ag&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://github.com/BurntSushi/ripgrep#installation"&gt;installing &lt;code&gt;rg&lt;/code&gt;&lt;/a&gt; and/or creating a &lt;code&gt;.dumbjump&lt;/code&gt; file in your project's root directory with paths that should be excluded (&lt;a href="#configuration"&gt;see configuration&lt;/a&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-languages" class="anchor" aria-hidden="true" href="#supported-languages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Languages&lt;/h2&gt;
&lt;p&gt;There is currently basic support for the following languages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bash&lt;/li&gt;
&lt;li&gt;C/C++&lt;/li&gt;
&lt;li&gt;C#&lt;/li&gt;
&lt;li&gt;Clojure&lt;/li&gt;
&lt;li&gt;CoffeeScript&lt;/li&gt;
&lt;li&gt;Common Lisp&lt;/li&gt;
&lt;li&gt;Coq&lt;/li&gt;
&lt;li&gt;Crystal&lt;/li&gt;
&lt;li&gt;Elixir&lt;/li&gt;
&lt;li&gt;Emacs Lisp&lt;/li&gt;
&lt;li&gt;Erlang&lt;/li&gt;
&lt;li&gt;F#&lt;/li&gt;
&lt;li&gt;Faust&lt;/li&gt;
&lt;li&gt;Fortran&lt;/li&gt;
&lt;li&gt;Go&lt;/li&gt;
&lt;li&gt;Groovy&lt;/li&gt;
&lt;li&gt;Haskell&lt;/li&gt;
&lt;li&gt;Java&lt;/li&gt;
&lt;li&gt;JavaScript&lt;/li&gt;
&lt;li&gt;Julia&lt;/li&gt;
&lt;li&gt;Kotlin&lt;/li&gt;
&lt;li&gt;LaTeX&lt;/li&gt;
&lt;li&gt;Lua&lt;/li&gt;
&lt;li&gt;Matlab&lt;/li&gt;
&lt;li&gt;Nim&lt;/li&gt;
&lt;li&gt;Nix&lt;/li&gt;
&lt;li&gt;Objective-C&lt;/li&gt;
&lt;li&gt;OCaml&lt;/li&gt;
&lt;li&gt;OpenSCAD&lt;/li&gt;
&lt;li&gt;Pascal&lt;/li&gt;
&lt;li&gt;Perl&lt;/li&gt;
&lt;li&gt;PHP&lt;/li&gt;
&lt;li&gt;Protocol Buffers&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;R&lt;/li&gt;
&lt;li&gt;Racket&lt;/li&gt;
&lt;li&gt;Ruby&lt;/li&gt;
&lt;li&gt;Rust&lt;/li&gt;
&lt;li&gt;SML&lt;/li&gt;
&lt;li&gt;Scala&lt;/li&gt;
&lt;li&gt;Scheme&lt;/li&gt;
&lt;li&gt;SQL&lt;/li&gt;
&lt;li&gt;Swift&lt;/li&gt;
&lt;li&gt;SystemVerilog&lt;/li&gt;
&lt;li&gt;TypeScript&lt;/li&gt;
&lt;li&gt;Vala&lt;/li&gt;
&lt;li&gt;VHDL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have any issues with the existing languages, or you want support for another one, then please &lt;a href="https://github.com/jacktasia/dumb-jump/issues"&gt;open an issue&lt;/a&gt;. PRs are also welcome. If you'd like to add a language these PRs for &lt;a href="https://github.com/jacktasia/dumb-jump/pull/33"&gt;lua&lt;/a&gt; and &lt;a href="https://github.com/jacktasia/dumb-jump/pull/57"&gt;rust&lt;/a&gt; are good examples.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing&lt;/h2&gt;
&lt;p&gt;The recommended way to install Dumb Jump is via &lt;code&gt;package.el&lt;/code&gt;. It's available on &lt;a href="http://melpa.org/#/dumb-jump" rel="nofollow"&gt;MELPA&lt;/a&gt;: &lt;kbd&gt;M-x&lt;/kbd&gt; &lt;code&gt;package-install dumb-jump&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-spacemacs" class="anchor" aria-hidden="true" href="#spacemacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spacemacs&lt;/h4&gt;
&lt;p&gt;If you're using an up-to-date Spacemacs, then you already have Dumb Jump by default just make sure you install &lt;code&gt;ag&lt;/code&gt; or &lt;code&gt;rg&lt;/code&gt; (see below) to ensure you have the best experience.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-installing-ag-or-rg" class="anchor" aria-hidden="true" href="#installing-ag-or-rg"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing &lt;code&gt;ag&lt;/code&gt; or &lt;code&gt;rg&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Dumb Jump performs best with The Silver Searcher &lt;code&gt;ag&lt;/code&gt; (&lt;a href="https://github.com/ggreer/the_silver_searcher#installing"&gt;ag install instructions&lt;/a&gt;) or ripgrep &lt;code&gt;rg&lt;/code&gt; (&lt;a href="https://github.com/BurntSushi/ripgrep#installation"&gt;rg install instructions&lt;/a&gt;) installed on your system.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-basic" class="anchor" aria-hidden="true" href="#basic"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic&lt;/h4&gt;
&lt;p&gt;Adding &lt;code&gt;(dumb-jump-mode)&lt;/code&gt; to your &lt;code&gt;.emacs&lt;/code&gt; will enable the key bindings for two interactive Dumb Jump functions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dumb-jump-go&lt;/code&gt; &lt;kbd&gt;C-M-g&lt;/kbd&gt; core functionality. Attempts to jump to the definition for the thing under point&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dumb-jump-back&lt;/code&gt; &lt;kbd&gt;C-M-p&lt;/kbd&gt; jumps back to where you were when you jumped. These are chained so if you go down a rabbit hole you can get back out or where you want to be.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dumb-jump-quick-look&lt;/code&gt; &lt;kbd&gt;C-M-q&lt;/kbd&gt; like &lt;code&gt;dumb-jump-go&lt;/code&gt; but &lt;strong&gt;only&lt;/strong&gt; shows tooltip with &lt;code&gt;file&lt;/code&gt;, &lt;code&gt;line&lt;/code&gt;, and &lt;code&gt;context&lt;/code&gt; it does not jump.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dumb-jump-go-other-window&lt;/code&gt; exactly like &lt;code&gt;dumb-jump-go&lt;/code&gt; but uses &lt;code&gt;find-file-other-window&lt;/code&gt; instead of &lt;code&gt;find-file&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dumb-jump-go-prefer-external&lt;/code&gt; like &lt;code&gt;dumb-jump-go&lt;/code&gt; but will prefer definitions not in the current buffer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dumb-jump-go-prefer-external-other-window&lt;/code&gt; expected combination of &lt;code&gt;dumb-jump-go-prefer-external&lt;/code&gt; and &lt;code&gt;dumb-jump-go-other-window&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dumb-jump-go-prompt&lt;/code&gt; exactly like &lt;code&gt;dumb-jump-go&lt;/code&gt; but prompts user for function to jump to instead of using symbol at point&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;h5&gt;&lt;a id="user-content-excluding-project-directories" class="anchor" aria-hidden="true" href="#excluding-project-directories"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Excluding project directories&lt;/h5&gt;
&lt;p&gt;Dumb Jump will automatically look for a project root. If it's not finding one then either put a &lt;code&gt;.dumbjump&lt;/code&gt; file in your project root and optionally add excluded directories to make it faster.&lt;/p&gt;
&lt;p&gt;Project root directory denoters: &lt;code&gt;.dumbjump&lt;/code&gt; &lt;code&gt;.projectile&lt;/code&gt; &lt;code&gt;.git&lt;/code&gt; &lt;code&gt;.hg&lt;/code&gt; &lt;code&gt;.fslckout&lt;/code&gt; &lt;code&gt;.bzr&lt;/code&gt; &lt;code&gt;_darcs&lt;/code&gt; &lt;code&gt;.svn&lt;/code&gt; &lt;code&gt;Makefile&lt;/code&gt; &lt;code&gt;PkgInfo&lt;/code&gt; &lt;code&gt;-pkg.el&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you want to stop a directory from registering as the project root (and have Dumb Jump keep looking) add an empty &lt;code&gt;.dumbjumpignore&lt;/code&gt; file in that directory.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-example-dumbjump" class="anchor" aria-hidden="true" href="#example-dumbjump"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example &lt;code&gt;.dumbjump&lt;/code&gt;&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;-tests
-node_modules
-build
-images
+../some-lib/src
+/usr/lib/src
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt; When adding paths outside of the project (using &lt;code&gt;+&lt;/code&gt;) ensure you use &lt;code&gt;dumb-jump-force-searcher&lt;/code&gt; of either &lt;code&gt;'ag&lt;/code&gt; or &lt;code&gt;'rg&lt;/code&gt; (see below). This is required because the default searcher (&lt;code&gt;git-grep&lt;/code&gt;) won't be able to search outside of the project root. This edge case will be fixed in a future release. That is, &lt;code&gt;git-grep&lt;/code&gt; will NOT be set as the default searcher if a &lt;code&gt;.dumbjump&lt;/code&gt; is present with a &lt;code&gt;+&lt;/code&gt; path outside of the repo.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-emacs-options" class="anchor" aria-hidden="true" href="#emacs-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;.emacs&lt;/code&gt; options&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;(setq dumb-jump-default-project "~/code")&lt;/code&gt; to change default project if one is not found (defaults to &lt;code&gt;~&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(setq dumb-jump-quiet t)&lt;/code&gt; if Dumb Jump is too chatty.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(setq dumb-jump-confirm-jump-to-modified-file nil)&lt;/code&gt; to avoid being prompted for confirmation if you attempt to jump to a file that has been modified and not saved.  This defaults to &lt;code&gt;t&lt;/code&gt; because jumping to modified files results in you jumping to a location that may no longer be current.&lt;/li&gt;
&lt;li&gt;To support more languages and/or definition types customize &lt;code&gt;dumb-jump-find-rules&lt;/code&gt; variable.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(add-hook 'dumb-jump-after-jump-hook 'some-function)&lt;/code&gt; to execute code after you jump&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(setq dumb-jump-selector 'ivy)&lt;/code&gt; to use &lt;a href="https://github.com/abo-abo/swiper#ivy"&gt;ivy&lt;/a&gt; instead of the default popup for multiple options.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(setq dumb-jump-selector 'helm)&lt;/code&gt; to use &lt;a href="https://github.com/emacs-helm/helm"&gt;helm&lt;/a&gt; instead of the default popup for multiple options.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(setq dumb-jump-force-searcher 'rg)&lt;/code&gt; to force the search program Dumb Jump should use. It will &lt;em&gt;always&lt;/em&gt; use this searcher. If not set (&lt;code&gt;nil&lt;/code&gt;) Dumb Jump will use &lt;code&gt;git-grep&lt;/code&gt; if it's a git project and if not will try searchers in the following order &lt;code&gt;ag&lt;/code&gt;, &lt;code&gt;rg&lt;/code&gt;, &lt;code&gt;grep&lt;/code&gt; (first installed wins). This is necessary if you want full control over the searcher Dumb Jump uses.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(setq dumb-jump-aggressive nil)&lt;/code&gt; to only automatically jump if there's only one match and otherwise present you with a list. This defaults to &lt;code&gt;t&lt;/code&gt;, which means it will try its best to guess where you want to jump and only if it can't then give you a list of matches.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(setq dumb-jump-use-visible-window nil)&lt;/code&gt; if &lt;code&gt;t&lt;/code&gt; (the default) when you're using multiple windows/panes and the file to jump to is already open in one of those windows then dumb jump will focus that window and jump there instead of within your current window.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(setq dumb-jump-prefer-searcher 'rg)&lt;/code&gt; to let Dumb Jump know your searcher preference. If set this will still use &lt;code&gt;git-grep&lt;/code&gt; if it's a git project (because it's the fastest), but will you use whatever you set here in any other situation. If not set Dumb Jump will follow the same order as mentioned in the &lt;code&gt;dumb-jump-force-searcher&lt;/code&gt; description. At this time setting this value is only necessary if you prefer &lt;code&gt;rg&lt;/code&gt; but have &lt;code&gt;ag&lt;/code&gt; installed too.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(setq dumb-jump-git-grep-search-args "")&lt;/code&gt; to set additional command line arguments when using git-grep for searching (defaults to &lt;code&gt;""&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(setq dumb-jump-ag-search-args "")&lt;/code&gt; to set additional command line arguments when using ag for searching (defaults to &lt;code&gt;""&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(setq dumb-jump-rg-search-args "")&lt;/code&gt; to set additional command line arguments when using rg for searching (defaults to &lt;code&gt;"--pcre2"&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-if-your-project-has-multi-line-method-signatures-you-should-use-ag-or-rg-with-a-version-higher-than-010" class="anchor" aria-hidden="true" href="#if-your-project-has-multi-line-method-signatures-you-should-use-ag-or-rg-with-a-version-higher-than-010"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;If your project has multi-line method signatures &lt;a href="https://github.com/jacktasia/dumb-jump/issues/129"&gt;you should use &lt;code&gt;ag&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://github.com/jacktasia/dumb-jump/issues/255"&gt;&lt;code&gt;rg&lt;/code&gt; with a version higher than &lt;code&gt;0.10&lt;/code&gt;&lt;/a&gt;.&lt;/h4&gt;
&lt;p&gt;To learn more about how Dumb Jump picks a searcher see &lt;a href="https://github.com/jacktasia/dumb-jump/issues/109"&gt;this issue&lt;/a&gt; and this &lt;a href="https://github.com/jacktasia/dumb-jump/pull/111"&gt;pull request&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-use-package-example-configuration" class="anchor" aria-hidden="true" href="#use-package-example-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;use-package&lt;/code&gt; example configuration.&lt;/h5&gt;
&lt;p&gt;I personally no longer use the &lt;code&gt;dumb-jump-mode&lt;/code&gt; keybindings that were inspired by IntelliJ's emacs bindings. I use &lt;a href="https://github.com/jwiegley/use-package"&gt;use-package&lt;/a&gt; like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; dumb-jump
  &lt;span class="pl-c1"&gt;:bind&lt;/span&gt; ((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-g o&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; dumb-jump-go-other-window)
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-g j&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; dumb-jump-go)
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-g b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; dumb-jump-back)
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-g i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; dumb-jump-go-prompt)
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-g x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; dumb-jump-go-prefer-external)
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-g z&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; dumb-jump-go-prefer-external-other-window))
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt; (&lt;span class="pl-k"&gt;setq&lt;/span&gt; dumb-jump-selector &lt;span class="pl-c1"&gt;'ivy&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; (setq dumb-jump-selector 'helm)&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-hydra-for-effieciency" class="anchor" aria-hidden="true" href="#hydra-for-effieciency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hydra for effieciency&lt;/h5&gt;
&lt;p&gt;If you have &lt;a href="https://github.com/abo-abo/hydra"&gt;Hydra&lt;/a&gt; installed, the following is an example hydra for easily using Dumb-Jump and not needing to remember the bindings or function names:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(defhydra dumb-jump-hydra (&lt;span class="pl-c1"&gt;:color&lt;/span&gt; blue &lt;span class="pl-c1"&gt;:columns&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;)
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Dumb Jump&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;j&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; dumb-jump-go &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Go&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;o&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; dumb-jump-go-other-window &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Other window&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;e&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; dumb-jump-go-prefer-external &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Go external&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; dumb-jump-go-prefer-external-other-window &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Go external other window&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; dumb-jump-go-prompt &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Prompt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;l&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; dumb-jump-quick-look &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Quick look&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; dumb-jump-back &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Back&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It can be explicitly bound or used inside another hydra (if you already use something like &lt;a href="https://github.com/abo-abo/avy"&gt;Avy&lt;/a&gt;/&lt;a href="https://github.com/winterTTr/ace-jump-mode"&gt;Ace&lt;/a&gt; or similar for general "jumping").&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-debugging-a-jump" class="anchor" aria-hidden="true" href="#debugging-a-jump"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging a jump&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;kbd&gt;M-x&lt;/kbd&gt; &lt;code&gt;set-variable dumb-jump-debug t&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;try to jump&lt;/li&gt;
&lt;li&gt;go to buffer &lt;code&gt;*Messages*&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;More details &lt;a href="http://p.cweiske.de/506" rel="nofollow"&gt;here&lt;/a&gt;. Thanks to @cweiske and @Glumanda99&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-why" class="anchor" aria-hidden="true" href="#why"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why?&lt;/h2&gt;
&lt;p&gt;I wanted "jump to definition" functionality to "just work" in emacs. I use IntelliJ for Java and this functionality is basically the only thing I miss when I switch back to emacs for work in other languages. There are certainly other packages that offer this type of functionality, but they all require significantly more configuration and are often limited to a particular language. An alternative may be worth setting up if you are in a specific project or language often (see &lt;a href="#alternatives"&gt;alternatives&lt;/a&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Feedback is very welcome via GitHub issues. I will consider supporting other languages either via issue request or PR. If submitting a PR then please add tests as well.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running-tests" class="anchor" aria-hidden="true" href="#running-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running Tests&lt;/h2&gt;
&lt;p&gt;Opening a PR will use CircleCI to run all the tests against all the supported emacs versions and search programs.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-running-tests-locally" class="anchor" aria-hidden="true" href="#running-tests-locally"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running tests locally&lt;/h3&gt;
&lt;p&gt;There are a lot of options for running the tests locally:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-basicclassic" class="anchor" aria-hidden="true" href="#basicclassic"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic/Classic&lt;/h4&gt;
&lt;p&gt;requires &lt;a href="https://github.com/cask/cask"&gt;Cask&lt;/a&gt; using your local emacs&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; /path/to/dumb-jump
cask
make &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-concurrent" class="anchor" aria-hidden="true" href="#concurrent"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concurrent&lt;/h4&gt;
&lt;p&gt;requires golang and &lt;a href="https://github.com/cask/cask"&gt;Cask&lt;/a&gt; using your local emacs&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; /path/to/dumb-jump
cask
make test-concurrent&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-docker-latest-emacs" class="anchor" aria-hidden="true" href="#docker-latest-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker (latest emacs)&lt;/h4&gt;
&lt;p&gt;only requires docker and runs tests against emacs 26.1&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; /path/to/dumb-jump
cask
make test-in-docker&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-docker-all-supported-emacs-versions" class="anchor" aria-hidden="true" href="#docker-all-supported-emacs-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker (all supported emacs versions)&lt;/h4&gt;
&lt;p&gt;only requires docker and runs tests against all supported emacs versions&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; /path/to/dumb-jump
cask
make test-all-in-docker&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-alternatives" class="anchor" aria-hidden="true" href="#alternatives"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alternatives&lt;/h2&gt;
&lt;p&gt;Here is a list of potential alternative packages for emacs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Tags-Tables.html" rel="nofollow"&gt;Tags&lt;/a&gt; supports multiple languages&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gnu.org/software/global/" rel="nofollow"&gt;GNU Global&lt;/a&gt; supports multiple languages&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ternjs.net/" rel="nofollow"&gt;Tern&lt;/a&gt; for JavaScript&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jorgenschaefer/elpy"&gt;elpy&lt;/a&gt; for Python&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dgutov/robe"&gt;robe&lt;/a&gt; for Ruby&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of these were sourced from this &lt;a href="http://emacs.stackexchange.com/questions/10125/can-emacs-support-go-to-declaration-of-function-in-an-entire-project" rel="nofollow"&gt;emacs StackExchange answer&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jacktasia</author><guid isPermaLink="false">https://github.com/jacktasia/dumb-jump</guid><pubDate>Tue, 21 Jan 2020 00:05:00 GMT</pubDate></item><item><title>Kungsgeten/org-brain #6 in Emacs Lisp, Today</title><link>https://github.com/Kungsgeten/org-brain</link><description>&lt;p&gt;&lt;i&gt;Org-mode wiki + concept-mapping&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="org" data-path="README.org"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-org-brain-" class="anchor" aria-hidden="true" href="#org-brain-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;org-brain &lt;a href="http://melpa.org/#/org-brain" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/de411098a5bf8b6b818541cf7368572686af2291/687474703a2f2f6d656c70612e6f72672f7061636b616765732f6f72672d627261696e2d62616467652e737667" alt="http://melpa.org/packages/org-brain-badge.svg" data-canonical-src="http://melpa.org/packages/org-brain-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;org-brain&lt;/code&gt; implements a variant of &lt;a href="https://en.wikipedia.org/wiki/Concept_map" rel="nofollow"&gt;concept mapping&lt;/a&gt; in Emacs, using &lt;a href="http://orgmode.org/" rel="nofollow"&gt;org-mode&lt;/a&gt;. It
  is heavily inspired by a piece of software called &lt;a href="http://thebrain.com/" rel="nofollow"&gt;The Brain&lt;/a&gt;, and you can view an
  introduction to that program &lt;a href="https://www.youtube.com/watch?v=GFqLUBKCFdA" rel="nofollow"&gt;here&lt;/a&gt;. They also provide &lt;a href="https://www.thebrain.com/blog/" rel="nofollow"&gt;a blog&lt;/a&gt; with great ideas of
  how you can think when organizing your Brain.&lt;/p&gt;
&lt;p&gt;You can think of &lt;code&gt;org-brain&lt;/code&gt; as a combination of a wiki and a mind map, where
  each wiki page / mind map node is an &lt;code&gt;org-mode&lt;/code&gt; file which resides in your
  &lt;code&gt;org-brain-path&lt;/code&gt;, or a headline with an ID property in one of those files. These
  are called &lt;i&gt;entries&lt;/i&gt;. Entries can be linked together, and you can then
  view the network of links as a mind map, using &lt;code&gt;M-x org-brain-visualize&lt;/code&gt;. Here’s &lt;a href="https://www.youtube.com/watch?v=3EGOwfWok5s&amp;amp;t=" rel="nofollow"&gt;a video introducing =org-brain=&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;PINNED:  Index


               +-Python              Game development-+-Game design
               +-Programming books           |
   Programming-+-Emacs                       |
         |                                   |
         +-----------------+-----------------+
                           |
                           V
                    Game programming &amp;lt;-&amp;gt; Computer games

Game Maker  Unity

--- Resources ---------------------------------

- https://en.wikipedia.org/wiki/Game_programming
- Passing Through Ghosts in Pac-Man
- In-House Engine Development: Technical Tips

--- Text --------------------------------------

Game programming is the art of programming computer games...
&lt;/pre&gt;
&lt;p&gt;When visualizing an entry, you will see the entry’s relationship to other
  entries. There are four different types of relationships in &lt;code&gt;org-brain&lt;/code&gt;:&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Parents&lt;/dt&gt;&lt;dd&gt;Entries above the visualized entry. If the visualized entry is a
    headline, then the parent headline in the &lt;code&gt;org-mode&lt;/code&gt; file will be
    one of the parents. In the case of top level headlines, the file
    itself will be considered a parent. Additional parents can be added
    manually. In the example above, &lt;i&gt;Programming&lt;/i&gt; and &lt;i&gt;Game
    development&lt;/i&gt; are parents of the visualized &lt;i&gt;Game programming&lt;/i&gt;
    entry.&lt;/dd&gt;
  &lt;dt&gt;Children&lt;/dt&gt;&lt;dd&gt;Entries below the visualized entry. This will by default be
    subheadings of the visualized entry (or level one headlines, if
    the visualized entry is a file). You can add other children,
    residing elsewhere, manually. In the example above, &lt;i&gt;Game Maker&lt;/i&gt;
    and &lt;i&gt;Unity&lt;/i&gt; are the children of &lt;i&gt;Game programming&lt;/i&gt;.&lt;/dd&gt;
  &lt;dt&gt;Siblings&lt;/dt&gt;&lt;dd&gt;These appear to the right of the parent entries. Siblings are the
    other children of the visualized entry’s parents.&lt;/dd&gt;
  &lt;dt&gt;Friends&lt;/dt&gt;&lt;dd&gt;These appear to the right of the visualized entry. Friends provide
    a way of adding a hierarchy independent two-way relationship
    between two entries. Friends must be added manually. In the example
    above, &lt;i&gt;Computer games&lt;/i&gt; and &lt;i&gt;Game programming&lt;/i&gt; are friends.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;&lt;a href="http://blogarchive.thebrain.com/thought-relationships/" rel="nofollow"&gt;Here’s an article&lt;/a&gt; describing how you can use the different relationships (The
  Brain’s &lt;i&gt;jump thoughts&lt;/i&gt; are the equivalent of &lt;i&gt;friends&lt;/i&gt; in &lt;code&gt;org-brain&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Apart from the visualized entry’s relationships, &lt;code&gt;org-brain-visualize&lt;/code&gt; also show
  pinned entries, which are shown independently of the visualized entry; &lt;i&gt;Index&lt;/i&gt;
  is a pinned entry in the example above. &lt;code&gt;org-brain-visualize&lt;/code&gt; also show a list
  of the entry’s resources (links and attachments), and the text in the entry. The
  example above have three resources, and a short text. The resources and text is
  gathered from &lt;code&gt;org-mode&lt;/code&gt; automatically.&lt;/p&gt;
&lt;p&gt;There’s also the option to visualize the entry as a tree, or similar to a
  mind map, where you can zoom in order to show grandparents and grandchildren.&lt;/p&gt;
&lt;p&gt;The relationship entries, pinned entries and resources are all links; they can
  be pressed/clicked to visualize other entries, visit resources etc.&lt;/p&gt;
&lt;p&gt;You can also annotate the connection between the visualized entry and one of the
  other entries. You can think of it as annotating the edge between two nodes in a
  graph. Annotations will show up in the mini-buffer when hovering over an
  annotated connection.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-setup-and-requirements" class="anchor" aria-hidden="true" href="#setup-and-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup and requirements&lt;/h1&gt;
&lt;p&gt;The easiest way is to get &lt;code&gt;org-brain&lt;/code&gt; from MELPA. If you do not want to do that,
  clone this git repository or download &lt;code&gt;org-brain.el&lt;/code&gt; and add it to your
  load-path. The example below is using &lt;a href="https://github.com/jwiegley/use-package"&gt;use-package&lt;/a&gt; and assumes that you’re using
  MELPA, but you could use &lt;code&gt;(require 'org-brain)&lt;/code&gt; or add a &lt;code&gt;:load-path&lt;/code&gt; to
  &lt;code&gt;use-package&lt;/code&gt; instead.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; org-brain &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; org-brain-path &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;directory/path/where-i-want-org-brain&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; For Evil users&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;with-eval-after-load&lt;/span&gt; &lt;span class="pl-c1"&gt;'evil&lt;/span&gt;
    (evil-set-initial-state &lt;span class="pl-c1"&gt;'org-brain-visualize-mode&lt;/span&gt; &lt;span class="pl-c1"&gt;'emacs&lt;/span&gt;))
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; org-id-track-globally &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; org-id-locations-file &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~/.emacs.d/.org-id-locations&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  (&lt;span class="pl-k"&gt;push&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Brain&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; plain (&lt;span class="pl-k"&gt;function&lt;/span&gt; org-brain-goto-end)
          &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;* %i%?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:empty-lines&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
        org-capture-templates)
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; org-brain-visualize-default-choices &lt;span class="pl-c1"&gt;'all&lt;/span&gt;)
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; org-brain-title-max-length &lt;span class="pl-c1"&gt;12&lt;/span&gt;)
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; org-brain-include-file-entries &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
        org-brain-file-entries-use-title &lt;span class="pl-c1"&gt;nil&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code&gt;org-brain&lt;/code&gt; requires Emacs 25 and org-mode 9. These need to be part of your
    Emacs.&lt;/li&gt;
  &lt;li&gt;Configure &lt;code&gt;org-brain-path&lt;/code&gt; (defaults to &lt;code&gt;/brain&lt;/code&gt; in your &lt;code&gt;org-directory&lt;/code&gt;) to
    a directory where you want to put your &lt;code&gt;org-brain&lt;/code&gt; files (which could be the
    location where you already keep your org files if you wish to transform your
    existing org files into &lt;code&gt;org-brain&lt;/code&gt; files). You can set this with the example
    config presented above or through &lt;code&gt;M-x customize-group RET org-brain&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;If you’re an &lt;a href="https://github.com/emacs-evil/evil"&gt;evil&lt;/a&gt; user, you’ll want to add &lt;code&gt;(evil-set-initial-state
    'org-brain-visualize-mode 'emacs)&lt;/code&gt; to your &lt;code&gt;org-brain&lt;/code&gt; configuration.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;org-brain&lt;/code&gt; use &lt;code&gt;org-id&lt;/code&gt; in order to speed things up. Because of this, the
    variable &lt;code&gt;org-id-track-globally&lt;/code&gt; should be &lt;code&gt;t&lt;/code&gt; (which it already is by
    default). You may want to modify &lt;code&gt;org-id-locations-file&lt;/code&gt; too.&lt;/li&gt;
  &lt;li&gt;You might want to add information at the end of an entry, without visiting
    the file. A way to do this is to use a &lt;a href="http://orgmode.org/manual/Capture.html" rel="nofollow"&gt;capture&lt;/a&gt; template, such as the one
    presented above.&lt;/li&gt;
  &lt;li&gt;If you have a lot of entries, it might take some time to gather information
    about all entries when using &lt;code&gt;org-brain-visualize&lt;/code&gt;. You could change the
    value of &lt;code&gt;org-brain-visualize-default-choices&lt;/code&gt; (which is =’all= by default)
    to only include files, or even just files in the direct root of
    &lt;code&gt;org-brain-path&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;If you feel that &lt;code&gt;org-brain-visualize&lt;/code&gt; is too cluttered, you may want to set
    &lt;code&gt;org-brain-show-resources&lt;/code&gt; and/or &lt;code&gt;org-brain-show-text&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;If you have very long entry names, &lt;code&gt;org-brain-visualize&lt;/code&gt; may take a lot of
    horizontal space. You can cap the shown length of entry titles, by setting
    &lt;code&gt;org-brain-title-max-length&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Some users find it confusing having both &lt;i&gt;headline&lt;/i&gt; entries and &lt;i&gt;file&lt;/i&gt; entries (see below). It may be preferable to only use headline entries, by setting &lt;code&gt;org-brain-include-file-entries&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;. If doing this, you should probably also set &lt;code&gt;org-brain-file-entries-use-title&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-category-icons" class="anchor" aria-hidden="true" href="#category-icons"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Category icons&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;org-brain&lt;/code&gt; supports showing icons for your entries, depending on their &lt;a href="https://orgmode.org/manual/Categories.html" rel="nofollow"&gt;category&lt;/a&gt;. Use the variable &lt;code&gt;org-agenda-category-icon-alist&lt;/code&gt; to specify icons for categories.&lt;/p&gt;
&lt;p&gt;See example of using &lt;i&gt;all-the-icons&lt;/i&gt; for this below under &lt;i&gt;Other useful packages&lt;/i&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-customizing-the-look-of-entry-titles" class="anchor" aria-hidden="true" href="#customizing-the-look-of-entry-titles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing the look of entry titles&lt;/h2&gt;
&lt;p&gt;When visualizing you might want to see additional information about the entries. This can be done by customizing the following variables:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;org-brain-vis-title-prepend-functions&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;org-brain-vis-title-append-functions&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;org-brain-vis-current-title-prepend-functions&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;org-brain-vis-current-title-append-functions&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each of these variables should be a list of functions, which all takes an entry as the single parameter and returns a string. This string is the prepended or appended to the entry’s title, according to the name of the function. The variables with the name &lt;code&gt;current&lt;/code&gt; in them only applies the functions on the currently visualized entry (the focused one).&lt;/p&gt;
&lt;p&gt;Suitable functions to add to these lists might be:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;org-brain-entry-icon&lt;/code&gt; (included in &lt;code&gt;org-brain-vis-title-prepend-functions&lt;/code&gt; by default)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;org-brain-entry-todo-state&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;org-brain-entry-tags-string&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-headline-and-file-entries" class="anchor" aria-hidden="true" href="#headline-and-file-entries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Headline and file entries&lt;/h1&gt;
&lt;p&gt;There are two types of entries in &lt;code&gt;org-brain&lt;/code&gt;: &lt;i&gt;headline&lt;/i&gt; entries and &lt;i&gt;file&lt;/i&gt;
  entries. For the most part these are used the same way, and the main difference
  between them is how their content is stored inside your &lt;code&gt;org-brain&lt;/code&gt; directory.
  All .org-files inside the &lt;code&gt;org-brain-path&lt;/code&gt; are considered as &lt;i&gt;file&lt;/i&gt; entries (the
  content typically being the text before the first headline in the file) and all
  headlines &lt;i&gt;with an ID property&lt;/i&gt; inside these files are considered as &lt;i&gt;headline&lt;/i&gt;
  entries.&lt;/p&gt;
&lt;p&gt;By default subdirectories inside &lt;code&gt;org-brain-path&lt;/code&gt; are scanned recursively for
  files, so all subdirectories and their files are considered part of the brain.
  You can choose to only have the root of &lt;code&gt;org-brain-path&lt;/code&gt; be scanned for files, by
  setting &lt;code&gt;org-brain-scan-directories-recursively&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you have a headline entry, which you want to convert to a file entry, use &lt;code&gt;M-x
  org-brain-headline-to-file&lt;/code&gt;. Unfortunately there is currently no function to
  convert a file entry into a headline entry.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-limiting-org-brain-to-headline-entries" class="anchor" aria-hidden="true" href="#limiting-org-brain-to-headline-entries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Limiting &lt;code&gt;org-brain&lt;/code&gt; to headline entries&lt;/h2&gt;
&lt;p&gt;Most of &lt;code&gt;org-mode&lt;/code&gt; is tailored towards working with headlines, and because of this
  &lt;code&gt;org-brain&lt;/code&gt; has some limitations regarding what’s possible with &lt;i&gt;file entries&lt;/i&gt;. The
  concept of both headline and file entries is confusing to some users.&lt;/p&gt;
&lt;p&gt;If you prefer to only use headline entries, you can set the variable
  &lt;code&gt;org-brain-include-file-entries&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;. It then also makes sense to set
  &lt;code&gt;org-brain-file-entries-use-title&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You may choose to exclude the file part of entry names when choosing among
  entries. &lt;code&gt;org-brain&lt;/code&gt; passes two objects, the file and the headline, to the emacs
  &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Formatting-Strings.html" rel="nofollow"&gt;format&lt;/a&gt; function. By setting &lt;code&gt;org-brain-headline-entry-name-format-string&lt;/code&gt; to
  =”%2$s”=, &lt;code&gt;org-brain&lt;/code&gt; will only show the headline title.&lt;/p&gt;
&lt;p&gt;When trying to create entries which doesn’t exist, &lt;code&gt;org-brain&lt;/code&gt; will by default
  create a new file for these entries. For instance if you’ve set
  &lt;code&gt;org-brain-include-file-entries&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;, run &lt;code&gt;org-brain-visualize&lt;/code&gt; and type in
  &lt;code&gt;Cucumbers&lt;/code&gt; (an entry which doesn’t exist) &lt;code&gt;org-brain&lt;/code&gt; will create a file named
  &lt;code&gt;Cucumbers.org&lt;/code&gt; and insert a &lt;code&gt;Cucumbers&lt;/code&gt; headline there. You can change this
  behaviour by setting &lt;code&gt;org-brain-file-from-input-function&lt;/code&gt;, let’s say if you want
  to fallback to a default file. Here’s an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; org-brain-include-file-entries &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; org-brain-file-entries-use-title &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; org-brain-headline-entry-name-format-string &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%2$s&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

(&lt;span class="pl-k"&gt;setq&lt;/span&gt; my/default-org-brain-file &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;brain&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

(&lt;span class="pl-k"&gt;setq&lt;/span&gt; org-brain-file-from-input-function
      (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; (&lt;span class="pl-v"&gt;x&lt;/span&gt;) (&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;cdr&lt;/span&gt; x) (&lt;span class="pl-k"&gt;car&lt;/span&gt; x) my/default-org-brain-file)))&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h1&gt;
&lt;p&gt;If you find that &lt;code&gt;org-brain&lt;/code&gt; is missing entries, or list entries which doesn’t
  exist, try using &lt;code&gt;M-x org-brain-update-id-locations&lt;/code&gt;, which syncs the
  &lt;code&gt;org-brain&lt;/code&gt; entries with the &lt;code&gt;org-id&lt;/code&gt; caching system.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-org-brain-visualize" class="anchor" aria-hidden="true" href="#org-brain-visualize"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;org-brain-visualize&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The primary usage of &lt;code&gt;org-brain&lt;/code&gt; is through &lt;code&gt;M-x org-brain-visualize&lt;/code&gt; (which you
  might want to bind to a key). From there you can browse entries, add/remove
  relationships, open entries for editing etc. The following keybindings are
  available in &lt;code&gt;org-brain-visualize&lt;/code&gt;:&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Key&lt;/th&gt;&lt;th&gt;Command&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;m&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-visualize-mind-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Toggle between normal and mind-map visualization.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;j or TAB&lt;/td&gt;&lt;td&gt;&lt;code&gt;forward-button&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Goto next link&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;k or S-TAB&lt;/td&gt;&lt;td&gt;&lt;code&gt;backward-button&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Goto previous link&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;b&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-visualize-back&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Like the back button in a web browser.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;h or *&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-add-child-headline&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Add a new child &lt;i&gt;headline&lt;/i&gt; to entry&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;c&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-add-child&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Add an existing entry, or a new &lt;i&gt;file&lt;/i&gt;, as a child&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-remove-child&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Remove one the entry’s child relations&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;e&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-annotate-edge&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Annotate the connection between the visualized entry and the entry link at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;p&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-add-parent&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Add an existing entry, or a new &lt;i&gt;file&lt;/i&gt;, as a parent&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;P&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-remove-parent&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Remove one of the entry’s parent relations&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;f&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-add-friendship&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Add an existing entry, or a new &lt;i&gt;file&lt;/i&gt;, as a friend&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;F&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-remove-friendship&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Remove one of the entry’s friend relations&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;n&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-pin&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Toggle if the entry is pinned or not&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;s&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-select-dwim&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Select an entry for batch processing.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;S&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-select-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Prefix key to do batch processing with selected entries.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-set-title&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Change the title of the entry.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;T&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-set-tags&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Change the tags of the entry.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;d&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-delete-entry&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Choose an entry to delete.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;l&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-visualize-add-resource&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Add a new resource link in entry&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;r&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-open-resource&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Choose and open a resource from the entry.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-y&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-visualize-paste-resource&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Add a new resource link from clipboard&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;a&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-visualize-attach&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Run &lt;code&gt;org-attach&lt;/code&gt; on entry (headline entries only)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;A&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-archive&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Archive the entry (headline entries only)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;o&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-goto-current&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Open current entry for editing&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;O&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-goto&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Choose and edit one of your &lt;code&gt;org-brain&lt;/code&gt; entries&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;v&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-visualize&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Choose and visualize a different entry&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;V&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-visualize-follow&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Similar to &lt;code&gt;org-agenda-follow-mode&lt;/code&gt;; view visualized entry in another window.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;w&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-visualize-random&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Visualize one of your entries at random.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;W&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-visualize-wander&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Visualize at random, in a set interval. &lt;code&gt;W&lt;/code&gt; again to cancel.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-x C-v&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-toggle-inline-images&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Display org-mode images in the entry text.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;M&lt;/td&gt;&lt;td&gt;Move prefix&lt;/td&gt;&lt;td&gt;Move (refile) the current entry.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;M r&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-refile&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Move current entry to another entry (change local parent).&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;M p&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-change-local-parent&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Choose among the entry’s parents and make another of them the local parent.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;You may use &lt;code&gt;org-store-link&lt;/code&gt; inside of &lt;code&gt;org-brain-visualize&lt;/code&gt; in order to store a
  link to the currently visualized &lt;code&gt;org-brain&lt;/code&gt; entry.&lt;/p&gt;
&lt;p&gt;If the &lt;i&gt;universal argument&lt;/i&gt; &lt;code&gt;C-u&lt;/code&gt; is used when running &lt;code&gt;org-brain-visualize-random&lt;/code&gt; or
  &lt;code&gt;org-brain-visualize-wander&lt;/code&gt;, the randomized targets are restricted to descendants
  (children, grandchildren, grand-grandchildren etc) of the currently visualized
  entry. Use for instance &lt;code&gt;C-u W&lt;/code&gt; to wander among the descendants.&lt;/p&gt;
&lt;p&gt;The &lt;i&gt;universal argument&lt;/i&gt; &lt;code&gt;C-u&lt;/code&gt; can also be used with &lt;code&gt;org-brain-open-resource&lt;/code&gt;. This
  lets you choose not only resource from the visualized entry, but also from
  descendants (children, grand-children, etc) of that entry.&lt;/p&gt;
&lt;p&gt;If the &lt;i&gt;universal argument&lt;/i&gt; &lt;code&gt;C-u&lt;/code&gt; is used when calling &lt;code&gt;org-brain-annotate-edge&lt;/code&gt; then
  the annotation will be “one-way”. The default behaviour is otherwise to annotate
  the connection in both directions.&lt;/p&gt;
&lt;p&gt;When using the mind map visualization (toggle by pressing &lt;code&gt;m&lt;/code&gt;), you can use the
  following keybindings in order to show or hide successive levels of hierarchy
  relative to the current entry.&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Key&lt;/th&gt;&lt;th&gt;Command&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;+&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-show-descendant-level&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Show one more level of entries to the right (children of children, etc.)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-hide-descendant-level&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Hide rightmost level of descendant entries&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;z&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-show-ancestor-level&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Show one more level of entries to the left (parents of parents, etc.)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Z&lt;/td&gt;&lt;td&gt;&lt;code&gt;org-brain-hide-ancestor-level&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Hide leftmost level of ancestor entries&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;If you want to select several entries and then remove/add them as
  children/parents/friends you can use the &lt;code&gt;s&lt;/code&gt; key (&lt;code&gt;org-brain-select-dwim&lt;/code&gt;) to select
  an entry. If the point is over a button link to an entry, that entry will be
  selected, otherwise it will select the currently visualized entry. If the entry
  is already selected, it will be unselected instead.&lt;/p&gt;
&lt;p&gt;Once you have selected all the entries you wish to use, you can use the &lt;code&gt;S&lt;/code&gt; prefix
  key to do batch processing on the selected entries. The keybindings in this
  prefix keymap is identical to those in &lt;code&gt;org-brain-visualize&lt;/code&gt;. You could for
  instance use &lt;code&gt;S c&lt;/code&gt; to add all selected entries as children to the visualized
  entry, or &lt;code&gt;S P&lt;/code&gt; to remove the parent relationship of the selected entries. When
  you’re done and wish to clear the selection use &lt;code&gt;org-brain-clear-selected&lt;/code&gt;, which
  is bound to &lt;code&gt;S s&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-editing-from-org-mode" class="anchor" aria-hidden="true" href="#editing-from-org-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Editing from &lt;code&gt;org-mode&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;You can edit &lt;code&gt;org-brain&lt;/code&gt; entries directly from &lt;code&gt;org-mode&lt;/code&gt;. You can use the
  default &lt;code&gt;org-mode&lt;/code&gt; outline structure to define parent/children relationships,
  but keep in mind that only entries with an &lt;code&gt;ID&lt;/code&gt; property will be considered as
  entries to &lt;code&gt;org-brain&lt;/code&gt;; use &lt;code&gt;M-x org-id-get-create&lt;/code&gt; to create an &lt;code&gt;ID&lt;/code&gt;
  property to the current &lt;code&gt;org-mode&lt;/code&gt; headline. Another alternative is to use &lt;code&gt;M-x
  org-brain-refile&lt;/code&gt; which will create the ids for you.&lt;/p&gt;
&lt;p&gt;Most of the commands available in &lt;code&gt;org-brain-visualize&lt;/code&gt; can also be used in
  &lt;code&gt;org-mode&lt;/code&gt; directly, in which case they will operate on the “entry at point”. In
  other words you can use &lt;code&gt;M-x org-brain-add-child&lt;/code&gt; directly from &lt;code&gt;org-mode&lt;/code&gt; in
  order to add a child to the &lt;code&gt;org-brain&lt;/code&gt; entry at point. You may also want to use
  the commands &lt;code&gt;org-brain-goto-&amp;lt;relationsship&amp;gt;&lt;/code&gt; to navigate between entries.&lt;/p&gt;
&lt;p&gt;You may want to create a link to an &lt;code&gt;org-brain&lt;/code&gt; entry in an &lt;code&gt;org-mode&lt;/code&gt; file (not
  necessarily an &lt;code&gt;org-brain&lt;/code&gt; file itself). &lt;code&gt;org-brain&lt;/code&gt; provides several link types
  for this purpose. You can use &lt;code&gt;org-insert-link&lt;/code&gt; (bound to &lt;code&gt;C-c C-l&lt;/code&gt; in
  &lt;code&gt;org-mode&lt;/code&gt; by default) to insert one of these links. They all have in common
  that they, when clicked, will open the &lt;code&gt;org-brain&lt;/code&gt; entry for editing. When
  inserting a link like this, &lt;code&gt;org-brain&lt;/code&gt; will run completion upon all your
  entries.&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;&lt;code&gt;brain:&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;The default kind of link. Just let’s you visit another &lt;code&gt;org-brain&lt;/code&gt;
    entry when clicked. If the variable &lt;code&gt;org-brain-backlink&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt; a brain-link will
    also be created as a resource in the link target, linking back to where the
    link was created. If &lt;code&gt;org-brain-backlink&lt;/code&gt; is set to a string, that string will
    be added as a prefix to the title of the backlink. &lt;b&gt;Example:&lt;/b&gt; You set
    &lt;code&gt;org-brain-backlink&lt;/code&gt; to =”&amp;lt;– “= and create a &lt;code&gt;brain:&lt;/code&gt; link in &lt;code&gt;Rabbits&lt;/code&gt; linking to
    &lt;code&gt;Carrots&lt;/code&gt;. Now a resource with the description &lt;code&gt;&amp;lt;-- Rabbits&lt;/code&gt; will be created in
    &lt;code&gt;Carrots&lt;/code&gt;.&lt;/dd&gt;
  &lt;dt&gt;&lt;code&gt;brain-child:&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;When inserted using &lt;code&gt;org-insert-link&lt;/code&gt; this will make
    the linked entry a child to the current &lt;code&gt;org-brain&lt;/code&gt; entry,
    upon completion. Keep in mind that this doesn’t work if you
    type the link manually; only by completion through
    &lt;code&gt;org-insert-link&lt;/code&gt;.&lt;/dd&gt;
  &lt;dt&gt;&lt;code&gt;brain-parent:&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;Like &lt;code&gt;brain-child:&lt;/code&gt; but makes the linked entry a parent of
    the current entry.&lt;/dd&gt;
  &lt;dt&gt;&lt;code&gt;brain-friend:&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;Like &lt;code&gt;brain-child:&lt;/code&gt; but adds the linked entry as a friend.&lt;/dd&gt;
  &lt;dt&gt;&lt;code&gt;brainswitch&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;If you have multiple brains you may want a link which switches to a specific brain and one of its entries. The &lt;code&gt;brainswitch&lt;/code&gt; link allows for this.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;The names of the relationship inserting links (&lt;code&gt;brain-child&lt;/code&gt;, &lt;code&gt;brain-parent&lt;/code&gt; and &lt;code&gt;brain-friend&lt;/code&gt;) can be customized with the variables &lt;code&gt;org-brain-child-link-name&lt;/code&gt;, &lt;code&gt;org-brain-parent-link-name&lt;/code&gt;, and &lt;code&gt;org-brain-friend-link-name&lt;/code&gt;. This customization should be done before loading &lt;code&gt;org-brain&lt;/code&gt;. If you’re using &lt;code&gt;use-package&lt;/code&gt;, put the customization in the &lt;code&gt;:init&lt;/code&gt; block.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-other-commands" class="anchor" aria-hidden="true" href="#other-commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other commands&lt;/h2&gt;
&lt;p&gt;If you’re browsing a file and want to add the file – or the current line in the file – as a resource to an entry, you can use &lt;code&gt;M-x org-brain-add-file-as-resource&lt;/code&gt; or &lt;code&gt;M-x org-brain-add-file-line-as-resource&lt;/code&gt;. If any of these are run with &lt;i&gt;universal argument&lt;/i&gt; &lt;code&gt;C-u&lt;/code&gt; then add the resources to current/last visualized entry.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-general-information" class="anchor" aria-hidden="true" href="#general-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;General information&lt;/h2&gt;
&lt;p&gt;If you try to add a child/parent/friend to an entry which doesn’t exist, that
  entry will be created. The name of a new entry can be written like this:
  &lt;code&gt;file::headline&lt;/code&gt;. The &lt;code&gt;headline&lt;/code&gt; will be created as a level one headline in
  &lt;code&gt;file&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When adding children, parents, or friends, multiple entries can be added at once
  by separating their titles with &lt;code&gt;org-brain-entry-separator&lt;/code&gt; (which is &lt;code&gt;;&lt;/code&gt; by
  default). For instance &lt;code&gt;M-x org-brain-add-parent RET music;artists&lt;/code&gt; would add
  both &lt;code&gt;music&lt;/code&gt; and &lt;code&gt;artists&lt;/code&gt; as parents.&lt;/p&gt;
&lt;p&gt;Another available command is &lt;code&gt;M-x org-brain-agenda&lt;/code&gt;, which can be used to run
  &lt;code&gt;org-agenda&lt;/code&gt; on your &lt;code&gt;org-brain&lt;/code&gt; files.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-slashes-in-file-entry-titles" class="anchor" aria-hidden="true" href="#slashes-in-file-entry-titles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Slashes in file entry titles&lt;/h2&gt;
&lt;p&gt;When giving a file entry a title, the title can not contain slashes (&lt;code&gt;/&lt;/code&gt;) if
  &lt;code&gt;org-brain-file-entries-use-title&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-renaming-files-in-org-brain" class="anchor" aria-hidden="true" href="#renaming-files-in-org-brain"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Renaming files in &lt;code&gt;org-brain&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Headline entries use &lt;code&gt;org-id&lt;/code&gt; to identify themselves, so the headlines can be
  manually renamed without worries. File entries, on the other hand, uses the
  filename as the identifier. This will cause problems if you try to manually
  rename files inside of &lt;code&gt;org-brain&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In order to rename a file, use &lt;code&gt;M-x org-brain-rename-file&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-archiving-entries" class="anchor" aria-hidden="true" href="#archiving-entries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Archiving entries&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;org-archive&lt;/code&gt; has a problem in &lt;code&gt;org-brain&lt;/code&gt;: relationships are maintained, even
  though the entry should really be removed from the brain. Because of this,
  please use &lt;code&gt;org-brain-archive&lt;/code&gt; instead. This command removes relationships to
  the entry in the brain, before archiving it. The command also inserts handy
  links to the archived entry’s relationships.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-special-tags" class="anchor" aria-hidden="true" href="#special-tags"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special tags&lt;/h2&gt;
&lt;p&gt;You might have a headline which you do not really want as an entry in
  &lt;code&gt;org-brain&lt;/code&gt;. The most basic way to exclude such a headline is simply to not add
  an &lt;code&gt;ID&lt;/code&gt; property to it. However, &lt;code&gt;org-brain&lt;/code&gt; also provide two tags, which you
  can use to tag the headline:&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;&lt;code&gt;:nobrain:&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;This tag excludes the headline, and its subheadings, from your
    &lt;code&gt;org-brain&lt;/code&gt; entries. You can change the tag name by modifying
    &lt;code&gt;org-brain-exclude-tree-tag&lt;/code&gt;.&lt;/dd&gt;
  &lt;dt&gt;&lt;code&gt;:childless:&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;This tag does not exclude the headline, but it excludes the
    subheadings. You can change the tag name by modifying
    &lt;code&gt;org-brain-exclude-children-tag&lt;/code&gt;. Works on file entries.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;The following tags modifies the kind of information that is shown when an entry
  is visualized:&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;&lt;code&gt;:notext:&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;Do not show the entry’s text in &lt;code&gt;org-brain-visualize&lt;/code&gt;. You can
    change the tag name by modifying &lt;code&gt;org-brain-exclude-text-tag&lt;/code&gt;.&lt;/dd&gt;
  &lt;dt&gt;&lt;code&gt;:resourceless:&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;Do not show the entry’s resources in
    &lt;code&gt;org-brain-visualize&lt;/code&gt;. You can change the tag name by modifying
    &lt;code&gt;org-brain-exclude-resources-tag&lt;/code&gt;.&lt;/dd&gt;
  &lt;dt&gt;&lt;code&gt;:showchildren:&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;By default local child entries aren’t shown as text. By
    setting this tag the entry get the entire subtree as text. You can change
    the tag name by modifying &lt;code&gt;org-brain-show-children-tag&lt;/code&gt;. Works on file
    entries.&lt;/dd&gt;
  &lt;dt&gt;&lt;code&gt;:nosiblings:&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;You may have an entry with lots of children, and when you visualize one of these children you might not want to see the siblings from this parent. A good example would be if you have an &lt;code&gt;index&lt;/code&gt; entry or similar. By tagging the parent with &lt;code&gt;nosiblings&lt;/code&gt; the parent’s children will not show siblings from that parent. You can change the tag name by modifying &lt;code&gt;org-brain-exclude-siblings-tag&lt;/code&gt;.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;The following tags modify the way how information is shown when an
  entry is visualized.&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;&lt;code&gt;:ownline:&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;Make each child of the tagged entry appear on its own
    line when the tagged entry is visualized. This
    only affects the tagged entry. It works akin to
    temporarily setting &lt;code&gt;org-brain-child-fill-column-sexp&lt;/code&gt;
    to &lt;code&gt;0&lt;/code&gt;.&lt;/dd&gt;
  &lt;dt&gt;&lt;code&gt;:nosort:&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;Display each child of the tagged node in the order the
    children are listed in the file, rather than in the
    sorted order determined by
    &lt;code&gt;org-brain-visualize-sort-function&lt;/code&gt;. This affects the
    order of the node’s children in both the child list
    (when the tagged node is being visited) and in the
    sibling list (when one of the tagged node’s children
    is being visited).&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2&gt;&lt;a id="user-content-having-multiple-brains" class="anchor" aria-hidden="true" href="#having-multiple-brains"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Having multiple brains&lt;/h2&gt;
&lt;p&gt;You can have multiple brains simply by having more than one brain folder. In this way, each folder becomes a separate brain. You can switch between these using &lt;code&gt;M-x org-brain-switch-brain&lt;/code&gt;. You can also use &lt;code&gt;brainswitch:&lt;/code&gt; links in &lt;code&gt;org-mode&lt;/code&gt; to switch brains.&lt;/p&gt;
&lt;p&gt;If you run &lt;code&gt;org-brain-visualize&lt;/code&gt; from inside an org-file in &lt;i&gt;the root&lt;/i&gt; of an org-brain directory, &lt;code&gt;org-brain&lt;/code&gt; will automatically switch to this brain.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-take-note" class="anchor" aria-hidden="true" href="#take-note"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Take note!&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;org-brain&lt;/code&gt; creates and uses several headline properties in the &lt;code&gt;PROPERTIES&lt;/code&gt;
  drawer of &lt;code&gt;org-mode&lt;/code&gt; headlines:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;BRAIN_PARENTS&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;BRAIN_CHILDREN&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;BRAIN_FRIENDS&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;BRAIN_EDGE_$IDENTIFIER&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;ID&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These properties are also mirrored as file keywords at the top of file entries,
  for instance &lt;code&gt;#+BRAIN_CHILDREN: 00c0f06c-9bd4-4c31-aed0-15bb3361d9a2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;These properties/keywords are &lt;i&gt;not meant to be manipulated directly&lt;/i&gt;! If you
  want to remove these properties, use the corresponding command instead
  (&lt;code&gt;org-brain-remove-child&lt;/code&gt; or similar).&lt;/p&gt;
&lt;p&gt;You might also see that &lt;code&gt;org-brain&lt;/code&gt; inserts a &lt;code&gt;RESOURCES&lt;/code&gt; drawer. It is okay to
  modify this drawer manually.&lt;/p&gt;
&lt;p&gt;The names of the parents/children/friends properties, the prefix for edge
  properties and the &lt;code&gt;RESOURCES&lt;/code&gt; drawer can customized by setting the variables
  &lt;code&gt;org-brain-parents-property-name&lt;/code&gt;, &lt;code&gt;org-brain-children-property-name&lt;/code&gt;,
  &lt;code&gt;org-brain-friends-property-name&lt;/code&gt;, &lt;code&gt;org-brain-edge-property-prefix-name&lt;/code&gt; and
  &lt;code&gt;org-brain-resources-drawer-name&lt;/code&gt;, respectively. Of course, after doing any
  customization, the property/drawer names of existing brain files have to be
  adjusted manually.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-org-brain-is-slow" class="anchor" aria-hidden="true" href="#org-brain-is-slow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;org-brain&lt;/code&gt; is slow!&lt;/h2&gt;
&lt;p&gt;If you feel that &lt;code&gt;org-brain&lt;/code&gt; is slow while indexing your entries (for instance when running &lt;code&gt;M-x org-brain-visualize&lt;/code&gt;) you can customize &lt;code&gt;org-brain-file-entries-use-title&lt;/code&gt;, and set it to &lt;code&gt;nil&lt;/code&gt;. This will display file names when indexing, instead of the file entry’s title, which is faster.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-export-to-other-formats" class="anchor" aria-hidden="true" href="#export-to-other-formats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Export to other formats&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;org-brain&lt;/code&gt; has no built-in functionality for exporting to other formats. I’ve
  started experimenting with another package named &lt;a href="https://github.com/Kungsgeten/org-brain-export"&gt;org-brain-export&lt;/a&gt; which might be
  merged into &lt;code&gt;org-brain&lt;/code&gt; in the future. &lt;code&gt;org-brain-export&lt;/code&gt; is in VERY early stages of
  development.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-helm-and-ivy" class="anchor" aria-hidden="true" href="#helm-and-ivy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Helm and Ivy&lt;/h1&gt;
&lt;p&gt;If you use &lt;a href="https://github.com/emacs-helm/helm"&gt;Helm&lt;/a&gt; or &lt;a href="https://oremacs.com/swiper/" rel="nofollow"&gt;Ivy&lt;/a&gt; you can use the commands &lt;code&gt;helm-brain&lt;/code&gt; or &lt;code&gt;counsel-brain&lt;/code&gt; respectively. These allow for visualizing entries, and adding parents/children/friends to the entry at point. They also allow selecting multiple entries.&lt;/p&gt;
&lt;p&gt;These commands do not have any keybindings by default.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-backwards-compatibility-breaking-changes" class="anchor" aria-hidden="true" href="#backwards-compatibility-breaking-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backwards compatibility breaking changes&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-07" class="anchor" aria-hidden="true" href="#07"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;0.7&lt;/h2&gt;
&lt;p&gt;As of version 0.7 &lt;i&gt;entry descriptions&lt;/i&gt; are deprecated. They made visualization slow, and it was quite a hassle to actually write them. The “help echo” text is now used for edge annotations instead.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-04" class="anchor" aria-hidden="true" href="#04"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;0.4&lt;/h2&gt;
&lt;p&gt;&lt;i&gt;This is only relevant if you’ve been using org-brain before version 0.4&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;As of version 0.4 (June 2017) &lt;code&gt;org-brain&lt;/code&gt; has been rewritten, in order to
  increase performance and add more options. Because of this, older setups are
  considered obsolete. Prior to 0.4 only files were considered entries, but now
  also headlines with an &lt;code&gt;ID&lt;/code&gt; property are included as entries. Prior to 0.4
  &lt;code&gt;org-brain&lt;/code&gt; was using the &lt;code&gt;brain:&lt;/code&gt; link and &lt;code&gt;#+BRAIN_PINNED:&lt;/code&gt; file keyword to
  connect files, which was slow due to the need of searching all files for links.
  In version 0.4 &lt;code&gt;org-brain&lt;/code&gt; uses a combination of headline properties, file
  keywords, &lt;code&gt;org-id&lt;/code&gt;, and a data file (&lt;code&gt;org-brain-data-file&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;No data in old configurations should be lost, but you’ll have to update the
  connections between entries. This can be done by using &lt;code&gt;M-x
  org-brain-create-relationships-from-links&lt;/code&gt;, but please backup your &lt;code&gt;org-brain&lt;/code&gt;
  directory first.&lt;/p&gt;
&lt;p&gt;It is still possible to add children to an entry by using the &lt;code&gt;brain-child:&lt;/code&gt; link, but
  only if the link is inserted with &lt;code&gt;org-insert-link&lt;/code&gt; (bound to &lt;code&gt;C-c C-l&lt;/code&gt; in
  &lt;code&gt;org-mode&lt;/code&gt; by default). Linking to specific headlines in a file, via
  &lt;code&gt;brain:filename::*Headline&lt;/code&gt; is &lt;b&gt;deprecated&lt;/b&gt; and will no longer work, instead you
  can convert the headline to an entry and link directly to that.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-other-useful-packages" class="anchor" aria-hidden="true" href="#other-useful-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other useful packages&lt;/h1&gt;
&lt;p&gt;There’s some missing functionality in &lt;code&gt;org-brain&lt;/code&gt;, which you may find useful.
  However there are other packages which might improve your &lt;code&gt;org-brain&lt;/code&gt;
  experience. Below are some suggestions (feel free to create an issue or send a
  pull request if you have more examples), all of them should be available on
  MELPA.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-org-cliplink" class="anchor" aria-hidden="true" href="#org-cliplink"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/rexim/org-cliplink"&gt;org-cliplink&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;A simple command that takes a URL from the clipboard and inserts an org-mode link with a title of a page found by the URL into the current buffer.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here’s a command which uses &lt;code&gt;org-cliplink&lt;/code&gt; to add a link from the clipboard as an &lt;code&gt;org-brain&lt;/code&gt; resource. It guesses the description from the URL title. Here I’ve bound it to &lt;code&gt;L&lt;/code&gt; in &lt;code&gt;org-brain-visualize&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;org-brain-cliplink-resource&lt;/span&gt; ()
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Add a URL from the clipboard as an org-brain resource.&lt;/span&gt;
&lt;span class="pl-s"&gt;Suggest the URL title as a description for resource.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  (&lt;span class="pl-k"&gt;interactive&lt;/span&gt;)
  (&lt;span class="pl-k"&gt;let&lt;/span&gt; ((url (org-cliplink-clipboard-content)))
    (org-brain-add-resource
     url
     (org-cliplink-retrieve-title-synchronously url)
     &lt;span class="pl-c1"&gt;t&lt;/span&gt;)))

(&lt;span class="pl-c1"&gt;define-key&lt;/span&gt; org-brain-visualize-mode-map (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;L&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'org-brain-cliplink-resource&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-link-hint" class="anchor" aria-hidden="true" href="#link-hint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/noctuid/link-hint.el"&gt;link-hint&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;link-hint.el is inspired by the link hinting functionality in vim-like browsers
    and browser plugins such as pentadactyl. It provides commands for using avy to
    open or copy “links.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After installing &lt;code&gt;link-hint&lt;/code&gt; you could bind &lt;code&gt;link-hint-open-link&lt;/code&gt; to a key, and
  use it in &lt;code&gt;org-brain-visualize-mode&lt;/code&gt;. If you only want to use &lt;code&gt;link-hint&lt;/code&gt; in
  &lt;code&gt;org-brain-visualize-mode&lt;/code&gt;, you could add the following to your init-file:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;define-key&lt;/span&gt; org-brain-visualize-mode-map (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-l&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'link-hint-open-link&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-ascii-art-to-unicode" class="anchor" aria-hidden="true" href="#ascii-art-to-unicode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="http://www.gnuvola.org/software/aa2u/" rel="nofollow"&gt;ascii-art-to-unicode&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Converts simple ASCII art line drawings in the region of the current buffer to
    Unicode.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;ascii-art-to-unicode&lt;/code&gt; is useful if you want &lt;code&gt;org-brain-visualize-mode&lt;/code&gt; to look
  a bit nicer. After installing, add the following to your init-file:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defface&lt;/span&gt; &lt;span class="pl-en"&gt;aa2u-face&lt;/span&gt; '((&lt;span class="pl-c1"&gt;t&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;))
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Face for aa2u box drawing characters&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;advice-add&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'aa2u-1c&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:filter-return&lt;/span&gt;
            (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; (&lt;span class="pl-v"&gt;str&lt;/span&gt;) (&lt;span class="pl-c1"&gt;propertize&lt;/span&gt; str &lt;span class="pl-c1"&gt;'face&lt;/span&gt; &lt;span class="pl-c1"&gt;'aa2u-face&lt;/span&gt;)))
(&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;aa2u-org-brain-buffer&lt;/span&gt; ()
  (&lt;span class="pl-k"&gt;let&lt;/span&gt; ((&lt;span class="pl-c1"&gt;inhibit-read-only&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;))
    (&lt;span class="pl-c1"&gt;make-local-variable&lt;/span&gt; &lt;span class="pl-c1"&gt;'face-remapping-alist&lt;/span&gt;)
    (&lt;span class="pl-c1"&gt;add-to-list&lt;/span&gt; &lt;span class="pl-c1"&gt;'face-remapping-alist&lt;/span&gt;
                 '(aa2u-face &lt;span class="pl-k"&gt;.&lt;/span&gt; org-brain-wires))
    (&lt;span class="pl-c1"&gt;ignore-errors&lt;/span&gt; (&lt;span class="pl-c1"&gt;aa2u&lt;/span&gt; (&lt;span class="pl-c1"&gt;point-min&lt;/span&gt;) (&lt;span class="pl-c1"&gt;point-max&lt;/span&gt;)))))
(&lt;span class="pl-c1"&gt;with-eval-after-load&lt;/span&gt; &lt;span class="pl-c1"&gt;'org-brain&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'org-brain-after-visualize-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'aa2u-org-brain-buffer&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-all-the-icons" class="anchor" aria-hidden="true" href="#all-the-icons"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/domtronn/all-the-icons.el"&gt;all-the-icons&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;A utility package to collect various Icon Fonts and propertize them within Emacs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After installing &lt;code&gt;all-the-icons&lt;/code&gt; you could decorate the resources in &lt;code&gt;org-brain&lt;/code&gt;, by using
  &lt;code&gt;org-brain-after-resource-button-functions&lt;/code&gt;. Here’s a small example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;org-brain-insert-resource-icon&lt;/span&gt; (&lt;span class="pl-v"&gt;link&lt;/span&gt;)
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Insert an icon, based on content of org-mode LINK.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;insert&lt;/span&gt; (&lt;span class="pl-c1"&gt;format&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt; &lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;
                  (&lt;span class="pl-k"&gt;cond&lt;/span&gt; ((&lt;span class="pl-c1"&gt;string-prefix-p&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;brain:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;link&lt;/span&gt;)
                         (all-the-icons-fileicon &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;brain&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
                        ((&lt;span class="pl-c1"&gt;string-prefix-p&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;info:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;link&lt;/span&gt;)
                         (all-the-icons-octicon &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;info&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
                        ((&lt;span class="pl-c1"&gt;string-prefix-p&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;help:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;link&lt;/span&gt;)
                         (all-the-icons-material &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;help&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
                        ((&lt;span class="pl-c1"&gt;string-prefix-p&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;link&lt;/span&gt;)
                         (all-the-icons-icon-for-url &lt;span class="pl-c1"&gt;link&lt;/span&gt;))
                        (&lt;span class="pl-c1"&gt;t&lt;/span&gt;
                         (all-the-icons-icon-for-file &lt;span class="pl-c1"&gt;link&lt;/span&gt;))))))

  (&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'org-brain-after-resource-button-functions&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'org-brain-insert-resource-icon&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You could also use &lt;code&gt;all-the-icons&lt;/code&gt; to add icons to entry &lt;a href="https://orgmode.org/manual/Categories.html" rel="nofollow"&gt;categories&lt;/a&gt;. For instance if you have two categories named &lt;i&gt;computers&lt;/i&gt; and &lt;i&gt;books&lt;/i&gt; which you want icons for:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; org-agenda-category-icon-alist
      `((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;computers&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ,(&lt;span class="pl-k"&gt;list&lt;/span&gt; (all-the-icons-material &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;computer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;:ascent&lt;/span&gt; center)
        (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;books&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ,(&lt;span class="pl-k"&gt;list&lt;/span&gt; (all-the-icons-faicon &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;:ascent&lt;/span&gt; center)))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-deft" class="anchor" aria-hidden="true" href="#deft"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="http://jblevins.org/projects/deft/" rel="nofollow"&gt;deft&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;An Emacs mode for quickly browsing, filtering, and editing directories of plain
    text notes, inspired by Notational Velocity.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After installing &lt;code&gt;deft&lt;/code&gt;, you can add the function below to your init-file.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;org-brain-deft&lt;/span&gt; ()
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Use &lt;span class="pl-smi"&gt;`deft'&lt;/span&gt; for files in &lt;span class="pl-smi"&gt;`org-brain-path'&lt;/span&gt;.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  (&lt;span class="pl-k"&gt;interactive&lt;/span&gt;)
  (&lt;span class="pl-k"&gt;let&lt;/span&gt; ((deft-directory org-brain-path)
        (deft-recursive &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
        (deft-extensions '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))
    (deft)))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-helm-org-rifle" class="anchor" aria-hidden="true" href="#helm-org-rifle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/alphapapa/helm-org-rifle"&gt;helm-org-rifle&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;It searches both headings and contents of entries in Org buffers, and it
    displays entries that match all search terms, whether the terms appear in the
    heading, the contents, or both.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After installing &lt;code&gt;helm-org-rifle&lt;/code&gt;, you can add the function below to your
  init-file.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;helm-org-rifle-brain&lt;/span&gt; ()
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Rifle files in &lt;span class="pl-smi"&gt;`org-brain-path'&lt;/span&gt;.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  (&lt;span class="pl-k"&gt;interactive&lt;/span&gt;)
  (&lt;span class="pl-k"&gt;let&lt;/span&gt; ((helm-org-rifle-close-unopened-file-buffers &lt;span class="pl-c1"&gt;nil&lt;/span&gt;))
    (helm-org-rifle-directories (&lt;span class="pl-k"&gt;list&lt;/span&gt; org-brain-path))))

(&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;helm-org-rifle-open-in-brain&lt;/span&gt; (&lt;span class="pl-v"&gt;candidate&lt;/span&gt;)
  (-let (((buffer &lt;span class="pl-k"&gt;.&lt;/span&gt; pos) candidate))
    (&lt;span class="pl-c1"&gt;with-current-buffer&lt;/span&gt; buffer
      (&lt;span class="pl-c1"&gt;goto-char&lt;/span&gt; pos)
      (org-brain-visualize-entry-at-pt))))

(&lt;span class="pl-c1"&gt;add-to-list&lt;/span&gt; &lt;span class="pl-c1"&gt;'helm-org-rifle-actions&lt;/span&gt;
             (&lt;span class="pl-k"&gt;cons&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Show entry in org-brain&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;'helm-org-rifle-open-in-brain&lt;/span&gt;)
             &lt;span class="pl-c1"&gt;t&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-org-noter" class="anchor" aria-hidden="true" href="#org-noter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/weirdNox/org-noter"&gt;org-noter&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Org-noter’s purpose is to let you create notes that are kept in sync when you scroll through the [PDF etc] document&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Thanks to &lt;a href="https://github.com/rosetree"&gt;rosetree&lt;/a&gt; for providing this tip! After installing &lt;code&gt;org-noter&lt;/code&gt;, add the following to your init-file:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'org-noter-insert-heading-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'org-id-get-create&lt;/span&gt;&lt;/span&gt;)
(&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;org-brain-open-org-noter&lt;/span&gt; (&lt;span class="pl-v"&gt;entry&lt;/span&gt;)
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Open &lt;span class="pl-smi"&gt;`org-noter'&lt;/span&gt; on the ENTRY.&lt;/span&gt;
&lt;span class="pl-s"&gt;If run interactively, get ENTRY from context.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    (&lt;span class="pl-k"&gt;interactive&lt;/span&gt; (&lt;span class="pl-k"&gt;list&lt;/span&gt; (org-brain-entry-at-pt)))
    (&lt;span class="pl-c1"&gt;org-with-point-at&lt;/span&gt; (org-brain-entry-marker entry)
      (org-noter)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;org-brain-open-org-noter&lt;/code&gt; will run &lt;code&gt;org-noter&lt;/code&gt; on the current entry. This lets you save your PDF notes in &lt;code&gt;org-brain&lt;/code&gt;, so you can link to them from other entries etc. It can be a good idea to add this command to &lt;code&gt;org-brain-visualize&lt;/code&gt;, like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;define-key&lt;/span&gt; org-brain-visualize-mode-map (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\C&lt;/span&gt;-c n&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'org-brain-open-org-noter&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-org-board" class="anchor" aria-hidden="true" href="#org-board"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/scallywag/org-board"&gt;org-board&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;org-board is a bookmarking and web archival system for Emacs Org mode, building
    on ideas from Pinboard. It archives your bookmarks so that you can access them
    even when you’re not online, or when the site hosting them goes down.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;&lt;a id="user-content-similar-packages" class="anchor" aria-hidden="true" href="#similar-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Similar packages&lt;/h1&gt;
&lt;p&gt;The Emacs Wiki has an article about &lt;a href="https://www.emacswiki.org/emacs/WikiModes" rel="nofollow"&gt;wiki modes in Emacs&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-org-wiki" class="anchor" aria-hidden="true" href="#org-wiki"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/caiorss/org-wiki"&gt;org-wiki&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Org-wiki is a org-mode extension that provides tools to manage and build
    personal wiki or desktop wiki where each wiki page is a org-mode file.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-emacs-freex" class="anchor" aria-hidden="true" href="#emacs-freex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/gregdetre/emacs-freex"&gt;emacs-freex&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Emacs freex is a Pymacs/SQLite/Elisp system that implements a transcluding wiki.
  Emacs-freex is not compatible at this time with org-mode. Despite this,
  emacs-freex is an impressive system for maintaining a wiki. Further, because the
  data is stored both in files on disk and in an SQLite database, it opens the
  possibility for implementing something like &lt;code&gt;org-brain&lt;/code&gt;’s visualize interface
  (ala TheBrain’s “plex”) by talking with SQLite, via Pymacs, to return the
  relationships between nodes. This would consistute a lot of work to implement
  but would be very impressive. If someone was to also add LaTeX rendering inside
  &lt;code&gt;emacs-freex&lt;/code&gt; &lt;code&gt;nuggets&lt;/code&gt; also, those two additional features would make
  &lt;code&gt;emacs-freex&lt;/code&gt; more compelling. As it is, practically speaking, you may think of
  &lt;code&gt;org-brain&lt;/code&gt; as implementing many of the features of &lt;code&gt;emacs-freex&lt;/code&gt;, but with all
  of &lt;code&gt;org-mode&lt;/code&gt;’s goodness included.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Kungsgeten</author><guid isPermaLink="false">https://github.com/Kungsgeten/org-brain</guid><pubDate>Tue, 21 Jan 2020 00:06:00 GMT</pubDate></item><item><title>remacs/remacs #7 in Emacs Lisp, Today</title><link>https://github.com/remacs/remacs</link><description>&lt;p&gt;&lt;i&gt;Rust :heart: Emacs&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-rust-heart-emacs" class="anchor" aria-hidden="true" href="#rust-heart-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rust &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; Emacs&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/remacs-discuss/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c309a484f077b17bf94b8828ccc3484020f64eba/68747470733a2f2f6261646765732e6769747465722e696d2f72656d6163732d646973637573732f4c6f6262792e737667" alt="Join the chat at https://gitter.im/remacs-discuss/Lobby" data-canonical-src="https://badges.gitter.im/remacs-discuss/Lobby.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/remacs/remacs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9ef2ff52a2adcce65e02d1adbb1d122afe66c9a7/68747470733a2f2f7472617669732d63692e6f72672f72656d6163732f72656d6163732e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/remacs/remacs.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A community-driven port of &lt;a href="https://www.gnu.org/software/emacs/" rel="nofollow"&gt;Emacs&lt;/a&gt; to &lt;a href="https://www.rust-lang.org" rel="nofollow"&gt;Rust&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#why-emacs"&gt;Why Emacs?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#why-rust"&gt;Why Rust?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#why-a-fork"&gt;Why A Fork?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dockerized-development-environment"&gt;Dockerized development environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-remacs"&gt;Building Remacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#running-remacs"&gt;Running Remacs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#design-goals"&gt;Design Goals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#progress"&gt;Progress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#porting-elisp-primitive-functions"&gt;Porting Elisp Primitive Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;&lt;a id="user-content-why-emacs" class="anchor" aria-hidden="true" href="#why-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why Emacs?&lt;/h1&gt;
&lt;p&gt;Emacs will change how you think about programming.&lt;/p&gt;
&lt;p&gt;Emacs is &lt;strong&gt;totally introspectable&lt;/strong&gt;. You can always find out 'what
code runs when I press this button?'.&lt;/p&gt;
&lt;p&gt;Emacs is an &lt;strong&gt;incremental programming environment&lt;/strong&gt;. There's no
edit-compile-run cycle. There isn't even an edit-run cycle. You can
execute snippets of code and gradually turn them into a finished
project. There's no distinction between your editor and your
interpreter.&lt;/p&gt;
&lt;p&gt;Emacs is a &lt;strong&gt;mutable environment&lt;/strong&gt;. You can set variables, tweak
functions with advice, or redefine entire functions. Nothing is
off-limits.&lt;/p&gt;
&lt;p&gt;Emacs &lt;strong&gt;provides functionality without applications&lt;/strong&gt;. Rather than
separate applications, functionality is all integrated into your Emacs
instance. Amazingly, this works. Ever wanted to use the same snippet
tool for writing C++ classes as well as emails?&lt;/p&gt;
&lt;p&gt;Emacs is full of &lt;strong&gt;incredible software concepts that haven't hit the
mainstream yet&lt;/strong&gt;. For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Many platforms have a single item clipboard. Emacs has an &lt;strong&gt;infinite
clipboard&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;If you undo a change, and then continue editing, you can't redo the
original change. Emacs allows &lt;strong&gt;undoing to any historical state&lt;/strong&gt;, even
allowing tree-based exploration of history.&lt;/li&gt;
&lt;li&gt;Emacs supports a &lt;strong&gt;reverse variable search&lt;/strong&gt;: you can find variables
with a given value.&lt;/li&gt;
&lt;li&gt;You can perform &lt;strong&gt;structural editing&lt;/strong&gt; of code, allowing you to make
changes without breaking syntax. This works for lisps (paredit) and
non-lisps (smartparens).&lt;/li&gt;
&lt;li&gt;Many applications use a modal GUI: for example, you can't do other
edits during a find-and-replace operation. Emacs provides
&lt;strong&gt;recursive editing&lt;/strong&gt; that allow you to suspend what you're
currently doing, perform other edits, then continue the original
task.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Emacs has a &lt;strong&gt;documentation culture&lt;/strong&gt;. Emacs includes a usage manual,
a lisp programming manual, pervasive docstrings and even an
interactive tutorial.&lt;/p&gt;
&lt;p&gt;Emacs has &lt;strong&gt;a broad ecosystem&lt;/strong&gt;. If you want to edit code in a
niche language, there's probably an Emacs package for it.&lt;/p&gt;
&lt;p&gt;Emacs doesn't have a monopoly on good ideas, and there are other great
tools out there. Nonetheless, we believe the &lt;a href="https://i.stack.imgur.com/7Cu9Z.jpg" rel="nofollow"&gt;Emacs learning curve pays
off&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-why-rust" class="anchor" aria-hidden="true" href="#why-rust"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why Rust?&lt;/h1&gt;
&lt;p&gt;Rust is a great alternative to C.&lt;/p&gt;
&lt;p&gt;Rust has &lt;strong&gt;a fantastic learning curve&lt;/strong&gt;. &lt;a href="https://doc.rust-lang.org/" rel="nofollow"&gt;The documentation is superb&lt;/a&gt;,
and the community is very helpful if you get stuck.&lt;/p&gt;
&lt;p&gt;Rust has &lt;strong&gt;excellent tooling&lt;/strong&gt;. The compiler makes great suggestions,
the unit test framework is good, and &lt;code&gt;rustfmt&lt;/code&gt; helps ensure formatting
is beautiful and consistent.&lt;/p&gt;
&lt;p&gt;The Rust &lt;strong&gt;packaging story is excellent&lt;/strong&gt;. It's easy to reuse
the great libraries available, and just as easy to factor out code for
the benefit of others. We can replace entire C files in Emacs with
well-maintained Rust libraries.&lt;/p&gt;
&lt;p&gt;Code written in Rust &lt;strong&gt;easily interoperates with C&lt;/strong&gt;. This means we
can &lt;strong&gt;port to Rust incrementally&lt;/strong&gt;, and having a working Emacs at each
step of the process.&lt;/p&gt;
&lt;p&gt;Rust provides &lt;strong&gt;many compile-time checks&lt;/strong&gt;, making it much easier to write
fast, correct code (even when using multithreading). This also makes
it much easier for newcomers to contribute.&lt;/p&gt;
&lt;p&gt;Give it a try. We think you'll like it.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-why-a-fork" class="anchor" aria-hidden="true" href="#why-a-fork"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why A Fork?&lt;/h1&gt;
&lt;p&gt;Emacs is a widely used tool with a long history, broad platform
support and strong backward compatibility requirements. The core team
is understandably cautious in making far-reaching changes.&lt;/p&gt;
&lt;p&gt;Forking is a longstanding tradition in the Emacs community for trying
different approaches. Notable Emacs forks include &lt;a href="http://www.xemacs.org/" rel="nofollow"&gt;XEmacs&lt;/a&gt;,
&lt;a href="https://www.emacswiki.org/emacs/GuileEmacs" rel="nofollow"&gt;Guile Emacs&lt;/a&gt;,
and &lt;a href="https://github.com/burtonsamograd/emacs-jit"&gt;emacs-jit&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There have also been separate elisp implementations, such as
&lt;a href="https://github.com/hraberg/deuce"&gt;Deuce&lt;/a&gt;,
&lt;a href="http://jemacs.sourceforge.net/" rel="nofollow"&gt;JEmacs&lt;/a&gt; and
&lt;a href="https://github.com/tromey/el-compilador"&gt;El Compilador&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By forking, we can &lt;strong&gt;explore new development approaches&lt;/strong&gt;. We can
use a pull request workflow with integrated CI.&lt;/p&gt;
&lt;p&gt;We can &lt;strong&gt;drop legacy platforms and compilers&lt;/strong&gt;. Remacs will never run
on MS-DOS, and that's OK.&lt;/p&gt;
&lt;p&gt;There's a difference between &lt;strong&gt;the idea of Emacs&lt;/strong&gt; and the &lt;strong&gt;current
implementation of Emacs&lt;/strong&gt;. Forking allows us to explore being even
more Emacs-y.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You will need
&lt;a href="https://www.rust-lang.org/en-US/install.html" rel="nofollow"&gt;Rust installed&lt;/a&gt;.
The file &lt;code&gt;rust-toolchain&lt;/code&gt; indicates the version that gets installed.
This happens automatically, so don't override the toolchain manually.
IMPORTANT: Whenever the toolchain updates, you have to reinstall
rustfmt manually.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You will need a C compiler and toolchain. On Linux, you can do
something like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; apt install build-essential automake clang libclang-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On macOS, you'll need Xcode.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Linux:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; apt install texinfo libjpeg-dev libtiff-dev \
   libgif-dev libxpm-dev libgtk-3-dev gnutls-dev \
   libncurses5-dev libxml2-dev libxt-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;macOS:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; brew install gnutls texinfo autoconf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To use the installed version of &lt;code&gt;makeinfo&lt;/code&gt; instead of the built-in
(&lt;code&gt;/usr/bin/makeinfo&lt;/code&gt;) one, you'll need to make sure &lt;code&gt;/usr/local/opt/texinfo/bin&lt;/code&gt;
is before &lt;code&gt;/usr/bin&lt;/code&gt; in &lt;code&gt;PATH&lt;/code&gt;.
Mojave install libxml2 headers with: &lt;code&gt;open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-dockerized-development-environment" class="anchor" aria-hidden="true" href="#dockerized-development-environment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dockerized development environment&lt;/h2&gt;
&lt;p&gt;If you don't want to bother with the above setup you can use the
provided Docker environment. Make sure you have
&lt;a href="https://www.docker.com/" rel="nofollow"&gt;docker&lt;/a&gt; 1.12+ and
&lt;a href="https://github.com/docker/compose"&gt;docker-compose&lt;/a&gt; 1.8+ available.&lt;/p&gt;
&lt;p&gt;To spin up the environment run&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker-compose up -d&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first time you run this command, Docker will build the image. After
that any subsequent startups will happen in less than a second. If
this command fails because of needing absolute paths, make sure to set
the PWD environment variable before calling the command like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;PWD=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;pwd&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt; docker-compose up -d&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The working directory with remacs will be mounted under the same path
in the container so editing the files on your host machine will
automatically be reflected inside the container. To build remacs use
the steps from &lt;a href="#building-remacs"&gt;Building Remacs&lt;/a&gt; prefixed with
&lt;code&gt;docker-compose exec remacs&lt;/code&gt;, this will ensure the commands are
executed inside the container.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-remacs" class="anchor" aria-hidden="true" href="#building-remacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Remacs&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;$ ./autogen.sh
$ ./configure --enable-rust-debug
$ make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For a release build, don't pass &lt;code&gt;--enable-rust-debug&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The Makefile obeys cargo's RUSTFLAGS variable and additional options
can be passed to cargo with CARGO_FLAGS.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make CARGO_FLAGS=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-vv&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; RUSTFLAGS=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-Zunstable-options --cfg MARKER_DEBUG&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-running-remacs" class="anchor" aria-hidden="true" href="#running-remacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running Remacs&lt;/h2&gt;
&lt;p&gt;You can now run your shiny new Remacs build!&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Using -q to ignore your .emacs.d, so Remacs starts up quickly.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; RUST_BACKTRACE is optional, but useful if your instance crashes.&lt;/span&gt;
$ RUST_BACKTRACE=1 src/remacs -q&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-design-goals" class="anchor" aria-hidden="true" href="#design-goals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design Goals&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Compatibility&lt;/strong&gt;: Remacs should not break existing elisp code, and
ideally provide the same FFI too.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Leverage Rust itself&lt;/strong&gt;: Remacs should make best use of Rust to
ensure code is robust and performant.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Leverage the Rust ecosystem&lt;/strong&gt;: Remacs should use existing Rust
crates wherever possible, and create new, separate crates where our
code could benefit others.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Great docs&lt;/strong&gt;: Emacs has excellent documentation, Remacs should be no
different.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-progress" class="anchor" aria-hidden="true" href="#progress"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Progress&lt;/h1&gt;
&lt;p&gt;At this point we focus on porting lisp functions from C to Rust.
Currently there are 642 functions in Rust and 823 in C (May 2019).&lt;/p&gt;
&lt;p&gt;We have a &lt;a href="https://github.com/Wilfred/remacs/wiki/Progress"&gt;progress section&lt;/a&gt; in our wiki
and there's also a list of &lt;a href="https://github.com/Wilfred/remacs/projects/1"&gt;long-term goals&lt;/a&gt;
under projects.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-porting-elisp-primitive-functions" class="anchor" aria-hidden="true" href="#porting-elisp-primitive-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Porting Elisp Primitive Functions&lt;/h1&gt;
&lt;p&gt;The first thing to look at is the C implementation for the &lt;code&gt;atan&lt;/code&gt; function. It takes an optional second argument, which makes it interesting. The complicated mathematical bits, on the other hand, are handled by the standard library. This allows us to focus on the porting process without getting distracted by the math.&lt;/p&gt;
&lt;p&gt;The Lisp values we are given as arguments are tagged pointers; in this case they are pointers to doubles. The code has to check the tag and follow the pointer to retrieve the real values. Note that this code invokes a C macro (called &lt;code&gt;DEFUN&lt;/code&gt;) that reduces some of the boilerplate. The macro declares a static variable called &lt;code&gt;Satan&lt;/code&gt; that holds the metadata the Lisp compiler will need in order to successfully call this function, such as the docstring and the pointer to the &lt;code&gt;Fatan&lt;/code&gt; function, which is what the C implementation is named:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;DEFUN&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;atan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, Fatan, Satan, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;,
       doc: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Return the inverse tangent of the arguments.&lt;/span&gt;
&lt;span class="pl-c"&gt;If only one argument Y is given, return the inverse tangent of Y.&lt;/span&gt;
&lt;span class="pl-c"&gt;If two arguments Y and X are given, return the inverse tangent of Y&lt;/span&gt;
&lt;span class="pl-c"&gt;divided by X, i.e. the angle in radians between the vector (X, Y)&lt;/span&gt;
&lt;span class="pl-c"&gt;and the x-axis.  &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;)
  (Lisp_Object y, Lisp_Object x)
{
  &lt;span class="pl-k"&gt;double&lt;/span&gt; d = &lt;span class="pl-c1"&gt;extract_float&lt;/span&gt; (y);
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;NILP&lt;/span&gt; (x))
    d = &lt;span class="pl-c1"&gt;atan&lt;/span&gt; (d);
  &lt;span class="pl-k"&gt;else&lt;/span&gt;
    {
      &lt;span class="pl-k"&gt;double&lt;/span&gt; d2 = &lt;span class="pl-c1"&gt;extract_float&lt;/span&gt; (x);
      d = &lt;span class="pl-c1"&gt;atan2&lt;/span&gt; (d, d2);
    }
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;make_float&lt;/span&gt; (d);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;extract_float&lt;/code&gt; checks the tag (signalling an "invalid argument" error if it's not the tag for a double), and returns the actual value. &lt;code&gt;NILP&lt;/code&gt; checks to see if the tag indicates that this is a null value, indicating that the user didn't supply a second argument at all.&lt;/p&gt;
&lt;p&gt;Next take a look at the current Rust implementation. It must also take an optional argument, and it also invokes a (Rust) macro to reduce the boilerplate of declaring the static data for the function. However, it also takes care of all of the type conversions and checks that we need to do in order to handle the arguments and return value:&lt;/p&gt;
&lt;div class="highlight highlight-source-rust"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;/// Return the inverse tangent of the arguments.&lt;/span&gt;
&lt;span class="pl-c"&gt;/// If only one argument Y is given, return the inverse tangent of Y.&lt;/span&gt;
&lt;span class="pl-c"&gt;/// If two arguments Y and X are given, return the inverse tangent of Y&lt;/span&gt;
&lt;span class="pl-c"&gt;/// divided by X, i.e. the angle in radians between the vector (X, Y)&lt;/span&gt;
&lt;span class="pl-c"&gt;/// and the x-axis&lt;/span&gt;
#[lisp_fn(min = &lt;span class="pl-s"&gt;"1"&lt;/span&gt;)]
&lt;span class="pl-k"&gt;pub&lt;/span&gt; &lt;span class="pl-k"&gt;fn&lt;/span&gt; &lt;span class="pl-en"&gt;atan&lt;/span&gt;(y: EmacsDouble, x: &lt;span class="pl-k"&gt;Option&lt;/span&gt;&amp;lt;EmacsDouble&amp;gt;) -&amp;gt; EmacsDouble {
    &lt;span class="pl-k"&gt;match&lt;/span&gt; x {
        &lt;span class="pl-c1"&gt;None&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; y.&lt;span class="pl-en"&gt;atan&lt;/span&gt;(),
        &lt;span class="pl-c1"&gt;Some&lt;/span&gt;(x) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; y.&lt;span class="pl-en"&gt;atan2&lt;/span&gt;(x)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can see that we don't have to check to see if our arguments are of the correct type, the code generated by the &lt;code&gt;lisp_fn&lt;/code&gt; macro does this for us. We also asked for the second argument to be an &lt;code&gt;Option&amp;lt;EmacsDouble&amp;gt;&lt;/code&gt;. This is the Rust type for a value which is either a valid double or isn't specified at all. We use a match statement to handle both cases.&lt;/p&gt;
&lt;p&gt;This code is so much better that it's hard to believe just how simple the implementation of the macro is. It just calls &lt;code&gt;.into()&lt;/code&gt; on the arguments and the return value; the compiler does the rest when it dispatches this method call to the correct implementation.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;Pull requests welcome, no copyright assignment required. This project is under the
&lt;a href="https://www.rust-lang.org/policies/code-of-conduct" rel="nofollow"&gt;Rust code of conduct&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There's lots to do! We keep a list of &lt;a href="https://github.com/Wilfred/remacs/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22"&gt;low hanging fruit&lt;/a&gt; here so you can easily choose
one. You can find information in the &lt;a href="https://github.com/Wilfred/remacs/wiki/Porting-cookbook"&gt;Porting cookbook&lt;/a&gt; or ask for help in our &lt;a href="https://gitter.im/remacs-discuss/Lobby" rel="nofollow"&gt;Gitter channel&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>remacs</author><guid isPermaLink="false">https://github.com/remacs/remacs</guid><pubDate>Tue, 21 Jan 2020 00:07:00 GMT</pubDate></item><item><title>sonatype/docker-nexus3 #8 in Emacs Lisp, Today</title><link>https://github.com/sonatype/docker-nexus3</link><description>&lt;p&gt;&lt;i&gt;Dockerized version of Nexus Repo Manager 3&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;h1&gt;&lt;a id="user-content-sonatype-nexus3-docker-sonatypenexus3" class="anchor" aria-hidden="true" href="#sonatype-nexus3-docker-sonatypenexus3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sonatype Nexus3 Docker: sonatype/nexus3&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/sonatype/nexus-developers?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/af46f136457a4ad6a74cd67b083722d252469e41/68747470733a2f2f6261646765732e6769747465722e696d2f736f6e61747970652f6e657875732d646576656c6f706572732e737667" alt="Join the chat at https://gitter.im/sonatype/nexus-developers" data-canonical-src="https://badges.gitter.im/sonatype/nexus-developers.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A Dockerfile for Sonatype Nexus Repository Manager 3, starting with 3.18 the image is based on the &lt;a href="https://www.redhat.com/en/blog/introducing-red-hat-universal-base-image" rel="nofollow"&gt;Red Hat Universal Base Image&lt;/a&gt; while earlier versions used CentOS.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#contribution-guidelines"&gt;Contribution Guidlines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#running"&gt;Running&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-the-nexus-repository-manager-image"&gt;Building the Nexus Repository Manager image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chef-solo-for-runtime-and-application"&gt;Chef Solo for Runtime and Application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#testing-the-dockerfile"&gt;Testing the Dockerfile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#red-hat-certified-image"&gt;Red Hat Certified Image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#notes"&gt;Notes&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#persistent-data"&gt;Persistent Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-help"&gt;Getting Help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contribution-guidelines" class="anchor" aria-hidden="true" href="#contribution-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution Guidelines&lt;/h2&gt;
&lt;p&gt;Go read &lt;a href="https://github.com/sonatype/docker-nexus3/blob/master/.github/CONTRIBUTING.md"&gt;our contribution guidelines&lt;/a&gt; to get a bit more familiar with how
we would like things to flow.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running" class="anchor" aria-hidden="true" href="#running"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running&lt;/h2&gt;
&lt;p&gt;To run, binding the exposed port 8081 to the host, use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ docker run -d -p 8081:8081 --name nexus sonatype/nexus3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To test:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl http://localhost:8081/
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-building-the-nexus-repository-manager-image" class="anchor" aria-hidden="true" href="#building-the-nexus-repository-manager-image"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the Nexus Repository Manager image&lt;/h2&gt;
&lt;p&gt;To build a docker image from the Docker file you can use this command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ docker build --rm=true --tag=sonatype/nexus3 .
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following optional variables can be used when building the image:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NEXUS_VERSION: Version of the Nexus Repository Manager&lt;/li&gt;
&lt;li&gt;NEXUS_DOWNLOAD_URL: Download URL for Nexus Repository, alternative to using &lt;code&gt;NEXUS_VERSION&lt;/code&gt; to download from Sonatype&lt;/li&gt;
&lt;li&gt;NEXUS_DOWNLOAD_SHA256_HASH: Sha256 checksum for the downloaded Nexus Repository Manager archive. Required if &lt;code&gt;NEXUS_VERSION&lt;/code&gt;
or &lt;code&gt;NEXUS_DOWNLOAD_URL&lt;/code&gt; is provided&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-chef-solo-for-runtime-and-application" class="anchor" aria-hidden="true" href="#chef-solo-for-runtime-and-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chef Solo for Runtime and Application&lt;/h2&gt;
&lt;p&gt;Chef Solo is used to build out the runtime and application layers of the Docker image. The Chef cookbook being used is available
on GitHub at &lt;a href="https://github.com/sonatype/chef-nexus-repository-manager"&gt;sonatype/chef-nexus-repository-manager&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-testing-the-dockerfile" class="anchor" aria-hidden="true" href="#testing-the-dockerfile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing the Dockerfile&lt;/h2&gt;
&lt;p&gt;We are using &lt;code&gt;rspec&lt;/code&gt; as the test framework. &lt;code&gt;serverspec&lt;/code&gt; provides a docker backend (see the method &lt;code&gt;set&lt;/code&gt; in the test code)
to run the tests inside the docker container, and abstracts away the difference between distributions in the tests
(e.g. yum, apt,...).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rspec [--backtrace] spec/Dockerfile_spec.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-red-hat-certified-image" class="anchor" aria-hidden="true" href="#red-hat-certified-image"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Red Hat Certified Image&lt;/h2&gt;
&lt;p&gt;A Red Hat certified container image can be created using &lt;code&gt;Dockerfile.rh.el&lt;/code&gt; which is built to be compliant with Red Hat certification.
The image includes additional meta data to comform with Kubernetes and OpenShift standards, a directory with the
licenses applicable to the software and a man file for help on how to use the software. It also uses an ENTRYPOINT
script the ensure the running user has access to the appropriate permissions for OpenShift 'restricted' SCC. In addition to the
Red Hat Enterprise Linux image, &lt;code&gt;Dockerfile.rh.centos&lt;/code&gt; provides the same additions but with a CentOS base.&lt;/p&gt;
&lt;p&gt;The Red Hat certified container image is available from the
&lt;a href="https://access.redhat.com/containers/#/registry.connect.redhat.com/sonatype/nexus-repository-manager" rel="nofollow"&gt;Red Hat Container Catalog&lt;/a&gt;
and qualified accounts can pull it from registry.connect.redhat.com.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Our &lt;a href="https://help.sonatype.com/display/NXRM3/System+Requirements" rel="nofollow"&gt;system requirements&lt;/a&gt; should be taken into account when provisioning the Docker container.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Default user is &lt;code&gt;admin&lt;/code&gt; and the uniquely generated password can be found in the &lt;code&gt;admin.password&lt;/code&gt; file inside the volume. See &lt;a href="#user-content-persistent-data"&gt;Persistent Data&lt;/a&gt; for information about the volume.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It can take some time (2-3 minutes) for the service to launch in a
new container.  You can tail the log to determine once Nexus is ready:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;$ docker logs -f nexus
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Installation of Nexus is to &lt;code&gt;/opt/sonatype/nexus&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A persistent directory, &lt;code&gt;/nexus-data&lt;/code&gt;, is used for configuration,
logs, and storage. This directory needs to be writable by the Nexus
process, which runs as UID 200.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There is an environment variable that is being used to pass JVM arguments to the startup script&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;INSTALL4J_ADD_VM_PARAMS&lt;/code&gt;, passed to the Install4J startup script. Defaults to &lt;code&gt;-Xms1200m -Xmx1200m -XX:MaxDirectMemorySize=2g -Djava.util.prefs.userRoot=${NEXUS_DATA}/javaprefs&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This can be adjusted at runtime:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ docker run -d -p 8081:8081 --name nexus -e INSTALL4J_ADD_VM_PARAMS="-Xms2g -Xmx2g -XX:MaxDirectMemorySize=3g  -Djava.util.prefs.userRoot=/some-other-dir" sonatype/nexus3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Of particular note, &lt;code&gt;-Djava.util.prefs.userRoot=/some-other-dir&lt;/code&gt; can be set to a persistent path, which will maintain
the installed Nexus Repository License if the container is restarted.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Another environment variable can be used to control the Nexus Context Path&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NEXUS_CONTEXT&lt;/code&gt;, defaults to /&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This can be supplied at runtime:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ docker run -d -p 8081:8081 --name nexus -e NEXUS_CONTEXT=nexus sonatype/nexus3
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-persistent-data" class="anchor" aria-hidden="true" href="#persistent-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Persistent Data&lt;/h3&gt;
&lt;p&gt;There are two general approaches to handling persistent storage requirements
with Docker. See &lt;a href="https://docs.docker.com/engine/tutorials/dockervolumes/" rel="nofollow"&gt;Managing Data in Containers&lt;/a&gt;
for additional information.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;em&gt;Use a docker volume&lt;/em&gt;.  Since docker volumes are persistent, a volume can be created specifically for
this purpose.  This is the recommended approach.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;$ docker volume create --name nexus-data
$ docker run -d -p 8081:8081 --name nexus -v nexus-data:/nexus-data sonatype/nexus3
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="2"&gt;
&lt;li&gt;&lt;em&gt;Mount a host directory as the volume&lt;/em&gt;.  This is not portable, as it
relies on the directory existing with correct permissions on the host.
However it can be useful in certain situations where this volume needs
to be assigned to certain specific underlying storage.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;$ mkdir /some/dir/nexus-data &amp;amp;&amp;amp; chown -R 200 /some/dir/nexus-data
$ docker run -d -p 8081:8081 --name nexus -v /some/dir/nexus-data:/nexus-data sonatype/nexus3
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h2&gt;
&lt;p&gt;Looking to contribute to our Docker image but need some help? There's a few ways to get information or our attention:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Chat with us on &lt;a href="https://gitter.im/sonatype/nexus-developers" rel="nofollow"&gt;Gitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;File an issue &lt;a href="https://issues.sonatype.org/projects/NEXUS/" rel="nofollow"&gt;on our public JIRA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Check out the &lt;a href="http://stackoverflow.com/questions/tagged/nexus3" rel="nofollow"&gt;Nexus3&lt;/a&gt; tag on Stack Overflow&lt;/li&gt;
&lt;li&gt;Check out the &lt;a href="https://groups.google.com/a/glists.sonatype.com/forum/?hl=en#!forum/nexus-users" rel="nofollow"&gt;Nexus Repository User List&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>sonatype</author><guid isPermaLink="false">https://github.com/sonatype/docker-nexus3</guid><pubDate>Tue, 21 Jan 2020 00:08:00 GMT</pubDate></item><item><title>bbatsov/prelude #9 in Emacs Lisp, Today</title><link>https://github.com/bbatsov/prelude</link><description>&lt;p&gt;&lt;i&gt;Prelude is an enhanced Emacs 25.1+ distribution that should make your experience with Emacs both more pleasant and more powerful.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="http://www.gnu.org/licenses/gpl-3.0.txt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1ba3411d21f0105e0df26c7e29aa214578d377b5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c5f332d677265656e2e737667" alt="License GPL 3" data-canonical-src="https://img.shields.io/badge/license-GPL_3-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.patreon.com/bbatsov" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/451cb702b2e60e29c1a84aa24a17a1a8d313639e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f70617472656f6e2d646f6e6174652d6f72616e67652e737667" alt="Patreon" data-canonical-src="https://img.shields.io/badge/patreon-donate-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-emacs-prelude" class="anchor" aria-hidden="true" href="#emacs-prelude"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Emacs Prelude&lt;/h1&gt;
&lt;p&gt;Prelude is an Emacs distribution that aims to enhance the default
Emacs experience.  Prelude alters a lot of the default settings,
bundles a plethora of additional packages and adds its own core
library to the mix. The final product offers an easy to use Emacs
configuration for Emacs newcomers and lots of additional power for
Emacs power users.&lt;/p&gt;
&lt;p&gt;Prelude is compatible &lt;strong&gt;ONLY with GNU Emacs 25.1+&lt;/strong&gt;. In general you're
advised to always run Prelude with the latest Emacs - currently
&lt;strong&gt;26.1&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;You can support the development of Prelude via
&lt;a href="https://www.paypal.me/bbatsov" rel="nofollow"&gt;PayPal&lt;/a&gt; and
&lt;a href="https://www.patreon.com/bbatsov" rel="nofollow"&gt;Patreon&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-fast-forward" class="anchor" aria-hidden="true" href="#fast-forward"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fast Forward&lt;/h2&gt;
&lt;p&gt;Assuming you're using an Unix-like OS (&lt;code&gt;*BSD&lt;/code&gt;, &lt;code&gt;GNU/Linux&lt;/code&gt;, &lt;code&gt;macOS&lt;/code&gt;, &lt;code&gt;Solaris&lt;/code&gt;,
etc), you already have Emacs 24.4+ installed, as well as &lt;code&gt;git&lt;/code&gt; &amp;amp; &lt;code&gt;curl&lt;/code&gt; you
can skip the whole manual and just type in your favorite shell the
following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -L https://git.io/epre &lt;span class="pl-k"&gt;|&lt;/span&gt; sh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can now power up your Emacs, sit back and enjoy Prelude,
forgetting about the rest of this manual.&lt;/p&gt;
&lt;p&gt;There are two environment variables you can use to control the
source repository and the installation directory. To change the
installation directory:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; PRELUDE_INSTALL_DIR=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$HOME&lt;/span&gt;/.emacs.d&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; curl -L https://github.com/bbatsov/prelude/raw/master/utils/installer.sh &lt;span class="pl-k"&gt;|&lt;/span&gt; sh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To change the source repository:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; PRELUDE_URL=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/yourname/prelude.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; curl -L https://github.com/bbatsov/prelude/raw/master/utils/installer.sh &lt;span class="pl-k"&gt;|&lt;/span&gt; sh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the installer will back up any existing &lt;code&gt;.emacs&lt;/code&gt; file or
&lt;code&gt;.emacs.d&lt;/code&gt; since it will unpack Prelude's code in &lt;code&gt;.emacs.d&lt;/code&gt;. If
you're doing a manual install make sure you don't have a &lt;code&gt;.emacs&lt;/code&gt; file
or back up your existing &lt;code&gt;.emacs.d&lt;/code&gt; directory manually.&lt;/p&gt;
&lt;p&gt;Don't forget to adjust your &lt;code&gt;prelude-modules.el&lt;/code&gt; file in your personal directory
once the installation is done. By default most of the modules
that ship with Prelude are not loaded.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-user-manual" class="anchor" aria-hidden="true" href="#user-manual"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User Manual&lt;/h2&gt;
&lt;p&gt;Check out our &lt;a href="https://prelude.emacsredux.com" rel="nofollow"&gt;user manual&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known issues&lt;/h2&gt;
&lt;p&gt;Check out the project's
&lt;a href="https://github.com/bbatsov/prelude/issues?sort=created&amp;amp;direction=desc&amp;amp;state=open"&gt;issue list&lt;/a&gt;
a list of unresolved issues. By the way - feel free to fix any of them
and send me a pull request. :-)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;p&gt;Support is available via several channels:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Prelude's Google Group &lt;a href="mailto:emacs-prelude@googlegroups.com"&gt;emacs-prelude@googlegroups.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Prelude's Freenode channel (&lt;code&gt;#prelude-emacs&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitter.im/bbatsov/prelude" rel="nofollow"&gt;Gitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;Here's a &lt;a href="https://github.com/bbatsov/prelude/contributors"&gt;list&lt;/a&gt; of all the people who have contributed to the
development of Emacs Prelude.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bugs--improvements" class="anchor" aria-hidden="true" href="#bugs--improvements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bugs &amp;amp; Improvements&lt;/h2&gt;
&lt;p&gt;Bug reports and suggestions for improvements are always
welcome. GitHub pull requests are even better! :-)&lt;/p&gt;
&lt;p&gt;Cheers,&lt;br&gt;
&lt;a href="https://twitter.com/bbatsov" rel="nofollow"&gt;Bozhidar&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>bbatsov</author><guid isPermaLink="false">https://github.com/bbatsov/prelude</guid><pubDate>Tue, 21 Jan 2020 00:09:00 GMT</pubDate></item><item><title>AbstProcDo/Master-Emacs-From-Scrach-with-Solid-Procedures #10 in Emacs Lisp, Today</title><link>https://github.com/AbstProcDo/Master-Emacs-From-Scrach-with-Solid-Procedures</link><description>&lt;p&gt;&lt;i&gt;Master Emacs From Scrach with Solid Procedures&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="org" data-path="readme.org"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-master-emacs" class="anchor" aria-hidden="true" href="#master-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Master Emacs&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-00preface" class="anchor" aria-hidden="true" href="#00preface"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;00.Preface&lt;/h1&gt;
&lt;p&gt;步步为营一步一个脚印, “零秒”乃调用直觉力, 非物理概念上的“零秒”；&lt;/p&gt;
&lt;p&gt;一个以讹传讹的观念”Emacs很难且耗费时间”, 标题”零秒”有意打消对Emacs学习的成见. 通过点出Emacs中的关键点的方式, 心有灵犀一点通, 举一反三, 一通百通. 而不必案牍劳形, 悬梁刺股.
  曾国藩的战术“结硬寨, 打呆仗”, 初时很慢, 待工事渐成, 则坚不可摧；
  同时努力学习SICP的策略, 首先抛出点滴星火，再看时，已成燎原之势。
  以直觉力为基础，步步为营，稳扎稳打，构筑Emacs技能。&lt;/p&gt;
&lt;p&gt;是为序.&lt;/p&gt;
&lt;p&gt;Emacs的简单, 则一言以蔽之, 只是一个Meta键.
  Meta键(键盘上的option/alter键)
  Meta的词源含义是higher, beyond,没有最高,只有更高.
  中文译为”元”, 发端处, 源头处;
  So Meta is Source, and it relates to source code.
  Meta关联Source-Code, 在Source-Code中, Function又是的一等公民.
  Emacs的简单策略便是将Meta键i绑定到Function上..
  M-x (x for execucte), 在此之后, 便可以天马行空的查询要做的事情,
  比如插入当前的日期:&lt;/p&gt;
&lt;p&gt;至此, Emacs从战略层面上的所有事情便结束了, 剩下的事情仅仅是战术层面上的高效问题与缝缝补补的实现.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Emacs的第一个策略: 引入Ctrl键&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;比如从目录中打开一个文件, 可以M-x find-file,
  需要键入十一个字符 Ctrl策略, 可以C-x C-f. 只需要键入4个字符.
  sequnces调用functions的过程, 称之为Command. Command=Contrl, 由此也能反过来看到选择Ctrl键也是语义绑定.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-01semantic-keybinding" class="anchor" aria-hidden="true" href="#01semantic-keybinding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;01.Semantic Keybinding&lt;/h1&gt;
&lt;p&gt;Emacs从最源头处, 用Meta-Execte调用所有的function; 然后通过定义Ctrl的技术, 简化Meta的流程.&lt;/p&gt;
&lt;p&gt;正文从语义化快捷键入手, 辅助在5分钟之内永久记忆(Never have a second look), 20多个一级快捷键(高频), 30几个二级绑定键(中频), 闲看三级快捷键(低频); 以及按照功能, 按照目的, 按照插件分类的表格.
  答题区上表格和秒记方法.&lt;/p&gt;
&lt;p&gt;C-x, C-h的区别, 一级绑定, 将C-x中的x去掉, 只剩下
  从character讲起, meta的词源是higher,&lt;/p&gt;
&lt;p&gt;与vim的关键区别是绑定的键是有具体含义,可逻辑, 可推导.&lt;/p&gt;
&lt;p&gt;character, word, line, sentence, page, article.&lt;/p&gt;
&lt;p&gt;一级绑定之cursor光标的移动: (高频)
  在一级绑定中, C-x, M-x中的x(execute)省略, 简化为C-与M-x;
  光标操作的对象:
  character, word, line, sentence, (*paragragh),
  page, buffer.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Character and Word&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;C-f (M-x forward-char) 向前移动一个字符的位置
  C-b (M-x backword-char) 向后移动一个字符的位置
  char是最小的操作单元, char之上则是word, 回顾上文阐述的meta的词源含义是higher,因此Meta绑定相同的键, 范围要比Ctrl更大一点, 由此, 比char大一级的是word
  M-f (M-x forward-word) 向前移动一个单词的位置.
  M-b (M-x backword-word) 向后移动一个单词的位置.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;line and sentence.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;C-e (e for end) move to end of line,
  C-a (a for ahead) move to ahead of line
  同样的逻辑,Meta比Ctrl的范围高一个等级
  M-a move to ahead of the sentence
  M-e move to end of the sentence.&lt;/p&gt;
&lt;p&gt;以上两点为光标在水平方向的移动(horizontal), 与之相对应的纵向(Vertiallly)移动的操作.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Vertical Movement between lines&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;C-n (调用function next-line), 向下移动一行
  C-p (previous-line)
  接下来, 有意思的事情来了.
  由character和line操作可知, 绑定相同的键, Meta的作用范围总是比Ctrl更高一级, 但是此时查看:
  M-p
  M-n
  发现Emacs没有定义这两个key-sequnces, 根据前面的逻辑, M-p应该向上移动更多行, 至少比一行要多; Emacs竟然没有定义, 这真是千载难逢的良机.
  暂时按下不表, 先小结Ctrl的光标操作. Ctrl能操作的最大单位是line, 更大范围的光标动作交由Meta完成.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Vertically Page Down and Up&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;向上翻页M-v, v当然是vertical, 而Meta是higher, 往更高处纵向移动, 当然便是UP,
  那么向下呢? 既然Meta相对于Ctrl而higher, 反过来Ctrl则是Lower;
  因此向下翻页是C-v.
  此处的心思, 一级绑定, 始终用最少的动作, 最少的触发键, 如果绑定三个键, 则不需要Ctrl的参与.
  M-v-u(up), M-v-d(down)向下.
  M-v与C-v辅助便利地向上和向下翻页, 问题是他们是整屏, 整屏地翻页, 大多数时候, 这不是我们想要的. 我要半屏半屏的翻页.&lt;/p&gt;
&lt;p&gt;现在重新回到M-p与M-n, 绑定半屏翻页.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;scroll-half-page-down&lt;/span&gt; ()
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;scroll down half the page&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  (&lt;span class="pl-k"&gt;interactive&lt;/span&gt;)
  (&lt;span class="pl-c1"&gt;scroll-down&lt;/span&gt; (&lt;span class="pl-k"&gt;/&lt;/span&gt; (&lt;span class="pl-c1"&gt;window-body-height&lt;/span&gt;) &lt;span class="pl-c1"&gt;2&lt;/span&gt;)))

(&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;scroll-half-page-up&lt;/span&gt; ()
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;scroll up half the page&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  (&lt;span class="pl-k"&gt;interactive&lt;/span&gt;)
  (&lt;span class="pl-c1"&gt;scroll-up&lt;/span&gt; (&lt;span class="pl-k"&gt;/&lt;/span&gt; (&lt;span class="pl-c1"&gt;window-body-height&lt;/span&gt;) &lt;span class="pl-c1"&gt;2&lt;/span&gt;)))

(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\M&lt;/span&gt;-n&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;'scroll-half-page-up&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\M&lt;/span&gt;-p&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;'scroll-half-page-down&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;因为设置了触控板(或者鼠标)Invert scroll direction(Natural Scrolling), 因此up与down是反着映射到next和previous的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;5.Buffer
  M-&amp;lt;, to the biginning of the buffer
  M-&amp;gt;, to the end of the buffer.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-02emacs-as-an-editor" class="anchor" aria-hidden="true" href="#02emacs-as-an-editor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;02.Emacs as an Editor&lt;/h1&gt;
&lt;p&gt;&lt;a href="01.semantic keybinding"&gt;01.semantic keybinding&lt;/a&gt; 初窥了Emacs简单易用的特性之一便是语义化键绑定,
  语义化包含两个方面:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Character keys的语义化, 这一点明了易懂, n for next, p for previous; 而非j for next, k for previous.&lt;/li&gt;
  &lt;li&gt;Control keys的语义化, 求根问底Meta的词源, 病以meta的higher(beyond)基石; 不仅可以不费力的记住Cursor操作, 依照同样的逻辑, 可以拆解全部的内置快捷键.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;移动Cursor的目的, 一则为浏览阅读, 二则为编辑做准备, 是编辑的前驱步骤.
  当聊起编辑器时候, 一个著名的段子”Emacs不是好的编辑器, 而是一个操作系统”; 如果追问一句”请问, 您对编辑器定义是什么?”, 立刻会发现所谓编辑器圣战, 便是茶余饭后的小品或者群口相声, 以”段子”, 调剂案牍劳累.&lt;/p&gt;
&lt;p&gt;“When I see a bird that walks like a duck and swims like a duck and quacks like a duck, I call that bird a duck.”, 编辑器的基本功能曲指可数.&lt;/p&gt;
&lt;p&gt;编辑器的基本功能:
  以行为单位,
  复制, 黏贴, 增删改查, 其中查是关键, 应该放在前面
  对文本的初始是最关键的一点, Linux基于流管理.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;最基本
    &lt;ul&gt;
      &lt;li&gt;复制黏贴 (M-w, C-y)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;增删改查
    &lt;ul&gt;
      &lt;li&gt;insert (C-q quotation)&lt;/li&gt;
      &lt;li&gt;delete(C M d delele), kill ring&lt;/li&gt;
      &lt;li&gt;modify(undo, transpose, uppercase, lowercase, title,&lt;/li&gt;
      &lt;li&gt;Search(Swiper…)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Arguments
    &lt;ul&gt;
      &lt;li&gt;Numeric arguents C-u&lt;/li&gt;
      &lt;li&gt;Repeat C-x z&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Completion(yasnippet)
    &lt;ul&gt;
      &lt;li&gt;indentation (M-i 缓解小指的负担&lt;/li&gt;
      &lt;li&gt;white space(C-x C-o)&lt;/li&gt;
      &lt;li&gt;Filling(global-visual-line-mode)&lt;/li&gt;
      &lt;li&gt;Spelling-checking&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Special
    &lt;ul&gt;
      &lt;li&gt;Register&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;详细叙述delte
  键的绑定同样遵循语义化的原则, 比如Delete(killing)
  &amp;lt;delete&amp;gt;键(即backspace退格键, backword);
  与C-&amp;lt;del&amp;gt; 搭配是删除一个字符,
  与M-&amp;lt;del&amp;gt;则是倒退删除一个单词;
  与backwords对应的是forwards,(进格删除)
  C-d M-d分别进格删除一个字符和一个单词.&lt;/p&gt;
&lt;p&gt;Killing的范围比delete大;
  C-k是删除到行尾, M-k是删除到句尾, 跟前面一致. 以上是forwards进格删除,
  对行的backwardst退格删除 C-x &amp;lt;del&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Topic1&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;这么多的键绑定, 从语义化的理解是一方面, 更重要的一方面可能应该去找捷径, 比如调用直觉和由此带来的强烈满足感和成就感.&lt;/p&gt;
&lt;p&gt;编辑过程中对blank-lines的处理,&lt;/p&gt;
&lt;p&gt;C-x C-o调用(delete-blank-lines)&lt;/p&gt;
&lt;p&gt;C-x C-o的绑定键没有逻辑, o是个洞吗? 一个洞代表空行?&lt;/p&gt;
&lt;p&gt;Emacs Manual中很多这样的处理细分领域的绑定键, 头悬梁锥刺股的用下来, 对emacs的热情和兴趣早早磨光了.&lt;/p&gt;
&lt;p&gt;回到C-x C-o调用(delete-blank-lines)&lt;/p&gt;
&lt;p&gt;假设有这样四行&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;“The quick brown fox jumps over the lazy dog”&lt;/p&gt;
  &lt;p&gt;“The quick brown fox jumps over the lazy dog”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当前的光标在第一行上的fox,后 发现两行文字中间的空行是多余的, 因此要删掉.&lt;/p&gt;
&lt;p&gt;需要动用人肉劳力这样做:&lt;/p&gt;
&lt;p&gt;C-n 管标移动到下一行
  连续两次C-k删除空行
  然后凭借超强的记忆力(记住刚才是在fox的位置, 和导弹一般精确的点位控制回到fox后面.&lt;/p&gt;
&lt;p&gt;劳神费力.&lt;/p&gt;
&lt;p&gt;应用C-x C-o呢? 可以在第一行的任意位置上调用C-x C-o, 下面的空行会自动删除.&lt;/p&gt;
&lt;p&gt;怎样从直觉上理解呢?&lt;/p&gt;
&lt;p&gt;光标在第一行的某个点上, 然后调用一个命令, 在光标之外的另外一个地方会立刻发生某件事情, 这就是远程控制呗;
  更直觉一点, 这边是”意念移物”呗,&lt;/p&gt;
&lt;p&gt;由此从直觉里生发的成就感和兴趣会驱动我们应用更加复杂的命令和组合.&lt;/p&gt;
&lt;p&gt;P.S. 作为对”零秒” 这个标题党的补充.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Topic2 对比Search功能的Emacs操作与命令行操作&lt;/b&gt;
  Emacs的优势是对数据和查询结果的便捷二次处理.
  比如想从宏观上了解下Emacs手册中中全部whitespace操作.
  &lt;a target="_blank" rel="noopener noreferrer" href="images/2.目录界面.png"&gt;&lt;img src="images/2.目录界面.png" alt="images/2.目录界面.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可以从Terminal中完成&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;find &lt;span class="pl-c1"&gt;.&lt;/span&gt; -type f -exec grep --color -inH --null -e  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;whitespace&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-cce"&gt;\{\}&lt;/span&gt; +&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/2.terminal界面.png"&gt;&lt;img src="images/2.terminal界面.png" alt="images/2.terminal界面.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;虽然可以看到结果, 但没法做简单的统计.
  即使加上nl&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;find &lt;span class="pl-c1"&gt;.&lt;/span&gt; -type f -exec grep --color -inH --null -e  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;whitespace&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-cce"&gt;\{\}&lt;/span&gt; + &lt;span class="pl-k"&gt;|&lt;/span&gt; nl&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/terminal界面2.png"&gt;&lt;img src="images/terminal界面2.png" alt="images/terminal界面2.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;也只能大略了解到’whitespace’在整个文档中, 有95句话提到过.&lt;/p&gt;
&lt;p&gt;而在Emacs中执行同样的命令:
  C-x grep-find;&lt;/p&gt;
&lt;p&gt;则瞬间眼明心亮, 有95句话有一个或多个whitespace这个单词, 总计有151个. 而且在 Killing.org 这个文件中有6句话, 在 text.org 中有5句, 在 Display,org 中有17句话, 在 Program.org 中也有17句, 等等,&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/emacs界面.png"&gt;&lt;img src="images/emacs界面.png" alt="images/emacs界面.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Emacs中执行命令的突出优势是简单方便的二次处理.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;小结&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;目前的流程图 Meta –&amp;gt; Control —&amp;gt; Cursor —&amp;gt; Edit
  由Meta的词源语义出发分析Emacs的快捷键绑定, 引入Ctrl键简化输入过程, 光标的移动作为edit的前置步骤, 以find-grep查询收尾基本的编辑功能.
  在切入到God’s Eyes(Dired) and God’s Hands(Booksmarks)之前,
  光速浏览File的基本操作(读取和保存)
  C-x C-f (M-x find-file) 找到并打开文件
  C-x C-r (r是read-only), 比如浏览自己的配置文件, 要避免无心修改掉东西.
  C-x C-s (s,save) 保存单个文件
  C-x s   保存全部文件, 保存全部文件功能更常用, 因此组合键也少.
  最后在个人配置上添加两行, 设置自动保存文件.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; auto-save-visited-mode &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;auto-save-visited-mode&lt;/span&gt; &lt;span class="pl-c1"&gt;+1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上完结, 马上进入精彩的部分.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-03gods-eyes-and-hands-by-dired-and-bookmarks" class="anchor" aria-hidden="true" href="#03gods-eyes-and-hands-by-dired-and-bookmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;03.God’s Eyes and Hands by Dired and Bookmarks&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-dired初窥" class="anchor" aria-hidden="true" href="#dired初窥"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dired初窥&lt;/h2&gt;
&lt;p&gt;在EmacsManual目录下调出Dird后,
  快速略扫各个文件的主要内容.
  从配置中添加下面的代码&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;define-minor-mode&lt;/span&gt; dired-follow-mode &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Diplay file at point in dired after a move.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:lighter&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; dired-f&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:global&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  (&lt;span class="pl-k"&gt;if&lt;/span&gt; dired-follow-mode (&lt;span class="pl-c1"&gt;advice-add&lt;/span&gt; &lt;span class="pl-c1"&gt;'dired-next-line&lt;/span&gt;
                                    &lt;span class="pl-c1"&gt;:after&lt;/span&gt; (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; (&lt;span class="pl-v"&gt;arg&lt;/span&gt;)
                                             (&lt;span class="pl-c1"&gt;dired-display-file&lt;/span&gt;)))
    (&lt;span class="pl-c1"&gt;advice-remove&lt;/span&gt; &lt;span class="pl-c1"&gt;'dired-next-line&lt;/span&gt; (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; (&lt;span class="pl-v"&gt;arg&lt;/span&gt;)
                                      (&lt;span class="pl-c1"&gt;dired-display-file&lt;/span&gt;)))))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;M-x 调用 &lt;code&gt;dired-follow-mode&lt;/code&gt;
  x
  在目录上C-n和C-p上下移动光标.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/pre-dired.gif"&gt;&lt;img src="images/pre-dired.gif" alt="images/pre-dired.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dired操作归纳" class="anchor" aria-hidden="true" href="#dired操作归纳"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dired操作归纳:&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Entering Dired: C-x d&lt;/li&gt;
  &lt;li&gt;Navigation: C-n C-p&lt;/li&gt;
  &lt;li&gt;Delete files: d, x, D&lt;/li&gt;
  &lt;li&gt;Flagging many files at once:
    &lt;ol&gt;
      &lt;li&gt;# (file start with #)&lt;/li&gt;
      &lt;li&gt;~ (flag all backup files whose name end with ~)&lt;/li&gt;
      &lt;li&gt;% d regexp (delete all match regex)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Visiting Files
    &lt;ul&gt;
      &lt;li&gt;f or e (visit current file)&lt;/li&gt;
      &lt;li&gt;o (another window to display and switch fucus)&lt;/li&gt;
      &lt;li&gt;C-o (visit but not switch focus)&lt;/li&gt;
      &lt;li&gt;v (view-mode)&lt;/li&gt;
      &lt;li&gt;^ (dired-up)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Dired Marks vs. Flags
    &lt;ul&gt;
      &lt;li&gt;* * excutable files&lt;/li&gt;
      &lt;li&gt;* m mark&lt;/li&gt;
      &lt;li&gt;* @ symbolic link&lt;/li&gt;
      &lt;li&gt;* / directory&lt;/li&gt;
      &lt;li&gt;* u remove the current&lt;/li&gt;
      &lt;li&gt;U remove all&lt;/li&gt;
      &lt;li&gt;% m regex&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Operatons on files
    &lt;ul&gt;
      &lt;li&gt;C copy&lt;/li&gt;
      &lt;li&gt;D delete&lt;/li&gt;
      &lt;li&gt;R rename&lt;/li&gt;
      &lt;li&gt;H hardlink&lt;/li&gt;
      &lt;li&gt;S symblic link&lt;/li&gt;
      &lt;li&gt;Z, c&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Shell Commands in Dired
    &lt;ul&gt;
      &lt;li&gt;这次阅读最大的收获, 可以直接 &amp;amp; 和 X&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Transform files names
    &lt;ul&gt;
      &lt;li&gt;% u Uppper-case&lt;/li&gt;
      &lt;li&gt;% l lowercase&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;File comparision
    &lt;ul&gt;
      &lt;li&gt;dired-diff&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Subdirectory in Dired
    &lt;ul&gt;
      &lt;li&gt;i&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Subdirectories switch in Dired
    -&lt;/li&gt;
  &lt;li&gt;Moving Over Subdirectories
    -&lt;/li&gt;
  &lt;li&gt;Hiding Subdirectories
    -&lt;/li&gt;
  &lt;li&gt;Updating the Dired Buffer
    g&lt;/li&gt;
  &lt;li&gt;Dired and find
    find-name-dired&lt;/li&gt;
  &lt;li&gt;Editing the dired Buffer
    wdired&lt;/li&gt;
  &lt;li&gt;View Images thumbnails
    image-dired-display-thumb&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-register操作归纳" class="anchor" aria-hidden="true" href="#register操作归纳"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Register操作归纳&lt;/h2&gt;
&lt;p&gt;M-x view-register r&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Saving Positions in Registers
    C-x r r (register r)
    &lt;p&gt;C-x r j r (register jump to r)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Saving Text in Registers
    C-x r s t (register save to r) “text”
    &lt;p&gt;C-x r i t (regiester insert to r) “text”
      M-x append-to-register t
      M-x prepend-to-register t&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Saving Rectangles in Registers
    C-x r r e (rectangle region to e);
    &lt;p&gt;register rectangle region to r
      C-x r i r (rectangle insert to r )&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Saving Window Configurations in Registers
    C-x r w w (register window to r)
    &lt;p&gt;C-x r f f (register frameset to f)
      C-x r j f (jump)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Keeping Numbers in Registers
    No practical value.&lt;/li&gt;
  &lt;li&gt;Keeping File Names in Registers
    (set-register r ‘(file . name))
    (set-register ?z ‘(file . “/gd/gnu/emacs/19.0/src/ChangeLog”)&lt;/li&gt;
  &lt;li&gt;Keyboard Macro Registers
    –&lt;/li&gt;
  &lt;li&gt;Bookmarks
    C-x r m (register bookmark for the current file)
    C-x r m  a-name
    C-x r M (not overwrite)
    C-x r b bookmark (jump or write)
    C-x r l (list all bookmarks)
    M-x bookmark-save
    M-x bookmark-load filename
    M-x bookmark-write filename
    M-x bookmark-delete bookmark
    M-x bookmark-insert-location bookmark&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;a id="user-content-04emacs-as-a-notebook-by-org" class="anchor" aria-hidden="true" href="#04emacs-as-a-notebook-by-org"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;04.Emacs as a Notebook by Org&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-04-case如何严肃阅读一本书" class="anchor" aria-hidden="true" href="#04-case如何严肃阅读一本书"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;04-Case:如何”严肃”阅读一本书&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-序" class="anchor" aria-hidden="true" href="#序"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;序&lt;/h2&gt;
&lt;p&gt;本文为项目”步步为营, 零秒精通Emacs”的第四章”Emacs as a Notebook by Org”&lt;/p&gt;
&lt;p&gt;一本书读过之后, 当再次拿起来的时候, 仿佛读新书一样;
  读了, 看了, “劳民伤财”投入大量时间与精力, 但是记不住怎么办?
  本文试图解决这个问题,
  以SICP的第四章(Metalinguistic Abstraction)为例&lt;/p&gt;
&lt;p&gt;论述分为六个部分:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;启动-绘制大纲, 拿着地图阅读;&lt;/li&gt;
  &lt;li&gt;过程控制, 利用org-clock以及标签, 在控制过程的同时, 为后续的复盘预备第一手的线索;&lt;/li&gt;
  &lt;li&gt;阅读管理, 正文阅读阐述如何应用标签提高阅读效率, 并为后续查询参阅提供好用的数据结构;&lt;/li&gt;
  &lt;li&gt;案例与习题, 讨论怎样索引和处理书中的案例与习题;&lt;/li&gt;
  &lt;li&gt;Org的撒手锏;&lt;/li&gt;
  &lt;li&gt;收尾, 总结探讨提高技术水平的同时, 稳扎稳打从每次阅读中提升英语能力.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;附录: 参看书目&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-启动-绘制大纲" class="anchor" aria-hidden="true" href="#启动-绘制大纲"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;启动-绘制大纲&lt;/h2&gt;
&lt;p&gt;关于大纲目录的重要性, 引用王垠在”如何成为一个天才”中的一段话:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;如果你看过John Nash 的传记《A Beautiful Mind》，就会发现他与其他人的不同.Nash看书只看封面和开头，把这书要讲的问题了解清楚之后，就自己动手解决. 最后，他完全依靠自己的“头脑暴力”创造出整本书的内容.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;天才的能力或许难以企及, 天才的方法却可学可至.
  一本书拿过来, 先看封面和目录, 纸笔绘制出来;
  目录便是大纲结构, 投入10~30分钟的时间在大纲结构上, “头脑风暴”如果你在写这本书, 将会如何展开, 根据你的经验与想象, “编造”出来大致脉络, “编造”, 无拘无束的”编造”.
  益处有四:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;梳理和回顾你的经验和知识结构;&lt;/li&gt;
  &lt;li&gt;编造的过程会滋生阅读的欲望, 因为某些部分造不出来;&lt;/li&gt;
  &lt;li&gt;当拿着”我”的思想与”作者”的思想对照之时, 阅读的过程已变为求证的过程;&lt;/li&gt;
  &lt;li&gt;两个思想互相碰撞, 有共鸣有拍案, 不仅会事半功倍的提高阅读效率; 还能更深入的掌握书中的精妙之处.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;退一步, 如果一点想法都没有, 半句话也编不出来, 那最好将背诵下来, 待到”厕上枕上马上”, 从脑子里拿出来慢慢反刍咀嚼, 驱动潜意识这种神奇的力量开始工作.&lt;/p&gt;
&lt;p&gt;纸笔绘制的方法有助于记忆, 而且可以放在手边作为地图参阅.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-用emacs-org参阅大纲结构" class="anchor" aria-hidden="true" href="#用emacs-org参阅大纲结构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;用emacs-org参阅大纲结构:&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-方法一-c-n-sshift-tab" class="anchor" aria-hidden="true" href="#方法一-c-n-sshift-tab"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;方法一: C-n S(shift)-tab&lt;/h4&gt;
&lt;p&gt;控制目录显示的深度,比如C-2 S-tab显示到2级目录,&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/启动-显示到二级目录.png"&gt;&lt;img src="images/启动-显示到二级目录.png" alt="images/启动-显示到二级目录.png" style="max-width:100%;"&gt;&lt;/a&gt;
  方法的优点是可以自定义控制目录显示的深度&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-方法二" class="anchor" aria-hidden="true" href="#方法二"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;方法二:&lt;/h4&gt;
&lt;p&gt;直接应用S-tab或者C-u Tab轮巡
  ,-&amp;gt; OVERVIEW -&amp;gt; CONTENTS -&amp;gt; SHOW ALL –.
  ‘————————————–’
  重复操作一次则显示在不同的结构&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-方法三" class="anchor" aria-hidden="true" href="#方法三"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;方法三:&lt;/h4&gt;
&lt;p&gt;TOC结构, 安装doom-emacs后, 在任意位置, 应用:toc:便能自动生成目录&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/启动-toc-2.png"&gt;&lt;img src="images/启动-toc-2.png" alt="images/启动-toc-2.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-方法四" class="anchor" aria-hidden="true" href="#方法四"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;方法四&lt;/h4&gt;
&lt;p&gt;推荐的方案,纸笔绘制, 放在手边参阅.
  &lt;a target="_blank" rel="noopener noreferrer" href="images/sicp-04.metalinguistic.jpeg"&gt;&lt;img src="images/sicp-04.metalinguistic.jpeg" alt="images/sicp-04.metalinguistic.jpeg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-过程控制" class="anchor" aria-hidden="true" href="#过程控制"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;过程控制&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-clock-in-and-clocxk-out" class="anchor" aria-hidden="true" href="#clock-in-and-clocxk-out"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clock-in and Clocxk-out&lt;/h3&gt;
&lt;p&gt;当前章节下调用  &lt;code&gt;M-x org-clock-in&lt;/code&gt;,&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;一方面可以计时,&lt;/li&gt;
  &lt;li&gt;再者则随时提醒当前所处的位置和任务, 及时跳转到其他的buffer中, 也会看到, 比如从4.4.1 Deductive Information Retrieval中激发了clock-in, 则即使在这篇文章的编辑页面, 依然能看到当下的任务, 随时提醒你回去执行.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/过程-clock-in.png"&gt;&lt;img src="images/过程-clock-in.png" alt="images/过程-clock-in.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;clock-in置顶当前任务, 为后文”阅读管理”添加标签提供便利.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-随手建立todo任务" class="anchor" aria-hidden="true" href="#随手建立todo任务"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;随手建立todo任务&lt;/h3&gt;
&lt;p&gt;比如阅读过程中,发现svg的图片格式在black模式下, 认读需要眼睛对到屏幕上仔细得瞧个清楚, 因此设置任务将inline的图片逐步去掉, 修改成文本格式.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/过程-设置todo.png"&gt;&lt;img src="images/过程-设置todo.png" alt="images/过程-设置todo.png" style="max-width:100%;"&gt;&lt;/a&gt;
  任务完成后变更todo为done&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-提出问题" class="anchor" aria-hidden="true" href="#提出问题"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;提出问题?&lt;/h3&gt;
&lt;p&gt;过程控制中最重要的一点, 初次阅读的时候, 有困惑的地方, 不理解的地方, 尤其是与你在第一步”编造”和”想象”的内容不一致的地方, 标注成”问题?”, 因为是自己的笔记, 只要稍微有一丝疑问, 马上标出来, 我觉着这是宝贵的财富.
  一方面, 如果不标注, 过5分钟, 会忘记刚才在想什么
  另一方面, 当一年后在读这本书的时候, 可以了解当时的水平, 当时的思考脉络.
  问题统一设置成 &lt;code&gt;问题?&lt;/code&gt; 的格式, 如此, 不仅是在正文的行首, 或者和在代码的内部, 都能方便查到; 又不会多余查到正常使用的”问题”这个词汇.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/过程-问题.png"&gt;&lt;img src="images/过程-问题.png" alt="images/过程-问题.png" style="max-width:100%;"&gt;&lt;/a&gt;
  问题解决后, 在后面标注v,v当做是对号.
  &lt;a target="_blank" rel="noopener noreferrer" href="images/过程-问题v.png"&gt;&lt;img src="images/过程-问题v.png" alt="images/过程-问题v.png" style="max-width:100%;"&gt;&lt;/a&gt;
  如图, 刚才的12个问题解决了7个, 剩下的可能需要发到stackoverflow上.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-小结" class="anchor" aria-hidden="true" href="#小结"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;小结：&lt;/h3&gt;
&lt;p&gt;过程控制使用了todo, 问题标签．
  后文的＂阅读管理＂中探讨, 使用filter知识点的标签 #得到-概念 #得到-语法 #得到-行文(学习到了文章的结构) #得到-关联(关联到过往的经验) #得到-应用(对后续对概念对知识点应用的思); #短评(没有想好归类的,使用短评) #洞见 #洞见-关联 #洞见-应用 #拍案 #词汇 #总结
  等等,
  使用”问题?”等标签的优点:
  一是: 为后续查询提供结构化的关键词
  二是: 可扩展性, 一本书, 二读, 三读, 四读, 可以在既有的标签规则下, 添加新的想法.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-阅读管理" class="anchor" aria-hidden="true" href="#阅读管理"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;阅读管理&lt;/h2&gt;
&lt;p&gt;金圣叹点评”水浒传”, 也是为他深入理解文章,
  阅读过程中, 给评注设置标签有三个作用:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;分类记录, 不然写得评注很多, 复盘回顾则眉毛胡子一把抓&lt;/li&gt;
  &lt;li&gt;从自己的角度, 将文章重新格式化, 正文的目录是作者的结构, 标签可以按照自己的想法构建.&lt;/li&gt;
  &lt;li&gt;为二读, 三读提供结构化的线索.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-短评" class="anchor" aria-hidden="true" href="#短评"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;短评&lt;/h3&gt;
&lt;p&gt;短评是不分类的标签, 可以意识流, 读到哪里, 有想法立刻写下来.
  无拘无束, 不给大脑是否要分类, 分类到哪里的负担.
  待到二读, 三读的时候再适当”短评”的内容归类, “短评”为后面的动作提供原材料.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/阅读-短评.png"&gt;&lt;img src="images/阅读-短评.png" alt="images/阅读-短评.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-洞见" class="anchor" aria-hidden="true" href="#洞见"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;洞见&lt;/h3&gt;
&lt;p&gt;读着读着, 对作者的阐述生发共鸣, 或者比”绘制大纲”阶段中”编造”的内容阐述的精彩, 又或者在胸中困顿许久没想明白的点, 在此处豁然开朗.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/阅读-洞见.png"&gt;&lt;img src="images/阅读-洞见.png" alt="images/阅读-洞见.png" style="max-width:100%;"&gt;&lt;/a&gt;
  举例比如 assignment and definition这一段, 从evaluator的角度, 赋值(assignment)与定义(definition)的本质是一样的, 都是set!, 这也完全符合直觉.
  此处标注为洞见, 是因为刚从python入门编程的时候, 学习赋值与函数定义.&lt;/p&gt;
&lt;pre lang="ipython"&gt;a = 9
def foo(x): return x * x
&lt;/pre&gt;
&lt;p&gt;很容易直觉到或者看到这里的”def”与”=”是一样的, 都是给一个变量赋值.
  刚学python的时候, 将这个想法分享到微信群组, 招惹来汹涌的嘲笑, 各种跳大神纷纷登场.
  上面的这一段, 也写进去, 标签是 &lt;code&gt;#洞见-关联&lt;/code&gt; 关联到既往的经验中.
  与 &lt;code&gt;洞见-关联&lt;/code&gt; 标签相对应的是 &lt;code&gt;洞见-应用&lt;/code&gt;, 既然有了这个洞见, 日后怎样应用?&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-拍案" class="anchor" aria-hidden="true" href="#拍案"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;拍案&lt;/h3&gt;
&lt;p&gt;“拍案”是”洞见”的升级, 给感情发挥的空间, 没有规则, 就是突然醍醐灌顶,拍案叫绝.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/阅读-洞见.png"&gt;&lt;img src="images/阅读-洞见.png" alt="images/阅读-洞见.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;比如这一章的开头, 作者引述的一段话&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;… It’s in words that the magic is—Abracadabra, Open Sesame, and the rest—but the magic words in one story aren’t magical in the next. The real magic is to understand which words work, and when, and for what; the trick is to learn the trick.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;起讲”metalinguistic”之前, 作者引述这样浅显直白又颇具启发的用例.
  当然与”洞见”一样, 后面在阅读的时候也加上”拍案-关联”, “拍案-应用”标签,&lt;/p&gt;
&lt;p&gt;小结:
  从短评, 洞见, 到拍案, 都是自己的思路, 后面的”得到”标签标注知识点.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-得到" class="anchor" aria-hidden="true" href="#得到"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;得到&lt;/h3&gt;
&lt;p&gt;采用”得到”标签, 是因为比”知识点”少一个字.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-得到-概念" class="anchor" aria-hidden="true" href="#得到-概念"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;得到-概念:&lt;/h4&gt;
&lt;p&gt;标注文中新阐述的概念.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/阅读-得到-概念.png"&gt;&lt;img src="images/阅读-得到-概念.png" alt="images/阅读-得到-概念.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;比如文中的一个角度对CS的定义&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Seen from this perspective, the technology for coping with large-scale computer systems merges with the technology for building new computer languages, and computer science itself becomes no more (and no less) than the discipline of constructing appropriate descriptive languages.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-得到-语法" class="anchor" aria-hidden="true" href="#得到-语法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;得到-语法：&lt;/h4&gt;
&lt;p&gt;标注语言的语法&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/阅读-得到-语法.png"&gt;&lt;img src="images/阅读-得到-语法.png" alt="images/阅读-得到-语法.png" style="max-width:100%;"&gt;&lt;/a&gt;
  上图标注if-predicate, 是因为我的潜意识里, if总是两个predicates.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-得到-八股" class="anchor" aria-hidden="true" href="#得到-八股"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;得到-八股&lt;/h4&gt;
&lt;p&gt;从文章中学习到的行文技巧, 起承转合, 类比比喻等等.
  而八股文有着严谨的起承转合的结构.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/阅读-得到-八股.png"&gt;&lt;img src="images/阅读-得到-八股.png" alt="images/阅读-得到-八股.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;再看第三章的第一段,承接前两章然后引出下文.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/阅读-得到-八股2.png"&gt;&lt;img src="images/阅读-得到-八股2.png" alt="images/阅读-得到-八股2.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-得到-1" class="anchor" aria-hidden="true" href="#得到-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;得到:&lt;/h4&gt;
&lt;p&gt;新的知识点, 没想好归类, 直接用得到.
  以上, 搜”# 得到”的时候, 可以&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-总结标签" class="anchor" aria-hidden="true" href="#总结标签"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;总结标签:&lt;/h3&gt;
&lt;p&gt;此处略过, 最好每一节都有一个总结.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-词汇" class="anchor" aria-hidden="true" href="#词汇"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;词汇:&lt;/h3&gt;
&lt;p&gt;此处承接”尾声”部分, 积累词汇与表达, “积土成山, 风雨兴焉”
  利用org的规则, 词汇标注有两种方式.
  其一:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/阅读-词汇.png"&gt;&lt;img src="images/阅读-词汇.png" alt="images/阅读-词汇.png" style="max-width:100%;"&gt;&lt;/a&gt;
  比如本章节中的两个单词, evaluate与apply.
  eval便是输入expression, 输出value;
  拆解evaluate这个单词,
  evaluate = ex(out) + value
  将value拿出来就是evaluate, 与eval的过程百分百匹配; 直觉可以从这样的”跬步”中慢慢建立起来.
  apply就献丑了.
  其二:
  应用 &lt;code&gt;vacabulary&lt;/code&gt; 标注单词&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/阅读-词汇2.png"&gt;&lt;img src="images/阅读-词汇2.png" alt="images/阅读-词汇2.png" style="max-width:100%;"&gt;&lt;/a&gt;
  标注了14个词汇.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-阅读管理小结" class="anchor" aria-hidden="true" href="#阅读管理小结"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;阅读管理小结:&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;短评, 基础的原材料标签, 有启发有想法随时记下来, 作为后续分类的基础;&lt;/li&gt;
  &lt;li&gt;洞见, 有共鸣, 有豁然开朗的地方&lt;/li&gt;
  &lt;li&gt;拍案, 醍醐灌顶, 就像高呼几声的地方&lt;/li&gt;
  &lt;li&gt;得到, 知识点&lt;/li&gt;
  &lt;li&gt;总结&lt;/li&gt;
  &lt;li&gt;词汇,&lt;/li&gt;
  &lt;li&gt;关联与应用放到相应的标签后面.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-案例与习题" class="anchor" aria-hidden="true" href="#案例与习题"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;案例与习题&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-收尾" class="anchor" aria-hidden="true" href="#收尾"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;收尾&lt;/h2&gt;
&lt;h1&gt;&lt;a id="user-content-05emacs-as-a-agenda-by-org" class="anchor" aria-hidden="true" href="#05emacs-as-a-agenda-by-org"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;05.Emacs as a Agenda by Org&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-06org-your-life-all-in-one-as--book-manager-database-manager-memory-manager-etc" class="anchor" aria-hidden="true" href="#06org-your-life-all-in-one-as--book-manager-database-manager-memory-manager-etc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;06.Org your life all-in-one as  book manager, database manager, memory manager etc&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-07programming" class="anchor" aria-hidden="true" href="#07programming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;07.Programming&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-08assistance-to-programing" class="anchor" aria-hidden="true" href="#08assistance-to-programing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;08.Assistance to Programing&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-09literate-programming" class="anchor" aria-hidden="true" href="#09literate-programming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;09.Literate Programming&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-appendix-a-learn-by-raise-quesiton-and-harvest-answer" class="anchor" aria-hidden="true" href="#appendix-a-learn-by-raise-quesiton-and-harvest-answer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Appendix A: Learn by raise quesiton and harvest answer.&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-appendix-b-git-version-control" class="anchor" aria-hidden="true" href="#appendix-b-git-version-control"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Appendix B: Git Version Control&lt;/h1&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Objects&lt;/th&gt;&lt;th&gt;Features&lt;/th&gt;&lt;th&gt;Actions:&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;0.Introduction&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Faster commands&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Stability&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Isolated Environments&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Efficient Merging&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;1.Overview&lt;/td&gt;&lt;td&gt;Objects:&lt;/td&gt;&lt;td&gt;Actions:&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;1.working directory&lt;/td&gt;&lt;td&gt;configure&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;2.staging area&lt;/td&gt;&lt;td&gt;recording&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;3.Commit history&lt;/td&gt;&lt;td&gt;undoing&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;4.developmnent branches&lt;/td&gt;&lt;td&gt;branch (non-linear)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;5.remotes&lt;/td&gt;&lt;td&gt;remote&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;2.Configuration&lt;/td&gt;&lt;td&gt;1) User Info:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git config –global user.name&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git config –global user.email&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;2) Editor:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git config –global core.editor emacs&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;3) Alias:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git config –global alias.ci commit&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.inspect&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git config -l&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;help:&lt;/td&gt;&lt;td&gt;git help log&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;man git-log&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;tldr git-log&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;3.Recoding Chaneges&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Staging area:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git add&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git rm –cached&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.inspecting:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git status&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git diff (–cached)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Commits&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git commit&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.inspecting&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git log&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git log –oneline  &amp;lt;file&amp;gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git log &amp;lt;since&amp;gt; … &amp;lt;until&amp;gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Tagging commit&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git tag -a v1.0  ‘stable version’&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;4.Undoing Changes&lt;/td&gt;&lt;td&gt;1) Woriking directory&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git reset –hard HEAD&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git clean -f (git rid of unstaged files)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.individual file:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git checkout HEAD &amp;lt;file&amp;gt; (most frequent)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;———————–+——————————+———————————————-&lt;/td&gt;&lt;td&gt;b&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;2) Staging area&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git reset HEAD &amp;lt;file&amp;gt; (extra staged file)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;(No –hard here)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;3) Commits&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.resetting&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git reset HEAD~1&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.reverting&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git revert &amp;lt;commit-id&amp;gt; (created new commit )&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.ameding&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git commit –amend&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;5.Branches&lt;/td&gt;&lt;td&gt;1) Manipulate brnaches&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.listing branches&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git branch&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.creating branches&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git branch &amp;lt;name&amp;gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git checkout -b &amp;lt;name&amp;gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.git/refs/heads/develop&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.deleting branches&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git branch -d, -D&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Checking out branches&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git checkout  &amp;lt;branch&amp;gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.detached&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git checkout -b &amp;lt;new-branch-name&amp;gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;2) Merging branches&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.fast-forward:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git checkout master&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git merge some-feature&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.3-way merge:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;same as the above&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.merge conflicts&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;HEAD&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;==================&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; some-feature&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;3) Branches workflow&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.types of branches&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;permanent or topic&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.permanent_branch&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;master(public ), develop,&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.topic_branch&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;feature and hotfix&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;4) Rebasing:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git checkout some-feature&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git rebase master&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.interactive_rebasing:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git rebase -i master&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;(Notice for rewriting)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;6.Remote Repositories&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;1) Manipulate remotes:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.listing remotes:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git remote&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git remote -v&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.creating_remotes:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git remote add &amp;lt;name&amp;gt; &amp;lt;path-to-repo.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.deleting_remotes:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git remote rm &amp;lt;remote-name&amp;gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;2) Remote branches:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.fetching_remote_branches&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git fetch &amp;lt;remote&amp;gt; &amp;lt;branch&amp;gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git branch -r&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.inspecting_remote_branches:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git log origin/master&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.merging/rebsing:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git checkout some-feature&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git fetch origin&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git merge origin/master&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;(littered with meaninglesss merge commits)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git checkout some-feature&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git fetch origin&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git rebase origin/master&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.pulling:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git pull origin/master (–rebase )&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.pushing:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git push &amp;lt;remote&amp;gt; &amp;lt;branch&amp;gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;3) Remote workflow:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.bare_repository:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git init –bare &amp;lt;path&amp;gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.centralized_workflow:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git fetch origin master&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git rebase origin/master&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;git push&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;.integrator_workflow:&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;github的模式&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Conclusion&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;1.working directory&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;2.staging area&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;3.commit history&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;4.branches&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;5.remotes&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ul&gt;
  &lt;li&gt;detached&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: checking out ‘1a’.&lt;/p&gt;
&lt;p&gt;You are in ‘detached HEAD’ state. You can look around, make experimental
  changes and commit them, and you can discard any commits you make in this
  state without impacting any branches by performing another checkout.&lt;/p&gt;
&lt;p&gt;If you want to create a new branch to retain commits you create, you may
  do so (now or later) by using -b with the checkout command again. Example:&lt;/p&gt;
&lt;p&gt;git checkout -b &amp;lt;new-branch-name&amp;gt;&lt;/p&gt;
&lt;p&gt;HEAD is now at 613ae49 Chapter 1: initial version (1a)&lt;/p&gt;
&lt;p&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD
  =======&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>AbstProcDo</author><guid isPermaLink="false">https://github.com/AbstProcDo/Master-Emacs-From-Scrach-with-Solid-Procedures</guid><pubDate>Tue, 21 Jan 2020 00:10:00 GMT</pubDate></item></channel></rss>