<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Emacs Lisp, Today</title><link>https://github.com/trending/emacs-lisp?since=daily</link><description>The top repositories on GitHub for emacs-lisp, measured daily</description><pubDate>Sun, 12 Jan 2020 01:10:21 GMT</pubDate><lastBuildDate>Sun, 12 Jan 2020 01:10:21 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>a-schaefers/systemE #1 in Emacs Lisp, Today</title><link>https://github.com/a-schaefers/systemE</link><description>&lt;p&gt;&lt;i&gt;🤣 A lightweight systemd replacement written in Emacs lisp 🤣&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="emacs.png"&gt;&lt;img src="emacs.png" alt="Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-systeme" class="anchor" aria-hidden="true" href="#systeme"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;systemE&lt;/h1&gt;
&lt;p&gt;A lightweight systemd replacement written in Emacs lisp&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;Using the tooling in this repo, I am able to boot from linux to sinit as PID1, and from there to Emacs acting as PID2 using --script mode, performing all typical rc.boot system initialization using Emacs lisp until we hit the getty.&lt;/p&gt;
&lt;p&gt;Additionally from the getty, I use Emacs as a login shell, dotfiles manager, package-manager front-end, startx / xinitrc replacement, and Window Manager. I have nearly purged shell scripts from my life entirely. For more information about these things, see my &lt;a href="https://github.com/a-schaefers/dot-emacs"&gt;.emacs repo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshot.jpg"&gt;&lt;img src="screenshot.jpg" alt="Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The rc.boot.el and rc.shutdown.el scripts are finished and I use them on my local machine. No support for fancy stuff like luks is planned.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We still depend on &lt;a href="https://core.suckless.org/sinit/" rel="nofollow"&gt;suckless "sinit"&lt;/a&gt; for PID1 (Emacs is PID2) and this needs to be rewritten in in a lisp. While &lt;strong&gt;it is easy to execute Emacs as PID 1&lt;/strong&gt;, &lt;a href="http://www.informatimago.com/linux/emacs-on-user-mode-linux.html" rel="nofollow"&gt;as evidenced here&lt;/a&gt;, Emacs does not reap zombies and I do not know how to make it reap them yet. I have found Emacs listens for the URS1 and URS2 signals, but not SIGCHLD which is what we need. We also need to figure out how to call wait () after that. Also I really like sinit at this point, and am not in a hurry to swap it out.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We still depend on busybox runit for a process supervisor and this needs to be reimplemented in elisp, or atleast converted to gnu shepherd. An Elisp service supervisor that could be communicated to using emacsclient as root would be really fun.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;One pain point is getting a statically compiled Emacs. We don't require this, but it sure would be nice. Unfortunately, when I statically compile Emacs using musl, it results in a broken Emacs.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-this-repo-is-technically-a-kiss-linux-overlay" class="anchor" aria-hidden="true" href="#this-repo-is-technically-a-kiss-linux-overlay"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;This repo is technically a &lt;a href="https://getkiss.org" rel="nofollow"&gt;kiss linux&lt;/a&gt; overlay&lt;/h2&gt;
&lt;p&gt;I recommend Kiss linux.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-the-ever-growing-list-of-helpful--credits--thank-yous" class="anchor" aria-hidden="true" href="#the-ever-growing-list-of-helpful--credits--thank-yous"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The ever-growing list of Helpful / Credits / Thank You's&lt;/h3&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; https://github.com/kisslinux/init/blob/master/lib/init/rc.boot&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; https://github.com/kisslinux/init/blob/master/lib/init/rc.shutdown&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; https://gist.github.com/lunaryorn/91a7734a8c1d93a8d1b0d3f85fe18b1e&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; https://busybox.net/FAQ.html#job_control&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; https://stackoverflow.com/questions/23299314/finding-the-exit-code-of-a-shell-command-in-elisp&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; https://github.com/Sweets/hummingbird&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; https://felipec.wordpress.com/2013/11/04/init&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; https://www.emacswiki.org/emacs/PersistentProcesses&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; https://stackoverflow.com/questions/17479529/self-contained-portable-emacs&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>a-schaefers</author><guid isPermaLink="false">https://github.com/a-schaefers/systemE</guid><pubDate>Sun, 12 Jan 2020 00:01:00 GMT</pubDate></item><item><title>hlissner/doom-emacs #2 in Emacs Lisp, Today</title><link>https://github.com/hlissner/doom-emacs</link><description>&lt;p&gt;&lt;i&gt;An Emacs configuration for the stubborn martian vimmer&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;a href="http://doomemacs.org" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/d38622bbeea8e0a3a1c42e21d2839363d21b4627/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f686c6973736e65722f646f6f6d2d656d6163732e7376673f6c6162656c3d72656c6561736526636f6c6f723d6f72616e6765" alt="Made with Doom Emacs" data-canonical-src="https://img.shields.io/github/tag/hlissner/doom-emacs.svg?label=release&amp;amp;color=orange" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://emacs.org" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/145199dd89d8ed47968846fe8dcdde64b838ffab/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d6164655f666f722d456d6163735f32362e312b2d626c756576696f6c65742e737667" alt="Made for Emacs 26.1+" data-canonical-src="https://img.shields.io/badge/Made_for-Emacs_26.1+-blueviolet.svg" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/hlissner/doom-emacs/actions"&gt;
  &lt;img src="https://github.com/hlissner/doom-emacs/workflows/CI/badge.svg" alt="Build status: develop" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://discord.gg/bcZ6P3y" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/48087b2da5b43d9130b73e6e8ad3e7b42caa3330/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446973636f72642d626c75652e7376673f6c6f676f3d646973636f7264266c6162656c3d6a6f696e" alt="Join our discord server" align="right" data-canonical-src="https://img.shields.io/badge/Discord-blue.svg?logo=discord&amp;amp;label=join" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/hlissner/doom-emacs/screenshots/main.png"&gt;&lt;img src="https://raw.githubusercontent.com/hlissner/doom-emacs/screenshots/main.png" alt="Doom Emacs Screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;b&gt;&lt;a href="/../../tree/screenshots"&gt;Screenshots&lt;/a&gt;&lt;/b&gt;
  |
  &lt;b&gt;&lt;a href="docs/getting_started.org"&gt;Get started&lt;/a&gt;&lt;/b&gt;
  |
  &lt;b&gt;&lt;a href="docs/contributing.org"&gt;Contribute&lt;/a&gt;&lt;/b&gt;
  |
  &lt;b&gt;&lt;a href="docs/index.org"&gt;Documentation&lt;/a&gt;&lt;/b&gt;
  |
  &lt;b&gt;&lt;a href="docs/faq.org"&gt;FAQ&lt;/a&gt;&lt;/b&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Quick start&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Install emacs and ripgrep through your package manager, then...&lt;/span&gt;
git clone https://github.com/hlissner/doom-emacs &lt;span class="pl-k"&gt;~&lt;/span&gt;/.emacs.d
&lt;span class="pl-k"&gt;~&lt;/span&gt;/.emacs.d/bin/doom install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-doom-emacs"&gt;What is Doom Emacs&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#dooms-mantras"&gt;Doom's mantras&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-help"&gt;Getting Help&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#community"&gt;Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-what-is-doom-emacs" class="anchor" aria-hidden="true" href="#what-is-doom-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Doom Emacs&lt;/h1&gt;
&lt;a href="http://ultravioletbat.deviantart.com/art/Yay-Evil-111710573" rel="nofollow"&gt;
  &lt;img src="https://github.com/hlissner/doom-emacs/raw/screenshots/cacochan.png" align="right" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;p&gt;It is a story as old as time. A stubborn, shell-dwelling, and melodramatic
vimmer -- envious of the features of modern text editors -- spirals into despair
before succumbing to the &lt;a href="https://github.com/emacs-evil/evil"&gt;dark side&lt;/a&gt;. This is his config.&lt;/p&gt;
&lt;p&gt;Doom is a configuration for &lt;a href="https://www.gnu.org/software/emacs/" rel="nofollow"&gt;GNU Emacs&lt;/a&gt;
designed to make Emacs faster and easier to customize. It can serve as framework
for your own configuration or a resource for fellow Emacs enthusiasts who want
to learn more about our favorite OS.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dooms-mantras" class="anchor" aria-hidden="true" href="#dooms-mantras"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Doom's mantras&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Gotta go fast.&lt;/strong&gt; Startup and run-time performance are high priorities.
Expensive functionality (built-in or in plugins) is modified and optimized
toward this end, otherwise, they must be opt-in.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Close to metal.&lt;/strong&gt; There's less between you and vanilla Emacs, by design.
There's less to grok. Modules should be syntactically sweet and backend logic
explicit and abstraction-light. The code itself ought to be designed as if
grokking it were part of the user experience; and it is!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Opinionated, but not stubborn.&lt;/strong&gt; Doom is a bundle of reasonable defaults
and curated opinions, but you aren't stuck with it. Use as little or as much
of it as you like. Use it as-is as a complete Emacs distribution; disable
everything and use it as a baseline for your own; or anywhere in between.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Your system, your rules.&lt;/strong&gt; There are more ways to set up your programming
environment than there are dislikes on Youtube Rewind '18, so Doom and its
plugins promise not to &lt;em&gt;automatically&lt;/em&gt; (and definitely not &lt;em&gt;silently&lt;/em&gt;) install
system dependencies. This means fonts, packages and programs. &lt;code&gt;doom doctor&lt;/code&gt;
will tell you what's missing though!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A curated set of sane defaults for all packages, all (major) OSes, and Emacs
itself.&lt;/li&gt;
&lt;li&gt;Support for &lt;em&gt;many&lt;/em&gt; programming languages. Too many to list. Includes syntax
highlighting, linters/checker integration, inline code evaluation, code
completion (where possible), REPLs, documentation lookups, snippets, and more!&lt;/li&gt;
&lt;li&gt;Support for &lt;em&gt;many&lt;/em&gt; tools, like docker, pass, ansible, terraform, and more.&lt;/li&gt;
&lt;li&gt;Minimalistic good looks inspired by modern editors.&lt;/li&gt;
&lt;li&gt;A modular architecture for a more organized Emacs configuration.&lt;/li&gt;
&lt;li&gt;A custom elisp library to help you simplify your config.&lt;/li&gt;
&lt;li&gt;A declarative &lt;a href="core/autoload/packages.el"&gt;package management system&lt;/a&gt; (powered by
&lt;a href="https://github.com/raxod502/straight.el"&gt;straight.el&lt;/a&gt;) with a command line interface. Install packages
from anywhere, not just (M)ELPA.&lt;/li&gt;
&lt;li&gt;Vim-emulation powered by &lt;a href="https://github.com/emacs-evil/evil"&gt;evil-mode&lt;/a&gt;, including ports of
popular vim plugins and functionality.&lt;/li&gt;
&lt;li&gt;A Spacemacs-esque &lt;a href="modules/config/default/+evil-bindings.el"&gt;keybinding scheme&lt;/a&gt;, centered around leader
and localleader prefix keys (&lt;kbd&gt;SPC&lt;/kbd&gt; and &lt;kbd&gt;SPC&lt;/kbd&gt;&lt;kbd&gt;m&lt;/kbd&gt;, by
default).&lt;/li&gt;
&lt;li&gt;A rule-based &lt;a href="modules/ui/popup/README.org"&gt;popup management system&lt;/a&gt; that dictates how
temporary or disposable buffers are displayed (and disposed of).&lt;/li&gt;
&lt;li&gt;Automatic indentation detection and &lt;a href="http://editorconfig.org/" rel="nofollow"&gt;editorconfig&lt;/a&gt;
integration. Let someone else argue about tabs vs &lt;strong&gt;_*&lt;strong&gt;spaces&lt;/strong&gt;*_&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Project-management tools and framework-specific minor modes with their own
snippets libraries.&lt;/li&gt;
&lt;li&gt;Project search (and replace) utilities, powered by &lt;a href="https://github.com/BurntSushi/ripgrep"&gt;ripgrep&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Isolated and persistent workspaces (also substitutes for vim tabs).&lt;/li&gt;
&lt;li&gt;An environment variables file generator and loader, so that Emacs can
perfectly inherit your shell configuration.&lt;/li&gt;
&lt;li&gt;Everything is optional!&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;p&gt;We have &lt;a href="https://discord.gg/bcZ6P3y" rel="nofollow"&gt;a Discord server&lt;/a&gt;! Hop on and say hi!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;p&gt;Encountered strange behavior or an error? Here are some things to try before you
shoot off that bug report:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;bin/doom refresh&lt;/code&gt;. This ensures Doom is properly set up and its autoloads
files are up-to-date.&lt;/li&gt;
&lt;li&gt;If you have byte-compiled your config (with &lt;code&gt;bin/doom compile&lt;/code&gt;), see if
&lt;code&gt;bin/doom clean&lt;/code&gt; makes the issue go away. Never debug issues with a
byte-compiled config, it will make your job harder.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;bin/doom doctor&lt;/code&gt; to detect common issues in your development environment.&lt;/li&gt;
&lt;li&gt;Search Doom's issue tracker for mention of any error messages you've received.&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/faq.org"&gt;Visit our FAQ&lt;/a&gt; to see if your issue is listed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If all else fails, &lt;a href="https://github.com/hlissner/doom-emacs/issues/new"&gt;file that bug report&lt;/a&gt;! Please include the
behavior you've observed, the behavior you expected, and any error messages or
warnings logged to the *Messages* buffer (can be opened with &lt;kbd&gt;SPC h
e&lt;/kbd&gt; or &lt;code&gt;M-x view-echo-area-messages&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;It's a great help if you included a backtrace with errors, i.e. &lt;code&gt;M-x toggle-debug-on-error&lt;/code&gt; then recreating the error(s).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Doom (and my Emacs work in general) is a labor of love and incurable madness,
done on my spare time. If you'd like to support my work, there are many things
you can do to help; I welcome any contribution!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I love pull requests and bug reports. Check out the &lt;a href="docs/contributing.org"&gt;Contributing
Guidelines&lt;/a&gt; to find out how you can help out.&lt;/li&gt;
&lt;li&gt;I welcome Elisp pointers! Don't hesitate to &lt;a href="https://github.com/hlissner/doom-emacs/issues/new"&gt;tell me my Elisp-fu
sucks&lt;/a&gt; (but please tell me why).&lt;/li&gt;
&lt;li&gt;Hop on &lt;a href="https://discord.gg/bcZ6P3y" rel="nofollow"&gt;our Discord server&lt;/a&gt; and say hi! Help others out, hang out
or talk to me about Emacs, or gamedev, or programming, machine learning,
physics, pixel art, anime, gaming -- anything you like. Nourish this lonely
soul!&lt;/li&gt;
&lt;li&gt;If you'd like to support my work financially, consider buying me a drink
through &lt;a href="https://liberapay.com/hlissner/donate" rel="nofollow"&gt;liberapay&lt;/a&gt; or &lt;a href="https://paypal.me/henriklissner/10" rel="nofollow"&gt;paypal&lt;/a&gt;. Donations are a
great help. My work here contends with studies, ventures in indie gamedev, and
my freelance work.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>hlissner</author><guid isPermaLink="false">https://github.com/hlissner/doom-emacs</guid><pubDate>Sun, 12 Jan 2020 00:02:00 GMT</pubDate></item><item><title>emacs-lsp/lsp-mode #3 in Emacs Lisp, Today</title><link>https://github.com/emacs-lsp/lsp-mode</link><description>&lt;p&gt;&lt;i&gt;Emacs client/library for the Language Server Protocol&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="org" data-path="README.org"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://melpa.org/#/lsp-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9af67d09707b47dd26115a48505d481f9dcdd805/68747470733a2f2f6d656c70612e6f72672f7061636b616765732f6c73702d6d6f64652d62616467652e737667" alt="https://melpa.org/packages/lsp-mode-badge.svg" data-canonical-src="https://melpa.org/packages/lsp-mode-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://stable.melpa.org/#/lsp-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7a2cc5cd5fb1a171dde8e45435a353f849853123/68747470733a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f6c73702d6d6f64652d62616467652e737667" alt="https://stable.melpa.org/packages/lsp-mode-badge.svg" data-canonical-src="https://stable.melpa.org/packages/lsp-mode-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://gitter.im/emacs-lsp/lsp-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/40a1fe7a717b706a101e6e1d917dfdb3f422a8c3/68747470733a2f2f6261646765732e6769747465722e696d2f656d6163732d6c73702f6c73702d6d6f64652e737667" alt="https://badges.gitter.im/emacs-lsp/lsp-mode.svg" data-canonical-src="https://badges.gitter.im/emacs-lsp/lsp-mode.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://travis-ci.org/emacs-lsp/lsp-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5674691682ca175709f1682ede1931f44a188aef/68747470733a2f2f7472617669732d63692e6f72672f656d6163732d6c73702f6c73702d6d6f64652e7376673f6272616e63683d6d6173746572" alt="https://travis-ci.org/emacs-lsp/lsp-mode.svg?branch=master" data-canonical-src="https://travis-ci.org/emacs-lsp/lsp-mode.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://coveralls.io/github/emacs-lsp/lsp-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/536576b840965fd3ec331aeec141a1dc36469075/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f656d6163732d6c73702f6c73702d6d6f64652f62616467652e737667" alt="https://coveralls.io/repos/github/emacs-lsp/lsp-mode/badge.svg" data-canonical-src="https://coveralls.io/repos/github/emacs-lsp/lsp-mode/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="examples/logo.png"&gt;&lt;img src="examples/logo.png" alt="examples/logo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-language-server-protocol-support-for-emacs" class="anchor" aria-hidden="true" href="#language-server-protocol-support-for-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Language Server Protocol Support for Emacs&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="examples/head.png"&gt;&lt;img src="examples/head.png" alt="examples/head.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="#language-server-protocol-support-for-emacs"&gt;Language Server Protocol Support for Emacs&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="#why"&gt;Why?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#install-via-melpa"&gt;Install via melpa&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#configuration"&gt;Configuration&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#install-language-server"&gt;Install language server&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href="#configure-lsp-mode"&gt;Configure lsp-mode&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href="#vanilla-emacs"&gt;Vanilla Emacs&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#spacemacs"&gt;Spacemacs&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#use-package"&gt;use-package&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#docker"&gt;Docker&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href="#how-does-it-work"&gt;How does it work?&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#supported-languages"&gt;Supported languages&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#commands"&gt;Commands&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#settings"&gt;Settings&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#screenshots"&gt;Screenshots&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#extensions"&gt;Extensions&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#tramp"&gt;TRAMP&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href="#how-does-it-work-1"&gt;How does it work?&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#sample-configuration"&gt;Sample configuration&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#dealing-with-stderr"&gt;Dealing with stderr&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#limitations"&gt;Limitations&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#file-watches"&gt;File watches&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#contributions"&gt;Contributions&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#members"&gt;Members&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#adding-support-for-languages"&gt;Adding support for languages&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#registering-server"&gt;Registering server&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href="#sections"&gt;Sections&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#see-also"&gt;See also&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-why" class="anchor" aria-hidden="true" href="#why"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; &lt;b&gt;Community Driven&lt;/b&gt;&lt;/li&gt;
  &lt;li&gt;&lt;g-emoji class="g-emoji" alias="gem" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f48e.png"&gt;💎&lt;/g-emoji&gt; &lt;b&gt;Fully featured&lt;/b&gt; - supports &lt;b&gt;all&lt;/b&gt; features in Language Server Protocol v3.14.&lt;/li&gt;
  &lt;li&gt;&lt;g-emoji class="g-emoji" alias="rocket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png"&gt;🚀&lt;/g-emoji&gt; &lt;b&gt;Easy to configure&lt;/b&gt; - works out of the box and automatically upgrades if additional packages are present&lt;/li&gt;
  &lt;li&gt;&lt;g-emoji class="g-emoji" alias="star2" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f31f.png"&gt;🌟&lt;/g-emoji&gt; &lt;b&gt;Flexible&lt;/b&gt; - could be configured as full-blown IDE with flashy UI or minimal distraction free&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;Client for &lt;a href="https://github.com/Microsoft/language-server-protocol/"&gt;Language Server Protocol&lt;/a&gt; (v3.14). &lt;a href="https://github.com/emacs-lsp/lsp-mode"&gt;lsp-mode&lt;/a&gt; aims to provide IDE-like experience by providing optional integration with the most popular Emacs packages like &lt;code&gt;company&lt;/code&gt;, &lt;code&gt;flycheck&lt;/code&gt; and &lt;code&gt;projectile&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Non-blocking asynchronous calls&lt;/li&gt;
  &lt;li&gt;Real-time Diagnostics/linting (via builtin &lt;code&gt;flymake&lt;/code&gt; when Emacs &amp;gt; 26, requires flymake&amp;gt;=1.0.5 or &lt;a href="https://github.com/flycheck/flycheck"&gt;flycheck&lt;/a&gt;/&lt;a href="https://github.com/emacs-lsp/lsp-ui"&gt;lsp-ui&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Code completion - using &lt;a href="https://github.com/tigersoldier/company-lsp"&gt;company-lsp&lt;/a&gt; or builtin &lt;code&gt;completion-at-point&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Hovers - using &lt;a href="https://github.com/emacs-lsp/lsp-ui"&gt;lsp-ui&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Code actions - using &lt;code&gt;lsp-execute-code-action&lt;/code&gt; or &lt;a href="https://github.com/emacs-lsp/lsp-ui"&gt;lsp-ui&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Code outline - using builtin &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Imenu.html" rel="nofollow"&gt;imenu&lt;/a&gt; or &lt;code&gt;helm-imenu&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Code navigation - using builtin &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Xref.html" rel="nofollow"&gt;xref&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Code lens (references/implementations) - using builtin &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Xref.html" rel="nofollow"&gt;xref&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Highlights&lt;/li&gt;
  &lt;li&gt;Formatting&lt;/li&gt;
  &lt;li&gt;Debugger - &lt;a href="https://github.com/yyoncho/dap-mode/"&gt;dap-mode&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Helm integration - &lt;a href="https://github.com/emacs-lsp/helm-lsp/"&gt;helm-lsp&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Ivy integration - &lt;a href="https://github.com/emacs-lsp/lsp-ivy/"&gt;lsp-ivy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Treemacs integration - &lt;a href="https://github.com/emacs-lsp/lsp-treemacs"&gt;lsp-treemacs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Semantic highlighting (as currently implemented by JDT LS and unreleased builds of clangd, cf. &lt;a href="https://github.com/microsoft/vscode-languageserver-node/pull/367"&gt;Semantic highlighting spec&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-install-via-melpa" class="anchor" aria-hidden="true" href="#install-via-melpa"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install via melpa&lt;/h3&gt;
&lt;p&gt;The recommended way to install &lt;code&gt;lsp-mode&lt;/code&gt; is via &lt;code&gt;package.el&lt;/code&gt; - the built-in package manager in Emacs. &lt;code&gt;lsp-mode&lt;/code&gt; is available on the two major &lt;code&gt;package.el&lt;/code&gt; community maintained repos - &lt;a href="http://stable.melpa.org" rel="nofollow"&gt;MELPA Stable&lt;/a&gt; and &lt;a href="http://melpa.org" rel="nofollow"&gt;MELPA&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;M-x &lt;code&gt;package-install&lt;/code&gt; [RET] &lt;code&gt;lsp-mode&lt;/code&gt; [RET]&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-install-language-server" class="anchor" aria-hidden="true" href="#install-language-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install language server&lt;/h3&gt;
&lt;p&gt;Check the table bellow with the list of supported servers and the corresponding instructions on how to install the server.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-configure-lsp-mode" class="anchor" aria-hidden="true" href="#configure-lsp-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configure lsp-mode&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-vanilla-emacs" class="anchor" aria-hidden="true" href="#vanilla-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vanilla Emacs&lt;/h4&gt;
&lt;p&gt;You could go minimal and use &lt;code&gt;lsp-mode&lt;/code&gt; as it is without external packages with the built-in &lt;code&gt;flymake&lt;/code&gt; and &lt;code&gt;completion-at-point&lt;/code&gt; or you could install the following extensions for better experience:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;install &lt;a href="https://github.com/emacs-lsp/lsp-ui"&gt;lsp-ui&lt;/a&gt; for &lt;a href="https://github.com/flycheck/flycheck"&gt;flycheck&lt;/a&gt; integration and higher level UI modules.&lt;/li&gt;
  &lt;li&gt;install &lt;a href="https://github.com/tigersoldier/company-lsp"&gt;company-lsp&lt;/a&gt; if you want to use &lt;code&gt;company-mode&lt;/code&gt; for completion.&lt;/li&gt;
  &lt;li&gt;install &lt;a href="https://github.com/emacs-lsp/lsp-treemacs"&gt;lsp-treemacs&lt;/a&gt; for project wide error overview.&lt;/li&gt;
  &lt;li&gt;install &lt;a href="https://github.com/emacs-lsp/helm-lsp"&gt;helm-lsp&lt;/a&gt; provides on type completion for &lt;code&gt;xref-apropos&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;install &lt;a href="https://github.com/emacs-lsp/dap-mode"&gt;dap-mode&lt;/a&gt; if your language is supported by the debugger.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'lsp-mode&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'XXX-mode-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'lsp&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where &lt;code&gt;XXX&lt;/code&gt; could be major mode like &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;java&lt;/code&gt;, &lt;code&gt;c++&lt;/code&gt;. Alternatively, if you want to minimize you configuration you may use &lt;code&gt;prog-mode-hook&lt;/code&gt;. In case you do that, &lt;code&gt;lsp&lt;/code&gt; will try to start for each programming mode and echo a message when there is no client registered for the current mode or if the corresponding server is not present. In addition, &lt;code&gt;lsp-mode&lt;/code&gt; will automatically detect and configure &lt;a href="https://github.com/emacs-lsp/lsp-ui"&gt;lsp-ui&lt;/a&gt; and &lt;a href="https://github.com/tigersoldier/company-lsp"&gt;company-lsp&lt;/a&gt;. To turn off that behavior you could set &lt;code&gt;lsp-auto-configure&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To defer LSP server startup (and DidOpen notifications) until the buffer is visible you can use &lt;code&gt;lsp-deferred&lt;/code&gt; instead of &lt;code&gt;lsp&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'XXX-mode-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'lsp-deferred&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-spacemacs" class="anchor" aria-hidden="true" href="#spacemacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spacemacs&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/emacs-lsp/lsp-mode"&gt;lsp-mode&lt;/a&gt; is included in spacemacs develop branch. Add &lt;code&gt;lsp&lt;/code&gt; to &lt;code&gt;dotspacemacs-configuration-layers&lt;/code&gt; and configure the language that you want to use to be backed by &lt;code&gt;lsp&lt;/code&gt; backend.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-use-package" class="anchor" aria-hidden="true" href="#use-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;use-package&lt;/h4&gt;
&lt;p&gt;Replace &lt;code&gt;(require 'lsp-mode)&lt;/code&gt; with the following if you use use-package.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-mode
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; (XXX-mode &lt;span class="pl-k"&gt;.&lt;/span&gt; lsp)
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; lsp)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; optionally&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-ui &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; lsp-ui-mode)
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; company-lsp &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; company-lsp)
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; helm-lsp &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; helm-lsp-workspace-symbol)
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-treemacs &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; lsp-treemacs-errors-list)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; optionally if you want to use debugger&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; dap-mode)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; (use-package dap-LANGUAGE) to load the dap adapter for your language&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To defer LSP server startup (and DidOpen notifications) until the buffer is visible you can use &lt;code&gt;lsp-deferred&lt;/code&gt; instead of &lt;code&gt;lsp&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-mode
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; (XXX-mode &lt;span class="pl-k"&gt;.&lt;/span&gt; lsp-deferred)
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; (lsp lsp-deferred))&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h4&gt;
&lt;p&gt;Refer to &lt;a href="https://github.com/emacs-lsp/lsp-docker/"&gt;lsp-docker&lt;/a&gt; README which provide a guide how you can run &lt;code&gt;lsp-mode&lt;/code&gt; in &lt;code&gt;docker&lt;/code&gt; container.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-does-it-work" class="anchor" aria-hidden="true" href="#how-does-it-work"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How does it work?&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;lsp-mode&lt;/code&gt; has predefined list of server configurations (loaded in &lt;code&gt;lsp-clients.el&lt;/code&gt;) containing a mapping from &lt;code&gt;major-mode&lt;/code&gt; to the server configuration or by using activation function. In addition to the default server configuration located in &lt;code&gt;lsp-clients.el&lt;/code&gt; there are few languages servers which require separate package(check &lt;a href="#supported-languages"&gt;Supported languages&lt;/a&gt;). When you open a file from a particular project &lt;code&gt;lsp-mode&lt;/code&gt; and call &lt;code&gt;lsp&lt;/code&gt; command &lt;code&gt;lsp-mode&lt;/code&gt; will look for server registrations able to handle current file. If there is such client &lt;code&gt;lsp-mode&lt;/code&gt; will look for the project root. If you open a file from the project for the first time you will be prompted to define the current project root. Once the project root is selected it is saved in &lt;code&gt;lsp-session&lt;/code&gt; file and it will be loaded the next time you start Emacs so you no longer will be asked for a project root when you open a file from that project. Later if you want to change the project root you may use &lt;code&gt;lsp-workspace-folder-remove&lt;/code&gt; to remove the project and call &lt;code&gt;lsp-workspace-folder-add&lt;/code&gt; to add the root. If you want to force starting a particular language server in a file you may use &lt;code&gt;C-u&lt;/code&gt; &lt;code&gt;M-x&lt;/code&gt; &lt;code&gt;lsp&lt;/code&gt; which will prompt you to select language server to start.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-languages" class="anchor" aria-hidden="true" href="#supported-languages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported languages&lt;/h2&gt;
&lt;p&gt;Some of the servers are directly supported by &lt;code&gt;lsp-mode&lt;/code&gt; by requiring
  &lt;code&gt;lsp-clients.el&lt;/code&gt; while others require installing additional packages which provide
  server specific functionality.&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Language&lt;/th&gt;&lt;th&gt;Language Server&lt;/th&gt;&lt;th&gt;Built-in&lt;/th&gt;&lt;th&gt;Installation command&lt;/th&gt;&lt;th&gt;Debugger&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Ada&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/AdaCore/ada_language_server"&gt;ada_language_server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/AdaCore/ada_language_server#install"&gt;Installation instructions&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (gdb)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Angular&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/angular/vscode-ng-language-service/"&gt;vscode-ng-language-service&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-mode/wiki/Install-Angular-Language-server"&gt;Installation instructions&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Not relevant&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Bash&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/mads-hartmann/bash-language-server"&gt;bash-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm i -g bash-language-server&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C++&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/MaskRay/ccls"&gt;ccls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/MaskRay/emacs-ccls"&gt;emacs-ccls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/MaskRay/ccls"&gt;ccls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (gdb or lldb)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C++&lt;/td&gt;&lt;td&gt;&lt;a href="https://clang.llvm.org/extra/clangd.html" rel="nofollow"&gt;clangd&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://clang.llvm.org/extra/clangd.html" rel="nofollow"&gt;clangd&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (gdb or lldb)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C++&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/cquery-project/cquery"&gt;cquery&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/cquery-project/emacs-cquery"&gt;emacs-cquery&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/cquery-project/cquery"&gt;cquery&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (gdb or lldb)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C#&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/OmniSharp/omnisharp-roslyn"&gt;OmniSharp-Roslyn&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/OmniSharp/omnisharp-roslyn"&gt;OmniSharp-Roslyn&lt;/a&gt;&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Clojure&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/snoe/clojure-lsp"&gt;clojure-lsp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/snoe/clojure-lsp"&gt;clojure-lsp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Crystal&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/crystal-lang-tools/scry"&gt;scry&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/crystal-lang-tools/scry"&gt;scry&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;CSS/LessCSS/SASS/SCSS&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/vscode-langservers/vscode-css-languageserver-bin"&gt;css&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g vscode-css-languageserver-bin&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Dart&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/dart-lang/sdk/blob/master/pkg/analysis_server/tool/lsp_spec/README.md"&gt;dart_analysis_server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;built into dart-sdk&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Dockerfile&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/rcjsuen/dockerfile-language-server-nodejs"&gt;dockerfile-language-server-nodejs&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g dockerfile-language-server-nodejs&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Dart&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/natebosch/dart_language_server"&gt;dart_language_server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;pub global activate dart_language_server&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Elixir&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/JakeBecker/elixir-ls"&gt;elixir-ls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/JakeBecker/elixir-ls"&gt;elixir-ls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Elm&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/elm-tooling/elm-language-server"&gt;elmLS&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm i -g @elm-tooling/elm-language-server, or clone the repository and follow installation instructions&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Erlang&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/erlang-ls/erlang_ls"&gt;erlang_ls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/erlang-ls/erlang_ls"&gt;erlang_ls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Eslint&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/Microsoft/vscode-eslint"&gt;eslint&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-mode/wiki/LSP-ESlint-integration"&gt;LSP ESLint Guide&lt;/a&gt;&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;F#&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/fsharp/FsAutoComplete"&gt;fsautocomplete&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Automatic by &lt;a href="https://github.com/emacs-lsp/lsp-mode/blob/master/lsp-fsharp.el"&gt;lsp-fsharp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Fortran&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/hansec/fortran-language-server"&gt;fortran-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;pip install fortran-language-server&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Go&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/golang/tools/tree/master/gopls"&gt;gopls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;code&gt;go get golang.org/x/tools/gopls@latest&lt;/code&gt; &lt;a href="https://github.com/golang/tools/blob/master/gopls/doc/user.md#installation"&gt;docs&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Go&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/saibing/bingo"&gt;bingo&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/saibing/bingo/wiki/Install"&gt;bingo&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Groovy&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/palantir/language-servers"&gt;groovy-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/palantir/language-servers"&gt;groovy-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Hack&lt;/td&gt;&lt;td&gt;&lt;a href="https://docs.hhvm.com/hhvm/" rel="nofollow"&gt;hhvm&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://docs.hhvm.com/hhvm/installation/introduction" rel="nofollow"&gt;hhvm&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;HTML&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/vscode-langservers/vscode-html-languageserver"&gt;html&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g vscode-html-languageserver-bin&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Haskell&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/haskell/haskell-ide-engine"&gt;IDE engine&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-haskell"&gt;lsp-haskell&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/haskell/haskell-ide-engine"&gt;IDE engine&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Lua&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/EmmyLua/EmmyLua-LanguageServer"&gt;EmmyLua&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-mode/wiki/Install-EmmyLua-Language-server"&gt;Installation&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Java&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/eclipse/eclipse.jdt.ls"&gt;Eclipse JDT LS&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-java"&gt;lsp-java&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Automatic by &lt;a href="https://github.com/emacs-lsp/lsp-java"&gt;lsp-java&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;JavaScript/TypeScript&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/theia-ide/typescript-language-server"&gt;typescript-language-server&lt;/a&gt;  (recommended)&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm i -g typescript-language-server; npm i -g typescript&lt;/td&gt;&lt;td&gt;Yes (Firefox/Chrome)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;JavaScript/TypeScript&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/sourcegraph/javascript-typescript-langserver"&gt;javascript-typescript-stdio&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm i -g javascript-typescript-langserver&lt;/td&gt;&lt;td&gt;Yes (Firefox/Chrome)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;JavaScript Flow&lt;/td&gt;&lt;td&gt;&lt;a href="https://flow.org" rel="nofollow"&gt;flow&lt;/a&gt; (add-on if working on a Flow file)&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://flow.org" rel="nofollow"&gt;flow&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (Firefox/Chrome)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Json&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/vscode-langservers/vscode-json-languageserver"&gt;vscode-json-languageserver&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Automatic or manual by &lt;code&gt;npm i -g vscode-json-languageserver&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Julia&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/non-Jedi/lsp-julia"&gt;lsp-julia&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/non-Jedi/lsp-julia"&gt;lsp-julia&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/JuliaEditorSupport/LanguageServer.jl"&gt;LanguageServer.jl&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Kotlin&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/fwcd/KotlinLanguageServer"&gt;kotlin-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/fwcd/KotlinLanguageServer"&gt;kotlin-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Nim&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/PMunch/nimlsp"&gt;nimlsp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;code&gt;nimble install nimlsp&lt;/code&gt;&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;OCaml&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/ocaml-lsp/ocaml-language-server"&gt;ocaml-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/ocaml-lsp/ocaml-language-server"&gt;ocaml-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;OCaml&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/ocaml/ocaml-lsp"&gt;ocaml-lsp-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/ocaml/ocaml-lsp"&gt;ocaml-lsp-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;PHP(recommended)&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/bmewburn/vscode-intelephense"&gt;intelephense&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm i intelephense -g&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;PHP&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/felixfbecker/php-language-server"&gt;php-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/felixfbecker/php-language-server"&gt;php-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Powershell&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/PowerShell/PowerShellEditorServices"&gt;PowerShellEditorServices&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Automatic&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Python&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/palantir/python-language-server"&gt;pyls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;pip install ‘python-language-server[all]’&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Python(Microsoft)&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/Microsoft/python-language-server"&gt;Microsoft Python Language Server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-python-ms"&gt;lsp-python-ms&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-python-ms"&gt;lsp-python-ms&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;R&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/REditorSupport/languageserver"&gt;languageserver&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;install.packages(“languageserver”)&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Ruby&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/castwide/solargraph"&gt;solargraph&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;gem install solargraph&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Rust&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/rust-lang/rls"&gt;rls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/rust-lang/rls"&gt;rls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Rust&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/rust-analyzer/rust-analyzer"&gt;rust-analyzer&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/rust-analyzer/rust-analyzer#language-server-quick-start"&gt;rust-analyzer&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Scala&lt;/td&gt;&lt;td&gt;&lt;a href="https://scalameta.org/metals" rel="nofollow"&gt;Metals&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://scalameta.org/metals/docs/editors/emacs.html" rel="nofollow"&gt;Metals&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Swift&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/apple/sourcekit-lsp"&gt;sourcekit-LSP&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-sourcekit"&gt;lsp-sourcekit&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/apple/sourcekit-lsp"&gt;sourcekit-LSP&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (via llvm debug adapter)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Terraform&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/juliosueiras/terraform-lsp"&gt;terraform-lsp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;Git clone outside of &lt;code&gt;$GOPATH&lt;/code&gt;; go install. (Requires go &amp;gt; 1.11)&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;TeX, LaTeX, etc.&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/astoff/digestif"&gt;Digestif&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;luarocks install –server=&lt;a href="http://luarocks.org/dev" rel="nofollow"&gt;http://luarocks.org/dev&lt;/a&gt; digestif&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Verilog/SystemVerilog&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/suoto/hdl_checker"&gt;hdl_checker&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;pip install hdl-checker –upgrade&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;VHDL&lt;/td&gt;&lt;td&gt;&lt;a href="http://www.vhdltool.com" rel="nofollow"&gt;VHDL Tool&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Download from &lt;a href="http://www.vhdltool.com/download" rel="nofollow"&gt;http://www.vhdltool.com/download&lt;/a&gt;&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Vimscript&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/iamcco/vim-language-server"&gt;vim-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g vim-language-server&lt;/td&gt;&lt;td&gt;n/a&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Vue&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/vuejs/vetur/tree/master/server"&gt;vue-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g vue-language-server&lt;/td&gt;&lt;td&gt;Yes (Firefox/Chrome)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;XML&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/angelozerr/lsp4xml"&gt;lsp4xml&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Download from &lt;a href="https://github.com/angelozerr/lsp4xml/releases"&gt;lsp4xml releases&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;YAML&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/redhat-developer/yaml-language-server"&gt;yaml&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g yaml-language-server&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-commands" class="anchor" aria-hidden="true" href="#commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commands&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;lsp-describe-session&lt;/code&gt; - Display session folders and running servers.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-describe-thing-at-point&lt;/code&gt; - Display help for the thing at point.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-execute-code-action&lt;/code&gt; - Execute code action&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-format-buffer&lt;/code&gt; - Format current buffer&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-organize-imports&lt;/code&gt; - Organize library imports&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-goto-implementation&lt;/code&gt; - Go to implementation&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-goto-type-definition&lt;/code&gt; - Go to type definition&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-rename&lt;/code&gt; - Rename symbol at point&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-restart-workspace&lt;/code&gt; - Restart project&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-symbol-highlight&lt;/code&gt; - Highlight all relevant references to the symbol under point.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-workspace-folders-add&lt;/code&gt; - Add workspace folder&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-workspace-folders-remove&lt;/code&gt; - Remove workspace folder&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-workspace-folders-open&lt;/code&gt; - Open a project directory in dired&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;imenu&lt;/code&gt; or &lt;code&gt;helm-imenu&lt;/code&gt; - display document structure.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;completion-at-point&lt;/code&gt; - display completion using built-in emacs &lt;code&gt;completion-at-point&lt;/code&gt; framework.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-find-definition&lt;/code&gt; - to find the definition for the symbol under point.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-find-references&lt;/code&gt; - Find references for the symbol under point.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-disconnect&lt;/code&gt; - Disconnect the buffer from the language server.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-lens-show&lt;/code&gt; - Show lenses in the current file&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-lens-hide&lt;/code&gt; - Hide lenses in the current file&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-lens-mode&lt;/code&gt;  - Turn on/off lenses in the current file.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-avy-lens&lt;/code&gt; - Click lens using &lt;code&gt;avy&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-signature-activate&lt;/code&gt; - activate signature help. Bound to &lt;code&gt;C-S-SPC&lt;/code&gt; by default.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-signature-next&lt;/code&gt; - show next signature. Bound to &lt;code&gt;M-n&lt;/code&gt; when signature help is activated.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-signature-previous&lt;/code&gt; - show previous signature. Bound to &lt;code&gt;M-p&lt;/code&gt; when signature help is activated.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-signature-stop&lt;/code&gt; - cancel signature help. Bound to &lt;code&gt;C-c C-k&lt;/code&gt; when signature help is activated.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-settings" class="anchor" aria-hidden="true" href="#settings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Settings&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;lsp-log-io&lt;/code&gt; - If non-nil, print all messages to and from the language server to &lt;code&gt;*lsp-log*&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-print-performance&lt;/code&gt; - If non-nil, print performance info. to &lt;code&gt;*lsp-log*&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-inhibit-message&lt;/code&gt; - If non-nil, inhibit the message echo via &lt;code&gt;inhibit-message&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-report-if-no-buffer&lt;/code&gt; - If non nil the errors will be reported even when the file is not open.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-keep-workspace-alive&lt;/code&gt; - If non nil keep workspace alive when the last workspace buffer is closed.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-snippet&lt;/code&gt; - Enable/disable snippet completion support.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-auto-guess-root&lt;/code&gt; - Automatically guess the project root using projectile/project. Do &lt;b&gt;not&lt;/b&gt; use this setting unless you are familiar with &lt;code&gt;lsp-mode&lt;/code&gt; internals and you are sure that all of your projects are following &lt;code&gt;projectile=/=project.el&lt;/code&gt; conventions.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-restart&lt;/code&gt; - Defines how server exited event must be handled.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-session-file&lt;/code&gt; - File where session information is stored.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-auto-configure&lt;/code&gt; - Auto configure &lt;code&gt;lsp-mode&lt;/code&gt;. When set to t &lt;code&gt;lsp-mode&lt;/code&gt; will auto-configure &lt;code&gt;lsp-ui&lt;/code&gt; and &lt;code&gt;company-lsp&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-document-sync-method&lt;/code&gt; - How to sync the document with the language server.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-auto-execute-action&lt;/code&gt; - Auto-execute single action.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-eldoc-render-all&lt;/code&gt; - Display all of the info returned by &lt;code&gt;document/onHover&lt;/code&gt;. If this is nil, &lt;code&gt;eldoc&lt;/code&gt; will show only the symbol information.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-completion-at-point&lt;/code&gt; - Enable &lt;code&gt;completion-at-point&lt;/code&gt; integration.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-xref&lt;/code&gt; - Enable xref integration.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-prefer-flymake&lt;/code&gt; - If you prefer flycheck and &lt;code&gt;lsp-ui-flycheck&lt;/code&gt; is available, &lt;code&gt;(setq lsp-prefer-flymake nil)&lt;/code&gt;. If set to &lt;code&gt;:none&lt;/code&gt; neither of two will be enabled.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-indentation&lt;/code&gt; - Indent regions using the file formatting functionality provided by the language server.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-on-type-formatting&lt;/code&gt; - Enable &lt;code&gt;textDocument/onTypeFormatting&lt;/code&gt; integration.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-before-save-edits&lt;/code&gt; - If non-nil, &lt;code&gt;lsp-mode&lt;/code&gt; will apply edits suggested by the language server before saving a document.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-imenu-show-container-name&lt;/code&gt; - Display the symbol’s container name in an imenu entry.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-imenu-container-name-separator&lt;/code&gt; - Separator string to use to separate the container name from the symbol while displaying imenu entries.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-imenu-sort-methods&lt;/code&gt; - How to sort the imenu items. The value is a list of &lt;code&gt;kind&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt; or &lt;code&gt;position&lt;/code&gt;. Priorities are determined by the index of the element.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-response-timeout&lt;/code&gt; - Number of seconds to wait for a response from the language server before timing out.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-file-watchers&lt;/code&gt; - If non-nil lsp-mode will watch the files in the workspace if the server has requested that.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-server-trace&lt;/code&gt; - Request trace mode on the language server.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-semantic-highlighting&lt;/code&gt; - Enable experimental semantic highlighting support&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-imenu&lt;/code&gt; - If non-nil, automatically enable imenu integration when server provides &lt;code&gt;textDocument/documentSymbol&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-signature-auto-activate&lt;/code&gt; - Auto activate signature when trigger char is pressed.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-signature-render-documentation&lt;/code&gt; - Include signature documentation in signature help.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-text-document-color&lt;/code&gt; - Enable &lt;code&gt;textDocument/documentColor&lt;/code&gt; when server supports it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;RUST Completion with company-lsp
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/completion.png"&gt;&lt;img src="examples/completion.png" alt="examples/completion.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Typescript references using lsp-ui
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/references.png"&gt;&lt;img src="examples/references.png" alt="examples/references.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Debugging Python using dap-mode
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/python_debugging.png"&gt;&lt;img src="examples/python_debugging.png" alt="examples/python_debugging.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Call hierarchy via ccls
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/call-hierarchy-ccls.png"&gt;&lt;img src="examples/call-hierarchy-ccls.png" alt="examples/call-hierarchy-ccls.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Metals Doctor
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/metals-doctor.png"&gt;&lt;img src="examples/metals-doctor.png" alt="examples/metals-doctor.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Semantic highlighting as provided by clangd (built from unreleased 10.0 branch). In this screenshot, all other font-locking has been disabled (hence no syntax highlighting of comments or basic keywords such as &lt;code&gt;auto&lt;/code&gt;)
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/clangd_semantic_highlighting.png"&gt;&lt;img src="examples/clangd_semantic_highlighting.png" alt="examples/clangd_semantic_highlighting.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-extensions" class="anchor" aria-hidden="true" href="#extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extensions&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-tramp" class="anchor" aria-hidden="true" href="#tramp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TRAMP&lt;/h3&gt;
&lt;p&gt;LSP mode has support for tramp buffers with the following requirements:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The language server has to be present on the remote server.&lt;/li&gt;
  &lt;li&gt;Having multi folder language server (like &lt;a href="https://github.com/eclipse/eclipse.jdt.ls"&gt;Eclipse JDT LS&lt;/a&gt;) cannot have local and remote workspace folders.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-how-does-it-work-1" class="anchor" aria-hidden="true" href="#how-does-it-work-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How does it work?&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;lsp-mode&lt;/code&gt; detects whether a particular file is located on remote machine and looks for a client which matches current file and it is marked as &lt;code&gt;:remote?&lt;/code&gt; t. Then &lt;code&gt;lsp-mode&lt;/code&gt; starts the client through tramp.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-sample-configuration" class="anchor" aria-hidden="true" href="#sample-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample configuration&lt;/h4&gt;
&lt;p&gt;Here it is example how you can configure python language server to work when using &lt;code&gt;TRAMP&lt;/code&gt;. Note that if you are trying to convert existing language server configuration you should copy all of it’s properties(e. g. &lt;code&gt;:request-handlers&lt;/code&gt;, &lt;code&gt;activation-fn&lt;/code&gt;, etc).&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(lsp-register-client
 (make-lsp-client &lt;span class="pl-c1"&gt;:new-connection&lt;/span&gt; (lsp-tramp-connection &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;binary-or-full-path&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                  &lt;span class="pl-c1"&gt;:major-modes&lt;/span&gt; '(&lt;span class="pl-c1"&gt;python-mode&lt;/span&gt;)
                  &lt;span class="pl-c1"&gt;:remote?&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
                  &lt;span class="pl-c1"&gt;:server-id&lt;/span&gt; &lt;span class="pl-c1"&gt;'pyls-remote&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-dealing-with-stderr" class="anchor" aria-hidden="true" href="#dealing-with-stderr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dealing with stderr&lt;/h4&gt;
&lt;p&gt;With TRAMP, Emacs does not have an easy way to distinguish stdout and stderr, so when the underlying LSP process writes to stderr, it breaks the &lt;code&gt;lsp-mode&lt;/code&gt; parser. As a workaround, &lt;code&gt;lsp-mode&lt;/code&gt; is redirecting stderr to &lt;code&gt;/tmp/&amp;lt;process-name&amp;gt;-&amp;lt;id&amp;gt;~stderr&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-limitations" class="anchor" aria-hidden="true" href="#limitations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Limitations&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-file-watches" class="anchor" aria-hidden="true" href="#file-watches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;File watches&lt;/h3&gt;
&lt;p&gt;When some of the workspaces that are active in the current project requests file notifications via &lt;code&gt;workspace/didChangeWatchedFiles&lt;/code&gt; &lt;code&gt;lsp-mode&lt;/code&gt; will start monitoring each of the folders in the workspace for changes. In case your project contains a lot of files you might want to disable file monitoring via &lt;code&gt;lsp-enable-file-watchers&lt;/code&gt; (you may use dir-locals).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h2&gt;
&lt;p&gt;Contributions are very much welcome.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-members" class="anchor" aria-hidden="true" href="#members"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Members&lt;/h3&gt;
&lt;p&gt;Here it is a list of the current &lt;code&gt;lsp-mode&lt;/code&gt; members and what they are primary working on/responsible for.&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Member&lt;/th&gt;&lt;th&gt;Responsible for:&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/TOTBWF"&gt;TOTBWF&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;F#&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/brotzeit"&gt;brotzeit&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;Rust&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/dsyzling"&gt;dsyzling&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;Scala&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/kurnevsky"&gt;kurnevsky&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;Scala&lt;/code&gt; &amp;amp; &lt;code&gt;Rust&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/seagle0128"&gt;seagle0128&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;Go&lt;/code&gt; &amp;amp; &lt;code&gt;MS Python Language Server&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/sebastiansturm"&gt;sebastiansturm&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;lsp-mode&lt;/code&gt; core &amp;amp; &lt;code&gt;C++&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/vibhavp"&gt;vibhavp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;lsp-mode&lt;/code&gt; core&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/yyoncho"&gt;yyoncho&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;lsp-mode&lt;/code&gt; core and &lt;code&gt;Java&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;set &lt;code&gt;lsp-log-io&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt; to inspect communication between client and the server. Use &lt;code&gt;lsp-workspace-show-log&lt;/code&gt; to switch to the corresponding log buffer.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-describe-session&lt;/code&gt; will show the current projects roots + the started severs and allows inspecting the server capabilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="examples/describe.png"&gt;&lt;img src="examples/describe.png" alt="examples/describe.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-adding-support-for-languages" class="anchor" aria-hidden="true" href="#adding-support-for-languages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding support for languages&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-registering-server" class="anchor" aria-hidden="true" href="#registering-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Registering server&lt;/h3&gt;
&lt;p&gt;Here it is the minimal configuration that is needed for new language server registration. Refer to the documentation of &lt;code&gt;lsp-client.el&lt;/code&gt; for the additional settings supported on registration time. &lt;code&gt;lsp-language-id-configuration&lt;/code&gt; must be updated to contain the corresponding mode -&amp;gt; language id - in this case &lt;code&gt;(python-mode . "python")&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defvar&lt;/span&gt; &lt;span class="pl-en"&gt;lsp-language-id-configuration&lt;/span&gt;
  '(...
   (&lt;span class="pl-c1"&gt;python-mode&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;python&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
   ...))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; if you are adding the support for your language server in separate repo use&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; (add-to-list 'lsp-language-id-configuration '(python-mode . "python"))&lt;/span&gt;

(lsp-register-client
 (make-lsp-client &lt;span class="pl-c1"&gt;:new-connection&lt;/span&gt; (lsp-stdio-connection &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pyls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                  &lt;span class="pl-c1"&gt;:major-modes&lt;/span&gt; '(&lt;span class="pl-c1"&gt;python-mode&lt;/span&gt;)
                  &lt;span class="pl-c1"&gt;:server-id&lt;/span&gt; &lt;span class="pl-c1"&gt;'pyls&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the language server supports environment variables to control additional behavior, you can register that by using the &lt;code&gt;:environment-fn&lt;/code&gt; function, like the Bash language client does:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(lsp-register-client
 (make-lsp-client &lt;span class="pl-c1"&gt;:new-connection&lt;/span&gt; (lsp-stdio-connection '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bash-language-server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;start&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
                  &lt;span class="pl-c1"&gt;:major-modes&lt;/span&gt; '(&lt;span class="pl-c1"&gt;sh-mode&lt;/span&gt;)
                  &lt;span class="pl-c1"&gt;:priority&lt;/span&gt; &lt;span class="pl-c1"&gt;-1&lt;/span&gt;
                  &lt;span class="pl-c1"&gt;:environment-fn&lt;/span&gt; (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; ()
                                    ((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;EXPLAINSHELL_ENDPOINT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; lsp-bash-explainshell-endpoint)
                                     (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;HIGHLIGHT_PARSING_ERRORS&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; lsp-bash-highlight-parsing-errors)))
                  &lt;span class="pl-c1"&gt;:server-id&lt;/span&gt; &lt;span class="pl-c1"&gt;'bash-ls&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;lsp-bash-explainshell-endpoint&lt;/code&gt; and &lt;code&gt;lsp-bash-highlight-parsing-errors&lt;/code&gt; are language client &lt;code&gt;defcustom&lt;/code&gt; that expose supported server environment settings in a type-safe way. If you change any of those variables, restart the language server with &lt;code&gt;lsp-restart-workspace&lt;/code&gt; for the changes to be applied.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sections" class="anchor" aria-hidden="true" href="#sections"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sections&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;lsp-mode&lt;/code&gt; provides tools to bridge emacs &lt;code&gt;defcustom&lt;/code&gt; as a language configuration sections properties(see &lt;a href="https://microsoft.github.io/language-server-protocol/specification#workspace_configuration" rel="nofollow"&gt;specification workspace/configuration&lt;/a&gt;). In addition you may use &lt;code&gt;lsp-generate-settings&lt;/code&gt; from &lt;a href="https://github.com/emacs-lsp/lsp-mode/blob/master/scripts/lsp-generate-settings.el"&gt;Generate Settings script&lt;/a&gt; to generate &lt;code&gt;defcustom&lt;/code&gt; from &lt;code&gt;package.json&lt;/code&gt; VScode plugin manifest. Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defcustom&lt;/span&gt; &lt;span class="pl-en"&gt;lsp-foo-language-server-property&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Demo property.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:group&lt;/span&gt; &lt;span class="pl-c1"&gt;'foo-ls&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:risky&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

(lsp-register-custom-settings '((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo.section.property&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; lsp-foo-language-server-property)))

(lsp-configuration-section  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt;  (("foo" ("settings" ("property" . "bar"))))&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;How do I troubleshoot “Server FOO-LS:pid exited with status signal. Do you want to restart it? (y or n)”?
    &lt;ul&gt;
      &lt;li&gt;This message indicates that the language server has crashed for some
        reason. You may check the server stderr which is &lt;code&gt;*FOO-LS::stderr*&lt;/code&gt;. If
        you get this message on startup you may try to run the exact command that
        &lt;code&gt;lsp-mode&lt;/code&gt; is running in the terminal. You may find it in &lt;code&gt;*lsp-log*&lt;/code&gt;
        buffer.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;How to configure a server with local variables?
    &lt;ul&gt;
      &lt;li&gt;Add &lt;code&gt;lsp&lt;/code&gt; server call to &lt;code&gt;hack-local-variables-hook&lt;/code&gt; which runs right after the local variables are loaded.
        &lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'hack-local-variables-hook&lt;/span&gt;
          (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; () (&lt;span class="pl-k"&gt;when&lt;/span&gt; (&lt;span class="pl-c1"&gt;derived-mode-p&lt;/span&gt; &lt;span class="pl-c1"&gt;'XXX-mode&lt;/span&gt;) (lsp))))
        &lt;/pre&gt;&lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;I have multiple language servers registered for language FOO. Which one will be used when opening a project?
    &lt;ul&gt;
      &lt;li&gt;The one with highest priority wins. &lt;code&gt;lsp-clients.el&lt;/code&gt; predefined servers have
        priority -1, lower than external packages (priority 0 if unspecified). If a
        server is registered with &lt;code&gt;:add-on?&lt;/code&gt; flag set to &lt;code&gt;t&lt;/code&gt; it will be started in
        parallel to the other servers that are registered for the current mode.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;I have multiple language servers for language &lt;code&gt;FOO&lt;/code&gt; and I want to select the server per project, what can I do?
    &lt;ul&gt;
      &lt;li&gt;You may create &lt;code&gt;dir-local&lt;/code&gt; for each of the projects and specify list of
        &lt;code&gt;lsp-enabled-clients&lt;/code&gt;. This will narrow the list of the clients that are
        going to be tested for the project.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The completion does not work fine and inserts arguments and placeholders, what I am doing wrong?
    &lt;ul&gt;
      &lt;li&gt;Snippet support works only with &lt;code&gt;company-lsp&lt;/code&gt; so if you are using
        &lt;code&gt;completion-at-point&lt;/code&gt; the snippets won’t be expanded and you should
        either disable them by setting &lt;code&gt;lsp-enable-snippet&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; or you
        should switch to &lt;code&gt;company-lsp&lt;/code&gt;. Note also that &lt;code&gt;company-tng&lt;/code&gt; frontend
        does not support snippet expansion(see &lt;a href="https://github.com/company-mode/company-mode/issues/891"&gt;company-mode#891&lt;/a&gt;)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;How to automatically follow &lt;code&gt;lsp-ui-log&lt;/code&gt;?
    &lt;ul&gt;
      &lt;li&gt;Go into the log buffer and execute the following snippet(source: &lt;a href="https://stackoverflow.com/questions/12663061/emacs-auto-scrolling-log-buffer" rel="nofollow"&gt;Emacs auto scrolling log buffer&lt;/a&gt;)&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;set&lt;/span&gt; (&lt;span class="pl-c1"&gt;make-local-variable&lt;/span&gt; &lt;span class="pl-c1"&gt;'window-point-insertion-type&lt;/span&gt;) &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
    &lt;/pre&gt;&lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;I am getting “Package ‘spinner-1.7.3’ is unavailable” when trying to install &lt;code&gt;lsp-mode&lt;/code&gt;.
    &lt;ul&gt;
      &lt;li&gt;This is caused by GPG keys used by the ELPA package manager not being up
        to date. You may fix by installing: &lt;a href="https://elpa.gnu.org/packages/gnu-elpa-keyring-update.html" rel="nofollow"&gt;gnu-elpa-keyring-update&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Json completion doesn’t seem working?
    &lt;ul&gt;
      &lt;li&gt;The latest &lt;a href="https://www.npmjs.com/package/vscode-json-languageserver/v/1.2.2" rel="nofollow"&gt;vscode-json-languageserver&lt;/a&gt; is broken. You will need to install the earlier version of it &lt;code&gt;npm i vscode-json-languageserver@1.2.1&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The flycheck does not work in &lt;code&gt;typescript&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt; and &lt;code&gt;javascript&lt;/code&gt; blocks in &lt;code&gt;vue-mode&lt;/code&gt;. How to fix that?
    &lt;ul&gt;
      &lt;li&gt;This is caused by the fact that &lt;code&gt;vue-mode&lt;/code&gt; uses multiple major modes in
        single file and the &lt;code&gt;lsp-ui&lt;/code&gt; checker may not associated with the major mode
        at point. You could fix that by adding the following lines to your config.
        &lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;with-eval-after-load&lt;/span&gt; &lt;span class="pl-c1"&gt;'lsp-ui-flycheck&lt;/span&gt;
  (&lt;span class="pl-k"&gt;mapc&lt;/span&gt; &lt;span class="pl-c1"&gt;'lsp-ui-flycheck-add-mode&lt;/span&gt; '(&lt;span class="pl-c1"&gt;typescript-mode&lt;/span&gt; js-mode css-mode vue-html-mode)))
        &lt;/pre&gt;&lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-see-also" class="anchor" aria-hidden="true" href="#see-also"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;See also&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/emacs-lsp/lsp-docker/"&gt;lsp-docker&lt;/a&gt; - provide docker image with preconfigured language servers with corresponding emacs configuration.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/sebastiencs/company-box/"&gt;company-box&lt;/a&gt; - &lt;code&gt;company&lt;/code&gt; frontend with icons.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/emacs-lsp/dap-mode"&gt;dap-mode&lt;/a&gt; - Debugger integration for &lt;code&gt;lsp-mode&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/joaotavora/eglot"&gt;eglot&lt;/a&gt; - An alternative minimal LSP implementation.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>emacs-lsp</author><guid isPermaLink="false">https://github.com/emacs-lsp/lsp-mode</guid><pubDate>Sun, 12 Jan 2020 00:03:00 GMT</pubDate></item><item><title>syl20bnr/spacemacs #4 in Emacs Lisp, Today</title><link>https://github.com/syl20bnr/spacemacs</link><description>&lt;p&gt;&lt;i&gt;A community-driven Emacs distribution - The best editor is neither Emacs nor Vim,  it's Emacs *and* Vim!&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a name="user-content-top"&gt;&lt;/a&gt;
&lt;a href="http://spacemacs.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8f5ee1d9b7278ed2c63f1f89e9a583ec59b52b6b/68747470733a2f2f63646e2e7261776769742e636f6d2f73796c3230626e722f73706163656d6163732f343432643032353737396461326636326663383663323038323730333639373731346462363531342f6173736574732f73706163656d6163732d62616467652e737667" alt="Made with Spacemacs" data-canonical-src="https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="http://www.twitter.com/spacemacs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7cf10772eb6ccebe92d678c452a971e6e2778653/687474703a2f2f692e696d6775722e636f6d2f7458536f5468462e706e67" alt="Twitter" align="right" data-canonical-src="http://i.imgur.com/tXSoThF.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/doc/img/title2.png"&gt;&lt;img src="/doc/img/title2.png" alt="Spacemacs" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
&lt;b&gt;&lt;a href="http://spacemacs.org/doc/DOCUMENTATION#orgheadline5" rel="nofollow"&gt;philosophy&lt;/a&gt;&lt;/b&gt;
|
&lt;b&gt;&lt;a href="http://spacemacs.org/doc/DOCUMENTATION#orgheadline8" rel="nofollow"&gt;for whom?&lt;/a&gt;&lt;/b&gt;
|
&lt;b&gt;&lt;a href="http://spacemacs.org/doc/DOCUMENTATION#orgheadline7" rel="nofollow"&gt;screenshots&lt;/a&gt;&lt;/b&gt;
|
&lt;b&gt;&lt;a href="http://spacemacs.org/doc/DOCUMENTATION.html" rel="nofollow"&gt;documentation&lt;/a&gt;&lt;/b&gt;
|
&lt;b&gt;&lt;a href="CONTRIBUTING.org"&gt;contribute&lt;/a&gt;&lt;/b&gt;
|
&lt;b&gt;&lt;a href="http://spacemacs.org/doc/DOCUMENTATION#achievements" rel="nofollow"&gt;achievements&lt;/a&gt;&lt;/b&gt;
|
&lt;b&gt;&lt;a href="http://spacemacs.org/doc/FAQ" rel="nofollow"&gt;FAQ&lt;/a&gt;&lt;/b&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p align="center"&gt;
&lt;a href="https://gitter.im/syl20bnr/spacemacs?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80bf7c9122b2d8f4dbadfc434c9074c1754267ae/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e20436861742e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Join Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/syl20bnr/spacemacs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b724760fb5fb9a3cc9dcb3ed5fca8d102d076062/68747470733a2f2f7472617669732d63692e6f72672f73796c3230626e722f73706163656d6163732e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/syl20bnr/spacemacs.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=ESFVNPKP4Y742" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/516248018619132b396881c0b21749c34d6ccfbd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f50617970616c2d446f6e6174652d626c75652e737667" alt="Donate" data-canonical-src="https://img.shields.io/badge/Paypal-Donate-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://shop.spreadshirt.com/spacemacs-shop" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f1b306f89bf6fade603509713a098316a4948ef2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53686f702d542d2d5368697274732d626c75652e737667" alt="Donate" data-canonical-src="https://img.shields.io/badge/Shop-T--Shirts-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.slant.co/topics/12/~what-are-the-best-programming-text-editors" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2e66996b76fc392f4936160dc3f627f663d1a68a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f536c616e742d5265636f6d6d656e642d6666363962342e737667" alt="Recommend it" data-canonical-src="https://img.shields.io/badge/Slant-Recommend-ff69b4.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Quick Install:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-help"&gt;Getting Help&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#emacs"&gt;Emacs&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#linux-distros"&gt;Linux distros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#macos"&gt;macOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#windows"&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#install"&gt;Install&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#default-installation"&gt;Default installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#alternate-installations"&gt;Alternate installations&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#modify-home-environment-variable"&gt;Modify HOME environment variable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#modify-spacemacs-start-directory-variable"&gt;Modify spacemacs-start-directory variable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#spacemacs-logo"&gt;Spacemacs logo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#update"&gt;Update&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#automatic-update-on-master-branch"&gt;Automatic update (on master branch)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#manual-update-on-master-branch"&gt;Manual update (on master branch)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#on-develop-branch"&gt;On develop branch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#revert-to-a-specific-version"&gt;Revert to a specific version&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#quotes"&gt;Quotes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributions"&gt;Contributions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#communities"&gt;Communities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#supporting-spacemacs"&gt;Supporting Spacemacs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Spacemacs is a new way to experience Emacs -- a sophisticated and
polished set-up focused on ergonomics, mnemonics and consistency.&lt;/p&gt;
&lt;p&gt;Just clone it, launch it, then press the space bar to explore the
interactive list of carefully-chosen key bindings. You can also press
the home buffer's &lt;code&gt;[?]&lt;/code&gt; button for some great first key bindings to
try.&lt;/p&gt;
&lt;p&gt;Spacemacs can be used naturally by both Emacs and Vim users -- you can
even mix the two editing styles. Switching easily between input styles
makes Spacemacs a great tool for pair-programming.&lt;/p&gt;
&lt;p&gt;Spacemacs is currently in beta, and contributions are very welcome.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/img/spacemacs-python.png"&gt;&lt;img src="doc/img/spacemacs-python.png" alt="spacemacs_python" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Great documentation:&lt;/strong&gt; access documentation in Emacs with
&lt;kbd&gt;SPC h SPC&lt;/kbd&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beautiful GUI:&lt;/strong&gt; you'll love the distraction free UI and its functional
mode-line.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Excellent ergonomics:&lt;/strong&gt; all the key bindings are accessible by pressing
the &lt;kbd&gt;space bar&lt;/kbd&gt; or &lt;kbd&gt;alt-m&lt;/kbd&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mnemonic key bindings:&lt;/strong&gt; commands have mnemonic prefixes like
&lt;kbd&gt;SPC b&lt;/kbd&gt; for all the buffer commands or &lt;kbd&gt;SPC p&lt;/kbd&gt; for the
project commands.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Batteries included:&lt;/strong&gt; discover hundreds of ready-to-use packages nicely
organised in configuration layers following a set of
&lt;a href="http://spacemacs.org/doc/CONVENTIONS" rel="nofollow"&gt;conventions&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;p&gt;Comprehensive documentation is available for each layer by pressing
&lt;kbd&gt;SPC h SPC&lt;/kbd&gt;.&lt;/p&gt;
&lt;p&gt;You can also check the &lt;a href="http://spacemacs.org/doc/DOCUMENTATION" rel="nofollow"&gt;general documentation&lt;/a&gt;,
&lt;a href="http://spacemacs.org/doc/QUICK_START" rel="nofollow"&gt;quick start guide&lt;/a&gt; and the &lt;a href="http://spacemacs.org/doc/FAQ" rel="nofollow"&gt;FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h1&gt;
&lt;p&gt;If you need help, ask your question in the &lt;a href="https://gitter.im/syl20bnr/spacemacs" rel="nofollow"&gt;Gitter Chat&lt;/a&gt; and a member of the
community will help you out.&lt;/p&gt;
&lt;p&gt;If you prefer IRC, connect to the &lt;a href="https://irc.gitter.im/" rel="nofollow"&gt;Gitter Chat IRC server&lt;/a&gt; and join the
&lt;code&gt;#syl20bnr/spacemacs&lt;/code&gt; channel.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-emacs" class="anchor" aria-hidden="true" href="#emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Emacs&lt;/h2&gt;
&lt;p&gt;Spacemacs requires Emacs 24.4 or above. The development version of Emacs (at the
time of writing, this is 25.2) is not &lt;em&gt;officially&lt;/em&gt; supported, but should
nevertheless be expected to work.&lt;/p&gt;
&lt;p&gt;Some modes require third-party tools that you'll have to install via your
favorite package manager.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-linux-distros" class="anchor" aria-hidden="true" href="#linux-distros"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux distros&lt;/h3&gt;
&lt;p&gt;Install Emacs from the package manager of your Linux distribution.&lt;/p&gt;
&lt;p&gt;You should install the "emacs" package, not the "xemacs" package.
XEmacs is an old fork of Emacs. The X in its name is unrelated to X11.
Both Emacs and XEmacs have graphical support.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Ubuntu LTS 12.04 and 14.04 repositories have only Emacs 24.3
available. You have to &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/efaq/Installing-Emacs.html" rel="nofollow"&gt;build from source&lt;/a&gt; Emacs 24.4 or greater,
as Spacemacs won't work with 24.3. The same may be true for other distributions
as well.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-macos" class="anchor" aria-hidden="true" href="#macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS&lt;/h3&gt;
&lt;p&gt;The recommended way of installing Emacs on macOS is using &lt;a href="http://brew.sh" rel="nofollow"&gt;homebrew&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew tap d12frosted/emacs-plus
$ brew install emacs-plus
$ brew linkapps emacs-plus&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; these homebrew commands will install GNU Emacs, and link it to your
&lt;code&gt;/Applications&lt;/code&gt; directory. You still need to run the &lt;code&gt;git clone&lt;/code&gt; mentioned at
the start of this file. That will populate your &lt;code&gt;~/.emacs.d&lt;/code&gt; directory, which is
what transforms a regular GNU Emacs into Spacemacs.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; the proposed &lt;code&gt;emacs-plus&lt;/code&gt; tap is identical to the &lt;code&gt;emacs&lt;/code&gt; formulae, it
just builds GNU Emacs with support of several features by default along with
providing Spacemacs icon.
See &lt;a href="https://github.com/d12frosted/homebrew-emacs-plus"&gt;emacs-plus&lt;/a&gt; for more
information.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: to have the title bar match your theme background color,
consider using instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew install emacs-plus --HEAD --with-natural-title-bars&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; after you have completed the &lt;a href="#install"&gt;install process&lt;/a&gt; below, it is
also recommended to add the &lt;a href="http://spacemacs.org/layers/+os/osx/README.html" rel="nofollow"&gt;osx layer&lt;/a&gt; to your &lt;a href="http://spacemacs.org/doc/DOCUMENTATION#orgheadline45" rel="nofollow"&gt;dotfile&lt;/a&gt;. Install
instructions are available in the &lt;a href="http://spacemacs.org/layers/+os/osx/README.html" rel="nofollow"&gt;osx layer&lt;/a&gt; documentation.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; if the powerline separators on the spaceline are a different (less
saturated) color than the rest of the line, you can add following snippet to
&lt;code&gt;dotspacemacs/user-config&lt;/code&gt; in your &lt;code&gt;.spacemacs&lt;/code&gt; file.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; ns-use-srgb-colorspace &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Keep in mind that this is not ideal solution as it affects all colours in Emacs.
Another option is to use different powerline separator. For example, &lt;code&gt;alternate&lt;/code&gt;
and &lt;code&gt;bar&lt;/code&gt; diminishes the difference. And using &lt;code&gt;utf-8&lt;/code&gt; separator makes it go
away completely without the need to change colour space. In order to change
powerline separator put following snippet in &lt;code&gt;dotspacemacs/user-config&lt;/code&gt;.&lt;/p&gt;
&lt;pre lang="eslip"&gt;&lt;code&gt;(setq powerline-default-separator 'utf-8)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For more information about powerline separators, please refer to appropriate
section in &lt;a href="http://spacemacs.org/doc/DOCUMENTATION" rel="nofollow"&gt;Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;p&gt;You can download good quality builds from the &lt;a href="http://emacsbinw64.sourceforge.net/" rel="nofollow"&gt;emacs-w64 project&lt;/a&gt;.
It is recommended to install the most recent &lt;a href="https://sourceforge.net/projects/emacsbinw64/files/release/" rel="nofollow"&gt;stable build&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Be sure to declare a environment variable named &lt;code&gt;HOME&lt;/code&gt; pointing to your user
directory &lt;code&gt;C:\Users\&amp;lt;username&amp;gt;&lt;/code&gt;. Then you can clone Spacemacs in this directory.&lt;/p&gt;
&lt;p&gt;Sometimes you'll get the following error when you first start Emacs:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;The directory ~/.emacs.d/server is unsafe
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To fix it change the owner of the directory &lt;code&gt;~/.emacs.d/server&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;from Properties select the Tab “Security”,&lt;/li&gt;
&lt;li&gt;select the button “Advanced”,&lt;/li&gt;
&lt;li&gt;select the Tab “Owner”&lt;/li&gt;
&lt;li&gt;change the owner to your account name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Source: &lt;a href="http://stackoverflow.com/questions/885793/emacs-error-when-calling-server-start" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For efficient searches we recommend to install &lt;code&gt;pt&lt;/code&gt; (&lt;a href="https://github.com/monochromegane/the_platinum_searcher"&gt;the platinum searcher&lt;/a&gt;).
&lt;code&gt;pt&lt;/code&gt; version 1.7.7 or higher is required.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-default-installation" class="anchor" aria-hidden="true" href="#default-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default installation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If you have an existing Emacs configuration, back it up first:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;
mv .emacs.d .emacs.d.bak
mv .emacs .emacs.bak&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don't forget to backup and &lt;em&gt;remove&lt;/em&gt; &lt;code&gt;~/.emacs&lt;/code&gt; file otherwise Spacemacs
&lt;strong&gt;WILL NOT&lt;/strong&gt; load since that file prevents Emacs from loading the proper
initialization file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clone the repository:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/syl20bnr/spacemacs &lt;span class="pl-k"&gt;~&lt;/span&gt;/.emacs.d&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;master&lt;/code&gt; is the stable branch and it is &lt;em&gt;immutable&lt;/em&gt;, &lt;strong&gt;DO NOT&lt;/strong&gt; make any
modification to it or you will break the update mechanism. If you want to
fork Spacemacs safely use the &lt;code&gt;develop&lt;/code&gt; branch where you handle the update
manually.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Optional) Install the &lt;a href="https://github.com/adobe-fonts/source-code-pro"&gt;Source Code Pro&lt;/a&gt; font.&lt;/p&gt;
&lt;p&gt;If you are running in terminal you'll also need to change font settings of
your terminal.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Launch Emacs. Spacemacs will automatically install the packages it requires.
If you get an error regarding package downloads then you may try to disable
the HTTPS protocol by starting Emacs with&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;emacs --insecure&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or you can set the &lt;code&gt;dotspacemacs-elpa-https&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; in your dotfile to
remove the need to start Emacs with &lt;code&gt;--insecure&lt;/code&gt; argument. You may wish to
clear out your &lt;code&gt;.emacs.d/elpa&lt;/code&gt; directory before doing this, so that any
corrupted packages you may have downloaded will be re-installed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart Emacs to complete the installation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If the mode-line turns red then be sure to consult the &lt;a href="http://spacemacs.org/doc/FAQ" rel="nofollow"&gt;FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-alternate-installations" class="anchor" aria-hidden="true" href="#alternate-installations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alternate installations&lt;/h2&gt;
&lt;p&gt;It may be useful to clone Spacemacs outside Emacs dotdirectory &lt;code&gt;~/.emacs.d&lt;/code&gt; so
you can try Spacemacs without replacing completely our own configuration.
There is currently two possibilities to support alternative location for
Spacemacs configuration.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-modify-home-environment-variable" class="anchor" aria-hidden="true" href="#modify-home-environment-variable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modify HOME environment variable&lt;/h3&gt;
&lt;p&gt;This solution is ideal to quickly try Spacemacs without compromising your
existing configuration.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mkdir &lt;span class="pl-k"&gt;~&lt;/span&gt;/spacemacs
git clone https://github.com/syl20bnr/spacemacs.git &lt;span class="pl-k"&gt;~&lt;/span&gt;/spacemacs/.emacs.d
HOME=&lt;span class="pl-k"&gt;~&lt;/span&gt;/spacemacs emacs&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: If you're on Fish shell, you will need to modify the last command to: &lt;code&gt;env HOME=$HOME/spacemacs emacs&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-modify-spacemacs-start-directory-variable" class="anchor" aria-hidden="true" href="#modify-spacemacs-start-directory-variable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modify spacemacs-start-directory variable&lt;/h3&gt;
&lt;p&gt;This solution is better suited to "embed" Spacemacs into your own configuration.
Say you cloned Spacemacs in &lt;code&gt;~/.emacs.d/spacemacs/&lt;/code&gt; then drop these lines in
&lt;code&gt;~/.emacs.d/init.el&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; spacemacs-start-directory &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~/.emacs.d/spacemacs/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;load-file&lt;/span&gt; (&lt;span class="pl-c1"&gt;concat&lt;/span&gt; spacemacs-start-directory &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;init.el&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-spacemacs-logo" class="anchor" aria-hidden="true" href="#spacemacs-logo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spacemacs logo&lt;/h2&gt;
&lt;p&gt;For Ubuntu users, follow this guide to
&lt;a href="http://splendidabacus.com/posts/2015/03/spacemacs-unity-icon/" rel="nofollow"&gt;change the logo in Unity&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For Mac users, you need to &lt;a href="https://github.com/nashamri/spacemacs-logo"&gt;download the .icns version of the logo&lt;/a&gt;,
then &lt;a href="http://www.idownloadblog.com/2014/07/16/how-to-change-app-icon-mac/" rel="nofollow"&gt;change the logo on Dock&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-update" class="anchor" aria-hidden="true" href="#update"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update&lt;/h1&gt;
&lt;p&gt;Spacemacs has a built-in notification of a new version when you are on the
&lt;code&gt;master&lt;/code&gt; branch. If you are on the &lt;code&gt;develop&lt;/code&gt; branch then you'll have to
update Spacemacs manually by updating your repository.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-automatic-update-on-master-branch" class="anchor" aria-hidden="true" href="#automatic-update-on-master-branch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Automatic update (on master branch)&lt;/h2&gt;
&lt;p&gt;When a new version is available a little arrow appears in the mode-line.&lt;/p&gt;
&lt;p&gt;Its color depends on the number of versions available since your last update.
Green means that your current version is recent, orange and red mean that your
current version is older.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/img/powerline-update.png"&gt;&lt;img src="doc/img/powerline-update.png" alt="powerline_update" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Click on the arrow to update Spacemacs to the last version.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-manual-update-on-master-branch" class="anchor" aria-hidden="true" href="#manual-update-on-master-branch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual update (on master branch)&lt;/h2&gt;
&lt;p&gt;(Remove the angle brackets when typing the lines below into your shell.)&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git fetch
git reset --hard &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;tag version which you are updating to&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-on-develop-branch" class="anchor" aria-hidden="true" href="#on-develop-branch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;On develop branch&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Update Emacs packages by clicking (press &lt;code&gt;RET&lt;/code&gt;) on the &lt;code&gt;[Update Packages]&lt;/code&gt; link of
the starting page.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Close Emacs and update the git repository:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git pull --rebase&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart Emacs to complete the upgrade.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-revert-to-a-specific-version" class="anchor" aria-hidden="true" href="#revert-to-a-specific-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Revert to a specific version&lt;/h2&gt;
&lt;p&gt;To revert to a specific version you just have to checkout the corresponding
branch, for instance to revert to the last &lt;code&gt;0.103&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git checkout origin/release-0.103&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;After you update, either manually, or automatically, you are advised to update
your packages by clicking the &lt;code&gt;[Update Packages]&lt;/code&gt; button on the Spacemacs Home
Buffer.&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-quotes" class="anchor" aria-hidden="true" href="#quotes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quotes&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/syl20bnr/spacemacs?at=568e627a0cdaaa62045a7df6" rel="nofollow"&gt;Quote&lt;/a&gt; by &lt;a href="https://github.com/ashnur"&gt;ashnur&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;«I feel that spacemacs is an aircraft carrier and I am playing table tennis on the deck as a freerider.»
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://gitter.im/syl20bnr/spacemacs?at=5768456c6577f032450cfedb" rel="nofollow"&gt;Quote&lt;/a&gt; by &lt;a href="https://github.com/deuill"&gt;deuill&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;«I LOVE SPACEMACS AND MAGIT

 That is all»
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h1&gt;
&lt;p&gt;Spacemacs is a community-driven project, it needs &lt;em&gt;you&lt;/em&gt; to keep it up to
date and propose great and useful configuration for all the things!&lt;/p&gt;
&lt;p&gt;Before contributing be sure to consult the
&lt;a href="CONTRIBUTING.org"&gt;contribution guidelines&lt;/a&gt; and &lt;a href="http://spacemacs.org/doc/CONVENTIONS" rel="nofollow"&gt;conventions&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-communities" class="anchor" aria-hidden="true" href="#communities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Communities&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gitter.im/syl20bnr/spacemacs" rel="nofollow"&gt;Gitter Chat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://emacs.stackexchange.com/questions/tagged/spacemacs" rel="nofollow"&gt;Stack Exchange&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/spacemacs" rel="nofollow"&gt;Reddit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;The license is GPLv3 for all parts specific to Spacemacs, this includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the initialization and core files&lt;/li&gt;
&lt;li&gt;all the layer files&lt;/li&gt;
&lt;li&gt;the documentation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the packages shipped in this repository you can refer to the files header.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/nashamri/spacemacs-logo"&gt;Spacemacs logo&lt;/a&gt; by &lt;a href="https://github.com/nashamri"&gt;Nasser Alshammari&lt;/a&gt; released under a &lt;a href="http://creativecommons.org/licenses/by-sa/4.0/" rel="nofollow"&gt;Creative Commons Attribution-ShareAlike 4.0 International License.&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-supporting-spacemacs" class="anchor" aria-hidden="true" href="#supporting-spacemacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supporting Spacemacs&lt;/h1&gt;
&lt;p&gt;The best way to support Spacemacs is to contribute to it either by reporting
bugs, helping the community on the &lt;a href="https://gitter.im/syl20bnr/spacemacs" rel="nofollow"&gt;Gitter Chat&lt;/a&gt; or sending pull requests.&lt;/p&gt;
&lt;p&gt;You can show your love for the project by getting cool Spacemacs t-shirts, mugs
and more in the &lt;a href="https://shop.spreadshirt.com/spacemacs-shop" rel="nofollow"&gt;Spacemacs Shop&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to show your support financially you can contribute to &lt;a href="https://salt.bountysource.com/teams/spacemacs" rel="nofollow"&gt;Bountysource&lt;/a&gt; or buy a drink for the
maintainer by clicking on the &lt;a href="#top"&gt;Paypal badge&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you used spacemacs in a project and you want to show that fact, you can use
the spacemacs badge: &lt;a href="http://spacemacs.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8f5ee1d9b7278ed2c63f1f89e9a583ec59b52b6b/68747470733a2f2f63646e2e7261776769742e636f6d2f73796c3230626e722f73706163656d6163732f343432643032353737396461326636326663383663323038323730333639373731346462363531342f6173736574732f73706163656d6163732d62616467652e737667" alt="Built with Spacemacs" data-canonical-src="https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For Markdown:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[![Built with Spacemacs](https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg)](http://spacemacs.org)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For HTML:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;a href="http://spacemacs.org"&amp;gt;&amp;lt;img src="https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg" /&amp;gt;&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For Org-mode:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[[http://spacemacs.org][file:https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg]]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thank you!&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>syl20bnr</author><guid isPermaLink="false">https://github.com/syl20bnr/spacemacs</guid><pubDate>Sun, 12 Jan 2020 00:04:00 GMT</pubDate></item><item><title>emacs-mirror/emacs #5 in Emacs Lisp, Today</title><link>https://github.com/emacs-mirror/emacs</link><description>&lt;p&gt;&lt;i&gt;Mirror of GNU Emacs&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="" data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;Copyright (C) 2001-2020 Free Software Foundation, Inc.
See the end of the file for license conditions.


This directory tree holds version 28.0.50 of GNU Emacs, the extensible,
customizable, self-documenting real-time display editor.

The file INSTALL in this directory says how to build and install GNU
Emacs on various systems, once you have unpacked or checked out the
entire Emacs file tree.

See the file etc/NEWS for information on new features and other
user-visible changes in recent versions of Emacs.

The file etc/PROBLEMS contains information on many common problems that
occur in building, installing and running Emacs.

The file CONTRIBUTE contains information on contributing to Emacs as a
developer.

You may encounter bugs in this release.  If you do, please report
them; your bug reports are valuable contributions to the FSF, since
they allow us to notice and fix problems on machines we don't have, or
in code we don't use often.  Please send bug reports to the mailing
list bug-gnu-emacs@gnu.org.  If possible, use M-x report-emacs-bug.

See the "Bugs" section of the Emacs manual for more information on how
to report bugs.  (The file 'BUGS' in this directory explains how you
can find and read that section using the Info files that come with
Emacs.)  For a list of mailing lists related to Emacs, see
&amp;lt;&lt;a href="https://savannah.gnu.org/mail/?group=emacs" rel="nofollow"&gt;https://savannah.gnu.org/mail/?group=emacs&lt;/a&gt;&amp;gt;.  For the complete
list of GNU mailing lists, see &amp;lt;&lt;a href="https://lists.gnu.org/" rel="nofollow"&gt;https://lists.gnu.org/&lt;/a&gt;&amp;gt;.

The 'etc' subdirectory contains several other files, named in capital
letters, which you might consider looking at when installing GNU
Emacs.

The file 'configure' is a shell script to acclimate Emacs to the
oddities of your processor and operating system.  It creates the file
'Makefile' (a script for the 'make' program), which automates the
process of building and installing Emacs.  See INSTALL for more
detailed information.

The file 'configure.ac' is the input used by the autoconf program to
construct the 'configure' script.

The shell script 'autogen.sh' generates 'configure' and other files by
running Autoconf (which in turn uses GNU m4), and configures files in
the .git subdirectory if you are using Git.  If you want to use it,
you will need to install recent versions of these build tools.  This
should be needed only if you edit files like 'configure.ac' that
specify Emacs's autobuild procedure.

The file 'Makefile.in' is a template used by 'configure' to create
'Makefile'.

The file 'make-dist' is a shell script to build a distribution tar
file from the current Emacs tree, containing only those files
appropriate for distribution.  If you make extensive changes to Emacs,
this script will help you distribute your version to others.

There are several subdirectories:

'src'       holds the C code for Emacs (the Emacs Lisp interpreter and
            its primitives, the redisplay code, and some basic editing
            functions).
'lisp'      holds the Emacs Lisp code for Emacs (most everything else).
'leim'      holds the original source files for the generated files
            in lisp/leim.  These form the library of Emacs input methods,
            required to type international characters that can't be
            directly produced by your keyboard.
'lib'       holds source code for libraries used by Emacs and its utilities
'lib-src'   holds the source code for some utility programs for use by or
            with Emacs, like movemail and etags.
'lwlib'     holds the sources of the Lucid Widget Library used on X.
'oldXMenu'  source files from X11R2 XMenu library, used in non-toolkit builds.
'etc'       holds miscellaneous architecture-independent data files Emacs
            uses, like the tutorial text and tool bar images.
            The contents of the 'lisp', 'leim', 'info', and 'doc'
            subdirectories are architecture-independent too.
'info'      holds the Info documentation tree for Emacs.
'doc/emacs' holds the source code for the Emacs Manual.  If you modify the
            manual sources, you will need the 'makeinfo' program to produce
            an updated manual.  'makeinfo' is part of the GNU Texinfo
            package; you need a suitably recent version of Texinfo.
'doc/lispref'   holds the source code for the Emacs Lisp reference manual.
'doc/lispintro' holds the source code for the Introduction to Programming
                in Emacs Lisp manual.
'msdos'     holds configuration files for compiling Emacs under MS-DOS.
'nextstep'  holds instructions and some other files for compiling the
            Nextstep port of Emacs, for GNUstep and macOS Cocoa.
'nt'        holds code and documentation for building Emacs on MS-Windows.
'test'      holds tests for various aspects of Emacs's functionality.
'modules'   holds the modhelp.py helper script.
'admin'     holds files used by Emacs developers, and Unicode data files.
'build-aux' holds auxiliary files used during the build.
'm4'        holds Autoconf macros used for generating the configure script.

   Building Emacs on non-Posix platforms requires tools that aren't part
of the standard distribution of the OS.  The platform-specific README
files and installation instructions should list the required tools.


NOTE ON COPYRIGHT YEARS

In copyright notices where the copyright holder is the Free Software
Foundation, then where a range of years appears, this is an inclusive
range that applies to every year in the range.  For example: 2005-2008
represents the years 2005, 2006, 2007, and 2008.


This file is part of GNU Emacs.

GNU Emacs is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

GNU Emacs is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Emacs.  If not, see &amp;lt;&lt;a href="https://www.gnu.org/licenses/" rel="nofollow"&gt;https://www.gnu.org/licenses/&lt;/a&gt;&amp;gt;.
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>emacs-mirror</author><guid isPermaLink="false">https://github.com/emacs-mirror/emacs</guid><pubDate>Sun, 12 Jan 2020 00:05:00 GMT</pubDate></item><item><title>ndwarshuis/om.el #6 in Emacs Lisp, Today</title><link>https://github.com/ndwarshuis/om.el</link><description>&lt;p&gt;&lt;i&gt;A functional library for org-mode&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-omel-" class="anchor" aria-hidden="true" href="#omel-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om.el &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1055b4bb378fa1c44422e971d9ae43de92877bb2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6e6477617273687569732f6f6d2e656c2f4349"&gt;&lt;img src="https://camo.githubusercontent.com/1055b4bb378fa1c44422e971d9ae43de92877bb2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6e6477617273687569732f6f6d2e656c2f4349" alt="Github Workflow Status" data-canonical-src="https://img.shields.io/github/workflow/status/ndwarshuis/om.el/CI" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;A functional API for org-mode inspired by
&lt;a href="https://github.com/magnars"&gt;@magnars&lt;/a&gt;'s
&lt;a href="https://github.com/magnars/dash.el"&gt;dash.el&lt;/a&gt; and
&lt;a href="https://github.com/magnars/s.el"&gt;s.el&lt;/a&gt; libraries.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;This package is not yet in MELPA. To install, clone this repository
somewhere into your load path:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/ndwarshuis/om.el
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then require in your emacs config:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(require 'om)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-motivation" class="anchor" aria-hidden="true" href="#motivation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Motivation&lt;/h1&gt;
&lt;p&gt;Org-mode comes with a powerful, built-in parse-tree generator
specified in &lt;code&gt;org-element.el&lt;/code&gt;. The generated parse-tree is simply a
heavily-nested list which can be easily manipulated using (mostly
pure) functional code. This contrasts the majority of functions
normally used to interface with org-mode files, which are imperative
in nature (&lt;code&gt;org-insert-headine&lt;/code&gt;, &lt;code&gt;outline-next-heading&lt;/code&gt;, etc) as they
depend on the mutable state of Emacs buffers. In general, functional
code is
(&lt;a href="https://en.wikipedia.org/wiki/Functional_programming#Comparison_to_imperative_programming" rel="nofollow"&gt;arguably&lt;/a&gt;)
more robust, readable, and testable, especially in use-cases such as
this where a stateless abstract data structure is being transformed
and queried.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;org-element.el&lt;/code&gt; provides a minimal API for handling this
parse-tree in a functional manner, but lacks many of the higher-level
functions necessary for intuitive, large-scale use. The &lt;code&gt;om.el&lt;/code&gt;
package is designed to provide this API. Furthermore, it is highly
compatible with the &lt;code&gt;dash.el&lt;/code&gt; package, which is a generalized
functional library for emacs-lisp.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-org-element-overview" class="anchor" aria-hidden="true" href="#org-element-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Org-Element Overview&lt;/h1&gt;
&lt;p&gt;Parsing a buffer with the function &lt;code&gt;org-element-parse-buffer&lt;/code&gt; will
yield a parse tree composed of nodes. Nodes have types and properties
associated with them. See &lt;a href="https://orgmode.org/worg/dev/org-element-api.html#attributes" rel="nofollow"&gt;the org-element API
documentation&lt;/a&gt;
for a list of all node types and their properties (also see the
&lt;a href="#terminology"&gt;terminology conventions&lt;/a&gt; and &lt;a href="#properties"&gt;property
omissions&lt;/a&gt; used in this package).&lt;/p&gt;
&lt;p&gt;Each node is represented by a list where the first member is the type
and the second member is a plist describing the node's properties:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(type (&lt;span class="pl-c1"&gt;:prop1&lt;/span&gt; value1 &lt;span class="pl-c1"&gt;:prop2&lt;/span&gt; value2 ...))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Node types may be either leaves or branches, where branches
may have zero or more child nodes and leaves may not have child nodes
at all. Leaves will always have lists of the form shown above.
Branches, on the other hand, have their children appended to the end:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(type (&lt;span class="pl-c1"&gt;:prop1&lt;/span&gt; value1 &lt;span class="pl-c1"&gt;:prop2&lt;/span&gt; value2) child1 child2 ...)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In addition to leaves and branches, node types can belong to one of
two classes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Objects: roughly correspond to raw, possibly-formatted text&lt;/li&gt;
&lt;li&gt;Elements: more complex structures which may be built from objects&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Within the branch node types, there are restrictions of which class
is allowed to be a child depending on the type. There are three of
these restrictions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Branch element with child elements (aka 'greater elements'): these
are element types that are generally nestable inside one another (eg
headlines, plain-lists, items)&lt;/li&gt;
&lt;li&gt;Branch elements with child objects (aka 'object containers'): these
are element types that hold textual information (eg paragraph)&lt;/li&gt;
&lt;li&gt;Branch objects with child objects (aka 'recursive objects'): these
are object types used primarily for text formating (bold, italic,
underline, etc)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: it is never allowed for an element type to be a child of a
branch object type.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-conventions" class="anchor" aria-hidden="true" href="#conventions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conventions&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-terminology" class="anchor" aria-hidden="true" href="#terminology"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Terminology&lt;/h2&gt;
&lt;p&gt;This package takes several deviations from the original terminology
found in &lt;code&gt;org-element.el&lt;/code&gt;. Generally, the names used here conform to
terminology more often used with tree data structures:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;'node' is used here to describe a vertex in the parse
tree, where 'element' and 'object' are two classes used to describe
said vertex (&lt;code&gt;org-element.el&lt;/code&gt; seems to use 'element' to generally
mean 'node' and uses 'object' to further specify)&lt;/li&gt;
&lt;li&gt;'child' and 'children' are used here instead of 'content' and
'contents'&lt;/li&gt;
&lt;li&gt;'branch' is used here instead of 'container'. Furthermore, 'leaf' is
used to describe the converse of 'branch' (there does not seem to be
an equivalent term in &lt;code&gt;org-element.el&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;org-element.el&lt;/code&gt; uses 'attribute(s)' and 'property(ies)'
interchangably to describe nodes; here only 'property(ies)' is used&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-properties" class="anchor" aria-hidden="true" href="#properties"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Properties&lt;/h2&gt;
&lt;p&gt;The properties &lt;code&gt;:begin&lt;/code&gt;, &lt;code&gt;:end&lt;/code&gt;, &lt;code&gt;:contents-begin&lt;/code&gt;, &lt;code&gt;:contents-end&lt;/code&gt;,
and &lt;code&gt;post-affiliated&lt;/code&gt; are not exposed by this API. They are not
necessary for manipulating the functional representation of the parse
tree. In addition to these, some properties unique to certain types
are not exposed for the same reason. Each type's build function
describes the properties that are available.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-threading" class="anchor" aria-hidden="true" href="#threading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Threading&lt;/h2&gt;
&lt;p&gt;Each function that operates on an element/object will take the
element/object as its right-most argument. This allows convenient
function chaining using &lt;code&gt;dash.el&lt;/code&gt;'s right-threading operators (&lt;code&gt;-&amp;gt;&amp;gt;&lt;/code&gt;
and &lt;code&gt;-some-&amp;gt;&amp;gt;&lt;/code&gt;). The examples below almost exclusively demonstrate
this pattern. Additionally, the right-argument convention also allows
convenient partial application using &lt;code&gt;-partial&lt;/code&gt; from &lt;code&gt;dash.el&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-higher-order-functions" class="anchor" aria-hidden="true" href="#higher-order-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Higher-order functions&lt;/h2&gt;
&lt;p&gt;Higher-order functions (functions that take other functions as
arguments) have two forms. The first takes a (usually unary) function
and applies it:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(om-map-property &lt;span class="pl-c1"&gt;:value&lt;/span&gt; (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; (&lt;span class="pl-v"&gt;s&lt;/span&gt;) (&lt;span class="pl-c1"&gt;concat&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; s)) node)
(om-map-property &lt;span class="pl-c1"&gt;:value&lt;/span&gt; (-partial concat &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) node)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This can equivalently be written using an anaphoric form where the
original function name is appended with &lt;code&gt;*&lt;/code&gt;. The symbol &lt;code&gt;it&lt;/code&gt;
carries the value of the unary argument (unless otherwise specified):&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(om-map-property* &lt;span class="pl-c1"&gt;:value&lt;/span&gt; (&lt;span class="pl-c1"&gt;concat&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; it) node)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-side-effect-functions" class="anchor" aria-hidden="true" href="#side-effect-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Side effect functions&lt;/h2&gt;
&lt;p&gt;All functions that read and write from buffers are named like
&lt;code&gt;om-OPERATION-THING-at&lt;/code&gt; where &lt;code&gt;OPERATION&lt;/code&gt; is some operation to be
performed on &lt;code&gt;THING&lt;/code&gt; in the current buffer. All these functions take
&lt;code&gt;point&lt;/code&gt; as one of their arguments to denote where in the buffer to
perform &lt;code&gt;OPERATION&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;All of these functions have current-point convenience analogues that
are named as &lt;code&gt;om-OPERATION-this-THING&lt;/code&gt; where &lt;code&gt;OPERATION&lt;/code&gt; and &lt;code&gt;THING&lt;/code&gt;
carry the same meaning, but &lt;code&gt;OPERATION&lt;/code&gt; is done at the current point
and &lt;code&gt;point&lt;/code&gt; is not an argument to the function.&lt;/p&gt;
&lt;p&gt;For the sake of brevity, only the former form of these functions are
given in the examples below.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-function-summary" class="anchor" aria-hidden="true" href="#function-summary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Function Summary&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-string-conversion" class="anchor" aria-hidden="true" href="#string-conversion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;String Conversion&lt;/h2&gt;
&lt;p&gt;Convert nodes to strings.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-to-string-node"&gt;om-to-string&lt;/a&gt; &lt;code&gt;(node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-to-trimmed-string-node"&gt;om-to-trimmed-string&lt;/a&gt; &lt;code&gt;(node)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-buffer-parsing" class="anchor" aria-hidden="true" href="#buffer-parsing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Buffer Parsing&lt;/h2&gt;
&lt;p&gt;Parse buffers to trees.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-parse-object-at-point"&gt;om-parse-object-at&lt;/a&gt; &lt;code&gt;(point)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-parse-element-at-point"&gt;om-parse-element-at&lt;/a&gt; &lt;code&gt;(point)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-parse-table-row-at-point"&gt;om-parse-table-row-at&lt;/a&gt; &lt;code&gt;(point)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-parse-headline-at-point"&gt;om-parse-headline-at&lt;/a&gt; &lt;code&gt;(point)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-parse-subtree-at-point"&gt;om-parse-subtree-at&lt;/a&gt; &lt;code&gt;(point)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-parse-item-at-point"&gt;om-parse-item-at&lt;/a&gt; &lt;code&gt;(point)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-parse-section-at-point"&gt;om-parse-section-at&lt;/a&gt; &lt;code&gt;(point)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;Build new nodes.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-leaf-object-nodes" class="anchor" aria-hidden="true" href="#leaf-object-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Leaf Object Nodes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-build-code-value-key-post-blank"&gt;om-build-code&lt;/a&gt; &lt;code&gt;(value &amp;amp;key post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-entity-name-key-use-brackets-p-post-blank"&gt;om-build-entity&lt;/a&gt; &lt;code&gt;(name &amp;amp;key use-brackets-p post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-export-snippet-back-end-value-key-post-blank"&gt;om-build-export-snippet&lt;/a&gt; &lt;code&gt;(back-end value &amp;amp;key post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-inline-babel-call-call-key-inside-header-arguments-end-header-post-blank"&gt;om-build-inline-babel-call&lt;/a&gt; &lt;code&gt;(call &amp;amp;key inside-header arguments end-header post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-inline-src-block-language-key-parameters-value--post-blank"&gt;om-build-inline-src-block&lt;/a&gt; &lt;code&gt;(language &amp;amp;key parameters (value "") post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-line-break-key-post-blank"&gt;om-build-line-break&lt;/a&gt; &lt;code&gt;(&amp;amp;key post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-latex-fragment-value-key-post-blank"&gt;om-build-latex-fragment&lt;/a&gt; &lt;code&gt;(value &amp;amp;key post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-macro-key-key-args-post-blank"&gt;om-build-macro&lt;/a&gt; &lt;code&gt;(key &amp;amp;key args post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-statistics-cookie-value-key-post-blank"&gt;om-build-statistics-cookie&lt;/a&gt; &lt;code&gt;(value &amp;amp;key post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-target-value-key-post-blank"&gt;om-build-target&lt;/a&gt; &lt;code&gt;(value &amp;amp;key post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-timestamp-type-year-start-month-start-day-start-year-end-month-end-day-end-key-hour-start-minute-start-hour-end-minute-end-repeater-type-repeater-unit-repeater-value-warning-type-warning-unit-warning-value-post-blank"&gt;om-build-timestamp&lt;/a&gt; &lt;code&gt;(type year-start month-start day-start year-end month-end day-end &amp;amp;key hour-start minute-start hour-end minute-end repeater-type repeater-unit repeater-value warning-type warning-unit warning-value post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-verbatim-value-key-post-blank"&gt;om-build-verbatim&lt;/a&gt; &lt;code&gt;(value &amp;amp;key post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-branch-object-nodes" class="anchor" aria-hidden="true" href="#branch-object-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Branch Object Nodes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-build-bold-key-post-blank-rest-object-nodes"&gt;om-build-bold&lt;/a&gt; &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-footnote-reference-key-label-post-blank-rest-object-nodes"&gt;om-build-footnote-reference&lt;/a&gt; &lt;code&gt;(&amp;amp;key label post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-italic-key-post-blank-rest-object-nodes"&gt;om-build-italic&lt;/a&gt; &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-link-path-key-format-type-fuzzy-post-blank-rest-object-nodes"&gt;om-build-link&lt;/a&gt; &lt;code&gt;(path &amp;amp;key format (type "fuzzy") post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-radio-target-key-post-blank-rest-object-nodes"&gt;om-build-radio-target&lt;/a&gt; &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-strike-through-key-post-blank-rest-object-nodes"&gt;om-build-strike-through&lt;/a&gt; &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-superscript-key-use-brackets-p-post-blank-rest-object-nodes"&gt;om-build-superscript&lt;/a&gt; &lt;code&gt;(&amp;amp;key use-brackets-p post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-subscript-key-use-brackets-p-post-blank-rest-object-nodes"&gt;om-build-subscript&lt;/a&gt; &lt;code&gt;(&amp;amp;key use-brackets-p post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-table-cell-key-post-blank-rest-object-nodes"&gt;om-build-table-cell&lt;/a&gt; &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-underline-key-post-blank-rest-object-nodes"&gt;om-build-underline&lt;/a&gt; &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-leaf-element-nodes" class="anchor" aria-hidden="true" href="#leaf-element-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Leaf Element Nodes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-build-babel-call-call-key-inside-header-arguments-end-header-post-blank"&gt;om-build-babel-call&lt;/a&gt; &lt;code&gt;(call &amp;amp;key inside-header arguments end-header post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-clock-value-key-post-blank"&gt;om-build-clock&lt;/a&gt; &lt;code&gt;(value &amp;amp;key post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-comment-value-key-post-blank"&gt;om-build-comment&lt;/a&gt; &lt;code&gt;(value &amp;amp;key post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-comment-block-key-value--post-blank"&gt;om-build-comment-block&lt;/a&gt; &lt;code&gt;(&amp;amp;key (value "") post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-diary-sexp-key-value-post-blank"&gt;om-build-diary-sexp&lt;/a&gt; &lt;code&gt;(&amp;amp;key value post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-example-block-key-preserve-indent-switches-value--post-blank"&gt;om-build-example-block&lt;/a&gt; &lt;code&gt;(&amp;amp;key preserve-indent switches (value "") post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-export-block-type-value-key-post-blank"&gt;om-build-export-block&lt;/a&gt; &lt;code&gt;(type value &amp;amp;key post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-fixed-width-value-key-post-blank"&gt;om-build-fixed-width&lt;/a&gt; &lt;code&gt;(value &amp;amp;key post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-horizontal-rule-key-post-blank"&gt;om-build-horizontal-rule&lt;/a&gt; &lt;code&gt;(&amp;amp;key post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-keyword-key-value-key-post-blank"&gt;om-build-keyword&lt;/a&gt; &lt;code&gt;(key value &amp;amp;key post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-latex-environment-value-key-post-blank"&gt;om-build-latex-environment&lt;/a&gt; &lt;code&gt;(value &amp;amp;key post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-node-property-key-value-key-post-blank"&gt;om-build-node-property&lt;/a&gt; &lt;code&gt;(key value &amp;amp;key post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-planning-key-closed-deadline-scheduled-post-blank"&gt;om-build-planning&lt;/a&gt; &lt;code&gt;(&amp;amp;key closed deadline scheduled post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-src-block-key-value--language-parameters-preserve-indent-switches-post-blank"&gt;om-build-src-block&lt;/a&gt; &lt;code&gt;(&amp;amp;key (value "") language parameters preserve-indent switches post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-branch-element-nodes-with-child-object-nodes" class="anchor" aria-hidden="true" href="#branch-element-nodes-with-child-object-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Branch Element Nodes with Child Object Nodes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-build-paragraph-key-post-blank-rest-object-nodes"&gt;om-build-paragraph&lt;/a&gt; &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-table-row-key-post-blank-rest-object-nodes"&gt;om-build-table-row&lt;/a&gt; &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-verse-block-key-post-blank-rest-object-nodes"&gt;om-build-verse-block&lt;/a&gt; &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-branch-element-nodes-with-child-element-nodes" class="anchor" aria-hidden="true" href="#branch-element-nodes-with-child-element-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Branch Element Nodes with Child Element Nodes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-build-center-block-key-post-blank-rest-element-nodes"&gt;om-build-center-block&lt;/a&gt; &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-drawer-drawer-name-key-post-blank-rest-element-nodes"&gt;om-build-drawer&lt;/a&gt; &lt;code&gt;(drawer-name &amp;amp;key post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-dynamic-block-block-name-key-arguments-post-blank-rest-element-nodes"&gt;om-build-dynamic-block&lt;/a&gt; &lt;code&gt;(block-name &amp;amp;key arguments post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-footnote-definition-label-key-post-blank-rest-element-nodes"&gt;om-build-footnote-definition&lt;/a&gt; &lt;code&gt;(label &amp;amp;key post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-headline-key-archivedp-commentedp-footnote-section-p-level-1-pre-blank-0-priority-tags-title-todo-keyword-post-blank-rest-element-nodes"&gt;om-build-headline&lt;/a&gt; &lt;code&gt;(&amp;amp;key archivedp commentedp footnote-section-p (level 1) (pre-blank 0) priority tags title todo-keyword post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-item-key-bullet-quote---checkbox-counter-tag-post-blank-rest-element-nodes"&gt;om-build-item&lt;/a&gt; &lt;code&gt;(&amp;amp;key (bullet '-) checkbox counter tag post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-plain-list-key-post-blank-rest-element-nodes"&gt;om-build-plain-list&lt;/a&gt; &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-property-drawer-key-post-blank-rest-element-nodes"&gt;om-build-property-drawer&lt;/a&gt; &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-quote-block-key-post-blank-rest-element-nodes"&gt;om-build-quote-block&lt;/a&gt; &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-section-key-post-blank-rest-element-nodes"&gt;om-build-section&lt;/a&gt; &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-special-block-type-key-post-blank-rest-element-nodes"&gt;om-build-special-block&lt;/a&gt; &lt;code&gt;(type &amp;amp;key post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-table-key-tblfm-post-blank-rest-element-nodes"&gt;om-build-table&lt;/a&gt; &lt;code&gt;(&amp;amp;key tblfm post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-miscellaneous-builders" class="anchor" aria-hidden="true" href="#miscellaneous-builders"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Miscellaneous Builders&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-build-secondary-string-string"&gt;om-build-secondary-string!&lt;/a&gt; &lt;code&gt;(string)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-table-row-hline-key-post-blank"&gt;om-build-table-row-hline&lt;/a&gt; &lt;code&gt;(&amp;amp;key post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-timestamp-diary-form-key-post-blank"&gt;om-build-timestamp-diary&lt;/a&gt; &lt;code&gt;(form &amp;amp;key post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-shorthand-builders" class="anchor" aria-hidden="true" href="#shorthand-builders"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shorthand Builders&lt;/h3&gt;
&lt;p&gt;Build nodes with more convenient/shorter syntax.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-build-timestamp-start-key-end-active-repeater-warning-post-blank"&gt;om-build-timestamp!&lt;/a&gt; &lt;code&gt;(start &amp;amp;key end active repeater warning post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-clock-start-key-end-post-blank"&gt;om-build-clock!&lt;/a&gt; &lt;code&gt;(start &amp;amp;key end post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-planning-key-closed-deadline-scheduled-post-blank"&gt;om-build-planning!&lt;/a&gt; &lt;code&gt;(&amp;amp;key closed deadline scheduled post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-property-drawer-key-post-blank-rest-keyvals"&gt;om-build-property-drawer!&lt;/a&gt; &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest keyvals)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-headline-key-level-1-title-text-todo-keyword-tags-pre-blank-priority-commentedp-archivedp-post-blank-planning-statistics-cookie-section-children-rest-subheadlines"&gt;om-build-headline!&lt;/a&gt; &lt;code&gt;(&amp;amp;key (level 1) title-text todo-keyword tags pre-blank priority commentedp archivedp post-blank planning statistics-cookie section-children &amp;amp;rest subheadlines)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-item-key-post-blank-bullet-checkbox-tag-paragraph-counter-rest-children"&gt;om-build-item!&lt;/a&gt; &lt;code&gt;(&amp;amp;key post-blank bullet checkbox tag paragraph counter &amp;amp;rest children)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-paragraph-string-key-post-blank"&gt;om-build-paragraph!&lt;/a&gt; &lt;code&gt;(string &amp;amp;key post-blank)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-table-cell-string"&gt;om-build-table-cell!&lt;/a&gt; &lt;code&gt;(string)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-table-row-row-list"&gt;om-build-table-row!&lt;/a&gt; &lt;code&gt;(row-list)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-build-table-key-tblfm-post-blank-rest-row-lists"&gt;om-build-table!&lt;/a&gt; &lt;code&gt;(&amp;amp;key tblfm post-blank &amp;amp;rest row-lists)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-type-predicates" class="anchor" aria-hidden="true" href="#type-predicates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Type Predicates&lt;/h2&gt;
&lt;p&gt;Test node types.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-get-type-node"&gt;om-get-type&lt;/a&gt; &lt;code&gt;(node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-is-type-type-node"&gt;om-is-type&lt;/a&gt; &lt;code&gt;(type node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-is-any-type-types-node"&gt;om-is-any-type&lt;/a&gt; &lt;code&gt;(types node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-is-element-node"&gt;om-is-element&lt;/a&gt; &lt;code&gt;(node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-is-branch-node-node"&gt;om-is-branch-node&lt;/a&gt; &lt;code&gt;(node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-node-may-have-child-objects-node"&gt;om-node-may-have-child-objects&lt;/a&gt; &lt;code&gt;(node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-node-may-have-child-elements-node"&gt;om-node-may-have-child-elements&lt;/a&gt; &lt;code&gt;(node)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-property-manipulation" class="anchor" aria-hidden="true" href="#property-manipulation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Property Manipulation&lt;/h2&gt;
&lt;p&gt;Set, get, and map properties of nodes.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-generic" class="anchor" aria-hidden="true" href="#generic"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generic&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-contains-point-p-point-node"&gt;om-contains-point-p&lt;/a&gt; &lt;code&gt;(point node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-set-property-prop-value-node"&gt;om-set-property&lt;/a&gt; &lt;code&gt;(prop value node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-set-properties-plist-node"&gt;om-set-properties&lt;/a&gt; &lt;code&gt;(plist node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-get-property-prop-node"&gt;om-get-property&lt;/a&gt; &lt;code&gt;(prop node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-map-property-prop-fun-node"&gt;om-map-property&lt;/a&gt; &lt;code&gt;(prop fun node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-map-properties-plist-node"&gt;om-map-properties&lt;/a&gt; &lt;code&gt;(plist node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-toggle-property-prop-node"&gt;om-toggle-property&lt;/a&gt; &lt;code&gt;(prop node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-shift-property-prop-n-node"&gt;om-shift-property&lt;/a&gt; &lt;code&gt;(prop n node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-insert-into-property-prop-index-string-node"&gt;om-insert-into-property&lt;/a&gt; &lt;code&gt;(prop index string node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-remove-from-property-prop-string-node"&gt;om-remove-from-property&lt;/a&gt; &lt;code&gt;(prop string node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-plist-put-property-prop-key-value-node"&gt;om-plist-put-property&lt;/a&gt; &lt;code&gt;(prop key value node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-plist-remove-property-prop-key-node"&gt;om-plist-remove-property&lt;/a&gt; &lt;code&gt;(prop key node)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-clock" class="anchor" aria-hidden="true" href="#clock"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clock&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-clock-is-running-clock"&gt;om-clock-is-running&lt;/a&gt; &lt;code&gt;(clock)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-entity" class="anchor" aria-hidden="true" href="#entity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Entity&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-entity-get-replacement-key-entity"&gt;om-entity-get-replacement&lt;/a&gt; &lt;code&gt;(key entity)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-headline" class="anchor" aria-hidden="true" href="#headline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Headline&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-headline-set-title-title-text-stats-cookie-value-headline"&gt;om-headline-set-title!&lt;/a&gt; &lt;code&gt;(title-text stats-cookie-value headline)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-headline-is-done-headline"&gt;om-headline-is-done&lt;/a&gt; &lt;code&gt;(headline)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-headline-has-tag-tag-headline"&gt;om-headline-has-tag&lt;/a&gt; &lt;code&gt;(tag headline)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-headline-get-statistics-cookie-headline"&gt;om-headline-get-statistics-cookie&lt;/a&gt; &lt;code&gt;(headline)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-item" class="anchor" aria-hidden="true" href="#item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Item&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-item-toggle-checkbox-item"&gt;om-item-toggle-checkbox&lt;/a&gt; &lt;code&gt;(item)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-planning" class="anchor" aria-hidden="true" href="#planning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Planning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-planning-set-timestamp-prop-planning-list-planning"&gt;om-planning-set-timestamp!&lt;/a&gt; &lt;code&gt;(prop planning-list planning)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-statistics-cookie" class="anchor" aria-hidden="true" href="#statistics-cookie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Statistics Cookie&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-statistics-cookie-is-complete-statistics-cookie"&gt;om-statistics-cookie-is-complete&lt;/a&gt; &lt;code&gt;(statistics-cookie)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-timestamp-auxiliary" class="anchor" aria-hidden="true" href="#timestamp-auxiliary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Timestamp (Auxiliary)&lt;/h3&gt;
&lt;p&gt;Functions to work with timestamp data&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-time-to-unixtime-time"&gt;om-time-to-unixtime&lt;/a&gt; &lt;code&gt;(time)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-unixtime-to-time-long-unixtime"&gt;om-unixtime-to-time-long&lt;/a&gt; &lt;code&gt;(unixtime)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-unixtime-to-time-short-unixtime"&gt;om-unixtime-to-time-short&lt;/a&gt; &lt;code&gt;(unixtime)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-timestamp-standard" class="anchor" aria-hidden="true" href="#timestamp-standard"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Timestamp (Standard)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-timestamp-get-start-time-timestamp"&gt;om-timestamp-get-start-time&lt;/a&gt; &lt;code&gt;(timestamp)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-timestamp-get-end-time-timestamp"&gt;om-timestamp-get-end-time&lt;/a&gt; &lt;code&gt;(timestamp)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-timestamp-get-range-timestamp"&gt;om-timestamp-get-range&lt;/a&gt; &lt;code&gt;(timestamp)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-timestamp-is-active-timestamp"&gt;om-timestamp-is-active&lt;/a&gt; &lt;code&gt;(timestamp)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-timestamp-is-ranged-timestamp"&gt;om-timestamp-is-ranged&lt;/a&gt; &lt;code&gt;(timestamp)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-timestamp-range-contains-p-unixtime-timestamp"&gt;om-timestamp-range-contains-p&lt;/a&gt; &lt;code&gt;(unixtime timestamp)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-timestamp-set-collapsed-flag-timestamp"&gt;om-timestamp-set-collapsed&lt;/a&gt; &lt;code&gt;(flag timestamp)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-timestamp-set-start-time-time-timestamp"&gt;om-timestamp-set-start-time&lt;/a&gt; &lt;code&gt;(time timestamp)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-timestamp-set-end-time-time-timestamp"&gt;om-timestamp-set-end-time&lt;/a&gt; &lt;code&gt;(time timestamp)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-timestamp-set-single-time-time-timestamp"&gt;om-timestamp-set-single-time&lt;/a&gt; &lt;code&gt;(time timestamp)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-timestamp-set-double-time-time1-time2-timestamp"&gt;om-timestamp-set-double-time&lt;/a&gt; &lt;code&gt;(time1 time2 timestamp)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-timestamp-set-range-range-timestamp"&gt;om-timestamp-set-range&lt;/a&gt; &lt;code&gt;(range timestamp)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-timestamp-set-active-flag-timestamp"&gt;om-timestamp-set-active&lt;/a&gt; &lt;code&gt;(flag timestamp)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-timestamp-shift-n-unit-timestamp"&gt;om-timestamp-shift&lt;/a&gt; &lt;code&gt;(n unit timestamp)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-timestamp-shift-start-n-unit-timestamp"&gt;om-timestamp-shift-start&lt;/a&gt; &lt;code&gt;(n unit timestamp)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-timestamp-shift-end-n-unit-timestamp"&gt;om-timestamp-shift-end&lt;/a&gt; &lt;code&gt;(n unit timestamp)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-timestamp-toggle-active-timestamp"&gt;om-timestamp-toggle-active&lt;/a&gt; &lt;code&gt;(timestamp)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-timestamp-truncate-timestamp"&gt;om-timestamp-truncate&lt;/a&gt; &lt;code&gt;(timestamp)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-timestamp-truncate-start-timestamp"&gt;om-timestamp-truncate-start&lt;/a&gt; &lt;code&gt;(timestamp)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-timestamp-truncate-end-timestamp"&gt;om-timestamp-truncate-end&lt;/a&gt; &lt;code&gt;(timestamp)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-timestamp-diary" class="anchor" aria-hidden="true" href="#timestamp-diary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Timestamp (diary)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-timestamp-diary-set-value-form-timestamp-diary"&gt;om-timestamp-diary-set-value&lt;/a&gt; &lt;code&gt;(form timestamp-diary)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-branchchild-manipulation" class="anchor" aria-hidden="true" href="#branchchild-manipulation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Branch/Child Manipulation&lt;/h2&gt;
&lt;p&gt;Set, get, and map the children of branch nodes.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-polymorphic" class="anchor" aria-hidden="true" href="#polymorphic"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Polymorphic&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-children-contain-point-point-branch-node"&gt;om-children-contain-point&lt;/a&gt; &lt;code&gt;(point branch-node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-get-children-branch-node"&gt;om-get-children&lt;/a&gt; &lt;code&gt;(branch-node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-set-children-children-branch-node"&gt;om-set-children&lt;/a&gt; &lt;code&gt;(children branch-node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-map-children-fun-branch-node"&gt;om-map-children&lt;/a&gt; &lt;code&gt;(fun branch-node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-is-childless-branch-node"&gt;om-is-childless&lt;/a&gt; &lt;code&gt;(branch-node)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-object-nodes" class="anchor" aria-hidden="true" href="#object-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Object Nodes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-unwrap-object-node"&gt;om-unwrap&lt;/a&gt; &lt;code&gt;(object-node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-unwrap-types-deep-types-object-node"&gt;om-unwrap-types-deep&lt;/a&gt; &lt;code&gt;(types object-node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-unwrap-deep-object-node"&gt;om-unwrap-deep&lt;/a&gt; &lt;code&gt;(object-node)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-secondary-strings" class="anchor" aria-hidden="true" href="#secondary-strings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Secondary Strings&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-flatten-secondary-string"&gt;om-flatten&lt;/a&gt; &lt;code&gt;(secondary-string)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-flatten-types-deep-types-secondary-string"&gt;om-flatten-types-deep&lt;/a&gt; &lt;code&gt;(types secondary-string)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-flatten-deep-secondary-string"&gt;om-flatten-deep&lt;/a&gt; &lt;code&gt;(secondary-string)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-headline-1" class="anchor" aria-hidden="true" href="#headline-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Headline&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-headline-get-node-properties-headline"&gt;om-headline-get-node-properties&lt;/a&gt; &lt;code&gt;(headline)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-headline-get-properties-drawer-headline"&gt;om-headline-get-properties-drawer&lt;/a&gt; &lt;code&gt;(headline)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-headline-get-planning-headline"&gt;om-headline-get-planning&lt;/a&gt; &lt;code&gt;(headline)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-headline-get-subheadlines-headline"&gt;om-headline-get-subheadlines&lt;/a&gt; &lt;code&gt;(headline)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-headline-get-section-headline"&gt;om-headline-get-section&lt;/a&gt; &lt;code&gt;(headline)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-headline-get-path-headline"&gt;om-headline-get-path&lt;/a&gt; &lt;code&gt;(headline)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-headline-update-item-statistics-headline"&gt;om-headline-update-item-statistics&lt;/a&gt; &lt;code&gt;(headline)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-headline-update-todo-statistics-headline"&gt;om-headline-update-todo-statistics&lt;/a&gt; &lt;code&gt;(headline)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-headline-indent-subheadline-index-headline"&gt;om-headline-indent-subheadline&lt;/a&gt; &lt;code&gt;(index headline)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-headline-indent-subtree-index-headline"&gt;om-headline-indent-subtree&lt;/a&gt; &lt;code&gt;(index headline)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-headline-unindent-subheadline-index-child-index-headline"&gt;om-headline-unindent-subheadline&lt;/a&gt; &lt;code&gt;(index child-index headline)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-headline-unindent-all-subheadlines-index-headline"&gt;om-headline-unindent-all-subheadlines&lt;/a&gt; &lt;code&gt;(index headline)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-plain-list" class="anchor" aria-hidden="true" href="#plain-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plain List&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-plain-list-set-type-type-plain-list"&gt;om-plain-list-set-type&lt;/a&gt; &lt;code&gt;(type plain-list)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-plain-list-indent-item-index-plain-list"&gt;om-plain-list-indent-item&lt;/a&gt; &lt;code&gt;(index plain-list)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-plain-list-indent-item-tree-index-plain-list"&gt;om-plain-list-indent-item-tree&lt;/a&gt; &lt;code&gt;(index plain-list)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-plain-list-unindent-item-index-child-index-plain-list"&gt;om-plain-list-unindent-item&lt;/a&gt; &lt;code&gt;(index child-index plain-list)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-plain-list-unindent-all-items-index-plain-list"&gt;om-plain-list-unindent-all-items&lt;/a&gt; &lt;code&gt;(index plain-list)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-table" class="anchor" aria-hidden="true" href="#table"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-table-get-cell-row-index-column-index-table"&gt;om-table-get-cell&lt;/a&gt; &lt;code&gt;(row-index column-index table)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-table-delete-column-column-index-table"&gt;om-table-delete-column&lt;/a&gt; &lt;code&gt;(column-index table)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-table-delete-row-row-index-table"&gt;om-table-delete-row&lt;/a&gt; &lt;code&gt;(row-index table)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-table-insert-column-column-index-column-text-table"&gt;om-table-insert-column!&lt;/a&gt; &lt;code&gt;(column-index column-text table)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-table-insert-row-row-index-row-text-table"&gt;om-table-insert-row!&lt;/a&gt; &lt;code&gt;(row-index row-text table)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-table-replace-cell-row-index-column-index-cell-text-table"&gt;om-table-replace-cell!&lt;/a&gt; &lt;code&gt;(row-index column-index cell-text table)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-table-replace-column-column-index-column-text-table"&gt;om-table-replace-column!&lt;/a&gt; &lt;code&gt;(column-index column-text table)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-table-replace-row-row-index-row-text-table"&gt;om-table-replace-row!&lt;/a&gt; &lt;code&gt;(row-index row-text table)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-node-matching" class="anchor" aria-hidden="true" href="#node-matching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Node Matching&lt;/h2&gt;
&lt;p&gt;Use pattern-matching to selectively perform operations on nodes in trees.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-match-pattern-node"&gt;om-match&lt;/a&gt; &lt;code&gt;(pattern node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-match-delete-pattern-node"&gt;om-match-delete&lt;/a&gt; &lt;code&gt;(pattern node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-match-extract-pattern-node"&gt;om-match-extract&lt;/a&gt; &lt;code&gt;(pattern node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-match-map-pattern-fun-node"&gt;om-match-map&lt;/a&gt; &lt;code&gt;(pattern fun node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-match-mapcat-pattern-fun-node"&gt;om-match-mapcat&lt;/a&gt; &lt;code&gt;(pattern fun node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-match-replace-pattern-node-node"&gt;om-match-replace&lt;/a&gt; &lt;code&gt;(pattern node* node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-match-insert-before-pattern-node-node"&gt;om-match-insert-before&lt;/a&gt; &lt;code&gt;(pattern node* node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-match-insert-after-pattern-node-node"&gt;om-match-insert-after&lt;/a&gt; &lt;code&gt;(pattern node* node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-match-insert-within-pattern-index-node-node"&gt;om-match-insert-within&lt;/a&gt; &lt;code&gt;(pattern index node* node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-match-splice-pattern-nodes-node"&gt;om-match-splice&lt;/a&gt; &lt;code&gt;(pattern nodes* node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-match-splice-before-pattern-nodes-node"&gt;om-match-splice-before&lt;/a&gt; &lt;code&gt;(pattern nodes* node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-match-splice-after-pattern-nodes-node"&gt;om-match-splice-after&lt;/a&gt; &lt;code&gt;(pattern nodes* node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-match-splice-within-pattern-index-nodes-node"&gt;om-match-splice-within&lt;/a&gt; &lt;code&gt;(pattern index nodes* node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-match-do-pattern-fun-node"&gt;om-match-do&lt;/a&gt; &lt;code&gt;(pattern fun node)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-buffer-side-effects" class="anchor" aria-hidden="true" href="#buffer-side-effects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Buffer Side Effects&lt;/h2&gt;
&lt;p&gt;Map node manipulations into buffers.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-insert" class="anchor" aria-hidden="true" href="#insert"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Insert&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-insert-point-node"&gt;om-insert&lt;/a&gt; &lt;code&gt;(point node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-insert-tail-point-node"&gt;om-insert-tail&lt;/a&gt; &lt;code&gt;(point node)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-update" class="anchor" aria-hidden="true" href="#update"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-update-fun-node"&gt;om-update&lt;/a&gt; &lt;code&gt;(fun node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-update-object-at-point-fun"&gt;om-update-object-at&lt;/a&gt; &lt;code&gt;(point fun)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-update-element-at-point-fun"&gt;om-update-element-at&lt;/a&gt; &lt;code&gt;(point fun)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-update-table-row-at-point-fun"&gt;om-update-table-row-at&lt;/a&gt; &lt;code&gt;(point fun)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-update-item-at-point-fun"&gt;om-update-item-at&lt;/a&gt; &lt;code&gt;(point fun)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-update-headline-at-point-fun"&gt;om-update-headline-at&lt;/a&gt; &lt;code&gt;(point fun)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-update-subtree-at-point-fun"&gt;om-update-subtree-at&lt;/a&gt; &lt;code&gt;(point fun)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-update-section-at-point-fun"&gt;om-update-section-at&lt;/a&gt; &lt;code&gt;(point fun)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-misc" class="anchor" aria-hidden="true" href="#misc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Misc&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#om-fold-node"&gt;om-fold&lt;/a&gt; &lt;code&gt;(node)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#om-unfold-node"&gt;om-unfold&lt;/a&gt; &lt;code&gt;(node)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-function-examples" class="anchor" aria-hidden="true" href="#function-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Function Examples&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-string-conversion-1" class="anchor" aria-hidden="true" href="#string-conversion-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;String Conversion&lt;/h2&gt;
&lt;p&gt;Convert nodes to strings.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-om-to-string-node" class="anchor" aria-hidden="true" href="#om-to-string-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-to-string &lt;code&gt;(node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; as an interpreted string without text properties.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(om-to-string '(&lt;span class="pl-c1"&gt;bold&lt;/span&gt; (&lt;span class="pl-c1"&gt;:begin&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;:end&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt; &lt;span class="pl-c1"&gt;:parent&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;:post-blank&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c1"&gt;:post-affiliated&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
			   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "*text*"&lt;/span&gt;

(om-to-string '(&lt;span class="pl-c1"&gt;bold&lt;/span&gt; (&lt;span class="pl-c1"&gt;:begin&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;:end&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt; &lt;span class="pl-c1"&gt;:parent&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;:post-blank&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; &lt;span class="pl-c1"&gt;:post-affiliated&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
			   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "*text*   "&lt;/span&gt;

(om-to-string &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; ""&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-to-trimmed-string-node" class="anchor" aria-hidden="true" href="#om-to-trimmed-string-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-to-trimmed-string &lt;code&gt;(node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Like &lt;a href="#om-to-string-node"&gt;&lt;code&gt;om-to-string&lt;/code&gt;&lt;/a&gt; but strip whitespace when returning &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(om-to-trimmed-string '(&lt;span class="pl-c1"&gt;bold&lt;/span&gt; (&lt;span class="pl-c1"&gt;:begin&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;:end&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt; &lt;span class="pl-c1"&gt;:parent&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;:post-blank&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c1"&gt;:post-affiliated&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
				   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "*text*"&lt;/span&gt;

(om-to-trimmed-string '(&lt;span class="pl-c1"&gt;bold&lt;/span&gt; (&lt;span class="pl-c1"&gt;:begin&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;:end&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt; &lt;span class="pl-c1"&gt;:parent&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;:post-blank&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; &lt;span class="pl-c1"&gt;:post-affiliated&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
				   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "*text*"&lt;/span&gt;

(om-to-trimmed-string &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; ""&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-buffer-parsing-1" class="anchor" aria-hidden="true" href="#buffer-parsing-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Buffer Parsing&lt;/h2&gt;
&lt;p&gt;Parse buffers to trees.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-om-parse-object-at-point" class="anchor" aria-hidden="true" href="#om-parse-object-at-point"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-parse-object-at &lt;code&gt;(point)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return object node under &lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; or nil if not on an object.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *text*&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-object-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (&lt;span class="pl-k"&gt;car&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; 'bold&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-object-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (&lt;span class="pl-k"&gt;car&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; 'timestamp&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - notme&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return nil when parsing an element&lt;/span&gt;
(om-parse-object-at
 &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-parse-element-at-point" class="anchor" aria-hidden="true" href="#om-parse-element-at-point"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-parse-element-at &lt;code&gt;(point)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return element node under &lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; or nil if not on an element.&lt;/p&gt;
&lt;p&gt;This function will return every element available in &lt;code&gt;om-elements&lt;/code&gt;
with the exception of &lt;code&gt;section&lt;/code&gt;, &lt;code&gt;item&lt;/code&gt;, and &lt;code&gt;table-row&lt;/code&gt;. To
specifically parse these, use the functions &lt;a href="#om-parse-section-at-point"&gt;&lt;code&gt;om-parse-section-at&lt;/code&gt;&lt;/a&gt;,
&lt;a href="#om-parse-item-at-point"&gt;&lt;code&gt;om-parse-item-at&lt;/code&gt;&lt;/a&gt;, and &lt;a href="#om-parse-table-row-at-point"&gt;&lt;code&gt;om-parse-table-row-at&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; #+CALL: ktulu()&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-element-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (&lt;span class="pl-k"&gt;car&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; 'babel-call&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - plain-list&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Give the plain-list, not the item for this function&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-element-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (&lt;span class="pl-k"&gt;car&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; 'plain-list&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; | R | A |&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; | G | E |&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return a table, not the table-row for this function&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-element-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (&lt;span class="pl-k"&gt;car&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; 'table&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-parse-table-row-at-point" class="anchor" aria-hidden="true" href="#om-parse-table-row-at-point"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-parse-table-row-at &lt;code&gt;(point)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return table-row node under &lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; or nil if not on a table-row.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; | bow | stroke |&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return the row itself&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-table-row-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (&lt;span class="pl-k"&gt;car&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; 'table-row&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Also return the row when not at beginning of line&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-table-row-at &lt;span class="pl-c1"&gt;5&lt;/span&gt;)
     (&lt;span class="pl-k"&gt;car&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; 'table-row&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - bow and arrow choke&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return nil if not a table-row&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-table-row-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (&lt;span class="pl-k"&gt;car&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-parse-headline-at-point" class="anchor" aria-hidden="true" href="#om-parse-headline-at-point"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-parse-headline-at &lt;code&gt;(point)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return headline node under &lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; or nil if not on a headline.
&lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; does not need to be on the headline itself. Only the headline
and its section will be returned. To include subheadlines, use
&lt;a href="#om-parse-subtree-at-point"&gt;&lt;code&gt;om-parse-subtree-at&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return the headline itself&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-headline-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* headline"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; section crap&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return headline and section&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-headline-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* headline&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      section crap"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return headline when point is in the section&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-headline-at &lt;span class="pl-c1"&gt;12&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* headline&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      section crap"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; section crap&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** not parsed&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Don't parse any subheadlines&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-headline-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* headline&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      section crap"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; nothing nowhere&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return nil if not under a headline&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-headline-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; ""&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-parse-subtree-at-point" class="anchor" aria-hidden="true" href="#om-parse-subtree-at-point"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-parse-subtree-at &lt;code&gt;(point)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return headline node under &lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; or nil if not on a headline.
&lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; does not need to be on the headline itself. Unlike
&lt;a href="#om-parse-headline-at-point"&gt;&lt;code&gt;om-parse-headline-at&lt;/code&gt;&lt;/a&gt;, the returned node will include
child headlines.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return the headline itself&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-subtree-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* headline"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; section crap&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return headline and section&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-subtree-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* headline&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      section crap"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return headline when point is in the section&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-subtree-at &lt;span class="pl-c1"&gt;12&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* headline&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      section crap"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; section crap&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** parsed&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return all the subheadlines&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-subtree-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* headline&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      section crap&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** parsed"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; nothing nowhere&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return nil if not under a headline&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-subtree-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; ""&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-parse-item-at-point" class="anchor" aria-hidden="true" href="#om-parse-item-at-point"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-parse-item-at &lt;code&gt;(point)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return item node under &lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; or nil if not on an item.
This will return the item node even if &lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; is not at the beginning
of the line.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - item&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return the item itself&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-item-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "- item"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Also return the item when not at beginning of line&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-item-at &lt;span class="pl-c1"&gt;5&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "- item"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - item&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;   - item 2&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return item and its subitems&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-item-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "- item&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;        - item 2"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * not item&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return nil if not an item&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-item-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; ""&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-parse-section-at-point" class="anchor" aria-hidden="true" href="#om-parse-section-at-point"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-parse-section-at &lt;code&gt;(point)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return section node under &lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; or nil if not on a section.
If &lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; is on or within a headline, return the section under that
headline. If &lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; is before the first headline (if any), return
the section at the top of the org buffer.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; over headline&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; under headline&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return the section above the headline&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-section-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "over headline"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return the section under headline&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-section-at &lt;span class="pl-c1"&gt;25&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "under headline"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** subheadline&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return nil if no section under headline&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-section-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; ""&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; &lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return nil if no section at all&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-section-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; ""&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-building-1" class="anchor" aria-hidden="true" href="#building-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;Build new nodes.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-leaf-object-nodes-1" class="anchor" aria-hidden="true" href="#leaf-object-nodes-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Leaf Object Nodes&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-code-value-key-post-blank" class="anchor" aria-hidden="true" href="#om-build-code-value-key-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-code &lt;code&gt;(value &amp;amp;key post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a code object node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt;: (required) a string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-code &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "~text~"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-entity-name-key-use-brackets-p-post-blank" class="anchor" aria-hidden="true" href="#om-build-entity-name-key-use-brackets-p-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-entity &lt;code&gt;(name &amp;amp;key use-brackets-p post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build an entity object node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;name&lt;/code&gt;&lt;/strong&gt;: (required) a string that makes &lt;code&gt;org-entity-get&lt;/code&gt; return non-nil&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;use-brackets-p&lt;/code&gt;&lt;/strong&gt;:  nil or t&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-entity &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gamma&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "\\gamma"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-export-snippet-back-end-value-key-post-blank" class="anchor" aria-hidden="true" href="#om-build-export-snippet-back-end-value-key-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-export-snippet &lt;code&gt;(back-end value &amp;amp;key post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build an export-snippet object node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;back-end&lt;/code&gt;&lt;/strong&gt;: (required) a oneline string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt;: (required) a string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-export-snippet &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;back&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "@@back:value@@"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-inline-babel-call-call-key-inside-header-arguments-end-header-post-blank" class="anchor" aria-hidden="true" href="#om-build-inline-babel-call-call-key-inside-header-arguments-end-header-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-inline-babel-call &lt;code&gt;(call &amp;amp;key inside-header arguments end-header post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build an inline-babel-call object node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;call&lt;/code&gt;&lt;/strong&gt;: (required) a oneline string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;inside-header&lt;/code&gt;&lt;/strong&gt;:  a plist&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/strong&gt;:  a list of oneline strings&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;end-header&lt;/code&gt;&lt;/strong&gt;:  a plist&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-inline-babel-call &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "call_name()"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-inline-babel-call &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:arguments&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;n=4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "call_name(n=4)"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-inline-babel-call &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:inside-header&lt;/span&gt; '(&lt;span class="pl-c1"&gt;:key&lt;/span&gt; val))
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "call_name[:key val]()"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-inline-babel-call &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:end-header&lt;/span&gt; '(&lt;span class="pl-c1"&gt;:key&lt;/span&gt; val))
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "call_name()[:key val]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-inline-src-block-language-key-parameters-value--post-blank" class="anchor" aria-hidden="true" href="#om-build-inline-src-block-language-key-parameters-value--post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-inline-src-block &lt;code&gt;(language &amp;amp;key parameters (value "") post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build an inline-src-block object node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;language&lt;/code&gt;&lt;/strong&gt;: (required) a oneline string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;parameters&lt;/code&gt;&lt;/strong&gt;:  a plist&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt;: (default &lt;code&gt;""&lt;/code&gt;) a string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-inline-src-block &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lang&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "src_lang{}"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-inline-src-block &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lang&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:value&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "src_lang{value}"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-inline-src-block &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lang&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:value&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:parameters&lt;/span&gt; '(&lt;span class="pl-c1"&gt;:key&lt;/span&gt; val))
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "src_lang[:key val]{value}"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-line-break-key-post-blank" class="anchor" aria-hidden="true" href="#om-build-line-break-key-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-line-break &lt;code&gt;(&amp;amp;key post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a line-break object node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-line-break)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "\\\\&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      "&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-latex-fragment-value-key-post-blank" class="anchor" aria-hidden="true" href="#om-build-latex-fragment-value-key-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-latex-fragment &lt;code&gt;(value &amp;amp;key post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a latex-fragment object node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt;: (required) a string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-latex-fragment &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$2+2=5$&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "$2+2=5$"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-macro-key-key-args-post-blank" class="anchor" aria-hidden="true" href="#om-build-macro-key-key-args-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-macro &lt;code&gt;(key &amp;amp;key args post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a macro object node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;key&lt;/code&gt;&lt;/strong&gt;: (required) a oneline string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;args&lt;/code&gt;&lt;/strong&gt;:  a list of oneline strings&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-macro &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;economics&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "{{{economics}}}"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-macro &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;economics&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:args&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;s=d&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "{{{economics(s=d)}}}"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-statistics-cookie-value-key-post-blank" class="anchor" aria-hidden="true" href="#om-build-statistics-cookie-value-key-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-statistics-cookie &lt;code&gt;(value &amp;amp;key post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a statistics-cookie object node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt;: (required) a list of non-neg integers like &lt;code&gt;(perc)&lt;/code&gt; or &lt;code&gt;(num den)&lt;/code&gt; which make [&lt;code&gt;num&lt;/code&gt;/&lt;code&gt;den&lt;/code&gt;] and [&lt;code&gt;perc&lt;/code&gt;%] respectively&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-statistics-cookie '(&lt;span class="pl-c1"&gt;nil&lt;/span&gt;))
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[%]"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-statistics-cookie '(&lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;))
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[/]"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-statistics-cookie '(&lt;span class="pl-c1"&gt;50&lt;/span&gt;))
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[50%]"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-statistics-cookie '(&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;))
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[1/3]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-target-value-key-post-blank" class="anchor" aria-hidden="true" href="#om-build-target-value-key-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-target &lt;code&gt;(value &amp;amp;key post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a target object node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt;: (required) a oneline string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "&amp;lt;&amp;lt;text&amp;gt;&amp;gt;"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-timestamp-type-year-start-month-start-day-start-year-end-month-end-day-end-key-hour-start-minute-start-hour-end-minute-end-repeater-type-repeater-unit-repeater-value-warning-type-warning-unit-warning-value-post-blank" class="anchor" aria-hidden="true" href="#om-build-timestamp-type-year-start-month-start-day-start-year-end-month-end-day-end-key-hour-start-minute-start-hour-end-minute-end-repeater-type-repeater-unit-repeater-value-warning-type-warning-unit-warning-value-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-timestamp &lt;code&gt;(type year-start month-start day-start year-end month-end day-end &amp;amp;key hour-start minute-start hour-end minute-end repeater-type repeater-unit repeater-value warning-type warning-unit warning-value post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a timestamp object node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;type&lt;/code&gt;&lt;/strong&gt;: (required) a symbol from &lt;code&gt;inactive&lt;/code&gt;, &lt;code&gt;active&lt;/code&gt;, &lt;code&gt;inactive-ranged&lt;/code&gt;, or &lt;code&gt;active-ranged&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;year-start&lt;/code&gt;&lt;/strong&gt;: (required) a positive integer&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;month-start&lt;/code&gt;&lt;/strong&gt;: (required) a positive integer&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;day-start&lt;/code&gt;&lt;/strong&gt;: (required) a positive integer&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;year-end&lt;/code&gt;&lt;/strong&gt;: (required) a positive integer&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;month-end&lt;/code&gt;&lt;/strong&gt;: (required) a positive integer&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;day-end&lt;/code&gt;&lt;/strong&gt;: (required) a positive integer&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;hour-start&lt;/code&gt;&lt;/strong&gt;:  a non-negative integer or nil&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;minute-start&lt;/code&gt;&lt;/strong&gt;:  a non-negative integer or nil&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;hour-end&lt;/code&gt;&lt;/strong&gt;:  a non-negative integer or nil&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;minute-end&lt;/code&gt;&lt;/strong&gt;:  a non-negative integer or nil&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;repeater-type&lt;/code&gt;&lt;/strong&gt;:  nil or a symbol from &lt;code&gt;catch-up&lt;/code&gt;, &lt;code&gt;restart&lt;/code&gt;, or &lt;code&gt;cumulate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;repeater-unit&lt;/code&gt;&lt;/strong&gt;:  nil or a symbol from &lt;code&gt;year&lt;/code&gt; &lt;code&gt;month&lt;/code&gt; &lt;code&gt;week&lt;/code&gt; &lt;code&gt;day&lt;/code&gt;, or &lt;code&gt;hour&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;repeater-value&lt;/code&gt;&lt;/strong&gt;:  a positive integer or nil&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;warning-type&lt;/code&gt;&lt;/strong&gt;:  nil or a symbol from &lt;code&gt;all&lt;/code&gt; or &lt;code&gt;first&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;warning-unit&lt;/code&gt;&lt;/strong&gt;:  nil or a symbol from &lt;code&gt;year&lt;/code&gt; &lt;code&gt;month&lt;/code&gt; &lt;code&gt;week&lt;/code&gt; &lt;code&gt;day&lt;/code&gt;, or &lt;code&gt;hour&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;warning-value&lt;/code&gt;&lt;/strong&gt;:  a positive integer or nil&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-timestamp &lt;span class="pl-c1"&gt;'inactive&lt;/span&gt;
			 &lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;15&lt;/span&gt; &lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;15&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-15 Tue]"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-timestamp &lt;span class="pl-c1"&gt;'active-range&lt;/span&gt;
			 &lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;15&lt;/span&gt; &lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;16&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "&amp;lt;2019-01-15 Tue&amp;gt;--&amp;lt;2019-01-16 Wed&amp;gt;"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-timestamp &lt;span class="pl-c1"&gt;'inactive&lt;/span&gt;
			 &lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;15&lt;/span&gt; &lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;15&lt;/span&gt; &lt;span class="pl-c1"&gt;:warning-type&lt;/span&gt; &lt;span class="pl-c1"&gt;'all&lt;/span&gt;
			 &lt;span class="pl-c1"&gt;:warning-unit&lt;/span&gt; &lt;span class="pl-c1"&gt;'day&lt;/span&gt;
			 &lt;span class="pl-c1"&gt;:warning-value&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-15 Tue -1d]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-verbatim-value-key-post-blank" class="anchor" aria-hidden="true" href="#om-build-verbatim-value-key-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-verbatim &lt;code&gt;(value &amp;amp;key post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a verbatim object node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt;: (required) a string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-verbatim &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "=text="&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-branch-object-nodes-1" class="anchor" aria-hidden="true" href="#branch-object-nodes-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Branch Object Nodes&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-bold-key-post-blank-rest-object-nodes" class="anchor" aria-hidden="true" href="#om-build-bold-key-post-blank-rest-object-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-bold &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a bold object node with &lt;strong&gt;&lt;code&gt;object-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-bold &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "*text*"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-footnote-reference-key-label-post-blank-rest-object-nodes" class="anchor" aria-hidden="true" href="#om-build-footnote-reference-key-label-post-blank-rest-object-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-footnote-reference &lt;code&gt;(&amp;amp;key label post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a footnote-reference object node with &lt;strong&gt;&lt;code&gt;object-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;label&lt;/code&gt;&lt;/strong&gt;:  a oneline string or nil&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-footnote-reference)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[fn:]"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-footnote-reference &lt;span class="pl-c1"&gt;:label&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;label&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[fn:label]"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-footnote-reference &lt;span class="pl-c1"&gt;:label&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;label&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;content&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[fn:label:content]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-italic-key-post-blank-rest-object-nodes" class="anchor" aria-hidden="true" href="#om-build-italic-key-post-blank-rest-object-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-italic &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build an italic object node with &lt;strong&gt;&lt;code&gt;object-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-italic &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "/text/"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-link-path-key-format-type-fuzzy-post-blank-rest-object-nodes" class="anchor" aria-hidden="true" href="#om-build-link-path-key-format-type-fuzzy-post-blank-rest-object-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-link &lt;code&gt;(path &amp;amp;key format (type "fuzzy") post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a link object node with &lt;strong&gt;&lt;code&gt;object-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;path&lt;/code&gt;&lt;/strong&gt;: (required) a oneline string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;format&lt;/code&gt;&lt;/strong&gt;:  the symbol &lt;code&gt;plain&lt;/code&gt;, &lt;code&gt;bracket&lt;/code&gt; or &lt;code&gt;angle&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;type&lt;/code&gt;&lt;/strong&gt;: (default &lt;code&gt;"fuzzy"&lt;/code&gt;) a oneline string from &lt;code&gt;org-link-types&lt;/code&gt; or &lt;code&gt;"coderef"&lt;/code&gt;, &lt;code&gt;"custom-id"&lt;/code&gt;, &lt;code&gt;"file"&lt;/code&gt;, &lt;code&gt;"id"&lt;/code&gt;, &lt;code&gt;"radio"&lt;/code&gt;, or &lt;code&gt;"fuzzy"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-link &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;target&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[[target]]"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-link &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;target&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:type&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;file&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[[file:target]]"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-link &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;target&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[[target][desc]]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-radio-target-key-post-blank-rest-object-nodes" class="anchor" aria-hidden="true" href="#om-build-radio-target-key-post-blank-rest-object-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-radio-target &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a radio-target object node with &lt;strong&gt;&lt;code&gt;object-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-radio-target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "&amp;lt;&amp;lt;&amp;lt;text&amp;gt;&amp;gt;&amp;gt;"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-strike-through-key-post-blank-rest-object-nodes" class="anchor" aria-hidden="true" href="#om-build-strike-through-key-post-blank-rest-object-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-strike-through &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a strike-through object node with &lt;strong&gt;&lt;code&gt;object-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-strike-through &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "+text+"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-superscript-key-use-brackets-p-post-blank-rest-object-nodes" class="anchor" aria-hidden="true" href="#om-build-superscript-key-use-brackets-p-post-blank-rest-object-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-superscript &lt;code&gt;(&amp;amp;key use-brackets-p post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a superscript object node with &lt;strong&gt;&lt;code&gt;object-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;use-brackets-p&lt;/code&gt;&lt;/strong&gt;:  nil or t&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-superscript &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "^text"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-subscript-key-use-brackets-p-post-blank-rest-object-nodes" class="anchor" aria-hidden="true" href="#om-build-subscript-key-use-brackets-p-post-blank-rest-object-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-subscript &lt;code&gt;(&amp;amp;key use-brackets-p post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a subscript object node with &lt;strong&gt;&lt;code&gt;object-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;use-brackets-p&lt;/code&gt;&lt;/strong&gt;:  nil or t&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-subscript &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "_text"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-table-cell-key-post-blank-rest-object-nodes" class="anchor" aria-hidden="true" href="#om-build-table-cell-key-post-blank-rest-object-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-table-cell &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a table-cell object node with &lt;strong&gt;&lt;code&gt;object-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-table-cell &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; " text |"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-underline-key-post-blank-rest-object-nodes" class="anchor" aria-hidden="true" href="#om-build-underline-key-post-blank-rest-object-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-underline &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build an underline object node with &lt;strong&gt;&lt;code&gt;object-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-underline &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "_text_"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-leaf-element-nodes-1" class="anchor" aria-hidden="true" href="#leaf-element-nodes-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Leaf Element Nodes&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-babel-call-call-key-inside-header-arguments-end-header-post-blank" class="anchor" aria-hidden="true" href="#om-build-babel-call-call-key-inside-header-arguments-end-header-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-babel-call &lt;code&gt;(call &amp;amp;key inside-header arguments end-header post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a babel-call element node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;call&lt;/code&gt;&lt;/strong&gt;: (required) a oneline string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;inside-header&lt;/code&gt;&lt;/strong&gt;:  a plist&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/strong&gt;:  a list of oneline strings&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;end-header&lt;/code&gt;&lt;/strong&gt;:  a plist&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-babel-call &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+CALL: name()"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-babel-call &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:arguments&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arg=x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+CALL: name(arg=x)"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-babel-call &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:inside-header&lt;/span&gt; '(&lt;span class="pl-c1"&gt;:key&lt;/span&gt; val))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+CALL: name[:key val]()"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-babel-call &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:end-header&lt;/span&gt; '(&lt;span class="pl-c1"&gt;:key&lt;/span&gt; val))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+CALL: name() :key val"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-clock-value-key-post-blank" class="anchor" aria-hidden="true" href="#om-build-clock-value-key-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-clock &lt;code&gt;(value &amp;amp;key post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a clock element node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt;: (required) an unranged, inactive timestamp node with no warning or repeater&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-clock (om-build-timestamp! '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "CLOCK: [2019-01-01 Tue 00:00]"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-clock (om-build-timestamp! '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
					  &lt;span class="pl-c1"&gt;:end&lt;/span&gt; '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "CLOCK: [2019-01-01 Tue 00:00-01:00] =&amp;gt;  1:00"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-comment-value-key-post-blank" class="anchor" aria-hidden="true" href="#om-build-comment-value-key-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-comment &lt;code&gt;(value &amp;amp;key post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a comment element node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt;: (required) a string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-comment &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "# text"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-comment &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-cce"&gt;\n&lt;/span&gt;less&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "# text&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      # less"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-comment-block-key-value--post-blank" class="anchor" aria-hidden="true" href="#om-build-comment-block-key-value--post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-comment-block &lt;code&gt;(&amp;amp;key (value "") post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a comment-block element node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt;: (default &lt;code&gt;""&lt;/code&gt;) a string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-comment-block)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+BEGIN_COMMENT&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      #+END_COMMENT"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-comment-block &lt;span class="pl-c1"&gt;:value&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+BEGIN_COMMENT&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      text&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      #+END_COMMENT"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-diary-sexp-key-value-post-blank" class="anchor" aria-hidden="true" href="#om-build-diary-sexp-key-value-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-diary-sexp &lt;code&gt;(&amp;amp;key value post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a diary-sexp element node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt;:  a list form or nil&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-diary-sexp)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "%%()"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-diary-sexp &lt;span class="pl-c1"&gt;:value&lt;/span&gt; '(text))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "%%(text)"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-example-block-key-preserve-indent-switches-value--post-blank" class="anchor" aria-hidden="true" href="#om-build-example-block-key-preserve-indent-switches-value--post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-example-block &lt;code&gt;(&amp;amp;key preserve-indent switches (value "") post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build an example-block element node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;preserve-indent&lt;/code&gt;&lt;/strong&gt;:  nil or t&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;switches&lt;/code&gt;&lt;/strong&gt;:  a list of oneline strings&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt;: (default &lt;code&gt;""&lt;/code&gt;) a string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-example-block)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+BEGIN_EXAMPLE&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      #+END_EXAMPLE"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-example-block &lt;span class="pl-c1"&gt;:value&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+BEGIN_EXAMPLE&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      text&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      #+END_EXAMPLE"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-example-block &lt;span class="pl-c1"&gt;:value&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:switches&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;switches&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+BEGIN_EXAMPLE switches&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      text&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      #+END_EXAMPLE"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-export-block-type-value-key-post-blank" class="anchor" aria-hidden="true" href="#om-build-export-block-type-value-key-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-export-block &lt;code&gt;(type value &amp;amp;key post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build an export-block element node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;type&lt;/code&gt;&lt;/strong&gt;: (required) a oneline string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt;: (required) a string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-export-block &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;value&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+BEGIN_EXPORT type&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      value&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      #+END_EXPORT"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-fixed-width-value-key-post-blank" class="anchor" aria-hidden="true" href="#om-build-fixed-width-value-key-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-fixed-width &lt;code&gt;(value &amp;amp;key post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a fixed-width element node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt;: (required) a oneline string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-fixed-width &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; ": text"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-horizontal-rule-key-post-blank" class="anchor" aria-hidden="true" href="#om-build-horizontal-rule-key-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-horizontal-rule &lt;code&gt;(&amp;amp;key post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a horizontal-rule element node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-horizontal-rule)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "-----"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-keyword-key-value-key-post-blank" class="anchor" aria-hidden="true" href="#om-build-keyword-key-value-key-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-keyword &lt;code&gt;(key value &amp;amp;key post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a keyword element node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;key&lt;/code&gt;&lt;/strong&gt;: (required) a oneline string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt;: (required) a oneline string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-keyword &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FILETAGS&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tmsu&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+FILETAGS: tmsu"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-latex-environment-value-key-post-blank" class="anchor" aria-hidden="true" href="#om-build-latex-environment-value-key-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-latex-environment &lt;code&gt;(value &amp;amp;key post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a latex-environment element node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt;: (required) a list of strings like &lt;code&gt;(env body)&lt;/code&gt; or &lt;code&gt;(env)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-latex-environment '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;env&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "\\begin{env}&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      text&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      \\end{env}"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-node-property-key-value-key-post-blank" class="anchor" aria-hidden="true" href="#om-build-node-property-key-value-key-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-node-property &lt;code&gt;(key value &amp;amp;key post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a node-property element node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;key&lt;/code&gt;&lt;/strong&gt;: (required) a oneline string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt;: (required) a oneline string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-node-property &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;key&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;val&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; ":key:      val"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-planning-key-closed-deadline-scheduled-post-blank" class="anchor" aria-hidden="true" href="#om-build-planning-key-closed-deadline-scheduled-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-planning &lt;code&gt;(&amp;amp;key closed deadline scheduled post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a planning element node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/strong&gt;:  a zero-range, inactive timestamp node&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;deadline&lt;/code&gt;&lt;/strong&gt;:  a zero-range, inactive timestamp node&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;scheduled&lt;/code&gt;&lt;/strong&gt;:  a zero-range, inactive timestamp node&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-planning &lt;span class="pl-c1"&gt;:closed&lt;/span&gt; (om-build-timestamp! '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "CLOSED: [2019-01-01 Tue]"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-planning &lt;span class="pl-c1"&gt;:scheduled&lt;/span&gt; (om-build-timestamp! '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "SCHEDULED: [2019-01-01 Tue]"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-planning &lt;span class="pl-c1"&gt;:deadline&lt;/span&gt; (om-build-timestamp! '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "DEADLINE: [2019-01-01 Tue]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-src-block-key-value--language-parameters-preserve-indent-switches-post-blank" class="anchor" aria-hidden="true" href="#om-build-src-block-key-value--language-parameters-preserve-indent-switches-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-src-block &lt;code&gt;(&amp;amp;key (value "") language parameters preserve-indent switches post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a src-block element node.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt;: (default &lt;code&gt;""&lt;/code&gt;) a string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;language&lt;/code&gt;&lt;/strong&gt;:  a string or nil&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;parameters&lt;/code&gt;&lt;/strong&gt;:  a plist&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;preserve-indent&lt;/code&gt;&lt;/strong&gt;:  nil or t&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;switches&lt;/code&gt;&lt;/strong&gt;:  a list of oneline strings&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-src-block)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+BEGIN_SRC&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      #+END_SRC"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-src-block &lt;span class="pl-c1"&gt;:value&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;body&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+BEGIN_SRC&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;        body&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      #+END_SRC"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-src-block &lt;span class="pl-c1"&gt;:value&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;body&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:language&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;emacs-lisp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+BEGIN_SRC emacs-lisp&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;        body&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      #+END_SRC"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-src-block &lt;span class="pl-c1"&gt;:value&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;body&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:switches&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-n 20&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-r&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+BEGIN_SRC -n 20 -r&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;        body&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      #+END_SRC"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-src-block &lt;span class="pl-c1"&gt;:value&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;body&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:parameters&lt;/span&gt; '(&lt;span class="pl-c1"&gt;:key&lt;/span&gt; val))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+BEGIN_SRC :key val&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;        body&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      #+END_SRC"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-branch-element-nodes-with-child-object-nodes-1" class="anchor" aria-hidden="true" href="#branch-element-nodes-with-child-object-nodes-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Branch Element Nodes with Child Object Nodes&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-paragraph-key-post-blank-rest-object-nodes" class="anchor" aria-hidden="true" href="#om-build-paragraph-key-post-blank-rest-object-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-paragraph &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a paragraph element node with &lt;strong&gt;&lt;code&gt;object-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-paragraph &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "text"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-table-row-key-post-blank-rest-object-nodes" class="anchor" aria-hidden="true" href="#om-build-table-row-key-post-blank-rest-object-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-table-row &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a table-row element node with &lt;strong&gt;&lt;code&gt;object-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-table-cell &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-build-table-row)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| a |"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-verse-block-key-post-blank-rest-object-nodes" class="anchor" aria-hidden="true" href="#om-build-verse-block-key-post-blank-rest-object-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-verse-block &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest object-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a verse-block element node with &lt;strong&gt;&lt;code&gt;object-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-verse-block &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+BEGIN_VERSE&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      text&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      #+END_VERSE"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-branch-element-nodes-with-child-element-nodes-1" class="anchor" aria-hidden="true" href="#branch-element-nodes-with-child-element-nodes-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Branch Element Nodes with Child Element Nodes&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-center-block-key-post-blank-rest-element-nodes" class="anchor" aria-hidden="true" href="#om-build-center-block-key-post-blank-rest-element-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-center-block &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a center-block element node with &lt;strong&gt;&lt;code&gt;element-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-center-block)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+BEGIN_CENTER&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      #+END_CENTER"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-paragraph &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-build-center-block)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+BEGIN_CENTER&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      text&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      #+END_CENTER"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-drawer-drawer-name-key-post-blank-rest-element-nodes" class="anchor" aria-hidden="true" href="#om-build-drawer-drawer-name-key-post-blank-rest-element-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-drawer &lt;code&gt;(drawer-name &amp;amp;key post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a drawer element node with &lt;strong&gt;&lt;code&gt;element-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;drawer-name&lt;/code&gt;&lt;/strong&gt;: (required) a oneline string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-drawer &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;NAME&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; ":NAME:&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      :END:"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-paragraph &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-build-drawer &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;NAME&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; ":NAME:&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      text&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      :END:"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-dynamic-block-block-name-key-arguments-post-blank-rest-element-nodes" class="anchor" aria-hidden="true" href="#om-build-dynamic-block-block-name-key-arguments-post-blank-rest-element-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-dynamic-block &lt;code&gt;(block-name &amp;amp;key arguments post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a dynamic-block element node with &lt;strong&gt;&lt;code&gt;element-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;block-name&lt;/code&gt;&lt;/strong&gt;: (required) a oneline string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/strong&gt;:  a plist&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-dynamic-block &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;empty&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+BEGIN: empty&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      #+END:"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-comment &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;I'm in here&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-build-dynamic-block &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;notempty&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+BEGIN: notempty&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      # I'm in here&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      #+END:"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-footnote-definition-label-key-post-blank-rest-element-nodes" class="anchor" aria-hidden="true" href="#om-build-footnote-definition-label-key-post-blank-rest-element-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-footnote-definition &lt;code&gt;(label &amp;amp;key post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a footnote-definition element node with &lt;strong&gt;&lt;code&gt;element-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;label&lt;/code&gt;&lt;/strong&gt;: (required) a oneline string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-paragraph &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;footnote contents&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-build-footnote-definition &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;label&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[fn:label] footnote contents"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-headline-key-archivedp-commentedp-footnote-section-p-level-1-pre-blank-0-priority-tags-title-todo-keyword-post-blank-rest-element-nodes" class="anchor" aria-hidden="true" href="#om-build-headline-key-archivedp-commentedp-footnote-section-p-level-1-pre-blank-0-priority-tags-title-todo-keyword-post-blank-rest-element-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-headline &lt;code&gt;(&amp;amp;key archivedp commentedp footnote-section-p (level 1) (pre-blank 0) priority tags title todo-keyword post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a headline element node with &lt;strong&gt;&lt;code&gt;element-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;archivedp&lt;/code&gt;&lt;/strong&gt;:  nil or t&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;commentedp&lt;/code&gt;&lt;/strong&gt;:  nil or t&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;footnote-section-p&lt;/code&gt;&lt;/strong&gt;:  nil or t&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;level&lt;/code&gt;&lt;/strong&gt;:  a positive integer&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;pre-blank&lt;/code&gt;&lt;/strong&gt;:  a non-negative integer&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;priority&lt;/code&gt;&lt;/strong&gt;:  an integer between (inclusive) &lt;code&gt;org-highest-priority&lt;/code&gt; and &lt;code&gt;org-lowest-priority&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;tags&lt;/code&gt;&lt;/strong&gt;:  a string list&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;title&lt;/code&gt;&lt;/strong&gt;:  a secondary string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;todo-keyword&lt;/code&gt;&lt;/strong&gt;:  a oneline string or nil&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-headline)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "*"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-headline &lt;span class="pl-c1"&gt;:level&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-c1"&gt;:title&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dummy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
			 &lt;span class="pl-c1"&gt;:tags&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tmsu&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "** dummy            :tmsu:"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-headline &lt;span class="pl-c1"&gt;:todo-keyword&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;TODO&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:archivedp&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt; &lt;span class="pl-c1"&gt;:commentedp&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt; &lt;span class="pl-c1"&gt;:priority&lt;/span&gt; &lt;span class="pl-c1"&gt;65&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* TODO COMMENT [#A]  :ARCHIVE:"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-item-key-bullet---checkbox-counter-tag-post-blank-rest-element-nodes" class="anchor" aria-hidden="true" href="#om-build-item-key-bullet---checkbox-counter-tag-post-blank-rest-element-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-item &lt;code&gt;(&amp;amp;key (bullet '-) checkbox counter tag post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build an item element node with &lt;strong&gt;&lt;code&gt;element-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;bullet&lt;/code&gt;&lt;/strong&gt;: (default &lt;code&gt;-&lt;/code&gt;) a positive integer (ordered) or the symbol &lt;code&gt;-&lt;/code&gt; (unordered)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;checkbox&lt;/code&gt;&lt;/strong&gt;:  nil or the symbols &lt;code&gt;on&lt;/code&gt;, &lt;code&gt;off&lt;/code&gt;, or &lt;code&gt;trans&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;counter&lt;/code&gt;&lt;/strong&gt;:  a positive integer or nil&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;tag&lt;/code&gt;&lt;/strong&gt;:  a secondary string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-paragraph &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;item contents&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-build-item)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "- item contents"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-paragraph &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;item contents&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-build-item &lt;span class="pl-c1"&gt;:bullet&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "1. item contents"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-paragraph &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;item contents&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-build-item &lt;span class="pl-c1"&gt;:checkbox&lt;/span&gt; &lt;span class="pl-c1"&gt;'on&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "- [X] item contents"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-paragraph &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;item contents&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-build-item &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tmsu&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "- tmsu :: item contents"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-paragraph &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;item contents&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-build-item &lt;span class="pl-c1"&gt;:counter&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "- [@10] item contents"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-plain-list-key-post-blank-rest-element-nodes" class="anchor" aria-hidden="true" href="#om-build-plain-list-key-post-blank-rest-element-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-plain-list &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a plain-list element node with &lt;strong&gt;&lt;code&gt;element-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-paragraph &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;item contents&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-build-item)
     (om-build-plain-list)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "- item contents"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-property-drawer-key-post-blank-rest-element-nodes" class="anchor" aria-hidden="true" href="#om-build-property-drawer-key-post-blank-rest-element-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-property-drawer &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a property-drawer element node with &lt;strong&gt;&lt;code&gt;element-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-property-drawer)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; ":PROPERTIES:&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      :END:"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-node-property &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;key&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;val&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-build-property-drawer)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; ":PROPERTIES:&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      :key:      val&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      :END:"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-quote-block-key-post-blank-rest-element-nodes" class="anchor" aria-hidden="true" href="#om-build-quote-block-key-post-blank-rest-element-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-quote-block &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a quote-block element node with &lt;strong&gt;&lt;code&gt;element-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-quote-block)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+BEGIN_QUOTE&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      #+END_QUOTE"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-paragraph &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;quoted stuff&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-build-quote-block)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+BEGIN_QUOTE&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      quoted stuff&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      #+END_QUOTE"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-section-key-post-blank-rest-element-nodes" class="anchor" aria-hidden="true" href="#om-build-section-key-post-blank-rest-element-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-section &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a section element node with &lt;strong&gt;&lt;code&gt;element-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-paragraph &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-build-section)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "text"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-special-block-type-key-post-blank-rest-element-nodes" class="anchor" aria-hidden="true" href="#om-build-special-block-type-key-post-blank-rest-element-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-special-block &lt;code&gt;(type &amp;amp;key post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a special-block element node with &lt;strong&gt;&lt;code&gt;element-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;type&lt;/code&gt;&lt;/strong&gt;: (required) a oneline string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-special-block &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;monad&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+BEGIN_monad&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      #+END_monad"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-comment &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Launch missiles&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-build-special-block &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;monad&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+BEGIN_monad&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      # Launch missiles&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      #+END_monad"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-table-key-tblfm-post-blank-rest-element-nodes" class="anchor" aria-hidden="true" href="#om-build-table-key-tblfm-post-blank-rest-element-nodes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-table &lt;code&gt;(&amp;amp;key tblfm post-blank &amp;amp;rest element-nodes)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Build a table element node with &lt;strong&gt;&lt;code&gt;element-nodes&lt;/code&gt;&lt;/strong&gt; as children.&lt;/p&gt;
&lt;p&gt;The following properties are settable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;tblfm&lt;/code&gt;&lt;/strong&gt;:  a list of oneline strings&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt;: a non-negative integer&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-table-cell &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-build-table-row)
     (om-build-table)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| cell |"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-miscellaneous-builders-1" class="anchor" aria-hidden="true" href="#miscellaneous-builders-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Miscellaneous Builders&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-secondary-string-string" class="anchor" aria-hidden="true" href="#om-build-secondary-string-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-secondary-string! &lt;code&gt;(string)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return a secondary string (list of object nodes) from &lt;strong&gt;&lt;code&gt;string&lt;/code&gt;&lt;/strong&gt;.
&lt;strong&gt;&lt;code&gt;string&lt;/code&gt;&lt;/strong&gt; is any string that contains a textual representation of
object nodes. If the string does not represent a list of object nodes,
throw an error.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-secondary-string! &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;I'm plain&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (-map (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-get-type)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; '(plain-text)&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-secondary-string! &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;I'm *not* plain&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (-map (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-get-type)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; '(plain-text bold plain-text)&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-secondary-string! &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;* I'm not an object&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (-map (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-get-type)))
Error
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-table-row-hline-key-post-blank" class="anchor" aria-hidden="true" href="#om-build-table-row-hline-key-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-table-row-hline &lt;code&gt;(&amp;amp;key post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return a new rule-typed table-row node.
Optionally set &lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt; (a positive integer).&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-table (om-build-table-row (om-build-table-cell &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
		     (om-build-table-row-hline))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| text |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      |------|"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-timestamp-diary-form-key-post-blank" class="anchor" aria-hidden="true" href="#om-build-timestamp-diary-form-key-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-timestamp-diary &lt;code&gt;(form &amp;amp;key post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return a new diary-sexp timestamp node from &lt;strong&gt;&lt;code&gt;form&lt;/code&gt;&lt;/strong&gt;.
Optionally set &lt;strong&gt;&lt;code&gt;post-blank&lt;/code&gt;&lt;/strong&gt; (a positive integer).&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-timestamp-diary '(&lt;span class="pl-c1"&gt;diary-float&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;))
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "&amp;lt;%%(diary-float t 4 2)&amp;gt;"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-shorthand-builders-1" class="anchor" aria-hidden="true" href="#shorthand-builders-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shorthand Builders&lt;/h3&gt;
&lt;p&gt;Build nodes with more convenient/shorter syntax.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-timestamp-start-key-end-active-repeater-warning-post-blank" class="anchor" aria-hidden="true" href="#om-build-timestamp-start-key-end-active-repeater-warning-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-timestamp! &lt;code&gt;(start &amp;amp;key end active repeater warning post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return a new timestamp node.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;start&lt;/code&gt;&lt;/strong&gt; specifies the start time and is a list of integers in one of
the following forms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;(year month day)&lt;/code&gt;: short form&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(year month day nil nil)&lt;/code&gt;: short form&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(year month day hour minute)&lt;/code&gt;: long form&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;end&lt;/code&gt;&lt;/strong&gt; (if supplied) will add the ending time, and follows the same
formatting rules as &lt;strong&gt;&lt;code&gt;start&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;active&lt;/code&gt;&lt;/strong&gt; is a boolean where t signifies the type is &lt;code&gt;active&lt;/code&gt;, else
&lt;code&gt;inactive&lt;/code&gt; (the range suffix will be added if an end time is
supplied).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;repeater&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;warning&lt;/code&gt;&lt;/strong&gt; are lists formatted as &lt;code&gt;(type value unit)&lt;/code&gt; where
the three members correspond to the :repeater/warning-type, -value,
and -unit properties in &lt;a href="#om-build-timestamp-type-year-start-month-start-day-start-year-end-month-end-day-end-key-hour-start-minute-start-hour-end-minute-end-repeater-type-repeater-unit-repeater-value-warning-type-warning-unit-warning-value-post-blank"&gt;&lt;code&gt;om-build-timestamp&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Building a diary sexp timestamp is not possible with this function.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-timestamp! '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;))
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue]"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-timestamp! '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
			  &lt;span class="pl-c1"&gt;:active&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt; &lt;span class="pl-c1"&gt;:warning&lt;/span&gt; '(all &lt;span class="pl-c1"&gt;1&lt;/span&gt; day)
			  &lt;span class="pl-c1"&gt;:repeater&lt;/span&gt; '(cumulate &lt;span class="pl-c1"&gt;1&lt;/span&gt; month))
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "&amp;lt;2019-01-01 Tue 12:00 +1m -1d&amp;gt;"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-timestamp! '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
			  &lt;span class="pl-c1"&gt;:end&lt;/span&gt; '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;))
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue]--[2019-01-02 Wed]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-clock-start-key-end-post-blank" class="anchor" aria-hidden="true" href="#om-build-clock-start-key-end-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-clock! &lt;code&gt;(start &amp;amp;key end post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return a new clock node.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;start&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;end&lt;/code&gt;&lt;/strong&gt; follow the same rules as their respective arguments in
&lt;a href="#om-build-timestamp-start-key-end-active-repeater-warning-post-blank"&gt;&lt;code&gt;om-build-timestamp!&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-clock! '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "CLOCK: [2019-01-01 Tue]"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-clock! '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "CLOCK: [2019-01-01 Tue 12:00]"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-clock! '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
		      &lt;span class="pl-c1"&gt;:end&lt;/span&gt; '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;13&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "CLOCK: [2019-01-01 Tue 12:00-13:00] =&amp;gt;  1:00"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-planning-key-closed-deadline-scheduled-post-blank-1" class="anchor" aria-hidden="true" href="#om-build-planning-key-closed-deadline-scheduled-post-blank-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-planning! &lt;code&gt;(&amp;amp;key closed deadline scheduled post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return a new planning node.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;deadline&lt;/code&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;code&gt;scheduled&lt;/code&gt;&lt;/strong&gt; are lists with the following structure
(brackets denote optional members):&lt;/p&gt;
&lt;p&gt;&lt;code&gt;(year minute day [hour] [min] [&amp;amp;warning type value unit] [&amp;amp;repeater type value unit])&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;In terms of arguments supplied to &lt;a href="#om-build-timestamp-start-key-end-active-repeater-warning-post-blank"&gt;&lt;code&gt;om-build-timestamp!&lt;/code&gt;&lt;/a&gt;, the first
five members correspond to the list supplied as &lt;code&gt;time&lt;/code&gt;, and the &lt;code&gt;type&lt;/code&gt;,
&lt;code&gt;value&lt;/code&gt;, and &lt;code&gt;unit&lt;/code&gt; fields correspond to the lists supplied to &lt;code&gt;warning&lt;/code&gt; and
&lt;code&gt;repeater&lt;/code&gt; arguments. The order of warning and repeater does not
matter.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-planning! &lt;span class="pl-c1"&gt;:closed&lt;/span&gt; '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "CLOSED: [2019-01-01 Tue]"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-planning! &lt;span class="pl-c1"&gt;:closed&lt;/span&gt; '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
			  &lt;span class="pl-c1"&gt;:scheduled&lt;/span&gt; '(&lt;span class="pl-c1"&gt;2018&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "SCHEDULED: [2018-01-01 Mon] CLOSED: [2019-01-01 Tue]"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-planning! &lt;span class="pl-c1"&gt;:closed&lt;/span&gt; '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &amp;amp;warning all &lt;span class="pl-c1"&gt;1&lt;/span&gt; day &amp;amp;repeater cumulate &lt;span class="pl-c1"&gt;1&lt;/span&gt; month))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "CLOSED: [2019-01-01 Tue +1m -1d]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-property-drawer-key-post-blank-rest-keyvals" class="anchor" aria-hidden="true" href="#om-build-property-drawer-key-post-blank-rest-keyvals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-property-drawer! &lt;code&gt;(&amp;amp;key post-blank &amp;amp;rest keyvals)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return a new property-drawer node.&lt;/p&gt;
&lt;p&gt;Each member in &lt;strong&gt;&lt;code&gt;keyvals&lt;/code&gt;&lt;/strong&gt; is a list of symbols like &lt;code&gt;(key val)&lt;/code&gt;, where each
list will generate a node-property node in the property-drawer node
like &lt;code&gt;":key: val"&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-property-drawer! '(key val))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; ":PROPERTIES:&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      :key:      val&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      :END:"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-headline-key-level-1-title-text-todo-keyword-tags-pre-blank-priority-commentedp-archivedp-post-blank-planning-statistics-cookie-section-children-rest-subheadlines" class="anchor" aria-hidden="true" href="#om-build-headline-key-level-1-title-text-todo-keyword-tags-pre-blank-priority-commentedp-archivedp-post-blank-planning-statistics-cookie-section-children-rest-subheadlines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-headline! &lt;code&gt;(&amp;amp;key (level 1) title-text todo-keyword tags pre-blank priority commentedp archivedp post-blank planning statistics-cookie section-children &amp;amp;rest subheadlines)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return a new headline node.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;title-text&lt;/code&gt;&lt;/strong&gt; is a oneline string for the title of the headline.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;planning&lt;/code&gt;&lt;/strong&gt; is a list like &lt;code&gt;(planning-type args ...)&lt;/code&gt; where
&lt;code&gt;planning-type&lt;/code&gt; is one of &lt;code&gt;:closed&lt;/code&gt;, &lt;code&gt;:deadline&lt;/code&gt;, or &lt;code&gt;:scheduled&lt;/code&gt;, and
&lt;code&gt;args&lt;/code&gt; are the args supplied to any of the planning types in
&lt;a href="#om-build-planning-key-closed-deadline-scheduled-post-blank"&gt;&lt;code&gt;om-build-planning!&lt;/code&gt;&lt;/a&gt;. Up to all three planning types can be used
in the same list like &lt;code&gt;(:closed args :deadline args :scheduled args)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;statistics-cookie&lt;/code&gt;&lt;/strong&gt; is a list following the same format as
&lt;a href="#om-build-statistics-cookie-value-key-post-blank"&gt;&lt;code&gt;om-build-statistics-cookie&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;section-children&lt;/code&gt;&lt;/strong&gt; is a list of elements that will go in the headline
section.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;subheadlines&lt;/code&gt;&lt;/strong&gt; contains zero or more headlines that will go under the
created headline. The level of all members in &lt;strong&gt;&lt;code&gt;subheadlines&lt;/code&gt;&lt;/strong&gt; will
automatically be adjusted to &lt;strong&gt;&lt;code&gt;level&lt;/code&gt;&lt;/strong&gt; + 1.&lt;/p&gt;
&lt;p&gt;All arguments not mentioned here follow the same rules as
&lt;a href="#om-build-headline-key-archivedp-commentedp-footnote-section-p-level-1-pre-blank-0-priority-tags-title-todo-keyword-post-blank-rest-element-nodes"&gt;&lt;code&gt;om-build-headline&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-headline! &lt;span class="pl-c1"&gt;:title-text&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;really impressive title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* really impressive title"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-headline! &lt;span class="pl-c1"&gt;:title-text&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;really impressive title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:statistics-cookie&lt;/span&gt; '(&lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c1"&gt;9000&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* really impressive title [0/9000]"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-headline! &lt;span class="pl-c1"&gt;:title-text&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;really impressive title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:section-children&lt;/span&gt; (&lt;span class="pl-k"&gt;list&lt;/span&gt; (om-build-property-drawer! '(key val))
										       (om-build-paragraph! &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;section text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
			  (om-build-headline! &lt;span class="pl-c1"&gt;:title-text&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;subhead&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* really impressive title&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      :PROPERTIES:&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      :key:      val&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      :END:&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      section text&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** subhead"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-item-key-post-blank-bullet-checkbox-tag-paragraph-counter-rest-children" class="anchor" aria-hidden="true" href="#om-build-item-key-post-blank-bullet-checkbox-tag-paragraph-counter-rest-children"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-item! &lt;code&gt;(&amp;amp;key post-blank bullet checkbox tag paragraph counter &amp;amp;rest children)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return a new item node.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;tag&lt;/code&gt;&lt;/strong&gt; is a string representing the tag (make with
&lt;a href="#om-build-secondary-string-string"&gt;&lt;code&gt;om-build-secondary-string!&lt;/code&gt;&lt;/a&gt;) .&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;paragraph&lt;/code&gt;&lt;/strong&gt; is a string that will be the initial text in the item
(made with &lt;a href="#om-build-paragraph-string-key-post-blank"&gt;&lt;code&gt;om-build-paragraph!&lt;/code&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;children&lt;/code&gt;&lt;/strong&gt; contains the nodes that will go under this item after
&lt;strong&gt;&lt;code&gt;paragraph&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;All other arguments follow the same rules as &lt;a href="#om-build-item-key-bullet-quote---checkbox-counter-tag-post-blank-rest-element-nodes"&gt;&lt;code&gt;om-build-item&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-item! &lt;span class="pl-c1"&gt;:bullet&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;complicated *tag*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:paragraph&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;petulant /frenzy/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; (om-build-plain-list (om-build-item! &lt;span class="pl-c1"&gt;:bullet&lt;/span&gt; &lt;span class="pl-c1"&gt;'-&lt;/span&gt;
															     &lt;span class="pl-c1"&gt;:paragraph&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;below&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "1. complicated *tag* :: petulant /frenzy/&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;         - below"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-paragraph-string-key-post-blank" class="anchor" aria-hidden="true" href="#om-build-paragraph-string-key-post-blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-paragraph! &lt;code&gt;(string &amp;amp;key post-blank)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return a new paragraph node from &lt;strong&gt;&lt;code&gt;string&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;string&lt;/code&gt;&lt;/strong&gt; is the text to be parsed into a paragraph and must contain
valid textual representations of object nodes.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-paragraph! &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stuff /with/ *formatting*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:post-blank&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "stuff /with/ *formatting*&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      &lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      &lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      "&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-paragraph! &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;* stuff /with/ *formatting*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-string))
Error
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-table-cell-string" class="anchor" aria-hidden="true" href="#om-build-table-cell-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-table-cell! &lt;code&gt;(string)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return a new table-cell node.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;string&lt;/code&gt;&lt;/strong&gt; is the text to be contained in the table-cell node. It must
contain valid textual representations of objects that are allowed in
table-cell nodes.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-table-cell! &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "rage |"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-table-cell! &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;*rage*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "*rage* |"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-table-row-row-list" class="anchor" aria-hidden="true" href="#om-build-table-row-row-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-table-row! &lt;code&gt;(row-list)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return a new table-row node.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;row-list&lt;/code&gt;&lt;/strong&gt; is a list of strings to be built into table-cell nodes via
&lt;a href="#om-build-table-cell-string"&gt;&lt;code&gt;om-build-table-cell!&lt;/code&gt;&lt;/a&gt; (see that function for restrictions).
Alternatively, &lt;strong&gt;&lt;code&gt;row-list&lt;/code&gt;&lt;/strong&gt; may the symbol &lt;code&gt;hline&lt;/code&gt; instead of a string to
create a rule-typed table-row.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-table-row! '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;R&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;G&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;E&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| R | A | G | E |"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-table-row! &lt;span class="pl-c1"&gt;'hline&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "|-"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-build-table-key-tblfm-post-blank-rest-row-lists" class="anchor" aria-hidden="true" href="#om-build-table-key-tblfm-post-blank-rest-row-lists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-build-table! &lt;code&gt;(&amp;amp;key tblfm post-blank &amp;amp;rest row-lists)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return a new table node.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;row-lists&lt;/code&gt;&lt;/strong&gt; is a list of lists where each member list will be converted
to a table-row node via &lt;a href="#om-build-table-row-row-list"&gt;&lt;code&gt;om-build-table-row!&lt;/code&gt;&lt;/a&gt; (see that function for
restrictions).&lt;/p&gt;
&lt;p&gt;All other arguments follow the same rules as &lt;a href="#om-build-table-key-tblfm-post-blank-rest-element-nodes"&gt;&lt;code&gt;om-build-table&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-table! '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;R&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
		      '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;G&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;E&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| R | A |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | G | E |"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-table! '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;L&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;O&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
		      &lt;span class="pl-c1"&gt;'hline&lt;/span&gt;
		      '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;V&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;E&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| L | O |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      |---+---|&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | V | E |"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-type-predicates-1" class="anchor" aria-hidden="true" href="#type-predicates-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Type Predicates&lt;/h2&gt;
&lt;p&gt;Test node types.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-om-get-type-node" class="anchor" aria-hidden="true" href="#om-get-type-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-get-type &lt;code&gt;(node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return the type of &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *I'm emboldened*&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-get-type))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; 'bold&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * I'm the headliner&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-get-type))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; 'headline&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2112-12-21 Wed]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-get-type))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; 'timestamp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-is-type-type-node" class="anchor" aria-hidden="true" href="#om-is-type-type-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-is-type &lt;code&gt;(type node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return t if the type of &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; is &lt;strong&gt;&lt;code&gt;type&lt;/code&gt;&lt;/strong&gt; (a symbol).&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *ziltoid*&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-is-type &lt;span class="pl-c1"&gt;'bold&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-is-type &lt;span class="pl-c1"&gt;'italic&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-is-any-type-types-node" class="anchor" aria-hidden="true" href="#om-is-any-type-types-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-is-any-type &lt;code&gt;(types node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return t if the type of &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; is in &lt;strong&gt;&lt;code&gt;types&lt;/code&gt;&lt;/strong&gt; (a list of symbols).&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *ziltoid*&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-is-any-type '(&lt;span class="pl-c1"&gt;bold&lt;/span&gt;)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-is-any-type '(&lt;span class="pl-c1"&gt;bold&lt;/span&gt; &lt;span class="pl-c1"&gt;italic&lt;/span&gt;)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-is-any-type '(&lt;span class="pl-c1"&gt;italic&lt;/span&gt;)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-is-element-node" class="anchor" aria-hidden="true" href="#om-is-element-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-is-element &lt;code&gt;(node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return t if &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; is an element class.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *ziltoid*&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Parsing this text as an element node gives a paragraph node&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-is-element))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Parsing the same text as an object node gives a bold node&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-is-element))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-is-branch-node-node" class="anchor" aria-hidden="true" href="#om-is-branch-node-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-is-branch-node &lt;code&gt;(node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return t if &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; is a branch node.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *ziltoid*&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Parsing this as an element node gives a paragraph node (a branch node)&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-is-branch-node))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Parsing this as an object node gives a bold node (also a branch node)&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-is-branch-node))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ~ziltoid~&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Parsing this as an object node gives a code node (not a branch node)&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-is-branch-node))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; # ziltoid&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Parsing this as an element node gives a comment node (also not a branch node)&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-is-branch-node))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * I'm so great&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Parsing this as an element node gives a headline node (a branch node)&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-is-branch-node))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-node-may-have-child-objects-node" class="anchor" aria-hidden="true" href="#om-node-may-have-child-objects-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-node-may-have-child-objects &lt;code&gt;(node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return t if &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; is a branch node that may have child objects.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *ziltoid*&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Parsing this as an element node gives a paragraph node (can have child object&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; nodes)&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-node-may-have-child-objects))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Parsing this as an object node gives a bold node (also can have child object&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; nodes)&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-node-may-have-child-objects))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ~ziltoid~&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Parsing this as an object node gives a code node (not a branch node)&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-node-may-have-child-objects))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; # ziltoid&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Parsing this as an element node gives a comment node (not a branch node)&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-node-may-have-child-objects))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * I'm so great&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Parsing this as an element node gives a headline node (can only have child&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; element nodes)&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-node-may-have-child-objects))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-node-may-have-child-elements-node" class="anchor" aria-hidden="true" href="#om-node-may-have-child-elements-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-node-may-have-child-elements &lt;code&gt;(node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return t if &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; is a branch node that may have child elements.&lt;/p&gt;
&lt;p&gt;Note this implies that &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; is also of class element since only
elements may have other elements as children.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * I'm so great&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Parsing this as an element node gives a headline node (can have child element&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; nodes)&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-node-may-have-child-elements))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *ziltoid*&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Parsing this as an element node gives a paragraph node (can only have child&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; object nodes)&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-node-may-have-child-elements))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; # ziltoid&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Parsing this as an element node gives a comment node (not a branch node)&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-node-may-have-child-elements))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-property-manipulation-1" class="anchor" aria-hidden="true" href="#property-manipulation-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Property Manipulation&lt;/h2&gt;
&lt;p&gt;Set, get, and map properties of nodes.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-generic-1" class="anchor" aria-hidden="true" href="#generic-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generic&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-contains-point-p-point-node" class="anchor" aria-hidden="true" href="#om-contains-point-p-point-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-contains-point-p &lt;code&gt;(point node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return t if &lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; is within the boundaries of &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *findme*&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-contains-point-p &lt;span class="pl-c1"&gt;2&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-contains-point-p &lt;span class="pl-c1"&gt;10&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-set-property-prop-value-node" class="anchor" aria-hidden="true" href="#om-set-property-prop-value-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-set-property &lt;code&gt;(prop value node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; with &lt;strong&gt;&lt;code&gt;prop&lt;/code&gt;&lt;/strong&gt; set to &lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;See builder functions for a list of properties and their rules for
each type.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; #+CALL: ktulu()&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-set-property &lt;span class="pl-c1"&gt;:call&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cthulhu&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-set-property &lt;span class="pl-c1"&gt;:inside-header&lt;/span&gt; '(&lt;span class="pl-c1"&gt;:cache&lt;/span&gt; no))
     (om-set-property &lt;span class="pl-c1"&gt;:arguments&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x=4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-set-property &lt;span class="pl-c1"&gt;:end-header&lt;/span&gt; '(&lt;span class="pl-c1"&gt;:exports&lt;/span&gt; results))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+CALL: cthulhu[:cache no](x=4) :exports results"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; call_kthulu()&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-set-property &lt;span class="pl-c1"&gt;:call&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cthulhu&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-set-property &lt;span class="pl-c1"&gt;:inside-header&lt;/span&gt; '(&lt;span class="pl-c1"&gt;:cache&lt;/span&gt; no))
     (om-set-property &lt;span class="pl-c1"&gt;:arguments&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x=4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-set-property &lt;span class="pl-c1"&gt;:end-header&lt;/span&gt; '(&lt;span class="pl-c1"&gt;:exports&lt;/span&gt; results))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "call_cthulhu[:cache no](x=4)[:exports results]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; src_emacs{(print 'yeah-boi)}&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-set-property &lt;span class="pl-c1"&gt;:language&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;python&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-set-property &lt;span class="pl-c1"&gt;:parameters&lt;/span&gt; '(&lt;span class="pl-c1"&gt;:cache&lt;/span&gt; no))
     (om-set-property &lt;span class="pl-c1"&gt;:value&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;print &lt;span class="pl-cce"&gt;\"&lt;/span&gt;yeah boi&lt;span class="pl-cce"&gt;\"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "src_python[:cache no]{print \"yeah boi\"}"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - thing&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-item)
     (om-set-property &lt;span class="pl-c1"&gt;:bullet&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-set-property &lt;span class="pl-c1"&gt;:checkbox&lt;/span&gt; &lt;span class="pl-c1"&gt;'on&lt;/span&gt;)
     (om-set-property &lt;span class="pl-c1"&gt;:counter&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
     (om-set-property &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tmsu&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "1. [@2] [X] tmsu :: thing"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * not valuable&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Throw error when setting a property that doesn't exist&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-set-property &lt;span class="pl-c1"&gt;:value&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;wtf&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
Error

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Throw error when setting to an improper type&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-set-property &lt;span class="pl-c1"&gt;:title&lt;/span&gt; &lt;span class="pl-c1"&gt;666&lt;/span&gt;)
     (om-to-trimmed-string))
Error
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-set-properties-plist-node" class="anchor" aria-hidden="true" href="#om-set-properties-plist-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-set-properties &lt;code&gt;(plist node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; with all properties set to the values according to &lt;strong&gt;&lt;code&gt;plist&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;plist&lt;/code&gt;&lt;/strong&gt; is a list of property-value pairs that corresponds to the
property list in &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;See builder functions for a list of properties and their rules for
each type.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - thing&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-item)
     (om-set-properties (&lt;span class="pl-k"&gt;list&lt;/span&gt; &lt;span class="pl-c1"&gt;:bullet&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;:checkbox&lt;/span&gt; &lt;span class="pl-c1"&gt;'on&lt;/span&gt;
			       &lt;span class="pl-c1"&gt;:counter&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-c1"&gt;:tag&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tmsu&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "1. [@2] [X] tmsu :: thing"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-get-property-prop-node" class="anchor" aria-hidden="true" href="#om-get-property-prop-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-get-property &lt;code&gt;(prop node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return the value of &lt;strong&gt;&lt;code&gt;prop&lt;/code&gt;&lt;/strong&gt; of &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;See builder functions for a list of properties and their rules for
each type.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; #+CALL: ktulu(x=4) :exports results&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-get-property &lt;span class="pl-c1"&gt;:call&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "ktulu"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-get-property &lt;span class="pl-c1"&gt;:inside-header&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * not arguable&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Throw error when requesting a property that doesn't exist&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-get-property &lt;span class="pl-c1"&gt;:value&lt;/span&gt;))
Error
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-map-property-prop-fun-node" class="anchor" aria-hidden="true" href="#om-map-property-prop-fun-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-map-property &lt;code&gt;(prop fun node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; with &lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt; applied to the value of &lt;strong&gt;&lt;code&gt;prop&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt; is a unary function which takes the current value of &lt;strong&gt;&lt;code&gt;prop&lt;/code&gt;&lt;/strong&gt; and
returns a new value to which &lt;strong&gt;&lt;code&gt;prop&lt;/code&gt;&lt;/strong&gt; will be set.&lt;/p&gt;
&lt;p&gt;See builder functions for a list of properties and their rules for
each type.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ~learn to~&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-map-property &lt;span class="pl-c1"&gt;:value&lt;/span&gt; (&lt;span class="pl-k"&gt;function&lt;/span&gt; s-upcase))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "~LEARN TO~"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Throw error if property doesn't exist&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-map-property &lt;span class="pl-c1"&gt;:title&lt;/span&gt; (&lt;span class="pl-k"&gt;function&lt;/span&gt; s-upcase))
     (om-to-trimmed-string))
Error

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Throw error if function doesn't return proper type&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-map-property* &lt;span class="pl-c1"&gt;:value&lt;/span&gt; (&lt;span class="pl-k"&gt;if&lt;/span&gt; it &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;))
     (om-to-trimmed-string))
Error
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-map-properties-plist-node" class="anchor" aria-hidden="true" href="#om-map-properties-plist-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-map-properties &lt;code&gt;(plist node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; with functions applied to the values of properties.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;plist&lt;/code&gt;&lt;/strong&gt; is a property list where the keys are properties of &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; and
its values are unary functions to be mapped to these properties.&lt;/p&gt;
&lt;p&gt;See builder functions for a list of properties and their rules for
each type.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; #+KEY: VAL&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-map-properties (&lt;span class="pl-k"&gt;list&lt;/span&gt; &lt;span class="pl-c1"&gt;:key&lt;/span&gt; (-partial (&lt;span class="pl-k"&gt;function&lt;/span&gt; s-prepend)
					     &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;OM_&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
			       &lt;span class="pl-c1"&gt;:value&lt;/span&gt; (-partial (&lt;span class="pl-k"&gt;function&lt;/span&gt; s-prepend)
						&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;OM_&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+OM_KEY: OM_VAL"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-toggle-property-prop-node" class="anchor" aria-hidden="true" href="#om-toggle-property-prop-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-toggle-property &lt;code&gt;(prop node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; with the value of &lt;strong&gt;&lt;code&gt;prop&lt;/code&gt;&lt;/strong&gt; flipped.&lt;/p&gt;
&lt;p&gt;This function only applies to properties that are booleans.&lt;/p&gt;
&lt;p&gt;The following types and properties are supported:&lt;/p&gt;
&lt;p&gt;entity&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:use-brackets-p&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;example-block&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:preserve-indent&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;headline&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:archivedp&lt;/li&gt;
&lt;li&gt;:commentedp&lt;/li&gt;
&lt;li&gt;:footnote-section-p&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;src-block&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:preserve-indent&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;subscript&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:use-brackets-p&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;superscript&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:use-brackets-p&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; \pi&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-toggle-property &lt;span class="pl-c1"&gt;:use-brackets-p&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "\\pi{}"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - [ ] nope&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Throw an error when trying to toggle a non-boolean property&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-item)
     (om-toggle-property &lt;span class="pl-c1"&gt;:checkbox&lt;/span&gt;)
     (om-to-trimmed-string))
Error
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-shift-property-prop-n-node" class="anchor" aria-hidden="true" href="#om-shift-property-prop-n-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-shift-property &lt;code&gt;(prop n node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; with &lt;strong&gt;&lt;code&gt;prop&lt;/code&gt;&lt;/strong&gt; shifted by &lt;strong&gt;&lt;code&gt;n&lt;/code&gt;&lt;/strong&gt; (an integer).&lt;/p&gt;
&lt;p&gt;This only applies the properties that are represented as integers.&lt;/p&gt;
&lt;p&gt;The following types and properties are supported:&lt;/p&gt;
&lt;p&gt;all elements&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:post-blank&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;headline&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:level&lt;/li&gt;
&lt;li&gt;:pre-blank&lt;/li&gt;
&lt;li&gt;:priority&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;item&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:counter&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * no priorities&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Do nothing if there is nothing to shift.&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-shift-property &lt;span class="pl-c1"&gt;:priority&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* no priorities"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * [#A] priorities&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-shift-property &lt;span class="pl-c1"&gt;:priority&lt;/span&gt; &lt;span class="pl-c1"&gt;-1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* [#B] priorities"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Wrap priority around when crossing the min or max&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-shift-property &lt;span class="pl-c1"&gt;:priority&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* [#C] priorities"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * TODO or not todo&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Throw error when shifting an unshiftable property&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-shift-property &lt;span class="pl-c1"&gt;:todo-keyword&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-string))
Error
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-insert-into-property-prop-index-string-node" class="anchor" aria-hidden="true" href="#om-insert-into-property-prop-index-string-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-insert-into-property &lt;code&gt;(prop index string node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; with &lt;strong&gt;&lt;code&gt;string&lt;/code&gt;&lt;/strong&gt; inserted at &lt;strong&gt;&lt;code&gt;index&lt;/code&gt;&lt;/strong&gt; into &lt;strong&gt;&lt;code&gt;prop&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This only applies to properties that are represented as lists of
strings.&lt;/p&gt;
&lt;p&gt;The following types and properties are supported:&lt;/p&gt;
&lt;p&gt;babel-call&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:arguments&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;example-block&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:switches&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;headline&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:tags&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;inline-babel-call&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:arguments&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;macro&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:args&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;src-block&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:switches&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;table&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:tblfm&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; #+CALL: ktulu(y=1)&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-insert-into-property &lt;span class="pl-c1"&gt;:arguments&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x=4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+CALL: ktulu(x=4,y=1)"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Do nothing if the string is already in the list&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-insert-into-property &lt;span class="pl-c1"&gt;:arguments&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;y=1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+CALL: ktulu(y=1)"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Throw error when inserting into a property that is not a list of strings&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-insert-into-property &lt;span class="pl-c1"&gt;:end-header&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
Error
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-remove-from-property-prop-string-node" class="anchor" aria-hidden="true" href="#om-remove-from-property-prop-string-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-remove-from-property &lt;code&gt;(prop string node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; with &lt;strong&gt;&lt;code&gt;string&lt;/code&gt;&lt;/strong&gt; removed from &lt;strong&gt;&lt;code&gt;prop&lt;/code&gt;&lt;/strong&gt; if present.&lt;/p&gt;
&lt;p&gt;This only applies to properties that are represented as lists of
strings.&lt;/p&gt;
&lt;p&gt;See &lt;a href="#om-insert-into-property-prop-index-string-node"&gt;&lt;code&gt;om-insert-into-property&lt;/code&gt;&lt;/a&gt; for a list of supported elements
and properties that may be used with this function.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; #+CALL: ktulu(y=1)&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-remove-from-property &lt;span class="pl-c1"&gt;:arguments&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;y=1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+CALL: ktulu()"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Do nothing if the string does not exist&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-remove-from-property &lt;span class="pl-c1"&gt;:arguments&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;d=666&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+CALL: ktulu(y=1)"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Throw error when removing from property that is not a string list&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-remove-from-property &lt;span class="pl-c1"&gt;:end-header&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:results&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
Error
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-plist-put-property-prop-key-value-node" class="anchor" aria-hidden="true" href="#om-plist-put-property-prop-key-value-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-plist-put-property &lt;code&gt;(prop key value node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; with &lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt; corresponding to &lt;strong&gt;&lt;code&gt;key&lt;/code&gt;&lt;/strong&gt; inserted into &lt;strong&gt;&lt;code&gt;prop&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;key&lt;/code&gt;&lt;/strong&gt; is a keyword and &lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt; is a symbol. This only applies to
properties that are represented as plists.&lt;/p&gt;
&lt;p&gt;The following types and properties are supported:&lt;/p&gt;
&lt;p&gt;babel-call&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:inside-header&lt;/li&gt;
&lt;li&gt;:end-header&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dynamic-block&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:arguments&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;inline-babel-call&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:inside-header&lt;/li&gt;
&lt;li&gt;:end-header&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;inline-src-block&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:parameters&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;src-block&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:parameters&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; #+CALL: ktulu[:cache no]()&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-plist-put-property &lt;span class="pl-c1"&gt;:end-header&lt;/span&gt; &lt;span class="pl-c1"&gt;:results&lt;/span&gt; &lt;span class="pl-c1"&gt;'html&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+CALL: ktulu[:cache no]() :results html"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Change the value of key if it already is present&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-plist-put-property &lt;span class="pl-c1"&gt;:inside-header&lt;/span&gt; &lt;span class="pl-c1"&gt;:cache&lt;/span&gt; &lt;span class="pl-c1"&gt;'yes&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+CALL: ktulu[:cache yes]()"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Do nothing if the key and value already exist&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-plist-put-property &lt;span class="pl-c1"&gt;:inside-header&lt;/span&gt; &lt;span class="pl-c1"&gt;:cache&lt;/span&gt; &lt;span class="pl-c1"&gt;'no&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+CALL: ktulu[:cache no]()"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Throw error if setting property that isn't a plist&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-plist-put-property &lt;span class="pl-c1"&gt;:arguments&lt;/span&gt; &lt;span class="pl-c1"&gt;:cache&lt;/span&gt; &lt;span class="pl-c1"&gt;'no&lt;/span&gt;)
     (om-to-trimmed-string))
Error
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-plist-remove-property-prop-key-node" class="anchor" aria-hidden="true" href="#om-plist-remove-property-prop-key-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-plist-remove-property &lt;code&gt;(prop key node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; with &lt;strong&gt;&lt;code&gt;key&lt;/code&gt;&lt;/strong&gt; and its corresponding value removed from &lt;strong&gt;&lt;code&gt;prop&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;key&lt;/code&gt;&lt;/strong&gt; is a keyword. This only applies to properties that are
represented as plists.&lt;/p&gt;
&lt;p&gt;See &lt;a href="#om-plist-put-property-prop-key-value-node"&gt;&lt;code&gt;om-plist-put-property&lt;/code&gt;&lt;/a&gt; for a list of supported elements
and properties that may be used with this function.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; #+CALL: ktulu() :results html&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-plist-remove-property &lt;span class="pl-c1"&gt;:end-header&lt;/span&gt; &lt;span class="pl-c1"&gt;:results&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+CALL: ktulu()"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Do nothing if the key is not present&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-plist-remove-property &lt;span class="pl-c1"&gt;:inside-header&lt;/span&gt; &lt;span class="pl-c1"&gt;:cache&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "#+CALL: ktulu() :results html"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Throw error if trying to remove key from non-plist property&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-plist-remove-property &lt;span class="pl-c1"&gt;:arguments&lt;/span&gt; &lt;span class="pl-c1"&gt;:cache&lt;/span&gt;)
     (om-to-trimmed-string))
Error
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-clock-1" class="anchor" aria-hidden="true" href="#clock-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clock&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-clock-is-running-clock" class="anchor" aria-hidden="true" href="#om-clock-is-running-clock"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-clock-is-running &lt;code&gt;(clock)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return t if &lt;strong&gt;&lt;code&gt;clock&lt;/code&gt;&lt;/strong&gt; element is running (eg is open).&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; CLOCK: [2019-01-01 Tue 00:00]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-clock-is-running))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; CLOCK: [2019-01-01 Tue 00:00]--[2019-01-02 Wed 00:00] =&amp;gt; 24:00&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-clock-is-running))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-entity-1" class="anchor" aria-hidden="true" href="#entity-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Entity&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-entity-get-replacement-key-entity" class="anchor" aria-hidden="true" href="#om-entity-get-replacement-key-entity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-entity-get-replacement &lt;code&gt;(key entity)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return replacement string or symbol for &lt;strong&gt;&lt;code&gt;entity&lt;/code&gt;&lt;/strong&gt; node.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;key&lt;/code&gt;&lt;/strong&gt; is one of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:latex&lt;/code&gt; (the entity's latex representation)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:latex-math-p&lt;/code&gt; (t if the latex representation requires math mode,
nil otherwise)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:html&lt;/code&gt; (the entity's html representation)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:ascii&lt;/code&gt; (the entity's ascii representation)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:latin1&lt;/code&gt; (the entity's Latin1 representation)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:utf-8&lt;/code&gt; (the entity's utf8 representation)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Any other keys will trigger an error.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; \pi{}&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-entity-get-replacement &lt;span class="pl-c1"&gt;:latex&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "\\pi"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-entity-get-replacement &lt;span class="pl-c1"&gt;:latex-math-p&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-entity-get-replacement &lt;span class="pl-c1"&gt;:html&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "&amp;amp;pi;"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-entity-get-replacement &lt;span class="pl-c1"&gt;:ascii&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "pi"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-entity-get-replacement &lt;span class="pl-c1"&gt;:latin1&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "pi"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-entity-get-replacement &lt;span class="pl-c1"&gt;:utf-8&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "π"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-headline-2" class="anchor" aria-hidden="true" href="#headline-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Headline&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-headline-set-title-title-text-stats-cookie-value-headline" class="anchor" aria-hidden="true" href="#om-headline-set-title-title-text-stats-cookie-value-headline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-headline-set-title! &lt;code&gt;(title-text stats-cookie-value headline)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;headline&lt;/code&gt;&lt;/strong&gt; node with title set with &lt;strong&gt;&lt;code&gt;title-text&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;stats-cookie-value&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;title-text&lt;/code&gt;&lt;/strong&gt; is a string to be parsed into object nodes for the title
via &lt;a href="#om-build-secondary-string-string"&gt;&lt;code&gt;om-build-secondary-string!&lt;/code&gt;&lt;/a&gt; (see that function for restrictions)
and &lt;strong&gt;&lt;code&gt;stats-cookie-value&lt;/code&gt;&lt;/strong&gt; is a list described in
&lt;a href="#om-build-statistics-cookie-value-key-post-blank"&gt;&lt;code&gt;om-build-statistics-cookie&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * really impressive title&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-headline-set-title! &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;really *impressive* title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; '(&lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* really *impressive* title [2/3]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-headline-is-done-headline" class="anchor" aria-hidden="true" href="#om-headline-is-done-headline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-headline-is-done &lt;code&gt;(headline)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return t if &lt;strong&gt;&lt;code&gt;headline&lt;/code&gt;&lt;/strong&gt; node has a done todo-keyword.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * TODO darn&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-headline-is-done))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * DONE yay&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-headline-is-done))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-headline-has-tag-tag-headline" class="anchor" aria-hidden="true" href="#om-headline-has-tag-tag-headline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-headline-has-tag &lt;code&gt;(tag headline)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return t if &lt;strong&gt;&lt;code&gt;headline&lt;/code&gt;&lt;/strong&gt; node is tagged with &lt;strong&gt;&lt;code&gt;tag&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * dummy&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-headline-has-tag &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tmsu&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * dummy                  :tmsu:&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-headline-has-tag &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tmsu&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-headline-get-statistics-cookie-headline" class="anchor" aria-hidden="true" href="#om-headline-get-statistics-cookie-headline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-headline-get-statistics-cookie &lt;code&gt;(headline)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return the statistics cookie node from &lt;strong&gt;&lt;code&gt;headline&lt;/code&gt;&lt;/strong&gt; if it exists.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * statistically significant [10/10]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-headline-get-statistics-cookie)
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[10/10]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * not statistically significant&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-headline-get-statistics-cookie))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-item-1" class="anchor" aria-hidden="true" href="#item-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Item&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-item-toggle-checkbox-item" class="anchor" aria-hidden="true" href="#om-item-toggle-checkbox-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-item-toggle-checkbox &lt;code&gt;(item)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;item&lt;/code&gt;&lt;/strong&gt; node with its checkbox state flipped.
This only affects item nodes with checkboxes in the &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt;
states; return &lt;strong&gt;&lt;code&gt;item&lt;/code&gt;&lt;/strong&gt; node unchanged if the checkbox property is &lt;code&gt;trans&lt;/code&gt;
or nil.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - [ ] one&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-item)
     (om-item-toggle-checkbox)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "- [X] one"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - [-] one&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Ignore trans state checkboxes&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-item)
     (om-item-toggle-checkbox)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "- [-] one"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - one&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Do nothing if there is no checkbox&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-item)
     (om-item-toggle-checkbox)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "- one"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-planning-1" class="anchor" aria-hidden="true" href="#planning-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Planning&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-planning-set-timestamp-prop-planning-list-planning" class="anchor" aria-hidden="true" href="#om-planning-set-timestamp-prop-planning-list-planning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-planning-set-timestamp! &lt;code&gt;(prop planning-list planning)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;planning&lt;/code&gt;&lt;/strong&gt; node with &lt;strong&gt;&lt;code&gt;prop&lt;/code&gt;&lt;/strong&gt; set to &lt;strong&gt;&lt;code&gt;planning-list&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;prop&lt;/code&gt;&lt;/strong&gt; is one of &lt;code&gt;:closed&lt;/code&gt;, &lt;code&gt;:deadline&lt;/code&gt;, or &lt;code&gt;:scheduled&lt;/code&gt;. &lt;strong&gt;&lt;code&gt;planning-list&lt;/code&gt;&lt;/strong&gt;
is the same as that described in &lt;a href="#om-build-planning-key-closed-deadline-scheduled-post-blank"&gt;&lt;code&gt;om-build-planning!&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * dummy&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; CLOSED: [2019-01-01 Tue]&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Change an existing timestamp in planning&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-headline-get-planning)
     (om-planning-set-timestamp! &lt;span class="pl-c1"&gt;:closed&lt;/span&gt; '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &amp;amp;warning all &lt;span class="pl-c1"&gt;1&lt;/span&gt; day &amp;amp;repeater cumulate &lt;span class="pl-c1"&gt;2&lt;/span&gt; month))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "CLOSED: [2019-01-02 Wed +2m -1d]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Add a new timestamp and remove another&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-headline-get-planning)
     (om-planning-set-timestamp! &lt;span class="pl-c1"&gt;:deadline&lt;/span&gt; '(&lt;span class="pl-c1"&gt;2112&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;))
     (om-planning-set-timestamp! &lt;span class="pl-c1"&gt;:closed&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "DEADLINE: [2112-01-01 Fri]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-statistics-cookie-1" class="anchor" aria-hidden="true" href="#statistics-cookie-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Statistics Cookie&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-statistics-cookie-is-complete-statistics-cookie" class="anchor" aria-hidden="true" href="#om-statistics-cookie-is-complete-statistics-cookie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-statistics-cookie-is-complete &lt;code&gt;(statistics-cookie)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return t is &lt;strong&gt;&lt;code&gt;statistics-cookie&lt;/code&gt;&lt;/strong&gt; node is complete.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * statistically significant [10/10]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-headline-get-statistics-cookie)
     (om-statistics-cookie-is-complete))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * statistically significant [1/10]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-headline-get-statistics-cookie)
     (om-statistics-cookie-is-complete))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * statistically significant [100%]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-headline-get-statistics-cookie)
     (om-statistics-cookie-is-complete))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * statistically significant [33%]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-headline-get-statistics-cookie)
     (om-statistics-cookie-is-complete))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-timestamp-auxiliary-1" class="anchor" aria-hidden="true" href="#timestamp-auxiliary-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Timestamp (Auxiliary)&lt;/h3&gt;
&lt;p&gt;Functions to work with timestamp data&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-om-time-to-unixtime-time" class="anchor" aria-hidden="true" href="#om-time-to-unixtime-time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-time-to-unixtime &lt;code&gt;(time)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return the unix time (integer seconds) of time list &lt;strong&gt;&lt;code&gt;time&lt;/code&gt;&lt;/strong&gt;.
The returned value is dependent on the time zone of the operating
system.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;no examples :(&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-unixtime-to-time-long-unixtime" class="anchor" aria-hidden="true" href="#om-unixtime-to-time-long-unixtime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-unixtime-to-time-long &lt;code&gt;(unixtime)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return the long time list of &lt;strong&gt;&lt;code&gt;unixtime&lt;/code&gt;&lt;/strong&gt;.
The list will be formatted like &lt;code&gt;(year month day hour min)&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;no examples :(&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-unixtime-to-time-short-unixtime" class="anchor" aria-hidden="true" href="#om-unixtime-to-time-short-unixtime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-unixtime-to-time-short &lt;code&gt;(unixtime)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return the short time list of &lt;strong&gt;&lt;code&gt;unixtime&lt;/code&gt;&lt;/strong&gt;.
The list will be formatted like &lt;code&gt;(year month day nil nil)&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;no examples :(&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-timestamp-standard-1" class="anchor" aria-hidden="true" href="#timestamp-standard-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Timestamp (Standard)&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-timestamp-get-start-time-timestamp" class="anchor" aria-hidden="true" href="#om-timestamp-get-start-time-timestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-timestamp-get-start-time &lt;code&gt;(timestamp)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return the time list for start time of &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; node.
The return value will be a list as specified by the &lt;code&gt;time&lt;/code&gt; argument in
&lt;a href="#om-build-timestamp-start-key-end-active-repeater-warning-post-blank"&gt;&lt;code&gt;om-build-timestamp!&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-get-start-time))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; '(2019 1 1 nil nil)&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]--[2019-01-02 Wed]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-get-start-time))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; '(2019 1 1 nil nil)&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue 00:00-12:00]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-get-start-time))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; '(2019 1 1 0 0)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-timestamp-get-end-time-timestamp" class="anchor" aria-hidden="true" href="#om-timestamp-get-end-time-timestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-timestamp-get-end-time &lt;code&gt;(timestamp)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return the end time list for end time of &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; or nil if not a range.
The return value will be a list as specified by the &lt;code&gt;time&lt;/code&gt; argument in
&lt;a href="#om-build-timestamp-start-key-end-active-repeater-warning-post-blank"&gt;&lt;code&gt;om-build-timestamp!&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-get-end-time))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]--[2019-01-02 Wed]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-get-end-time))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; '(2019 1 2 nil nil)&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue 00:00-12:00]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-get-end-time))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; '(2019 1 1 12 0)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-timestamp-get-range-timestamp" class="anchor" aria-hidden="true" href="#om-timestamp-get-range-timestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-timestamp-get-range &lt;code&gt;(timestamp)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return the range of &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; node in seconds as an integer.
If non-ranged, this function will return 0. If ranged but
the start time is in the future relative to end the time, return
a negative integer.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-get-range))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; 0&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]--[2019-01-02 Wed]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-get-range))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; 86400&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue 00:00-12:00]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-get-range))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; 43200&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-timestamp-is-active-timestamp" class="anchor" aria-hidden="true" href="#om-timestamp-is-active-timestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-timestamp-is-active &lt;code&gt;(timestamp)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return t if &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; node is active.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; &amp;lt;2019-01-01 Tue&amp;gt;&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-is-active))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-is-active))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-timestamp-is-ranged-timestamp" class="anchor" aria-hidden="true" href="#om-timestamp-is-ranged-timestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-timestamp-is-ranged &lt;code&gt;(timestamp)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return t if &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; node is ranged.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]--[2019-01-02 Wed]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-is-ranged))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue 00:00-12:00]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-is-ranged))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-is-ranged))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-timestamp-range-contains-p-unixtime-timestamp" class="anchor" aria-hidden="true" href="#om-timestamp-range-contains-p-unixtime-timestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-timestamp-range-contains-p &lt;code&gt;(unixtime timestamp)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return t if &lt;strong&gt;&lt;code&gt;unixtime&lt;/code&gt;&lt;/strong&gt; is between start and end time of &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; node.
The boundaries are inclusive. If &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; has a range of zero, then
only return t if &lt;strong&gt;&lt;code&gt;unixtime&lt;/code&gt;&lt;/strong&gt; is the same as &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt;. &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; will be
interpreted according to the localtime of the operating system.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue 00:00]&lt;/span&gt;

(&lt;span class="pl-k"&gt;let&lt;/span&gt; ((ut (om-time-to-unixtime '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;))))
  (-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
       (om-timestamp-range-contains-p ut)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;

(&lt;span class="pl-k"&gt;let&lt;/span&gt; ((ut (om-time-to-unixtime '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;))))
  (-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
       (om-timestamp-range-contains-p ut)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue 00:00-01:00]&lt;/span&gt;

(&lt;span class="pl-k"&gt;let&lt;/span&gt; ((ut (om-time-to-unixtime '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;))))
  (-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
       (om-timestamp-range-contains-p ut)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-timestamp-set-collapsed-flag-timestamp" class="anchor" aria-hidden="true" href="#om-timestamp-set-collapsed-flag-timestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-timestamp-set-collapsed &lt;code&gt;(flag timestamp)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; with collapsed set to &lt;strong&gt;&lt;code&gt;flag&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;If timestamp is ranged but not outside of one day, it may be collapsed
(&lt;strong&gt;&lt;code&gt;flag&lt;/code&gt;&lt;/strong&gt; is t) to short format like [yyyy-mm-dd xxx hh:mm-hh:mm] or
expanded (&lt;strong&gt;&lt;code&gt;flag&lt;/code&gt;&lt;/strong&gt; is nil) to long format like [yyyy-mm-dd xxx
hh:mm]--[yyyy-mm-dd xxx hh:mm]. If these conditions are not met,
return &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; untouched regardless of &lt;strong&gt;&lt;code&gt;flag&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Note: the default for all timestamp functions in &lt;code&gt;om.el&lt;/code&gt; is to favor
collapsed format.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue 12:00-13:00]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-set-collapsed &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue 12:00]--[2019-01-01 Tue 13:00]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue 12:00-13:00]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-set-collapsed &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
     (om-timestamp-set-collapsed &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue 12:00-13:00]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue 12:00]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-set-collapsed &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue 12:00]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]--[2019-01-02 Wed]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-set-collapsed &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue]--[2019-01-02 Wed]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-timestamp-set-start-time-time-timestamp" class="anchor" aria-hidden="true" href="#om-timestamp-set-start-time-time-timestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-timestamp-set-start-time &lt;code&gt;(time timestamp)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; node with start time set to &lt;strong&gt;&lt;code&gt;time&lt;/code&gt;&lt;/strong&gt;.
&lt;strong&gt;&lt;code&gt;time&lt;/code&gt;&lt;/strong&gt; is a list analogous to the same argument specified in
&lt;a href="#om-build-timestamp-start-key-end-active-repeater-warning-post-blank"&gt;&lt;code&gt;om-build-timestamp!&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-02 Wed]&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; If not a range this will turn into a range by moving only the start time.&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-set-start-time '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue]--[2019-01-02 Wed]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Set a different time with different precision.&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-set-start-time '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue 10:00]--[2019-01-02 Wed]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-02 Wed 12:00]&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; If not a range and set within a day, use short format&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-set-start-time '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue 00:00-12:00]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-timestamp-set-end-time-time-timestamp" class="anchor" aria-hidden="true" href="#om-timestamp-set-end-time-time-timestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-timestamp-set-end-time &lt;code&gt;(time timestamp)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; node with end time set to &lt;strong&gt;&lt;code&gt;time&lt;/code&gt;&lt;/strong&gt;.
&lt;strong&gt;&lt;code&gt;time&lt;/code&gt;&lt;/strong&gt; is a list analogous to the same argument specified in
&lt;a href="#om-build-timestamp-start-key-end-active-repeater-warning-post-blank"&gt;&lt;code&gt;om-build-timestamp!&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Add the end time&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-set-end-time '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue]--[2019-01-02 Wed]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]--[2019-01-02 Wed]&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Remove the end time&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-set-end-time &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue 12:00]&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Use short range format&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-set-end-time '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;13&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue 12:00-13:00]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-timestamp-set-single-time-time-timestamp" class="anchor" aria-hidden="true" href="#om-timestamp-set-single-time-time-timestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-timestamp-set-single-time &lt;code&gt;(time timestamp)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; node with start and end times set to &lt;strong&gt;&lt;code&gt;time&lt;/code&gt;&lt;/strong&gt;.
&lt;strong&gt;&lt;code&gt;time&lt;/code&gt;&lt;/strong&gt; is a list analogous to the same argument specified in
&lt;a href="#om-build-timestamp-start-key-end-active-repeater-warning-post-blank"&gt;&lt;code&gt;om-build-timestamp!&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Don't make a range&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-set-single-time '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-02 Wed]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]--[2019-01-02 Wed]&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Output is not a range despite input being ranged&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-set-single-time '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-03 Thu]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-timestamp-set-double-time-time1-time2-timestamp" class="anchor" aria-hidden="true" href="#om-timestamp-set-double-time-time1-time2-timestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-timestamp-set-double-time &lt;code&gt;(time1 time2 timestamp)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; node with start/end times set to &lt;strong&gt;&lt;code&gt;time1&lt;/code&gt;&lt;/strong&gt;/&lt;strong&gt;&lt;code&gt;time2&lt;/code&gt;&lt;/strong&gt; respectively.
&lt;strong&gt;&lt;code&gt;time1&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;time2&lt;/code&gt;&lt;/strong&gt; are lists analogous to the &lt;code&gt;time&lt;/code&gt; argument specified in
&lt;a href="#om-build-timestamp-start-key-end-active-repeater-warning-post-blank"&gt;&lt;code&gt;om-build-timestamp!&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Make a range&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-set-double-time '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
				   '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-02 Wed]--[2019-01-03 Thu]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]--[2019-01-03 Wed]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-set-double-time '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;)
				   '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-04 Fri]--[2019-01-05 Sat]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]--[2019-01-03 Wed]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-set-double-time '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
				   '(&lt;span class="pl-c1"&gt;2019&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue 00:00-01:00]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-timestamp-set-range-range-timestamp" class="anchor" aria-hidden="true" href="#om-timestamp-set-range-range-timestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-timestamp-set-range &lt;code&gt;(range timestamp)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; node with range set to &lt;strong&gt;&lt;code&gt;range&lt;/code&gt;&lt;/strong&gt;.
If &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; is ranged, keep start time the same and adjust the end
time. If not, make a new end time. The units for &lt;strong&gt;&lt;code&gt;range&lt;/code&gt;&lt;/strong&gt; are in minutes
if &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; is in long format and days if &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; is in short
format.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Use days as the unit for short format&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-set-range &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue]--[2019-01-02 Wed]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue 00:00]&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Use minutes as the unit for long format&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-set-range &lt;span class="pl-c1"&gt;3&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue 00:00-00:03]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]--[2019-01-03 Wed]&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Set range to 0 to remove end time&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-set-range &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-timestamp-set-active-flag-timestamp" class="anchor" aria-hidden="true" href="#om-timestamp-set-active-flag-timestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-timestamp-set-active &lt;code&gt;(flag timestamp)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; node with active type if &lt;strong&gt;&lt;code&gt;flag&lt;/code&gt;&lt;/strong&gt; is t.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-set-active &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "&amp;lt;2019-01-01 Tue&amp;gt;"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; &amp;lt;2019-01-01 Tue&amp;gt;&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-set-active &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-timestamp-shift-n-unit-timestamp" class="anchor" aria-hidden="true" href="#om-timestamp-shift-n-unit-timestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-timestamp-shift &lt;code&gt;(n unit timestamp)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; node with time shifted by &lt;strong&gt;&lt;code&gt;n&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;&lt;code&gt;unit&lt;/code&gt;&lt;/strong&gt;`s.&lt;/p&gt;
&lt;p&gt;This function will move the start and end times together; therefore
ranged inputs will always output ranged timestamps and same for
non-ranged. To move the start and end time independently, use
&lt;a href="#om-timestamp-shift-start-n-unit-timestamp"&gt;&lt;code&gt;om-timestamp-shift-start&lt;/code&gt;&lt;/a&gt; or &lt;a href="#om-timestamp-shift-end-n-unit-timestamp"&gt;&lt;code&gt;om-timestamp-shift-end&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;n&lt;/code&gt;&lt;/strong&gt; is a positive or negative integer and &lt;strong&gt;&lt;code&gt;unit&lt;/code&gt;&lt;/strong&gt; is one of &lt;code&gt;minute&lt;/code&gt;,
&lt;code&gt;hour&lt;/code&gt;, &lt;code&gt;day&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, or &lt;code&gt;year&lt;/code&gt;. Overflows will wrap around
transparently; for instance, supplying &lt;code&gt;minute&lt;/code&gt; for &lt;strong&gt;&lt;code&gt;unit&lt;/code&gt;&lt;/strong&gt; and 90 for &lt;strong&gt;&lt;code&gt;n&lt;/code&gt;&lt;/strong&gt;
will increase the hour property by 1 and the minute property by 30.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue 12:00]&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Change each unit, and wrap around to the next unit as needed.&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-shift &lt;span class="pl-c1"&gt;30&lt;/span&gt; &lt;span class="pl-c1"&gt;'minute&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue 12:30]"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-shift &lt;span class="pl-c1"&gt;13&lt;/span&gt; &lt;span class="pl-c1"&gt;'month&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2020-02-01 Sat 12:00]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Error when shifting hour/minute in short format&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-shift &lt;span class="pl-c1"&gt;30&lt;/span&gt; &lt;span class="pl-c1"&gt;'minute&lt;/span&gt;)
     (om-to-trimmed-string))
Error
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-timestamp-shift-start-n-unit-timestamp" class="anchor" aria-hidden="true" href="#om-timestamp-shift-start-n-unit-timestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-timestamp-shift-start &lt;code&gt;(n unit timestamp)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; node with start time shifted by &lt;strong&gt;&lt;code&gt;n&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;&lt;code&gt;unit&lt;/code&gt;&lt;/strong&gt;`s.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;n&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;unit&lt;/code&gt;&lt;/strong&gt; behave the same as those in &lt;a href="#om-timestamp-shift-n-unit-timestamp"&gt;&lt;code&gt;om-timestamp-shift&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; is not range, the output will be a ranged timestamp with
the shifted start time and the end time as that of &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt;. If this
behavior is not desired, use &lt;a href="#om-timestamp-shift-n-unit-timestamp"&gt;&lt;code&gt;om-timestamp-shift&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue 12:00]&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; If not a range, change start time and leave implicit end time.&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-shift-start &lt;span class="pl-c1"&gt;-1&lt;/span&gt; &lt;span class="pl-c1"&gt;'year&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2018-01-01 Mon 12:00]--[2019-01-01 Tue 12:00]"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-shift-start &lt;span class="pl-c1"&gt;-1&lt;/span&gt; &lt;span class="pl-c1"&gt;'hour&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue 11:00-12:00]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]--[2019-01-03 Thu]&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Change only start time if a range&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-shift-start &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;'day&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-02 Wed]--[2019-01-03 Thu]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-timestamp-shift-end-n-unit-timestamp" class="anchor" aria-hidden="true" href="#om-timestamp-shift-end-n-unit-timestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-timestamp-shift-end &lt;code&gt;(n unit timestamp)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; node with end time shifted by &lt;strong&gt;&lt;code&gt;n&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;&lt;code&gt;unit&lt;/code&gt;&lt;/strong&gt;`s.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;n&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;unit&lt;/code&gt;&lt;/strong&gt; behave the same as those in &lt;a href="#om-timestamp-shift-n-unit-timestamp"&gt;&lt;code&gt;om-timestamp-shift&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; is not range, the output will be a ranged timestamp with
the shifted end time and the start time as that of &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt;. If this
behavior is not desired, use &lt;a href="#om-timestamp-shift-n-unit-timestamp"&gt;&lt;code&gt;om-timestamp-shift&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Shift implicit end time if not a range.&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-shift-end &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;'day&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue]--[2019-01-02 Wed]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]--[2019-01-02 Wed]&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Move only the second time if a range.&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-shift-end &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;'day&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue]--[2019-01-03 Thu]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-timestamp-toggle-active-timestamp" class="anchor" aria-hidden="true" href="#om-timestamp-toggle-active-timestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-timestamp-toggle-active &lt;code&gt;(timestamp)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; node with its active/inactive type flipped.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-toggle-active)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "&amp;lt;2019-01-01 Tue&amp;gt;"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; &amp;lt;2019-01-01 Tue&amp;gt;--&amp;lt;2019-01-02 Wed&amp;gt;&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-toggle-active)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue]--[2019-01-02 Wed]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-timestamp-truncate-timestamp" class="anchor" aria-hidden="true" href="#om-timestamp-truncate-timestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-timestamp-truncate &lt;code&gt;(timestamp)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; node with start/end times forced to short format.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]--[2019-01-02 Wed]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-truncate)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue]--[2019-01-02 Wed]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue 12:00]--[2019-01-02 Wed 13:00]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-truncate)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue]--[2019-01-02 Wed]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-timestamp-truncate-start-timestamp" class="anchor" aria-hidden="true" href="#om-timestamp-truncate-start-timestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-timestamp-truncate-start &lt;code&gt;(timestamp)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; node with start time forced to short format.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue 12:00]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-truncate-start)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue 12:00]--[2019-01-02 Wed 12:00]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-truncate-start)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue]--[2019-01-02 Wed 12:00]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-truncate-start)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-timestamp-truncate-end-timestamp" class="anchor" aria-hidden="true" href="#om-timestamp-truncate-end-timestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-timestamp-truncate-end &lt;code&gt;(timestamp)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/strong&gt; node with end time forced to short format.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue]--[2019-01-02 Wed]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-truncate-end)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue]--[2019-01-02 Wed]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue 12:00]--[2019-01-02 Wed 13:00]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-truncate-end)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue 12:00]--[2019-01-02 Wed]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [2019-01-01 Tue 12:00]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-truncate-end)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "[2019-01-01 Tue 12:00]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-timestamp-diary-1" class="anchor" aria-hidden="true" href="#timestamp-diary-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Timestamp (diary)&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-timestamp-diary-set-value-form-timestamp-diary" class="anchor" aria-hidden="true" href="#om-timestamp-diary-set-value-form-timestamp-diary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-timestamp-diary-set-value &lt;code&gt;(form timestamp-diary)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;timestamp-diary&lt;/code&gt;&lt;/strong&gt; node with value set to &lt;strong&gt;&lt;code&gt;form&lt;/code&gt;&lt;/strong&gt;.
&lt;code&gt;timestamp&lt;/code&gt; must have a type &lt;code&gt;eq&lt;/code&gt; to &lt;code&gt;diary&lt;/code&gt;. &lt;strong&gt;&lt;code&gt;form&lt;/code&gt;&lt;/strong&gt; is a quoted list.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; &amp;lt;%%(diary-float t 4 2)&amp;gt;&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-timestamp-diary-set-value '(&lt;span class="pl-c1"&gt;diary-float&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;))
     (om-to-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "&amp;lt;%%(diary-float 1 3 2)&amp;gt;"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-branchchild-manipulation-1" class="anchor" aria-hidden="true" href="#branchchild-manipulation-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Branch/Child Manipulation&lt;/h2&gt;
&lt;p&gt;Set, get, and map the children of branch nodes.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-polymorphic-1" class="anchor" aria-hidden="true" href="#polymorphic-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Polymorphic&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-children-contain-point-point-branch-node" class="anchor" aria-hidden="true" href="#om-children-contain-point-point-branch-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-children-contain-point &lt;code&gt;(point branch-node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return t if &lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; is within the boundaries of &lt;strong&gt;&lt;code&gt;branch-node&lt;/code&gt;&lt;/strong&gt;`s children.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; findme&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-children-contain-point &lt;span class="pl-c1"&gt;2&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-children-contain-point &lt;span class="pl-c1"&gt;15&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-get-children-branch-node" class="anchor" aria-hidden="true" href="#om-get-children-branch-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-get-children &lt;code&gt;(branch-node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return the children of &lt;strong&gt;&lt;code&gt;branch-node&lt;/code&gt;&lt;/strong&gt; as a list.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; /this/ is a *paragraph*&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return child nodes for branch nodes&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-get-children)
     (-map (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-get-type)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; '(italic plain-text bold)&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return nil if no children&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-get-children)
     (-map (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-get-type)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; #+CALL: ktulu()&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Throw error when attempting to get contents of a non-branch node&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-get-children)
     (-map (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-get-type)))
Error
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-set-children-children-branch-node" class="anchor" aria-hidden="true" href="#om-set-children-children-branch-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-set-children &lt;code&gt;(children branch-node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;branch-node&lt;/code&gt;&lt;/strong&gt; with its children set to &lt;strong&gt;&lt;code&gt;children&lt;/code&gt;&lt;/strong&gt;.
&lt;strong&gt;&lt;code&gt;children&lt;/code&gt;&lt;/strong&gt; is a list of nodes; the types permitted in this list depend
on the type of &lt;code&gt;node&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; /this/ is a *paragraph*&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Set children for branch object&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-set-children (&lt;span class="pl-k"&gt;list&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;this is lame&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "this is lame"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Set children for branch element nodes&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-set-children (&lt;span class="pl-k"&gt;list&lt;/span&gt; (om-build-headline! &lt;span class="pl-c1"&gt;:title-text&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;only me&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:level&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;)))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* headline&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** only me"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; #+CALL: ktulu()&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Throw error when attempting to set children of a non-branch nodes&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-set-children &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nil by mouth&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
Error
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-map-children-fun-branch-node" class="anchor" aria-hidden="true" href="#om-map-children-fun-branch-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-map-children &lt;code&gt;(fun branch-node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;branch-node&lt;/code&gt;&lt;/strong&gt; with &lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt; applied to its children.
&lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt; is a unary function that takes the current list of children and
returns a modified list of children.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; /this/ is a *paragraph*&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-map-children (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; (&lt;span class="pl-v"&gt;objs&lt;/span&gt;)
			(&lt;span class="pl-k"&gt;append&lt;/span&gt; objs (&lt;span class="pl-k"&gt;list&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; ...yeah&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "/this/ is a *paragraph* ...yeah"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** subheadline&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-map-children* (--map (om-shift-property &lt;span class="pl-c1"&gt;:level&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; it)
			      it))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* headline&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      *** subheadline"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; #+CALL: ktulu()&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Throw error when attempting to map children of a non-branch node&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-map-children (&lt;span class="pl-k"&gt;function&lt;/span&gt; ignore))
     (om-to-trimmed-string))
Error
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-is-childless-branch-node" class="anchor" aria-hidden="true" href="#om-is-childless-branch-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-is-childless &lt;code&gt;(branch-node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return t if &lt;strong&gt;&lt;code&gt;branch-node&lt;/code&gt;&lt;/strong&gt; is empty.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * dummy&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; filled with useless knowledge&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-is-childless))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * dummy&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-is-childless))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; t&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; #+CALL: ktulu()&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Throw error when attempting to determine if non-branch node is empty&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-is-childless))
Error
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-object-nodes-1" class="anchor" aria-hidden="true" href="#object-nodes-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Object Nodes&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-unwrap-object-node" class="anchor" aria-hidden="true" href="#om-unwrap-object-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-unwrap &lt;code&gt;(object-node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return the children of &lt;strong&gt;&lt;code&gt;object-node&lt;/code&gt;&lt;/strong&gt; as a secondary string.
If &lt;strong&gt;&lt;code&gt;object-node&lt;/code&gt;&lt;/strong&gt; is a plain-text node, wrap it in a list and return.
Else add the post-blank property of &lt;strong&gt;&lt;code&gt;object-node&lt;/code&gt;&lt;/strong&gt; to the last member
of its children and return children as a secondary string.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; _1 *2* 3 */4/* 5 /6/_&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Remove the outer underline formatting&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-unwrap)
     (&lt;span class="pl-k"&gt;apply&lt;/span&gt; (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-build-paragraph))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "1 *2* 3 */4/* 5 /6/"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-unwrap-types-deep-types-object-node" class="anchor" aria-hidden="true" href="#om-unwrap-types-deep-types-object-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-unwrap-types-deep &lt;code&gt;(types object-node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return the children of &lt;strong&gt;&lt;code&gt;object-node&lt;/code&gt;&lt;/strong&gt; as a secondary string.
If &lt;strong&gt;&lt;code&gt;object-node&lt;/code&gt;&lt;/strong&gt; is a plain-text node, wrap it in a list and return.
Else recursively descend into the children of &lt;strong&gt;&lt;code&gt;object-node&lt;/code&gt;&lt;/strong&gt; and splice
the children of nodes with type in &lt;strong&gt;&lt;code&gt;types&lt;/code&gt;&lt;/strong&gt; in place of said node and
return the result as a secondary string.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; _1 *2* 3 */4/* 5 /6/_&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Remove bold formatting at any level&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-unwrap-types-deep '(&lt;span class="pl-c1"&gt;bold&lt;/span&gt;))
     (&lt;span class="pl-k"&gt;apply&lt;/span&gt; (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-build-paragraph))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "_1 2 3 /4/ 5 /6/_"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-unwrap-deep-object-node" class="anchor" aria-hidden="true" href="#om-unwrap-deep-object-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-unwrap-deep &lt;code&gt;(object-node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return the children of &lt;strong&gt;&lt;code&gt;object-node&lt;/code&gt;&lt;/strong&gt; as plain-text wrapped in a list.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; _1 *2* 3 */4/* 5 /6/_&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Remove all formatting&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-object)
     (om-unwrap-deep)
     (&lt;span class="pl-k"&gt;apply&lt;/span&gt; (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-build-paragraph))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "1 2 3 4 5 6"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-secondary-strings-1" class="anchor" aria-hidden="true" href="#secondary-strings-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Secondary Strings&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-flatten-secondary-string" class="anchor" aria-hidden="true" href="#om-flatten-secondary-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-flatten &lt;code&gt;(secondary-string)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;secondary-string&lt;/code&gt;&lt;/strong&gt; with its first level unwrapped.
The unwrap operation will be done with &lt;a href="#om-unwrap-object-node"&gt;&lt;code&gt;om-unwrap&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; This (1 *2* 3 */4/* 5 /6/) is randomly formatted&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Remove first level of formatting&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-map-children (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-flatten))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "This (1 2 3 /4/ 5 6) is randomly formatted"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-flatten-types-deep-types-secondary-string" class="anchor" aria-hidden="true" href="#om-flatten-types-deep-types-secondary-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-flatten-types-deep &lt;code&gt;(types secondary-string)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;secondary-string&lt;/code&gt;&lt;/strong&gt; with object nodes in &lt;strong&gt;&lt;code&gt;types&lt;/code&gt;&lt;/strong&gt; unwrapped.
The unwrap operation will be done with &lt;a href="#om-unwrap-types-deep-types-object-node"&gt;&lt;code&gt;om-unwrap-types-deep&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; This (1 *2* 3 */4/* 5 /6/) is randomly formatted&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Remove italic formatting at any level&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-map-children* (om-flatten-types-deep '(&lt;span class="pl-c1"&gt;italic&lt;/span&gt;)
					      it))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "This (1 *2* 3 *4* 5 6) is randomly formatted"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-flatten-deep-secondary-string" class="anchor" aria-hidden="true" href="#om-flatten-deep-secondary-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-flatten-deep &lt;code&gt;(secondary-string)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;secondary-string&lt;/code&gt;&lt;/strong&gt; with all object nodes unwrapped to plain-text.
The unwrap operation will be done with &lt;a href="#om-unwrap-deep-object-node"&gt;&lt;code&gt;om-unwrap-deep&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; This (1 *2* 3 */4/* 5 /6/) is randomly formatted&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Remove italic formatting at any level&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-map-children (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-flatten-deep))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "This (1 2 3 4 5 6) is randomly formatted"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-headline-3" class="anchor" aria-hidden="true" href="#headline-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Headline&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-headline-get-node-properties-headline" class="anchor" aria-hidden="true" href="#om-headline-get-node-properties-headline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-headline-get-node-properties &lt;code&gt;(headline)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return a list of node-properties nodes in &lt;strong&gt;&lt;code&gt;headline&lt;/code&gt;&lt;/strong&gt; or nil if none.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; :PROPERTIES:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; :Effort:   1:00&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; :END:&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-headline-get-node-properties)
     (-map (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-to-trimmed-string)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; '(":Effort:   1:00")&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-headline-get-node-properties)
     (-map (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-to-trimmed-string)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-headline-get-properties-drawer-headline" class="anchor" aria-hidden="true" href="#om-headline-get-properties-drawer-headline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-headline-get-properties-drawer &lt;code&gt;(headline)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return the properties drawer node in &lt;strong&gt;&lt;code&gt;headline&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;If multiple are present (there shouldn't be) the first will be
returned.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; :PROPERTIES:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; :Effort:   1:00&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; :END:&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-headline-get-properties-drawer)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; ":PROPERTIES:&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      :Effort:   1:00&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      :END:"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-headline-get-properties-drawer)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; ""&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-headline-get-planning-headline" class="anchor" aria-hidden="true" href="#om-headline-get-planning-headline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-headline-get-planning &lt;code&gt;(headline)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return the planning node in &lt;strong&gt;&lt;code&gt;headline&lt;/code&gt;&lt;/strong&gt; or nil if none.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; CLOSED: [2019-01-01 Tue]&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-headline-get-planning)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "CLOSED: [2019-01-01 Tue]"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-headline-get-planning)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; ""&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-headline-get-subheadlines-headline" class="anchor" aria-hidden="true" href="#om-headline-get-subheadlines-headline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-headline-get-subheadlines &lt;code&gt;(headline)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return list of subheadline nodes for &lt;strong&gt;&lt;code&gt;headline&lt;/code&gt;&lt;/strong&gt; node or nil if none.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; sectional stuff&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** headline 2&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** headline 3&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-headline-get-subheadlines)
     (-map (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-to-trimmed-string)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; '("** headline 2" "** headline 3")&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; sectional stuff&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-headline-get-subheadlines)
     (-map (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-to-trimmed-string)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; nil&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-headline-get-section-headline" class="anchor" aria-hidden="true" href="#om-headline-get-section-headline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-headline-get-section &lt;code&gt;(headline)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return section node for headline &lt;strong&gt;&lt;code&gt;headline&lt;/code&gt;&lt;/strong&gt; node or nil if none.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; sectional stuff&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** headline 2&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** headline 3&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-headline-get-section)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "sectional stuff"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** headline 2&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** headline 3&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-headline-get-section)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; ""&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-headline-get-path-headline" class="anchor" aria-hidden="true" href="#om-headline-get-path-headline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-headline-get-path &lt;code&gt;(headline)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return tree path of &lt;strong&gt;&lt;code&gt;headline&lt;/code&gt;&lt;/strong&gt; node.&lt;/p&gt;
&lt;p&gt;The return value is a list of headline titles (including that from
&lt;strong&gt;&lt;code&gt;headline&lt;/code&gt;&lt;/strong&gt;) leading to the root node.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** two&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *** three&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-headline-get-subheadlines)
     (&lt;span class="pl-k"&gt;car&lt;/span&gt;)
     (om-headline-get-path))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; '("one" "two")&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** two&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *** three&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-headline-get-subheadlines)
     (&lt;span class="pl-k"&gt;car&lt;/span&gt;)
     (om-headline-get-subheadlines)
     (&lt;span class="pl-k"&gt;car&lt;/span&gt;)
     (om-headline-get-path))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; '("one" "two" "three")&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-headline-update-item-statistics-headline" class="anchor" aria-hidden="true" href="#om-headline-update-item-statistics-headline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-headline-update-item-statistics &lt;code&gt;(headline)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;headline&lt;/code&gt;&lt;/strong&gt; node with updated statistics cookie via items.&lt;/p&gt;
&lt;p&gt;The percent/fraction will be computed as the number of checked items
over the number of items with checkboxes (non-checkbox items will
not be considered).&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * statistically significant [/]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - irrelevant data&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - [ ] good data&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - [X] bad data&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-headline-update-item-statistics)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* statistically significant [1/2]&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - irrelevant data&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - [ ] good data&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - [X] bad data"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * statistically significant&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - irrelevant data&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - [ ] good data&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - [X] bad data&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Do nothing if nothing to update&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-headline-update-item-statistics)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* statistically significant&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - irrelevant data&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - [ ] good data&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - [X] bad data"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-headline-update-todo-statistics-headline" class="anchor" aria-hidden="true" href="#om-headline-update-todo-statistics-headline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-headline-update-todo-statistics &lt;code&gt;(headline)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;headline&lt;/code&gt;&lt;/strong&gt; node with updated statistics cookie via subheadlines.&lt;/p&gt;
&lt;p&gt;The percent/fraction will be computed as the number of done
subheadlines over the number of todo subheadlines (eg non-todo
subheadlines will not be counted).&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * statistically significant [/]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** irrelevant data&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** TODO good data&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** DONE bad data&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-headline-update-todo-statistics)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* statistically significant [1/2]&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** irrelevant data&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** TODO good data&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** DONE bad data"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * statistically significant&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** irrelevant data&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** TODO good data&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** DONE bad data&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Do nothing if nothing to update&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-headline-update-todo-statistics)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* statistically significant&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** irrelevant data&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** TODO good data&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** DONE bad data"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-headline-indent-subheadline-index-headline" class="anchor" aria-hidden="true" href="#om-headline-indent-subheadline-index-headline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-headline-indent-subheadline &lt;code&gt;(index headline)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;headline&lt;/code&gt;&lt;/strong&gt; node with child headline at &lt;strong&gt;&lt;code&gt;index&lt;/code&gt;&lt;/strong&gt; indented.
Unlike &lt;a href="#om-headline-indent-subtree-index-headline"&gt;&lt;code&gt;om-headline-indent-subtree&lt;/code&gt;&lt;/a&gt; this will not indent the
indented headline node's children.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** two&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** three&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *** four&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-element-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-headline-indent-subheadline &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
     (om-to-trimmed-string))
Error

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-element-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-headline-indent-subheadline &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      *** three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      *** four"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-headline-indent-subtree-index-headline" class="anchor" aria-hidden="true" href="#om-headline-indent-subtree-index-headline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-headline-indent-subtree &lt;code&gt;(index headline)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;headline&lt;/code&gt;&lt;/strong&gt; node with child headline at &lt;strong&gt;&lt;code&gt;index&lt;/code&gt;&lt;/strong&gt; indented.
Unlike &lt;a href="#om-headline-indent-subheadline-index-headline"&gt;&lt;code&gt;om-headline-indent-subheadline&lt;/code&gt;&lt;/a&gt; this will also indent the
indented headline node's children.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** two&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** three&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *** four&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-element-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-headline-indent-subtree &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      *** three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      **** four"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-headline-unindent-subheadline-index-child-index-headline" class="anchor" aria-hidden="true" href="#om-headline-unindent-subheadline-index-child-index-headline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-headline-unindent-subheadline &lt;code&gt;(index child-index headline)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;headline&lt;/code&gt;&lt;/strong&gt; node with a child headline under &lt;strong&gt;&lt;code&gt;index&lt;/code&gt;&lt;/strong&gt; unindented.
The specific child headline to unindent is selected by &lt;strong&gt;&lt;code&gt;child-index&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** two&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** three&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *** four&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *** four&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *** four&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-element-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-headline-unindent-subheadline &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      *** four&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** four&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      *** four"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-headline-unindent-all-subheadlines-index-headline" class="anchor" aria-hidden="true" href="#om-headline-unindent-all-subheadlines-index-headline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-headline-unindent-all-subheadlines &lt;code&gt;(index headline)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;headline&lt;/code&gt;&lt;/strong&gt; node with all child headlines under &lt;strong&gt;&lt;code&gt;index&lt;/code&gt;&lt;/strong&gt; unindented.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** two&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** three&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *** four&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *** four&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *** four&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-element-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-headline-unindent-all-subheadlines &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** four&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** four&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** four"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-plain-list-1" class="anchor" aria-hidden="true" href="#plain-list-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plain List&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-plain-list-set-type-type-plain-list" class="anchor" aria-hidden="true" href="#om-plain-list-set-type-type-plain-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-plain-list-set-type &lt;code&gt;(type plain-list)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;plain-list&lt;/code&gt;&lt;/strong&gt; node with type property set to &lt;strong&gt;&lt;code&gt;type&lt;/code&gt;&lt;/strong&gt;.
&lt;strong&gt;&lt;code&gt;type&lt;/code&gt;&lt;/strong&gt; is one of the symbols &lt;code&gt;unordered&lt;/code&gt; or &lt;code&gt;ordered&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - [ ] one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - [X] two&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-plain-list-set-type &lt;span class="pl-c1"&gt;'ordered&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "1. [ ] one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      2. [X] two"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; 1. [ ] one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; 2. [X] two&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-plain-list-set-type &lt;span class="pl-c1"&gt;'unordered&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "- [ ] one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - [X] two"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-plain-list-indent-item-index-plain-list" class="anchor" aria-hidden="true" href="#om-plain-list-indent-item-index-plain-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-plain-list-indent-item &lt;code&gt;(index plain-list)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;plain-list&lt;/code&gt;&lt;/strong&gt; node with child item at &lt;strong&gt;&lt;code&gt;index&lt;/code&gt;&lt;/strong&gt; indented.
Unlike &lt;code&gt;om-item-indent-item-tree&lt;/code&gt; this will not indent the indented
item node's children.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - two&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;   - three&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - four&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; It makes no sense to indent the first item&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-element-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-plain-list-indent-item &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
     (om-to-trimmed-string))
Error

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-element-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-plain-list-indent-item &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "- one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;        - two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;        - three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - four"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-element-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-plain-list-indent-item &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "- one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;        - three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;        - four"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-plain-list-indent-item-tree-index-plain-list" class="anchor" aria-hidden="true" href="#om-plain-list-indent-item-tree-index-plain-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-plain-list-indent-item-tree &lt;code&gt;(index plain-list)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;plain-list&lt;/code&gt;&lt;/strong&gt; node with child item at &lt;strong&gt;&lt;code&gt;index&lt;/code&gt;&lt;/strong&gt; indented.
Unlike &lt;code&gt;om-item-indent-item&lt;/code&gt; this will also indent the indented item
node's children.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - two&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;   - three&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - four&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-element-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-plain-list-indent-item-tree &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "- one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;        - two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;          - three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - four"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-plain-list-unindent-item-index-child-index-plain-list" class="anchor" aria-hidden="true" href="#om-plain-list-unindent-item-index-child-index-plain-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-plain-list-unindent-item &lt;code&gt;(index child-index plain-list)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;plain-list&lt;/code&gt;&lt;/strong&gt; node with a child item under &lt;strong&gt;&lt;code&gt;index&lt;/code&gt;&lt;/strong&gt; unindented.
The specific child item to unindent is selected by &lt;strong&gt;&lt;code&gt;child-index&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - two&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;   - three&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;   - three&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;   - three&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - four&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-element-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-plain-list-unindent-item &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "- one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;        - three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;        - three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - four"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-element-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-plain-list-unindent-item &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "- one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;        - three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;        - three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - four"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-element-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-plain-list-unindent-item &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "- one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;        - three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;        - three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;        - three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - four"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-plain-list-unindent-all-items-index-plain-list" class="anchor" aria-hidden="true" href="#om-plain-list-unindent-all-items-index-plain-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-plain-list-unindent-all-items &lt;code&gt;(index plain-list)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;plain-list&lt;/code&gt;&lt;/strong&gt; node with all child items under &lt;strong&gt;&lt;code&gt;index&lt;/code&gt;&lt;/strong&gt; unindented.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - two&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;   - three&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;   - three&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;   - three&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - four&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-element-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-plain-list-unindent-all-items &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "- one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - four"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-element-at &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-plain-list-unindent-all-items &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "- one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;        - three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;        - three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;        - three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - four"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-table-1" class="anchor" aria-hidden="true" href="#table-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-table-get-cell-row-index-column-index-table" class="anchor" aria-hidden="true" href="#om-table-get-cell-row-index-column-index-table"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-table-get-cell &lt;code&gt;(row-index column-index table)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return table-cell node at &lt;strong&gt;&lt;code&gt;row-index&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;column-index&lt;/code&gt;&lt;/strong&gt; in &lt;strong&gt;&lt;code&gt;table&lt;/code&gt;&lt;/strong&gt; node.
Rule-type rows do not count toward row indices.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; | 1 | 2 | 3 |&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; |---+---+---|&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; | a | b | c |&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-get-cell &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
     (om-get-children)
     (&lt;span class="pl-k"&gt;car&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "1"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-get-cell &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-get-children)
     (&lt;span class="pl-k"&gt;car&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "b"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-get-cell &lt;span class="pl-c1"&gt;-1&lt;/span&gt; &lt;span class="pl-c1"&gt;-1&lt;/span&gt;)
     (om-get-children)
     (&lt;span class="pl-k"&gt;car&lt;/span&gt;))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "c"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-table-delete-column-column-index-table" class="anchor" aria-hidden="true" href="#om-table-delete-column-column-index-table"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-table-delete-column &lt;code&gt;(column-index table)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;table&lt;/code&gt;&lt;/strong&gt; node with column at &lt;strong&gt;&lt;code&gt;column-index&lt;/code&gt;&lt;/strong&gt; deleted.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; | a | b |&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; |---+---|&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; | c | d |&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-delete-column &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| b |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      |---|&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | d |"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-delete-column &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| a |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      |---|&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | c |"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-delete-column &lt;span class="pl-c1"&gt;-1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| a |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      |---|&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | c |"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-table-delete-row-row-index-table" class="anchor" aria-hidden="true" href="#om-table-delete-row-row-index-table"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-table-delete-row &lt;code&gt;(row-index table)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;table&lt;/code&gt;&lt;/strong&gt; node with row at &lt;strong&gt;&lt;code&gt;row-index&lt;/code&gt;&lt;/strong&gt; deleted.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; | a | b |&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; |---+---|&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; | c | d |&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-delete-row &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "|---+---|&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | c | d |"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-delete-row &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| a | b |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | c | d |"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-delete-row &lt;span class="pl-c1"&gt;-1&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| a | b |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      |---+---|"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-table-insert-column-column-index-column-text-table" class="anchor" aria-hidden="true" href="#om-table-insert-column-column-index-column-text-table"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-table-insert-column! &lt;code&gt;(column-index column-text table)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;table&lt;/code&gt;&lt;/strong&gt; node with &lt;strong&gt;&lt;code&gt;column-text&lt;/code&gt;&lt;/strong&gt; inserted at &lt;strong&gt;&lt;code&gt;column-index&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;column-index&lt;/code&gt;&lt;/strong&gt; is the index of the column and &lt;strong&gt;&lt;code&gt;column-text&lt;/code&gt;&lt;/strong&gt; is a list of
strings to be made into table-cells to be inserted following the same
syntax as &lt;a href="#om-build-table-cell-string"&gt;&lt;code&gt;om-build-table-cell!&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; | a | b |&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; |---+---|&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; | c | d |&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-insert-column! &lt;span class="pl-c1"&gt;1&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;y&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| a | x | b |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      |---+---+---|&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | c | y | d |"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-insert-column! &lt;span class="pl-c1"&gt;-1&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;y&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| a | b | x |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      |---+---+---|&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | c | d | y |"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-table-insert-row-row-index-row-text-table" class="anchor" aria-hidden="true" href="#om-table-insert-row-row-index-row-text-table"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-table-insert-row! &lt;code&gt;(row-index row-text table)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;table&lt;/code&gt;&lt;/strong&gt; node with &lt;strong&gt;&lt;code&gt;row-text&lt;/code&gt;&lt;/strong&gt; inserted at &lt;strong&gt;&lt;code&gt;row-index&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;row-index&lt;/code&gt;&lt;/strong&gt; is the index of the column and &lt;strong&gt;&lt;code&gt;row-text&lt;/code&gt;&lt;/strong&gt; is a list of strings
to be made into table-cells to be inserted following the same syntax
as &lt;a href="#om-build-table-row-row-list"&gt;&lt;code&gt;om-build-table-row!&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; | a | b |&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; |---+---|&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; | c | d |&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-insert-row! &lt;span class="pl-c1"&gt;1&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;y&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| a | b |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | x | y |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      |---+---|&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | c | d |"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-insert-row! &lt;span class="pl-c1"&gt;2&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;y&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| a | b |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      |---+---|&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | x | y |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | c | d |"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-insert-row! &lt;span class="pl-c1"&gt;-1&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;y&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| a | b |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      |---+---|&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | c | d |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | x | y |"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-table-replace-cell-row-index-column-index-cell-text-table" class="anchor" aria-hidden="true" href="#om-table-replace-cell-row-index-column-index-cell-text-table"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-table-replace-cell! &lt;code&gt;(row-index column-index cell-text table)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;table&lt;/code&gt;&lt;/strong&gt; node with a table-cell node replaced by &lt;strong&gt;&lt;code&gt;cell-text&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;strong&gt;&lt;code&gt;cell-text&lt;/code&gt;&lt;/strong&gt; is a string, it will replace the children of the
table-cell at &lt;strong&gt;&lt;code&gt;row-index&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;column-index&lt;/code&gt;&lt;/strong&gt; in &lt;strong&gt;&lt;code&gt;table&lt;/code&gt;&lt;/strong&gt;. &lt;strong&gt;&lt;code&gt;cell-text&lt;/code&gt;&lt;/strong&gt; will be
processed the same as the argument given to &lt;a href="#om-build-table-cell-string"&gt;&lt;code&gt;om-build-table-cell!&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;strong&gt;&lt;code&gt;cell-text&lt;/code&gt;&lt;/strong&gt; is nil, it will set the cell to an empty string.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; | 1 | 2 |&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; |---+---|&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; | a | b |&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-replace-cell! &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| 2 | 2 |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      |---+---|&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | a | b |"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-replace-cell! &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "|   | 2 |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      |---+---|&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | a | b |"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-replace-cell! &lt;span class="pl-c1"&gt;-1&lt;/span&gt; &lt;span class="pl-c1"&gt;-1&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;B&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| 1 | 2 |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      |---+---|&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | a | B |"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-table-replace-column-column-index-column-text-table" class="anchor" aria-hidden="true" href="#om-table-replace-column-column-index-column-text-table"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-table-replace-column! &lt;code&gt;(column-index column-text table)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;table&lt;/code&gt;&lt;/strong&gt; node with the column at &lt;strong&gt;&lt;code&gt;column-index&lt;/code&gt;&lt;/strong&gt; replaced by &lt;strong&gt;&lt;code&gt;column-text&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;strong&gt;&lt;code&gt;column-text&lt;/code&gt;&lt;/strong&gt; is a list of strings, it will replace the table-cells
at &lt;strong&gt;&lt;code&gt;column-index&lt;/code&gt;&lt;/strong&gt;. Each member of &lt;strong&gt;&lt;code&gt;column-text&lt;/code&gt;&lt;/strong&gt; will be processed the
same as the argument given to &lt;a href="#om-build-table-cell-string"&gt;&lt;code&gt;om-build-table-cell!&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;strong&gt;&lt;code&gt;column-text&lt;/code&gt;&lt;/strong&gt; is nil, it will clear all cells at &lt;strong&gt;&lt;code&gt;column-index&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; | a | b |&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; |---+---|&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; | c | d |&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-replace-column! &lt;span class="pl-c1"&gt;0&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;B&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| A | b |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      |---+---|&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | B | d |"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-replace-column! &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "|   | b |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      |---+---|&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      |   | d |"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-replace-column! &lt;span class="pl-c1"&gt;-1&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;B&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| a | A |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      |---+---|&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | c | B |"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-table-replace-row-row-index-row-text-table" class="anchor" aria-hidden="true" href="#om-table-replace-row-row-index-row-text-table"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-table-replace-row! &lt;code&gt;(row-index row-text table)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;table&lt;/code&gt;&lt;/strong&gt; node with the row at &lt;strong&gt;&lt;code&gt;row-index&lt;/code&gt;&lt;/strong&gt; replaced by &lt;strong&gt;&lt;code&gt;row-text&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;strong&gt;&lt;code&gt;row-text&lt;/code&gt;&lt;/strong&gt; is a list of strings, it will replace the cells at
&lt;strong&gt;&lt;code&gt;row-index&lt;/code&gt;&lt;/strong&gt;. Each member of &lt;strong&gt;&lt;code&gt;row-text&lt;/code&gt;&lt;/strong&gt; will be processed the same as
the argument given to &lt;a href="#om-build-table-row-row-list"&gt;&lt;code&gt;om-build-table-row!&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;strong&gt;&lt;code&gt;row-text&lt;/code&gt;&lt;/strong&gt; is nil, it will clear all cells at &lt;strong&gt;&lt;code&gt;row-index&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; | a | b |&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; |---+---|&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; | c | d |&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-replace-row! &lt;span class="pl-c1"&gt;0&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;B&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| A | B |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      |---+---|&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | c | d |"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-replace-row! &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "|   |   |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      |---+---|&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | c | d |"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-table-replace-row! &lt;span class="pl-c1"&gt;-1&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;B&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "| a | b |&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      |---+---|&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      | A | B |"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-node-matching-1" class="anchor" aria-hidden="true" href="#node-matching-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Node Matching&lt;/h2&gt;
&lt;p&gt;Use pattern-matching to selectively perform operations on nodes in trees.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-om-match-pattern-node" class="anchor" aria-hidden="true" href="#om-match-pattern-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-match &lt;code&gt;(pattern node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return a list of child nodes matching &lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt; in &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt; is a list like &lt;code&gt;([slicer [arg1] [arg2]] [pnode] sub1 [sub2 ...])&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;slicer&lt;/code&gt; is an optional prefix to the pattern describing how many
and which matches to return. If not given, all matches are returned.
Possible values are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:first&lt;/code&gt; - return the first match&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:last&lt;/code&gt; - return the last match&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:nth&lt;/code&gt; &lt;code&gt;arg1&lt;/code&gt; - return the nth match where &lt;code&gt;arg1&lt;/code&gt; is an integer denoting
the index to return (starting at 0). &lt;code&gt;arg1&lt;/code&gt; may be a negative number
to start counting at the end of the match list, in which case -1 is
the last index. Using 0 and -1 for &lt;code&gt;arg1&lt;/code&gt; is equivalent to using
&lt;code&gt;:first&lt;/code&gt; and &lt;code&gt;:last&lt;/code&gt; respectively&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:sub&lt;/code&gt; &lt;code&gt;arg1&lt;/code&gt; &lt;code&gt;arg2&lt;/code&gt; - return a sublist between indices &lt;code&gt;arg1&lt;/code&gt; and &lt;code&gt;arg2&lt;/code&gt;.
&lt;code&gt;arg1&lt;/code&gt; may not be greater than &lt;code&gt;arg2&lt;/code&gt;, and both must either be
non-negative integers or negative integers. In the case of negative
integers, the indices refer to the same counterparts as described in
&lt;code&gt;:nth&lt;/code&gt;. If &lt;code&gt;arg1&lt;/code&gt; and &lt;code&gt;arg2&lt;/code&gt; are equal, this slicer has the same
behavior as &lt;code&gt;:nth&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;pnode&lt;/code&gt; is an optional literal node to be matched. If given, the
matching process will start within &lt;code&gt;pnode&lt;/code&gt; wherever it happens to be in
&lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt;. This is useful for 'reusing' previous matches without repeating
the same pattern.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;subx&lt;/code&gt; denotes subpatterns that that match nodes in the parse tree.
Subpatterns may either be wildcards or conditions.&lt;/p&gt;
&lt;p&gt;Conditions match exactly one level of the node tree being searched
based on the node's type (the symbol returned by &lt;a href="#om-get-type-node"&gt;&lt;code&gt;om-get-type&lt;/code&gt;&lt;/a&gt;),
properties (the value returned by &lt;a href="#om-get-property-prop-node"&gt;&lt;code&gt;om-get-property&lt;/code&gt;&lt;/a&gt; for a valid
property keyword), and index (the position of the node in the list
returned by &lt;a href="#om-get-children-branch-node"&gt;&lt;code&gt;om-get-children&lt;/code&gt;&lt;/a&gt;). For index, both left indices (where
zero refers to the left end of the list) and right indices (where -1
refers to the right end of the list) are understood. Conditions may
either be atomic or compound, where compound conditions are themselves
composed of atomic or compound conditions.&lt;/p&gt;
&lt;p&gt;The types of atomic conditions are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;type&lt;/code&gt; - match when the node's type is &lt;code&gt;eq&lt;/code&gt; to &lt;code&gt;type&lt;/code&gt; (a symbol)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;index&lt;/code&gt; - match when the node's index is &lt;code&gt;=&lt;/code&gt; to &lt;code&gt;index&lt;/code&gt; (an integer)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(op index)&lt;/code&gt; - match when &lt;code&gt;(op node-index index)&lt;/code&gt; returns t. &lt;code&gt;op&lt;/code&gt; is
one of &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, or &lt;code&gt;&amp;gt;=&lt;/code&gt; and &lt;code&gt;node-index&lt;/code&gt; is the index of the
node being evaluated&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(prop val)&lt;/code&gt; - match nodes whose property &lt;code&gt;prop&lt;/code&gt; (a keyword) is &lt;code&gt;equal&lt;/code&gt;
to &lt;code&gt;val&lt;/code&gt;; &lt;code&gt;val&lt;/code&gt; is obtained by evaluating &lt;a href="#om-get-property-prop-node"&gt;&lt;code&gt;om-get-property&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;prop&lt;/code&gt;
and the current node; if &lt;code&gt;prop&lt;/code&gt; is invalid, an error will be thrown&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(:pred pred)&lt;/code&gt; - match when &lt;code&gt;pred&lt;/code&gt; evaluates to t; &lt;code&gt;pred&lt;/code&gt; is a symbol for
a unary function that takes the current node as its argument&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Compound conditions start with an operator followed by their component
conditions. In the syntax below, &lt;code&gt;cx&lt;/code&gt; refers to a condition. The types
of compound conditions are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;(:and c1 c2 [c3 ...])&lt;/code&gt; - match when all conditions are true&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(:or c1 c2 [c3 ...])&lt;/code&gt; - match when at least one condition is true&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(:not c)&lt;/code&gt; - match when condition is not true&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition to conditions, &lt;code&gt;subx&lt;/code&gt; may be a wildcard keyword to match
nodes independent of their type, properties, and index. The types of
wildcards are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:any&lt;/code&gt; - always match exactly one node&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:many&lt;/code&gt; &lt;code&gt;sub&lt;/code&gt; - match &lt;code&gt;sub&lt;/code&gt; to nodes that are zero or more levels down
in the tree; &lt;code&gt;sub&lt;/code&gt; is a subpattern of either a condition or the &lt;code&gt;:any&lt;/code&gt;
wildcard; only one subpattern is allowed after &lt;code&gt;:many&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:many!&lt;/code&gt; &lt;code&gt;sub&lt;/code&gt; - like &lt;code&gt;:many&lt;/code&gt; but do not match within other matches&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** TODO headline 2&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; stuff&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - item 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - item 2&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - item 3&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** DONE headline 3&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - item 4&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - item 5&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - item 6&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** TODO COMMENT headline 4&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - item 7&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - item 8&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - item 9&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Match items (excluding the first) in headlines that are marked "TODO" and not&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; commented. The :many keyword matches the section and plain-list nodes holding&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; the items.&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-match '((&lt;span class="pl-c1"&gt;:and&lt;/span&gt; (&lt;span class="pl-c1"&gt;:todo-keyword&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;TODO&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
			     (&lt;span class="pl-c1"&gt;:commentedp&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;))
		       &lt;span class="pl-c1"&gt;:many&lt;/span&gt; (&lt;span class="pl-c1"&gt;:and&lt;/span&gt; item (&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;))))
     (-map (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-to-trimmed-string)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; '("- item 2" "- item 3")&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *one* *two* *three* *four* *five* *six*&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return all bold nodes&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-match '(&lt;span class="pl-c1"&gt;bold&lt;/span&gt;))
     (-map (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-to-trimmed-string)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; '("*one*" "*two*" "*three*" "*four*" "*five*" "*six*")&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return first bold node&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-match '(&lt;span class="pl-c1"&gt;:first&lt;/span&gt; &lt;span class="pl-c1"&gt;bold&lt;/span&gt;))
     (-map (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-to-trimmed-string)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; '("*one*")&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return last bold node&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-match '(&lt;span class="pl-c1"&gt;:last&lt;/span&gt; &lt;span class="pl-c1"&gt;bold&lt;/span&gt;))
     (-map (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-to-trimmed-string)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; '("*six*")&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return a select bold node&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-match '(&lt;span class="pl-c1"&gt;:nth&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-c1"&gt;bold&lt;/span&gt;))
     (-map (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-to-trimmed-string)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; '("*three*")&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Return a sublist of matched bold nodes&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-match '(&lt;span class="pl-c1"&gt;:sub&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; &lt;span class="pl-c1"&gt;bold&lt;/span&gt;))
     (-map (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-to-trimmed-string)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; '("*two*" "*three*" "*four*")&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-match-delete-pattern-node" class="anchor" aria-hidden="true" href="#om-match-delete-pattern-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-match-delete &lt;code&gt;(pattern node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; without children matching &lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt; follows the same rules as &lt;a href="#om-match-pattern-node"&gt;&lt;code&gt;om-match&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** headline two&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** headline three&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** headline four&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Selectively delete headlines&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-match-delete '(headline))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* headline one"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-match-delete '(&lt;span class="pl-c1"&gt;:first&lt;/span&gt; headline))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* headline one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** headline three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** headline four"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-match-delete '(&lt;span class="pl-c1"&gt;:last&lt;/span&gt; headline))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* headline one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** headline two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** headline three"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-match-extract-pattern-node" class="anchor" aria-hidden="true" href="#om-match-extract-pattern-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-match-extract &lt;code&gt;(pattern node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Remove nodes matching &lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt; from &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt;.
Return cons cell where the car is a list of all removed nodes and
the cdr is the modified &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt; follows the same rules as &lt;a href="#om-match-pattern-node"&gt;&lt;code&gt;om-match&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; pull me /under/&lt;/span&gt;

(--&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-match-extract '(&lt;span class="pl-c1"&gt;:many&lt;/span&gt; &lt;span class="pl-c1"&gt;italic&lt;/span&gt;)
		       it)
     (&lt;span class="pl-k"&gt;cons&lt;/span&gt; (-map (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-to-trimmed-string)
		 (&lt;span class="pl-k"&gt;car&lt;/span&gt; it))
	   (om-to-trimmed-string (&lt;span class="pl-k"&gt;cdr&lt;/span&gt; it))))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; '(("/under/") . "pull me")&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-match-map-pattern-fun-node" class="anchor" aria-hidden="true" href="#om-match-map-pattern-fun-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-match-map &lt;code&gt;(pattern fun node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; with &lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt; applied to children matching &lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt;.
&lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt; is a unary function that takes a node and returns a new node
which will replace the original.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt; follows the same rules as &lt;a href="#om-match-pattern-node"&gt;&lt;code&gt;om-match&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** TODO headline two&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** headline three&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** headline four&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Selectively mark headlines as DONE&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-match-map '(headline)
		   (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; (&lt;span class="pl-v"&gt;it&lt;/span&gt;)
		     (om-set-property &lt;span class="pl-c1"&gt;:todo-keyword&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DONE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; it)))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* headline one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** DONE headline two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** DONE headline three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** DONE headline four"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-match-map* '(&lt;span class="pl-c1"&gt;:first&lt;/span&gt; headline)
		    (om-set-property &lt;span class="pl-c1"&gt;:todo-keyword&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DONE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; it))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* headline one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** DONE headline two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** headline three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** headline four"&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-match-map '(&lt;span class="pl-c1"&gt;:last&lt;/span&gt; headline)
		   (-partial (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-set-property)
			     &lt;span class="pl-c1"&gt;:todo-keyword&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DONE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* headline one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** TODO headline two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** headline three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** DONE headline four"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * headline&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; :PROPERTIES:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; :Effort:   0:30&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; :END:&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Match the literal property-drawer node and map the node-property inside if&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; the property-drawer exists&lt;/span&gt;
(&lt;span class="pl-k"&gt;let&lt;/span&gt; ((hl (om-parse-this-headline)))
  (-if-let (pd (om-headline-get-properties-drawer hl))
      (-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; hl (om-match-map* (&lt;span class="pl-cce"&gt;\`&lt;/span&gt; ((&lt;span class="pl-cce"&gt;\,&lt;/span&gt; pd)
				  node-property))
			     (om-set-property &lt;span class="pl-c1"&gt;:value&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1:30&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; it))
	   (om-to-trimmed-string))
    (&lt;span class="pl-k"&gt;print&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;...or do something else if no drawer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* headline&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      :PROPERTIES:&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      :Effort:   1:30&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      :END:"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-match-mapcat-pattern-fun-node" class="anchor" aria-hidden="true" href="#om-match-mapcat-pattern-fun-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-match-mapcat &lt;code&gt;(pattern fun node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; with &lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt; applied to children matching &lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt;.
&lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt; is a unary function that takes a node and returns a list of new
nodes which will be spliced in place of the original node.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt; follows the same rules as &lt;a href="#om-match-pattern-node"&gt;&lt;code&gt;om-match&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** two&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-match-mapcat* '(&lt;span class="pl-c1"&gt;:first&lt;/span&gt; headline)
		       (&lt;span class="pl-k"&gt;list&lt;/span&gt; (om-build-headline! &lt;span class="pl-c1"&gt;:title-text&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.5&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:level&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
			     it))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** 1.5&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** two"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-match-replace-pattern-node-node" class="anchor" aria-hidden="true" href="#om-match-replace-pattern-node-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-match-replace &lt;code&gt;(pattern node* node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; with &lt;strong&gt;&lt;code&gt;node*&lt;/code&gt;&lt;/strong&gt; in place of children matching &lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt; follows the same rules as &lt;a href="#om-match-pattern-node"&gt;&lt;code&gt;om-match&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *1* 2 *3* 4 *5* 6 *7* 8 *9* 10&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-element)
     (om-match-replace '(&lt;span class="pl-c1"&gt;:many&lt;/span&gt; &lt;span class="pl-c1"&gt;bold&lt;/span&gt;)
       (om-build-bold &lt;span class="pl-c1"&gt;:post-blank&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "*0* 2 *0* 4 *0* 6 *0* 8 *0* 10"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-match-insert-before-pattern-node-node" class="anchor" aria-hidden="true" href="#om-match-insert-before-pattern-node-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-match-insert-before &lt;code&gt;(pattern node* node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; with &lt;strong&gt;&lt;code&gt;node*&lt;/code&gt;&lt;/strong&gt; inserted before children matching &lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt; follows the same rules as &lt;a href="#om-match-pattern-node"&gt;&lt;code&gt;om-match&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** two&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** three&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-match-insert-before '(headline)
       (om-build-headline! &lt;span class="pl-c1"&gt;:title-text&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:level&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** new&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** new&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** three"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-match-insert-after-pattern-node-node" class="anchor" aria-hidden="true" href="#om-match-insert-after-pattern-node-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-match-insert-after &lt;code&gt;(pattern node* node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; with &lt;strong&gt;&lt;code&gt;node*&lt;/code&gt;&lt;/strong&gt; inserted after children matching &lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt; follows the same rules as &lt;a href="#om-match-pattern-node"&gt;&lt;code&gt;om-match&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** two&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** three&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-match-insert-after '(headline)
       (om-build-headline! &lt;span class="pl-c1"&gt;:title-text&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:level&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** new&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** new"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-match-insert-within-pattern-index-node-node" class="anchor" aria-hidden="true" href="#om-match-insert-within-pattern-index-node-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-match-insert-within &lt;code&gt;(pattern index node* node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; with &lt;strong&gt;&lt;code&gt;node*&lt;/code&gt;&lt;/strong&gt; inserted at &lt;strong&gt;&lt;code&gt;index&lt;/code&gt;&lt;/strong&gt; in children matching &lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt; follows the same rules as &lt;a href="#om-match-pattern-node"&gt;&lt;code&gt;om-match&lt;/code&gt;&lt;/a&gt; with the exception
that &lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt; may be nil. In this case &lt;strong&gt;&lt;code&gt;node*&lt;/code&gt;&lt;/strong&gt; will be inserted at &lt;strong&gt;&lt;code&gt;index&lt;/code&gt;&lt;/strong&gt;
in the immediate, top level children of &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** two&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** three&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-match-insert-within '(headline)
	 &lt;span class="pl-c1"&gt;0&lt;/span&gt; (om-build-headline! &lt;span class="pl-c1"&gt;:title-text&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:level&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      *** new&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      *** new"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; The nil pattern denotes top-level element&lt;/span&gt;
(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
     (om-match-insert-within &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; (om-build-headline! &lt;span class="pl-c1"&gt;:title-text&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:level&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;))
     (om-to-trimmed-string))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** new&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** three"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-match-splice-pattern-nodes-node" class="anchor" aria-hidden="true" href="#om-match-splice-pattern-nodes-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-match-splice &lt;code&gt;(pattern nodes* node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; with &lt;strong&gt;&lt;code&gt;nodes*&lt;/code&gt;&lt;/strong&gt; spliced in place of children matching &lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt;.
&lt;strong&gt;&lt;code&gt;nodes*&lt;/code&gt;&lt;/strong&gt; is a list of nodes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt; follows the same rules as &lt;a href="#om-match-pattern-node"&gt;&lt;code&gt;om-match&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** two&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** three&lt;/span&gt;

(&lt;span class="pl-k"&gt;let&lt;/span&gt; ((L (&lt;span class="pl-k"&gt;list&lt;/span&gt; (om-build-headline! &lt;span class="pl-c1"&gt;:title-text&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:level&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
	       (om-build-headline! &lt;span class="pl-c1"&gt;:title-text&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:level&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;))))
  (-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
       (om-match-splice '(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)
	 L)
       (om-to-trimmed-string)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** new0&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** new1&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** three"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-match-splice-before-pattern-nodes-node" class="anchor" aria-hidden="true" href="#om-match-splice-before-pattern-nodes-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-match-splice-before &lt;code&gt;(pattern nodes* node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; with &lt;strong&gt;&lt;code&gt;nodes*&lt;/code&gt;&lt;/strong&gt; spliced before children matching &lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt;.
&lt;strong&gt;&lt;code&gt;nodes*&lt;/code&gt;&lt;/strong&gt; is a list of nodes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt; follows the same rules as &lt;a href="#om-match-pattern-node"&gt;&lt;code&gt;om-match&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** two&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** three&lt;/span&gt;

(&lt;span class="pl-k"&gt;let&lt;/span&gt; ((L (&lt;span class="pl-k"&gt;list&lt;/span&gt; (om-build-headline! &lt;span class="pl-c1"&gt;:title-text&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:level&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
	       (om-build-headline! &lt;span class="pl-c1"&gt;:title-text&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:level&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;))))
  (-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
       (om-match-splice-before '(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)
	 L)
       (om-to-trimmed-string)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** new0&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** new1&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** three"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-match-splice-after-pattern-nodes-node" class="anchor" aria-hidden="true" href="#om-match-splice-after-pattern-nodes-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-match-splice-after &lt;code&gt;(pattern nodes* node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; with &lt;strong&gt;&lt;code&gt;nodes*&lt;/code&gt;&lt;/strong&gt; spliced after children matching &lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt;.
&lt;strong&gt;&lt;code&gt;nodes*&lt;/code&gt;&lt;/strong&gt; is a list of nodes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt; follows the same rules as &lt;a href="#om-match-pattern-node"&gt;&lt;code&gt;om-match&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** two&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** three&lt;/span&gt;

(&lt;span class="pl-k"&gt;let&lt;/span&gt; ((L (&lt;span class="pl-k"&gt;list&lt;/span&gt; (om-build-headline! &lt;span class="pl-c1"&gt;:title-text&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:level&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
	       (om-build-headline! &lt;span class="pl-c1"&gt;:title-text&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:level&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;))))
  (-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
       (om-match-splice-after '(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)
	 L)
       (om-to-trimmed-string)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** new0&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** new1&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** three"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-match-splice-within-pattern-index-nodes-node" class="anchor" aria-hidden="true" href="#om-match-splice-within-pattern-index-nodes-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-match-splice-within &lt;code&gt;(pattern index nodes* node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; with &lt;strong&gt;&lt;code&gt;nodes*&lt;/code&gt;&lt;/strong&gt; spliced at &lt;strong&gt;&lt;code&gt;index&lt;/code&gt;&lt;/strong&gt; in children matching &lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt;.
&lt;strong&gt;&lt;code&gt;nodes*&lt;/code&gt;&lt;/strong&gt; is a list of nodes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt; follows the same rules as &lt;a href="#om-match-pattern-node"&gt;&lt;code&gt;om-match&lt;/code&gt;&lt;/a&gt; with the exception
that &lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt; may be nil. In this case &lt;strong&gt;&lt;code&gt;nodes*&lt;/code&gt;&lt;/strong&gt; will be inserted at &lt;strong&gt;&lt;code&gt;index&lt;/code&gt;&lt;/strong&gt;
in the immediate, top level children of &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** two&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** three&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; *** four&lt;/span&gt;

(&lt;span class="pl-k"&gt;let&lt;/span&gt; ((L (&lt;span class="pl-k"&gt;list&lt;/span&gt; (om-build-headline! &lt;span class="pl-c1"&gt;:title-text&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:level&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;)
	       (om-build-headline! &lt;span class="pl-c1"&gt;:title-text&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:level&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;))))
  (-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
       (om-match-splice-within '(headline)
	   &lt;span class="pl-c1"&gt;0&lt;/span&gt; L)
       (om-to-trimmed-string)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      *** new0&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      *** new1&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      *** new0&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      *** new1&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      *** four"&lt;/span&gt;

(&lt;span class="pl-k"&gt;let&lt;/span&gt; ((L (&lt;span class="pl-k"&gt;list&lt;/span&gt; (om-build-headline! &lt;span class="pl-c1"&gt;:title-text&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:level&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
	       (om-build-headline! &lt;span class="pl-c1"&gt;:title-text&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:level&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;))))
  (-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-subtree)
       (om-match-splice-within &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; L)
       (om-to-trimmed-string)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt; "* one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** new0&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** new1&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      *** four"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-match-do-pattern-fun-node" class="anchor" aria-hidden="true" href="#om-match-do-pattern-fun-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-match-do &lt;code&gt;(pattern fun node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Like &lt;a href="#om-match-map-pattern-fun-node"&gt;&lt;code&gt;om-match-map&lt;/code&gt;&lt;/a&gt; but for side effects only.
&lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt; is a unary function that has side effects and is applied to the
matches from &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; using &lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt;. This function itself returns nil.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pattern&lt;/code&gt;&lt;/strong&gt; follows the same rules as &lt;a href="#om-match-pattern-node"&gt;&lt;code&gt;om-match&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;no examples :(&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-buffer-side-effects-1" class="anchor" aria-hidden="true" href="#buffer-side-effects-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Buffer Side Effects&lt;/h2&gt;
&lt;p&gt;Map node manipulations into buffers.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-insert-1" class="anchor" aria-hidden="true" href="#insert-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Insert&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-insert-point-node" class="anchor" aria-hidden="true" href="#om-insert-point-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-insert &lt;code&gt;(point node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Convert &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; to a string and insert at &lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; in the current buffer.
Return &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; &lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-headline! &lt;span class="pl-c1"&gt;:title-text&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-insert (&lt;span class="pl-c1"&gt;point-max&lt;/span&gt;)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Output these buffer contents&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; $&amp;gt; "* one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      * two"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; a *game* or a /boy/&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-build-paragraph! &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;we don't care if you're&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     (om-insert (&lt;span class="pl-c1"&gt;point-min&lt;/span&gt;)))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Output these buffer contents&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; $&amp;gt; "we don't care if you're&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      a *game* or a /boy/"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-insert-tail-point-node" class="anchor" aria-hidden="true" href="#om-insert-tail-point-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-insert-tail &lt;code&gt;(point node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Like &lt;a href="#om-insert-point-node"&gt;&lt;code&gt;om-insert&lt;/code&gt;&lt;/a&gt; but insert &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; at &lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; and move to end of insertion.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;no examples :(&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-update-1" class="anchor" aria-hidden="true" href="#update-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-update-fun-node" class="anchor" aria-hidden="true" href="#om-update-fun-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-update &lt;code&gt;(fun node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Replace &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; in the current buffer with a new one.
&lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt; is a unary function that takes &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; and returns a modified &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt;.
This modified node is then written in place of the old node in the
current buffer.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * TODO win grammy&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-update (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; (&lt;span class="pl-v"&gt;hl&lt;/span&gt;)
		  (om-set-property &lt;span class="pl-c1"&gt;:todo-keyword&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DONE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; hl))))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Output these buffer contents&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; $&amp;gt; "* DONE win grammy"&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * win grammy [0/0]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - [ ] write punk song&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - [ ] get new vocalist&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - [ ] sell 2 singles&lt;/span&gt;

(-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-parse-this-headline)
     (om-update* (-&amp;gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (om-match-map '(&lt;span class="pl-c1"&gt;:many&lt;/span&gt; item)
				    (&lt;span class="pl-k"&gt;function&lt;/span&gt; om-item-toggle-checkbox)
				    it)
		      (om-headline-update-item-statistics))))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Output these buffer contents&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; $&amp;gt; "* win grammy [3/3]&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - [X] write punk song&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - [X] get new vocalist&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      - [X] sell 2 singles"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-update-object-at-point-fun" class="anchor" aria-hidden="true" href="#om-update-object-at-point-fun"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-update-object-at &lt;code&gt;(point fun)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Update object under &lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; using &lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt;.
&lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt; takes an object and returns a modified object&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; [[http://example.com][desc]]&lt;/span&gt;

(om-update-object-at* (&lt;span class="pl-c1"&gt;point&lt;/span&gt;)
  (om-set-property &lt;span class="pl-c1"&gt;:path&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;//buymoreram.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; it))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Output these buffer contents&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; $&amp;gt; "[[http://buymoreram.com][desc]]"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-update-element-at-point-fun" class="anchor" aria-hidden="true" href="#om-update-element-at-point-fun"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-update-element-at &lt;code&gt;(point fun)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Update element under &lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; using &lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt;.
&lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt; takes an element and returns a modified element&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; #+CALL: ktulu()&lt;/span&gt;

(om-update-element-at* (&lt;span class="pl-c1"&gt;point&lt;/span&gt;)
  (om-set-properties (&lt;span class="pl-k"&gt;list&lt;/span&gt; &lt;span class="pl-c1"&gt;:call&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cthulhu&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:inside-header&lt;/span&gt; '(&lt;span class="pl-c1"&gt;:cache&lt;/span&gt; no)
			    &lt;span class="pl-c1"&gt;:arguments&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x=4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
			    &lt;span class="pl-c1"&gt;:end-header&lt;/span&gt; '(&lt;span class="pl-c1"&gt;:results&lt;/span&gt; html))
		     it))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Output these buffer contents&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; $&amp;gt; "#+CALL: cthulhu[:cache no](x=4) :results html"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-update-table-row-at-point-fun" class="anchor" aria-hidden="true" href="#om-update-table-row-at-point-fun"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-update-table-row-at &lt;code&gt;(point fun)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Update table-row under &lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; using &lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt;.
&lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt; takes an table-row and returns a modified table-row&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; | a | b |&lt;/span&gt;

(om-update-table-row-at* (&lt;span class="pl-c1"&gt;point&lt;/span&gt;)
  (om-map-children* (&lt;span class="pl-k"&gt;cons&lt;/span&gt; (om-build-table-cell! &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
			  it)
		    it))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Output these buffer contents&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; $&amp;gt; "| 0 | a | b |"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-update-item-at-point-fun" class="anchor" aria-hidden="true" href="#om-update-item-at-point-fun"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-update-item-at &lt;code&gt;(point fun)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Update item under &lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; using &lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt;.
&lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt; takes an item and returns a modified item&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; - [ ] thing&lt;/span&gt;

(om-update-item-at* (&lt;span class="pl-c1"&gt;point&lt;/span&gt;)
  (om-item-toggle-checkbox it))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Output these buffer contents&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; $&amp;gt; "- [X] thing"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-update-headline-at-point-fun" class="anchor" aria-hidden="true" href="#om-update-headline-at-point-fun"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-update-headline-at &lt;code&gt;(point fun)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Update headline under &lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; using &lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt;.
&lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt; takes an headline and returns a modified headline&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * TODO might get done&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * DONE no need to update&lt;/span&gt;

(om-update-headline-at* (&lt;span class="pl-c1"&gt;point&lt;/span&gt;)
  (om-set-property &lt;span class="pl-c1"&gt;:todo-keyword&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DONE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; it))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Output these buffer contents&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; $&amp;gt; "* DONE might get done&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      * DONE no need to update"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-update-subtree-at-point-fun" class="anchor" aria-hidden="true" href="#om-update-subtree-at-point-fun"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-update-subtree-at &lt;code&gt;(point fun)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Update subtree under &lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; using &lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt;.
&lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt; takes an subtree and returns a modified subtree&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * one&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** two&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; ** three&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * not updated&lt;/span&gt;

(om-update-subtree-at* (&lt;span class="pl-c1"&gt;point&lt;/span&gt;)
  (om-headline-indent-subheadline &lt;span class="pl-c1"&gt;1&lt;/span&gt; it))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Output these buffer contents&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; $&amp;gt; "* one&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      ** two&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      *** three&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      * not updated"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-update-section-at-point-fun" class="anchor" aria-hidden="true" href="#om-update-section-at-point-fun"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-update-section-at &lt;code&gt;(point fun)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Update section under &lt;strong&gt;&lt;code&gt;point&lt;/code&gt;&lt;/strong&gt; using &lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt;.
&lt;strong&gt;&lt;code&gt;fun&lt;/code&gt;&lt;/strong&gt; takes an section and returns a modified section&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given the following contents:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; #+KEY1: VAL1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; #+KEY2: VAL2&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; * irrelevant headline&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Update the top buffer section before the headlines start&lt;/span&gt;
(om-update-section-at* (&lt;span class="pl-c1"&gt;point&lt;/span&gt;)
  (om-map-children* (--map (om-map-property &lt;span class="pl-c1"&gt;:value&lt;/span&gt; (&lt;span class="pl-k"&gt;function&lt;/span&gt; s-downcase)
					     it)
			   it)
		    it))
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Output these buffer contents&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; $&amp;gt; "#+KEY1: val1&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      #+KEY2: val2&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;      * irrelevant headline"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-misc-1" class="anchor" aria-hidden="true" href="#misc-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Misc&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-om-fold-node" class="anchor" aria-hidden="true" href="#om-fold-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-fold &lt;code&gt;(node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Fold the children of &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; if they exist.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;no examples :(&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-om-unfold-node" class="anchor" aria-hidden="true" href="#om-unfold-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;om-unfold &lt;code&gt;(node)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Unfold the children of &lt;strong&gt;&lt;code&gt;node&lt;/code&gt;&lt;/strong&gt; if they exist.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;no examples :(&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;&lt;a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgements&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/magnars"&gt;@magnars&lt;/a&gt;:
&lt;a href="https://github.com/magnars/dash.el"&gt;dash.el&lt;/a&gt; and
&lt;a href="https://github.com/magnars/s.el"&gt;s.el&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Devin Townsend: Puppetry&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ndwarshuis</author><guid isPermaLink="false">https://github.com/ndwarshuis/om.el</guid><pubDate>Sun, 12 Jan 2020 00:06:00 GMT</pubDate></item><item><title>seagle0128/.emacs.d #7 in Emacs Lisp, Today</title><link>https://github.com/seagle0128/.emacs.d</link><description>&lt;p&gt;&lt;i&gt;Centaur Emacs - A Fancy and Fast Emacs Configuration&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-centaur-emacs" class="anchor" aria-hidden="true" href="#centaur-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Centaur Emacs&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/seagle0128/.emacs.d" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a06a3bfc371fd0d28ac81fc735bbfc6e578f2df4/68747470733a2f2f7472617669732d63692e6f72672f736561676c65303132382f2e656d6163732e642e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/seagle0128/.emacs.d.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/seagle0128/.emacs.d/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/de5724fa73b3a048fccb662ac2c14dbcd371009a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f736561676c65303132382f2e656d6163732e642e7376673f6c6162656c3d72656c65617365" alt="Release Tag" data-canonical-src="https://img.shields.io/github/tag/seagle0128/.emacs.d.svg?label=release" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/3ff3f8b43676ebcaa5049d1e12537434b9359e35/687474703a2f2f696d672e736869656c64732e696f2f3a6c6963656e73652d67706c332d626c75652e737667" alt="License" data-canonical-src="http://img.shields.io/:license-gpl3-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="logo.png"&gt;&lt;img src="logo.png" alt="Centaur Emacs" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#centaur-emacs"&gt;Centaur Emacs&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prerequisite"&gt;Prerequisite&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#os"&gt;OS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gnu-emacs"&gt;GNU Emacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dotfiles"&gt;Dotfiles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#quick-start"&gt;Quick Start&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#install"&gt;Install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#update"&gt;Update&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#docker"&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#customization"&gt;Customization&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#customize-group"&gt;Customize-group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#manual"&gt;Manual&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#screenshots"&gt;Screenshots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is an Emacs distribution that aims to enhance the default
Emacs experience. It alters a lot of the default settings,
bundles a plethora of additional packages and adds its own core
library to the mix. The final product offers an easy to use Emacs
configuration for Emacs newcomers and lots of additional power for
Emacs power users.&lt;/p&gt;
&lt;p&gt;It's able to run on Windows, GNU Linux and macOS. It is compatible &lt;strong&gt;ONLY with
GNU Emacs 25.1 and above&lt;/strong&gt;. In general you're advised to always run with the
latest stable release - currently &lt;strong&gt;26.3&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Out of box.&lt;/li&gt;
&lt;li&gt;Clean and Fast.&lt;/li&gt;
&lt;li&gt;Quick fuzzy search.&lt;/li&gt;
&lt;li&gt;Better Org/Markdown support.&lt;/li&gt;
&lt;li&gt;Support multiple programming languages
&lt;ul&gt;
&lt;li&gt;C/C++/Object-C/C#/Java&lt;/li&gt;
&lt;li&gt;Python/Ruby/Perl/PHP/Shell/Powershell/Bat&lt;/li&gt;
&lt;li&gt;Javascript/Typescript/JSON/YAML&lt;/li&gt;
&lt;li&gt;HTML/CSS/XML&lt;/li&gt;
&lt;li&gt;Golang/Swift/Rust/Dart/Elixir&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Auto completion.&lt;/li&gt;
&lt;li&gt;Fly syntax check.&lt;/li&gt;
&lt;li&gt;Fly spell check.&lt;/li&gt;
&lt;li&gt;Git integration.&lt;/li&gt;
&lt;li&gt;Project/Workspace integration.&lt;/li&gt;
&lt;li&gt;Pomodor integration.&lt;/li&gt;
&lt;li&gt;Support docker.&lt;/li&gt;
&lt;li&gt;Better Chinese support:
&lt;ul&gt;
&lt;li&gt;Chinese calendar&lt;/li&gt;
&lt;li&gt;Youdao dictionary&lt;/li&gt;
&lt;li&gt;Pinyin search&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-prerequisite" class="anchor" aria-hidden="true" href="#prerequisite"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisite&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-os" class="anchor" aria-hidden="true" href="#os"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GNU Linux&lt;/li&gt;
&lt;li&gt;macOS&lt;/li&gt;
&lt;li&gt;Windows (Cygwin/MSYS)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-gnu-emacs" class="anchor" aria-hidden="true" href="#gnu-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GNU Emacs&lt;/h3&gt;
&lt;p&gt;Please refer to &lt;a href="http://wikemacs.org/index.php/Installing_Emacs" rel="nofollow"&gt;Installing Emacs&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dotfiles" class="anchor" aria-hidden="true" href="#dotfiles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dotfiles&lt;/h3&gt;
&lt;p&gt;Recommend to use &lt;a href="https://github.com/seagle0128/dotfiles"&gt;Centaur Dotfiles&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mv &lt;span class="pl-k"&gt;~&lt;/span&gt;/.emacs.d &lt;span class="pl-k"&gt;~&lt;/span&gt;/.emacs.d.bak
git clone --depth 1 https://github.com/seagle0128/.emacs.d.git &lt;span class="pl-k"&gt;~&lt;/span&gt;/.emacs.d&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or download the &lt;a href="https://github.com/seagle0128/.emacs.d/archive/master.zip"&gt;zip
package&lt;/a&gt; directly and
extract to &lt;code&gt;~/.emacs.d&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then start Emacs. Wait for a while to install packages at the first startup. Enjoy! &lt;g-emoji class="g-emoji" alias="smile" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png"&gt;😄&lt;/g-emoji&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-update" class="anchor" aria-hidden="true" href="#update"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update&lt;/h3&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;# Update Centaur Emacs, including configurations and packages
M-x centaur-update

# Update Emacs configurations only
M-x centaur-update-config

# Update ~/.dotfiles if it exists
M-x centaur-update-dotfiles

# Update packages only
M-x centaur-update-packages

# Update all including configurations, packages and dotfiles
M-x centaur-update-all&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.emacs.d/Dockerfile
docker build -t centaur/emacs &lt;span class="pl-c1"&gt;.&lt;/span&gt;
docker run -it centaur/emacs bash&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-customization" class="anchor" aria-hidden="true" href="#customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customization&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-customize-group" class="anchor" aria-hidden="true" href="#customize-group"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customize Group&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;M-x customize-group&lt;/code&gt; and select &lt;code&gt;centaur&lt;/code&gt;. Set and save the configurations, then restart Emacs.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-manual" class="anchor" aria-hidden="true" href="#manual"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual&lt;/h3&gt;
&lt;p&gt;Add or change the configurations in &lt;code&gt;custom.el&lt;/code&gt;, then restart Emacs.&lt;/p&gt;
&lt;p&gt;For Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; centaur-logo &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)                        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Logo file or nil (official logo)&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; centaur-full-name &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; User full name&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; centaur-mail-address &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user@email.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Email address&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; centaur-proxy &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;127.0.0.1:1080&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Network proxy&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; centaur-package-archives &lt;span class="pl-c1"&gt;'emacs-china&lt;/span&gt;)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Package repo: melpa, melpa-mirror, emacs-china, netease or tuna&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; centaur-theme &lt;span class="pl-c1"&gt;'dark&lt;/span&gt;)                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Color theme: default, classic, colorful, dark, light, day or night&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; centaur-dashboard &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)                   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Use dashboard at startup or not: t or nil&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; centaur-lsp &lt;span class="pl-c1"&gt;'eglot&lt;/span&gt;)                      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Set LSP client: lsp-mode, eglot or nil&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; centaur-chinese-calendar &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Use Chinese calendar or not: t or nil&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; centaur-prettify-symbols-alist &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Alist of symbol prettifications&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; centaur-benchmark-init &lt;span class="pl-c1"&gt;t&lt;/span&gt;)                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; Enable initialization benchmark or not: t or nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default package archives is &lt;code&gt;melpa&lt;/code&gt;. You can change it in &lt;code&gt;custom.el&lt;/code&gt;, or
switch manually via &lt;code&gt;M-x switch-package-archives&lt;/code&gt; anytime.&lt;/p&gt;
&lt;p&gt;For the personal configurations, you could put to &lt;code&gt;~/.emacs.d/custom-post.el&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/56488858-4e5c4f80-6512-11e9-9637-b9395c46400f.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/56488858-4e5c4f80-6512-11e9-9637-b9395c46400f.png" alt="Dashboard" title="Dashboard (default theme)" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/56474931-8bddc000-64b3-11e9-93d8-0204c3752790.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/56474931-8bddc000-64b3-11e9-93d8-0204c3752790.png" alt="color_icons" title="Main (color icons)" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/56489193-7f894f80-6513-11e9-9c95-ea1ef41efb1f.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/56489193-7f894f80-6513-11e9-9c95-ea1ef41efb1f.png" alt="markdown_magit" title="Markdown and Magit" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/56489410-2837af00-6514-11e9-9e04-a1663ac479e8.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/56489410-2837af00-6514-11e9-9e04-a1663ac479e8.png" alt="org_classic" title="Org (classic theme)" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/56489516-85cbfb80-6514-11e9-9dd4-8602bf8a4ec7.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/56489516-85cbfb80-6514-11e9-9dd4-8602bf8a4ec7.png" alt="main_light" title="Main (light theme)" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;How to display icons correctly in &lt;code&gt;Centaur Emacs&lt;/code&gt;?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/domtronn/all-the-icons.el"&gt;all-the-icons&lt;/a&gt; are necessary.
Run &lt;code&gt;M-x all-the-icons-install-fonts&lt;/code&gt; to install the resource fonts. On
Windows, the fonts should be installed manually. &lt;code&gt;all-the-icons&lt;/code&gt; only
support GUI. If you don't like color icons, &lt;code&gt;(setq all-the-icons-color-icons nil)&lt;/code&gt; to disable it. Please refer to
&lt;a href="https://github.com/domtronn/all-the-icons.el"&gt;all-the-icons.el&lt;/a&gt; for
details.&lt;/p&gt;
&lt;p&gt;If the icons are not displayed correctly although &lt;code&gt;all-the-icons&lt;/code&gt; fonts are
installed correctly, please install the
&lt;a href="http://users.teilar.gr/~g1951d/License.pdf" rel="nofollow"&gt;non-free&lt;/a&gt; font
&lt;a href="http://users.teilar.gr/~g1951d/Symbola.zip" rel="nofollow"&gt;Symbola&lt;/a&gt;. This issue usually occurs on
Windows. Refer to &lt;a href="https://github.com/seagle0128/.emacs.d/issues/121"&gt;#121&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href="https://github.com/tumashu/cnfonts"&gt;cnfonts&lt;/a&gt;, it will
conflict with &lt;code&gt;all-the-icons&lt;/code&gt;. The workaround is
&lt;a href="https://github.com/seagle0128/doom-modeline/issues/278#issuecomment-569510336"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The packages cannot be installed, what should I do?&lt;/p&gt;
&lt;p&gt;Generally it's due to connection issue. Please refer to
&lt;a href="https://github.com/seagle0128/.emacs.d/issues/98"&gt;#98&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;M-x package-refresh-contents&lt;/code&gt; and try again.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(setq gnutls-algorithm-priority "NORMAL:-VERS-TLS1.3")&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Use other mirror of elpa.&lt;/li&gt;
&lt;li&gt;Change another network to retry.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How to search Chinese via pinyin?&lt;/p&gt;
&lt;p&gt;In Emacs, &lt;code&gt;C-s !&lt;/code&gt;. If you just want to search &lt;code&gt;!&lt;/code&gt;, use &lt;code&gt;C-s \!&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How to use the Centaur Dashboard?&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;centaur-dashboard&lt;/code&gt; is non-nil the Centaur Dashboard will be opened at
startup automatically. After startup, you could use &lt;code&gt;F2&lt;/code&gt; to reopen it
anytime. In the dashboard, please press &lt;code&gt;?&lt;/code&gt; or &lt;code&gt;h&lt;/code&gt; to get the help. You can
easily jump to the sections or buttons with keybindings, e.g. Homepage(&lt;code&gt;H&lt;/code&gt;),
Session(&lt;code&gt;R&lt;/code&gt;, &lt;code&gt;L&lt;/code&gt;), Settings(&lt;code&gt;S&lt;/code&gt;), Update(&lt;code&gt;U&lt;/code&gt;), Recent Files (&lt;code&gt;r&lt;/code&gt;),
Bookmarks(&lt;code&gt;m&lt;/code&gt;) and Projects(&lt;code&gt;p&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Does Centaur Emacs support Language Server Protocol (LSP)?&lt;/p&gt;
&lt;p&gt;The LSP feature is supported and enabled by default in Centaur Emacs.
&lt;code&gt;lsp-mode&lt;/code&gt; is the default client, and &lt;code&gt;eglot&lt;/code&gt; is another choice. Use &lt;code&gt;(setq centaur-lsp nil)&lt;/code&gt; to disable LSP if you don't like it.&lt;/p&gt;
&lt;p&gt;To use LSP you should install the language servers. Refer to &lt;a href="https://github.com/emacs-lsp/lsp-mode#supported-languages"&gt;lsp-mode:
supported-languages&lt;/a&gt;
or &lt;a href="https://github.com/joaotavora/eglot#connecting-to-a-server"&gt;eglot: Connecting to a
server&lt;/a&gt; for
the details.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How to enable &lt;code&gt;plantuml&lt;/code&gt; in &lt;code&gt;org-mode&lt;/code&gt;?&lt;/p&gt;
&lt;p&gt;Put &lt;code&gt;(setq org-plantuml-jar-path "&amp;lt;path of plantumx.x.x.jar&amp;gt;")&lt;/code&gt; in &lt;code&gt;custom.el&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Why the Emacs environment variables and &lt;code&gt;exec-path&lt;/code&gt; are different between GUI
and terminal?&lt;/p&gt;
&lt;p&gt;Please refer to #33. You should instead set environment variables in startup
files like .profile, .bash_profile or .zshenv, then &lt;code&gt;Centaur Emacs&lt;/code&gt; is able
to recognize and import the environment variables.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-donate" class="anchor" aria-hidden="true" href="#donate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donate&lt;/h2&gt;
&lt;p&gt;If you think the it's helpful for you, please consider paying a cup of coffee
for me. Thank you! &lt;g-emoji class="g-emoji" alias="smile" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png"&gt;😄&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/65818854-44204900-e248-11e9-9cc5-3e6339587cd8.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/65818854-44204900-e248-11e9-9cc5-3e6339587cd8.png" alt="Alipay" width="120" style="max-width:100%;"&gt;&lt;/a&gt;
    
&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/65818844-366ac380-e248-11e9-931c-4bd872d0566b.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/65818844-366ac380-e248-11e9-931c-4bd872d0566b.png" alt="Wechat Pay" width="120" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;a href="https://paypal.me/seagle0128" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/f3812b749e19f7290b675529697840e7b5f1d0d4/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f6469676974616c6173736574732f632f776562736974652f6d61726b6574696e672f617061632f43322f6c6f676f732d627574746f6e732f6f7074696d697a652f34345f477265795f50617950616c5f50696c6c5f427574746f6e2e706e67" alt="PayPal" width="120" data-canonical-src="https://www.paypalobjects.com/digitalassets/c/website/marketing/apac/C2/logos-buttons/optimize/44_Grey_PayPal_Pill_Button.png" style="max-width:100%;"&gt;
&lt;/a&gt;
    
&lt;a href="https://www.buymeacoffee.com/s9giES1" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/be06971baed9105260e0ed5c03746108c30b527f/68747470733a2f2f63646e2e6275796d6561636f666665652e636f6d2f627574746f6e732f64656661756c742d6f72616e67652e706e67" alt="Buy Me A Coffee" width="160" data-canonical-src="https://cdn.buymeacoffee.com/buttons/default-orange.png" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>seagle0128</author><guid isPermaLink="false">https://github.com/seagle0128/.emacs.d</guid><pubDate>Sun, 12 Jan 2020 00:07:00 GMT</pubDate></item></channel></rss>