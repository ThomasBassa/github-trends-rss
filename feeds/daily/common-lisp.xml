<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Common Lisp, Today</title><link>https://github.com/trending/common-lisp?since=daily</link><description>The top repositories on GitHub for common-lisp, measured daily</description><pubDate>Fri, 07 Feb 2020 01:04:31 GMT</pubDate><lastBuildDate>Fri, 07 Feb 2020 01:04:31 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>google/lisp-koans #1 in Common Lisp, Today</title><link>https://github.com/google/lisp-koans</link><description>&lt;p&gt;&lt;i&gt;Common Lisp Koans is a language learning exercise in the same vein as the ruby koans, python koans and others.   It is a port of the prior koans with some modifications to highlight lisp-specific features.  Structured as ordered groups of broken unit tests, the project guides the learner progressively through many Common Lisp language features. &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-lisp-koans" class="anchor" aria-hidden="true" href="#lisp-koans"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lisp Koans&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-one-time-method" class="anchor" aria-hidden="true" href="#one-time-method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;One-time Method&lt;/h3&gt;
&lt;p&gt;From a terminal, execute your lisp interpreter on the file 'contemplate.lsp' e.g.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;abcl --noinform --noinit --load contemplate.lsp --eval '(quit)'
ccl -n -l contemplate.lsp -e '(quit)'
clisp -q -norc -ansi contemplate.lsp
ecl -norc -load contemplate.lsp -eval '(quit)'
sbcl --script contemplate.lsp
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-watching-the-koans" class="anchor" aria-hidden="true" href="#watching-the-koans"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Watching the Koans&lt;/h3&gt;
&lt;p&gt;On Linux and MacOS systems, the shell scripts &lt;code&gt;meditate-linux.sh&lt;/code&gt; and
&lt;code&gt;meditate-macos.sh&lt;/code&gt; can be used to automatically evaluate 'contemplate.lsp'
whenever the koan files are modified, providing immediate feedback on changes
to the koans. To run the MacOS version you need to have
&lt;a href="https://github.com/emcrisostomo/fswatch"&gt;&lt;code&gt;fswatch&lt;/code&gt;&lt;/a&gt; installed. From a terminal:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd lisp-koans
$ sh meditate-linux.sh # on Linux
$ sh meditate-macos.sh # on MacOS
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-results-of-contemplation" class="anchor" aria-hidden="true" href="#results-of-contemplation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Results of Contemplation&lt;/h2&gt;
&lt;p&gt;Running on a fresh version should output the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Thinking about ASSERTS
    ASSERT-TRUE requires more meditation.

You have not yet reached enlightenment ...
  A koan is incomplete.

Please meditate on the following code:
   File "koans/asserts.lsp"
   Koan "ASSERT-TRUE"
   Current koan assert status is "(INCOMPLETE)"

You are now 0/169 koans and 0/25 lessons closer to reaching enlightenment
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This indicates that the script has completed, and that the learner should look
to asserts.lsp to locate and fix the problem.  The problem will be within
a define-test expression such as&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(define-test assert-true
    "t is true.  Replace the blank with a t"
    (assert-true ___))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this case, the test is incomplete, and the student should fill
in the blank (____) with appropriate lisp code to make the assert pass.&lt;/p&gt;
&lt;p&gt;In order to test code, or evaluate tests interactively, students may copy
and paste code into the lisp command line REPL.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quoting-the-ruby-koans-instructions" class="anchor" aria-hidden="true" href="#quoting-the-ruby-koans-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quoting the Ruby Koans instructions&lt;/h2&gt;
&lt;p&gt;"In test-driven development the mantra has always been, red, green,
refactor. Write a failing test and run it (red), make the test pass (green),
then refactor it (that is look at the code and see if you can make it any
better). In this case you will need to run the koan and see it fail (red), make
the test pass (green), then take a moment and reflect upon the test to see what
it is teaching you and improve the code to better communicate its
intent (refactor)."&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-content" class="anchor" aria-hidden="true" href="#content"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Content&lt;/h2&gt;
&lt;p&gt;The Common Lisp koans are based on the Python koans and Ruby koans projects.
Additionally, many of the tests are based on new material that is special
to Common Lisp.&lt;/p&gt;
&lt;p&gt;Note that the unit on threads uses bordeaux-threads and bt-semaphore.
The user must have Quicklisp installed and loaded or a reader macro
will remove the instructions to run :threads.
For information and instructions on installing Quicklisp
please see:
&lt;a href="https://www.quicklisp.org/beta/" rel="nofollow"&gt;https://www.quicklisp.org/beta/&lt;/a&gt;
The user can either remove #+quicklisp and uncomment
(load "~/.quicklisp/setup.lisp") in threads.lsp, or  if they know
quicklisp will be loaded while running contemplate.lsp do nothing.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>google</author><guid isPermaLink="false">https://github.com/google/lisp-koans</guid><pubDate>Fri, 07 Feb 2020 00:01:00 GMT</pubDate></item></channel></rss>