<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Coq, Today</title><link>https://github.com/trending/coq?since=daily</link><description>The top repositories on GitHub for coq, measured daily</description><pubDate>Tue, 12 Nov 2019 01:08:37 GMT</pubDate><lastBuildDate>Tue, 12 Nov 2019 01:08:37 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>thery/coqprime #1 in Coq, Today</title><link>https://github.com/thery/coqprime</link><description>&lt;p&gt;&lt;i&gt;Prime numbers for Coq&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/thery/coqprime" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6c6e69fd259119f6d4f7b40a0a257716e61b5ca9/68747470733a2f2f7472617669732d63692e6f72672f74686572792f636f717072696d652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/thery/coqprime.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-coqprime" class="anchor" aria-hidden="true" href="#coqprime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coqprime&lt;/h1&gt;
&lt;p&gt;CoqPrime is a library built on top of the Coq proof system to certify primality using Pocklington certificate and Elliptic Curve Certificate. It is a nice illustration of what we can do with safe computation inside a prover. The library consists of 4 main parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A library of facts from number theory: the goal was to prove the theorems relative to Pocklington certificate. The library includes some very nice theorems like Lagrange theorem, Euler-Fermat theorem.&lt;/li&gt;
&lt;li&gt;A library for elliptic curves&lt;/li&gt;
&lt;li&gt;An efficient library to perform modular arithmetic: using the standard representation of integers in Coq was not sufficient to tackle large prime numbers so we have developped our own modular arithmetic based on tree-like structures. The library includes comparison, successor, predecessor, complement, addition, subtraction, multiplication, square, division, square root, gcd, power and modulo.&lt;/li&gt;
&lt;li&gt;A C program that generates Pocklington certificates. This program is based on ECM and some scripts that turn a certificate generated by primo into a Coq file&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>thery</author><guid isPermaLink="false">https://github.com/thery/coqprime</guid><pubDate>Tue, 12 Nov 2019 00:01:00 GMT</pubDate></item></channel></rss>